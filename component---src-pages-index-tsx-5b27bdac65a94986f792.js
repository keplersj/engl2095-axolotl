webpackJsonp([221374088121123],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var react = __webpack_require__(1);
	var emotionUtils = __webpack_require__(306);
	var emotion = __webpack_require__(307);
	var PropTypes = _interopDefault(__webpack_require__(2));
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	var _contextTypes;
	
	var channel = '__EMOTION_THEMING__';
	var contextTypes = (_contextTypes = {}, _contextTypes[channel] = PropTypes.object, _contextTypes);
	
	/* global codegen */
	function setTheme(theme) {
	  this.setState({
	    theme: theme
	  });
	}
	
	function componentWillMount() {
	  if (this.context[channel] !== undefined) {
	    this.unsubscribe = this.context[channel].subscribe(setTheme.bind(this));
	  }
	}
	
	function componentWillUnmount() {
	  if (this.unsubscribe !== undefined) {
	    this.context[channel].unsubscribe(this.unsubscribe);
	  }
	}
	
	var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|accept|acceptCharset|accessKey|action|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan)|(on[A-Z].*)|((data|aria)-.*))$/;
	var testOmitPropsOnStringTag = emotionUtils.memoize(function (key) {
	  return reactPropsRegex.test(key);
	});
	
	var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
	  return key !== 'theme' && key !== 'innerRef';
	};
	
	var testAlwaysTrue = function testAlwaysTrue() {
	  return true;
	};
	
	var omitAssign = function omitAssign(testFn, target) {
	  var i = 2;
	  var length = arguments.length;
	
	  for (; i < length; i++) {
	    var source = arguments[i];
	    var key = void 0;
	
	    for (key in source) {
	      if (testFn(key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	var createStyled = function createStyled(tag, options) {
	  if (false) {
	    if (tag === undefined) {
	      throw new Error('You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.');
	    }
	  }
	
	  var identifierName;
	  var stableClassName;
	  var staticClassName;
	
	  if (options !== undefined) {
	    identifierName = options.label;
	    stableClassName = options.target;
	    staticClassName = options.e;
	  }
	
	  var isReal = tag.__emotion_real === tag;
	  var baseTag = staticClassName === undefined ? isReal && tag.__emotion_base || tag : tag;
	  var omitFn = typeof baseTag === 'string' && baseTag.charAt(0) === baseTag.charAt(0).toLowerCase() ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
	  return function (strings) {
	    var styles = isReal && tag[emotionUtils.STYLES_KEY] || [];
	
	    if (identifierName !== undefined) {
	      styles = styles.concat("label:" + identifierName + ";");
	    }
	
	    if (staticClassName === undefined) {
	      for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        interpolations[_key - 1] = arguments[_key];
	      }
	
	      if (strings == null || strings.raw === undefined) {
	        styles = styles.concat(strings, interpolations);
	      } else {
	        styles = interpolations.reduce(function (array, interp, i) {
	          return array.concat(interp, strings[i + 1]);
	        }, styles.concat(strings[0]));
	      }
	    }
	
	    var Styled =
	    /*#__PURE__*/
	    function (_Component) {
	      _inheritsLoose(Styled, _Component);
	
	      function Styled() {
	        return _Component.apply(this, arguments) || this;
	      }
	
	      var _proto = Styled.prototype;
	
	      _proto.render = function render() {
	        var props = this.props,
	            state = this.state;
	        this.mergedProps = omitAssign(testAlwaysTrue, {}, props, {
	          theme: state !== null && state.theme || props.theme || {}
	        });
	        var className = '';
	        var classInterpolations = [];
	
	        if (props.className) {
	          if (staticClassName === undefined) {
	            className += emotion.getRegisteredStyles(classInterpolations, props.className);
	          } else {
	            className += props.className + " ";
	          }
	        }
	
	        if (staticClassName === undefined) {
	          className += emotion.css.apply(this, styles.concat(classInterpolations));
	        } else {
	          className += staticClassName;
	        }
	
	        if (stableClassName !== undefined) {
	          className += " " + stableClassName;
	        }
	
	        return react.createElement(baseTag, omitAssign(omitFn, {}, props, {
	          className: className,
	          ref: props.innerRef
	        }));
	      };
	
	      return Styled;
	    }(react.Component);
	
	    Styled.prototype.componentWillMount = componentWillMount;
	    Styled.prototype.componentWillUnmount = componentWillUnmount;
	    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
	    Styled.contextTypes = contextTypes;
	    Styled[emotionUtils.STYLES_KEY] = styles;
	    Styled.__emotion_base = baseTag;
	    Styled.__emotion_real = Styled;
	    Styled[emotionUtils.TARGET_KEY] = stableClassName;
	
	    Styled.withComponent = function (nextTag, nextOptions) {
	      return createStyled(nextTag, nextOptions !== undefined ? omitAssign(testAlwaysTrue, {}, options, nextOptions) : options)(styles);
	    };
	
	    return Styled;
	  };
	};
	
	exports['default'] = createStyled;
	Object.keys(emotion).forEach(function (key) { exports[key] = emotion[key]; });
	//# sourceMappingURL=index.cjs.js.map


/***/ }),
/* 9 */,
/* 10 */,
/* 11 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/travis/build/keplersj/engl2095-axolotl/public"}).NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(1113);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(1112);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(38)))

/***/ }),
/* 13 */,
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _reduce2=__webpack_require__(365);var _reduce3=_interopRequireDefault(_reduce2);var _omit2=__webpack_require__(215);var _omit3=_interopRequireDefault(_omit2);var _property2=__webpack_require__(216);var _property3=_interopRequireDefault(_property2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=
	
	{
	getPadding:function getPadding(props){
	var padding=typeof props.padding==="number"?props.padding:0;
	var paddingObj=typeof props.padding==="object"?props.padding:{};
	return{
	top:paddingObj.top||padding,
	bottom:paddingObj.bottom||padding,
	left:paddingObj.left||padding,
	right:paddingObj.right||padding};
	
	},
	
	getStyles:function getStyles(style,defaultStyles){
	var width="100%";
	var height="100%";
	if(!style){
	return(0,_defaults3.default)({parent:{height:height,width:width}},defaultStyles);
	}var
	
	data=style.data,labels=style.labels,parent=style.parent;
	var defaultParent=defaultStyles&&defaultStyles.parent||{};
	var defaultLabels=defaultStyles&&defaultStyles.labels||{};
	var defaultData=defaultStyles&&defaultStyles.data||{};
	return{
	parent:(0,_defaults3.default)({},parent,defaultParent,{width:width,height:height}),
	labels:(0,_defaults3.default)({},labels,defaultLabels),
	data:(0,_defaults3.default)({},data,defaultData)};
	
	},
	
	evaluateProp:function evaluateProp(prop,data,active){
	return(0,_isFunction3.default)(prop)?prop(data,active):prop;
	},
	
	evaluateStyle:function evaluateStyle(style,data,active){var _this=this;
	if(!style||!Object.keys(style).some(function(value){return(0,_isFunction3.default)(style[value]);})){
	return style;
	}
	return Object.keys(style).reduce(function(prev,curr){
	prev[curr]=_this.evaluateProp(style[curr],data,active);
	return prev;
	},{});
	},
	
	getRange:function getRange(props,axis){
	
	var isVertical=axis!=="x";
	var padding=this.getPadding(props);
	if(isVertical){
	return[props.height-padding.bottom,padding.top];
	}
	return[padding.left,props.width-padding.right];
	},
	
	createAccessor:function createAccessor(key){
	
	
	if((0,_isFunction3.default)(key)){
	return key;
	}else if(key===null||typeof key==="undefined"){
	
	return function(x){return x;};
	}
	
	return(0,_property3.default)(key);
	},
	
	modifyProps:function modifyProps(props,fallbackProps,role){
	var theme=props.theme&&props.theme[role]?props.theme[role]:{};
	var themeProps=(0,_omit3.default)(theme,["style"]);
	return(0,_defaults3.default)({},props,themeProps,fallbackProps);
	},
	
	
	
	
	
	
	
	
	
	getCurrentAxis:function getCurrentAxis(axis,horizontal){
	var otherAxis=axis==="x"?"y":"x";
	return horizontal?otherAxis:axis;
	},
	
	
	
	
	
	isVertical:function isVertical(props){
	var orientation=props.orientation||(props.dependentAxis?"left":"bottom");
	var vertical={top:false,bottom:false,left:true,right:true};
	return vertical[orientation];
	},
	
	
	
	
	
	stringTicks:function stringTicks(props){
	return props.tickValues!==undefined&&_collection2.default.containsStrings(props.tickValues);
	},
	
	
	
	
	
	
	reduceChildren:function reduceChildren(children,iteratee){
	var childIndex=0;
	var traverseChildren=function traverseChildren(childArray,parent){
	return(0,_reduce3.default)(childArray,function(memo,child){
	var childName=child.props.name||childIndex;
	childIndex++;
	if(child.props&&child.props.children){
	var nestedChildren=_react2.default.Children.toArray(child.props.children);
	var nestedResults=traverseChildren(nestedChildren,child);
	memo=memo.concat(nestedResults);
	}else{
	var result=iteratee(child,childName,parent);
	memo=result?memo.concat(result):memo;
	}
	return memo;
	},[]);
	};
	return traverseChildren(children);
	}};

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    isObject = __webpack_require__(29);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/*eslint max-statements:0,complexity:0,no-invalid-this:0*/
	
	var parseFontSize = function parseFontSize(fontSize) {
	  var sizeComponents = fontSize.match(/\d*\.*\d+|\D+/g);
	  var size = parseFloat(sizeComponents[0]);
	  var unit = sizeComponents[1];
	  return { size: size, unit: unit };
	};
	
	var getFontSizeFromElement = function getFontSizeFromElement(element) {
	  var fontSize = window.getComputedStyle ? window.getComputedStyle(element).getPropertyValue('font-size') : element.currentStyle.fontSize;
	  return fontSize ? parseFontSize(fontSize) : null;
	};
	
	var convertFontSizeToPx = function convertFontSizeToPx(fontSize) {
	  var convertedFontSize = void 0;
	
	  if (typeof textSize === 'number') {
	    convertedFontSize = fontSize;
	  } else if (typeof fontSize === 'string') {
	    var parsedFont = parseFontSize(fontSize);
	    var bodyFont = getFontSizeFromElement(document.body);
	    var htmlFont = getFontSizeFromElement(document.documentElement);
	
	    switch (parsedFont.unit) {
	      case 'px':
	        convertedFontSize = parsedFont.size;
	        break;
	      case 'pt':
	        convertedFontSize = parsedFont.size * 96 / 72;
	        break;
	      case '%':
	        if (bodyFont) {
	          convertedFontSize = bodyFont.size * parsedFont.size / 100;
	        }
	        break;
	      case 'em':
	        if (bodyFont) {
	          convertedFontSize = bodyFont.size * parsedFont.size;
	        }
	        break;
	      case 'rem':
	        if (htmlFont) {
	          convertedFontSize = htmlFont.size * parsedFont.size;
	        }
	        break;
	    }
	  }
	  return convertedFontSize;
	};
	
	var getStyles = exports.getStyles = function getStyles() {
	  if (false) {
	    this.warnedAboutFontSize = false;
	  }
	
	  var _props = this.props,
	      italic = _props.italic,
	      bold = _props.bold,
	      caps = _props.caps,
	      margin = _props.margin,
	      padding = _props.padding,
	      textColor = _props.textColor,
	      textFont = _props.textFont,
	      textSize = _props.textSize,
	      textAlign = _props.textAlign,
	      bgColor = _props.bgColor,
	      bgImage = _props.bgImage,
	      bgDarken = _props.bgDarken,
	      bgSize = _props.bgSize,
	      bgPosition = _props.bgPosition,
	      bgRepeat = _props.bgRepeat,
	      overflow = _props.overflow,
	      height = _props.height;
	
	
	  var styles = {};
	  var recommendedMinFontSizePx = 24;
	
	  if (typeof italic === 'boolean') {
	    styles.fontStyle = italic ? 'italic' : 'normal';
	  }
	  if (typeof bold === 'boolean') {
	    styles.fontWeight = bold ? 'bold' : 'normal';
	  }
	  if (typeof caps === 'boolean') {
	    styles.textTransform = caps ? 'uppercase' : 'none';
	  }
	  if (margin) {
	    styles.margin = margin;
	  }
	  if (padding) {
	    styles.padding = padding;
	  }
	  if (textColor) {
	    var color = '';
	    if (!this.context.styles.colors.hasOwnProperty(textColor)) {
	      color = textColor;
	    } else {
	      color = this.context.styles.colors[textColor];
	    }
	    styles.color = color;
	  }
	  if (textFont) {
	    var font = '';
	    if (!this.context.styles.fonts.hasOwnProperty(textFont)) {
	      font = textFont;
	    } else {
	      font = this.context.styles.fonts[textFont];
	    }
	    styles.fontFamily = font;
	  }
	  if (textSize) {
	    styles.fontSize = textSize;
	    if (false) {
	      var fontSize = convertFontSizeToPx(textSize) || recommendedMinFontSizePx;
	      if (fontSize < recommendedMinFontSizePx) {
	        console.warn('prop `textSize="' + textSize + '"` is below the recommended minimum of ' + recommendedMinFontSizePx + 'px'); // eslint-disable-line
	        this.warnedAboutFontSize = true;
	      }
	    }
	  }
	  if (textAlign) {
	    styles.textAlign = textAlign;
	  }
	  if (bgColor) {
	    var _color = '';
	    if (!this.context.styles.colors.hasOwnProperty(bgColor)) {
	      _color = bgColor;
	    } else {
	      _color = this.context.styles.colors[bgColor];
	    }
	    styles.backgroundColor = _color;
	  }
	  if (bgImage) {
	    if (bgDarken) {
	      styles.backgroundImage = 'linear-gradient( rgba(0, 0, 0, ' + bgDarken + '), rgba(0, 0, 0, ' + bgDarken + ') ), url(' + bgImage + ')';
	    } else {
	      styles.backgroundImage = 'url(' + bgImage + ')';
	    }
	    styles.backgroundSize = bgSize || 'cover';
	    styles.backgroundPosition = bgPosition || 'center center';
	    if (bgRepeat) {
	      styles.backgroundRepeat = bgRepeat;
	    }
	  }
	  if (overflow) {
	    styles.overflow = overflow;
	  }
	  if (height) {
	    styles.height = height;
	  }
	  return styles;
	};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _isEqual2=__webpack_require__(788);var _isEqual3=_interopRequireDefault(_isEqual2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=
	
	{
	isNonEmptyArray:function isNonEmptyArray(collection){
	return Array.isArray(collection)&&collection.length>0;
	},
	
	containsStrings:function containsStrings(collection){
	return Array.isArray(collection)&&collection.some(function(value){return typeof value==="string";});
	},
	
	containsDates:function containsDates(collection){
	return Array.isArray(collection)&&collection.some(function(value){return value instanceof Date;});
	},
	
	containsNumbers:function containsNumbers(collection){
	return Array.isArray(collection)&&collection.some(function(value){return typeof value==="number";});
	},
	
	containsOnlyStrings:function containsOnlyStrings(collection){
	return this.isNonEmptyArray(collection)&&
	collection.every(function(value){return typeof value==="string";});
	},
	
	isArrayOfArrays:function isArrayOfArrays(collection){
	return this.isNonEmptyArray(collection)&&collection.every(Array.isArray);
	},
	
	removeUndefined:function removeUndefined(arr){
	return arr.filter(function(el){return el!==undefined;});
	},
	
	getMaxValue:function getMaxValue(arr){for(var _len=arguments.length,values=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){values[_key-1]=arguments[_key];}
	var array=arr.concat(values);
	return this.containsDates(array)?
	new Date(Math.max.apply(Math,_toConsumableArray(array))):
	Math.max.apply(Math,_toConsumableArray(array));
	},
	
	getMinValue:function getMinValue(arr){for(var _len2=arguments.length,values=Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){values[_key2-1]=arguments[_key2];}
	var array=arr.concat(values);
	return this.containsDates(array)?
	new Date(Math.min.apply(Math,_toConsumableArray(array))):
	Math.min.apply(Math,_toConsumableArray(array));
	},
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	splitArray:function splitArray(array,delimiterFn){
	var segmentStartIndex=0;
	var segments=array.reduce(function(memo,item,index){
	if(delimiterFn(item)){
	memo=memo.concat([array.slice(segmentStartIndex,index)]);
	segmentStartIndex=index+1;
	}else if(index===array.length-1){
	memo=memo.concat([array.slice(segmentStartIndex,array.length)]);
	}
	return memo;
	},[]);
	
	return segments.filter(function(segment){
	return Array.isArray(segment)&&segment.length>0;
	});
	},
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	allSetsEqual:function allSetsEqual(itemSets){
	return itemSets.every(function(comparisonSet){
	return(0,_isEqual3.default)(comparisonSet[0],comparisonSet[1]);
	});
	}};

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ }),
/* 19 */,
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(126),
	    copyObject = __webpack_require__(43),
	    createAssigner = __webpack_require__(131),
	    isArrayLike = __webpack_require__(32),
	    isPrototype = __webpack_require__(93),
	    keys = __webpack_require__(53);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assign({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});
	
	module.exports = assign;


/***/ }),
/* 21 */,
/* 22 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	/**
	 * \@todo Use .bind() in Tokenizer.prototype.attach().
	 */
	
	var Tokenizer = function() {
	};
	
	Tokenizer.prototype.trim = function(array) {
	  while (array[array.length - 1] == '')
	    array.pop();
	
	  while (array[0] == '')
	    array.shift();
	
	  return array;
	};
	
	// Expose an attach function that will patch String with new methods.
	Tokenizer.prototype.attach = function() {
	  var self = this;
	
	  String.prototype.tokenize = function() {
	    return self.tokenize(this);
	  }
	};
	
	Tokenizer.prototype.tokenize = function() {};
	
	module.exports = Tokenizer;


/***/ }),
/* 23 */,
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(340);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ }),
/* 30 */,
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(125),
	    assignInWith = __webpack_require__(781),
	    baseRest = __webpack_require__(69),
	    customDefaultsAssignIn = __webpack_require__(725);
	
	/**
	 * Assigns own and inherited enumerable string keyed properties of source
	 * objects to the destination object for all destination properties that
	 * resolve to `undefined`. Source objects are applied from left to right.
	 * Once a property is set, additional values of the same property are ignored.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaultsDeep
	 * @example
	 *
	 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var defaults = baseRest(function(args) {
	  args.push(undefined, customDefaultsAssignIn);
	  return apply(assignInWith, undefined, args);
	});
	
	module.exports = defaults;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(15),
	    isLength = __webpack_require__(212);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    getPrototype = __webpack_require__(203),
	    isObjectLike = __webpack_require__(45);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, setImmediate) {/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	
	var normalize = __webpack_require__(371);
	var errors = __webpack_require__(630);
	var stream = __webpack_require__(1044);
	
	var ReadableStream = stream.Readable;
	var WritableStream = stream.Writable;
	
	function MemoryFileSystemError(err, path) {
		Error.call(this)
		if (Error.captureStackTrace)
			Error.captureStackTrace(this, arguments.callee)
		this.code = err.code;
		this.errno = err.errno;
		this.message = err.description;
		this.path = path;
	}
	MemoryFileSystemError.prototype = new Error();
	
	function MemoryFileSystem(data) {
		this.data = data || {};
	}
	module.exports = MemoryFileSystem;
	
	function isDir(item) {
		if(typeof item !== "object") return false;
		return item[""] === true;
	}
	
	function isFile(item) {
		if(typeof item !== "object") return false;
		return !item[""];
	}
	
	function pathToArray(path) {
		path = normalize(path);
		var nix = /^\//.test(path);
		if(!nix) {
			if(!/^[A-Za-z]:/.test(path)) {
				throw new MemoryFileSystemError(errors.code.EINVAL, path);
			}
			path = path.replace(/[\\\/]+/g, "\\"); // multi slashs
			path = path.split(/[\\\/]/);
			path[0] = path[0].toUpperCase();
		} else {
			path = path.replace(/\/+/g, "/"); // multi slashs
			path = path.substr(1).split("/");
		}
		if(!path[path.length-1]) path.pop();
		return path;
	}
	
	function trueFn() { return true; }
	function falseFn() { return false; }
	
	MemoryFileSystem.prototype.meta = function(_path) {
		var path = pathToArray(_path);
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				return;
			current = current[path[i]];
		}
		return current[path[i]];
	}
	
	MemoryFileSystem.prototype.existsSync = function(_path) {
		return !!this.meta(_path);
	}
	
	MemoryFileSystem.prototype.statSync = function(_path) {
		var current = this.meta(_path);
		if(_path === "/" || isDir(current)) {
			return {
				isFile: falseFn,
				isDirectory: trueFn,
				isBlockDevice: falseFn,
				isCharacterDevice: falseFn,
				isSymbolicLink: falseFn,
				isFIFO: falseFn,
				isSocket: falseFn
			};
		} else if(isFile(current)) {
			return {
				isFile: trueFn,
				isDirectory: falseFn,
				isBlockDevice: falseFn,
				isCharacterDevice: falseFn,
				isSymbolicLink: falseFn,
				isFIFO: falseFn,
				isSocket: falseFn
			};
		} else {
			throw new MemoryFileSystemError(errors.code.ENOENT, _path);
		}
	};
	
	MemoryFileSystem.prototype.readFileSync = function(_path, encoding) {
		var path = pathToArray(_path);
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
			current = current[path[i]];
		}
		if(!isFile(current[path[i]])) {
			if(isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.EISDIR, _path);
			else
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
		}
		current = current[path[i]];
		return encoding ? current.toString(encoding) : current;
	};
	
	MemoryFileSystem.prototype.readdirSync = function(_path) {
		if(_path === "/") return Object.keys(this.data).filter(Boolean);
		var path = pathToArray(_path);
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
			current = current[path[i]];
		}
		if(!isDir(current[path[i]])) {
			if(isFile(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);
			else
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
		}
		return Object.keys(current[path[i]]).filter(Boolean);
	};
	
	MemoryFileSystem.prototype.mkdirpSync = function(_path) {
		var path = pathToArray(_path);
		if(path.length === 0) return;
		var current = this.data;
		for(var i = 0; i < path.length; i++) {
			if(isFile(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);
			else if(!isDir(current[path[i]]))
				current[path[i]] = {"":true};
			current = current[path[i]];
		}
		return;
	};
	
	MemoryFileSystem.prototype.mkdirSync = function(_path) {
		var path = pathToArray(_path);
		if(path.length === 0) return;
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
			current = current[path[i]];
		}
		if(isDir(current[path[i]]))
			throw new MemoryFileSystemError(errors.code.EEXIST, _path);
		else if(isFile(current[path[i]]))
			throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);
		current[path[i]] = {"":true};
		return;
	};
	
	MemoryFileSystem.prototype._remove = function(_path, name, testFn) {
		var path = pathToArray(_path);
		if(path.length === 0) {
			throw new MemoryFileSystemError(errors.code.EPERM, _path);
		}
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
			current = current[path[i]];
		}
		if(!testFn(current[path[i]]))
			throw new MemoryFileSystemError(errors.code.ENOENT, _path);
		delete current[path[i]];
		return;
	};
	
	MemoryFileSystem.prototype.rmdirSync = function(_path) {
		return this._remove(_path, "Directory", isDir);
	};
	
	MemoryFileSystem.prototype.unlinkSync = function(_path) {
		return this._remove(_path, "File", isFile);
	};
	
	MemoryFileSystem.prototype.readlinkSync = function(_path) {
		throw new MemoryFileSystemError(errors.code.ENOSYS, _path);
	};
	
	MemoryFileSystem.prototype.writeFileSync = function(_path, content, encoding) {
		if(!content && !encoding) throw new Error("No content");
		var path = pathToArray(_path);
		if(path.length === 0) {
			throw new MemoryFileSystemError(errors.code.EISDIR, _path);
		}
		var current = this.data;
		for(var i = 0; i < path.length - 1; i++) {
			if(!isDir(current[path[i]]))
				throw new MemoryFileSystemError(errors.code.ENOENT, _path);
			current = current[path[i]];
		}
		if(isDir(current[path[i]]))
			throw new MemoryFileSystemError(errors.code.EISDIR, _path);
		current[path[i]] = encoding || typeof content === "string" ? new Buffer(content, encoding) : content;
		return;
	};
	
	MemoryFileSystem.prototype.join = __webpack_require__(803);
	MemoryFileSystem.prototype.pathToArray = pathToArray;
	MemoryFileSystem.prototype.normalize = normalize;
	
	// stream functions
	
	MemoryFileSystem.prototype.createReadStream = function(path, options) {
		var stream = new ReadableStream();
		var done = false;
		var data;
		try {
			data = this.readFileSync(path);
		} catch (e) {
			stream._read = function() {
				if (done) {
					return;
				}
				done = true;
				this.emit('error', e);
				this.push(null);
			};
			return stream;
		}
		options = options || { };
		options.start = options.start || 0;
		options.end = options.end || data.length;
		stream._read = function() {
			if (done) {
				return;
			}
			done = true;
			this.push(data.slice(options.start, options.end));
			this.push(null);
		};
		return stream;
	};
	
	MemoryFileSystem.prototype.createWriteStream = function(path, options) {
		var stream = new WritableStream(), self = this;
		try {
			// Zero the file and make sure it is writable
			this.writeFileSync(path, new Buffer(0));
		} catch(e) {
			// This or setImmediate?
			stream.once('prefinish', function() {
				stream.emit('error', e);
			});
			return stream;
		}
		var bl = [ ], len = 0;
		stream._write = function(chunk, encoding, callback) {
			bl.push(chunk);
			len += chunk.length;
			self.writeFile(path, Buffer.concat(bl, len), callback);
		}
		return stream;
	};
	
	// async functions
	
	["stat", "readdir", "mkdirp", "rmdir", "unlink", "readlink"].forEach(function(fn) {
		MemoryFileSystem.prototype[fn] = function(path, callback) {
			try {
				var result = this[fn + "Sync"](path);
			} catch(e) {
				setImmediate(function() {
					callback(e);
				});
	
				return;
			}
			setImmediate(function() {
				callback(null, result);
			});
		};
	});
	
	["mkdir", "readFile"].forEach(function(fn) {
		MemoryFileSystem.prototype[fn] = function(path, optArg, callback) {
			if(!callback) {
				callback = optArg;
				optArg = undefined;
			}
			try {
				var result = this[fn + "Sync"](path, optArg);
			} catch(e) {
				setImmediate(function() {
					callback(e);
				});
	
				return;
			}
			setImmediate(function() {
				callback(null, result);
			});
		};
	});
	
	MemoryFileSystem.prototype.exists = function(path, callback) {
		return callback(this.existsSync(path));
	}
	
	MemoryFileSystem.prototype.writeFile = function (path, content, encoding, callback) {
		if(!callback) {
			callback = encoding;
			encoding = undefined;
		}
		try {
			this.writeFileSync(path, content, encoding);
		} catch(e) {
			return callback(e);
		}
		return callback();
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer, __webpack_require__(482).setImmediate))

/***/ }),
/* 38 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;
	
	process.listeners = function (name) { return [] }
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 39 */,
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=
	
	{
	active:_propTypes2.default.bool,
	className:_propTypes2.default.string,
	data:_propTypes2.default.array,
	events:_propTypes2.default.object,
	index:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.string]),
	role:_propTypes2.default.string,
	scale:_propTypes2.default.oneOfType([
	_propTypes4.default.scale,
	_propTypes2.default.shape({x:_propTypes4.default.scale,y:_propTypes4.default.scale})]),
	
	shapeRendering:_propTypes2.default.string,
	style:_propTypes2.default.object};

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(524)
	var ieee754 = __webpack_require__(656)
	var isArray = __webpack_require__(186)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()
	
	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }
	
	  return that
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}
	
	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }
	
	  return fromObject(that, value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}
	
	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)
	
	  var actual = that.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }
	
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }
	
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}
	
	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)
	
	    if (that.length === 0) {
	      return that
	    }
	
	    obj.copy(that, 0, 0, len)
	    return that
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }
	
	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 42 */,
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(126),
	    baseAssignValue = __webpack_require__(195);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ }),
/* 44 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 45 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(686),
	    baseMatchesProperty = __webpack_require__(687),
	    identity = __webpack_require__(44),
	    isArray = __webpack_require__(18),
	    property = __webpack_require__(216);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(320),
	    baseKeys = __webpack_require__(198),
	    isArrayLike = __webpack_require__(32);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ }),
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    getRawTag = __webpack_require__(731),
	    objectToString = __webpack_require__(763);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(682),
	    getValue = __webpack_require__(732);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    isObjectLike = __webpack_require__(45);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ }),
/* 63 */,
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _find2=__webpack_require__(785);var _find3=_interopRequireDefault(_find2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);
	
	var _log=__webpack_require__(155);var _log2=_interopRequireDefault(_log);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}
	
	
	
	
	
	
	
	
	var makeChainable=function makeChainable(validator){
	
	var _chainable=function _chainable(isRequired,props,propName,componentName){
	var value=props[propName];
	if(typeof value==="undefined"||value===null){
	if(isRequired){
	return new Error("Required `"+
	propName+"` was not specified in `"+componentName+"`.");
	
	}
	return null;
	}for(var _len=arguments.length,rest=Array(_len>4?_len-4:0),_key=4;_key<_len;_key++){rest[_key-4]=arguments[_key];}
	return validator.apply(undefined,[props,propName,componentName].concat(rest));
	};
	var chainable=_chainable.bind(null,false);
	chainable.isRequired=_chainable.bind(null,true);
	return chainable;
	};
	
	var nullConstructor=function nullConstructor(){return null;};
	var undefinedConstructor=function undefinedConstructor(){return undefined;};
	
	
	
	
	
	
	
	var getConstructor=function getConstructor(value){
	if(typeof value==="undefined"){
	return undefinedConstructor;
	}else if(value===null){
	return nullConstructor;
	}else{
	return value.constructor;
	}
	};
	
	
	
	
	
	
	
	
	var getConstructorName=function getConstructorName(value){
	if(typeof value==="undefined"){
	return"undefined";
	}else if(value===null){
	return"null";
	}
	return Object.prototype.toString.call(value).slice(8,-1);
	};exports.default=
	
	{
	
	
	
	
	
	
	
	deprecated:function deprecated(propType,explanation){
	return function(props,propName,componentName){
	var value=props[propName];
	if(value!==null&&value!==undefined){
	_log2.default.warn("\""+
	propName+"\" property of \""+componentName+"\" has been deprecated "+explanation);
	
	}
	return _propTypes2.default.checkPropTypes(_defineProperty({},propName,propType),props,propName,componentName);
	};
	},
	
	
	
	
	
	
	
	
	allOfType:function allOfType(validators){
	return makeChainable(function(props,propName,componentName){for(var _len2=arguments.length,rest=Array(_len2>3?_len2-3:0),_key2=3;_key2<_len2;_key2++){rest[_key2-3]=arguments[_key2];}return(
	validators.reduce(
	function(result,validator){return result||validator.apply(undefined,[props,propName,componentName].concat(rest));},
	undefined));});
	
	
	},
	
	
	
	
	nonNegative:makeChainable(function(props,propName,componentName){
	var value=props[propName];
	if(typeof value!=="number"||value<0){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be a non-negative number.");
	
	}
	return undefined;
	}),
	
	
	
	
	integer:makeChainable(function(props,propName,componentName){
	var value=props[propName];
	if(typeof value!=="number"||value%1!==0){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be an integer.");
	
	}
	return undefined;
	}),
	
	
	
	
	greaterThanZero:makeChainable(function(props,propName,componentName){
	var value=props[propName];
	if(typeof value!=="number"||value<=0){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be a number greater than zero.");
	
	}
	return undefined;
	}),
	
	
	
	
	domain:makeChainable(function(props,propName,componentName){
	var value=props[propName];
	if(!Array.isArray(value)||value.length!==2||value[1]===value[0]){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be an array of two unique numeric values.");
	
	}
	return undefined;
	}),
	
	
	
	
	scale:makeChainable(function(props,propName,componentName){
	var supportedScaleStrings=["linear","time","log","sqrt"];
	var validScale=function validScale(scl){
	if((0,_isFunction3.default)(scl)){
	return(0,_isFunction3.default)(scl.copy)&&(0,_isFunction3.default)(scl.domain)&&(0,_isFunction3.default)(scl.range);
	}else if(typeof scl==="string"){
	return supportedScaleStrings.indexOf(scl)!==-1;
	}
	return false;
	};
	
	var value=props[propName];
	if(!validScale(value)){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be a d3 scale.");
	
	}
	return undefined;
	}),
	
	
	
	
	homogeneousArray:makeChainable(function(props,propName,componentName){
	var values=props[propName];
	if(!Array.isArray(values)){
	return new Error("`"+
	propName+"` in `"+componentName+"` must be an array.");
	
	}
	
	if(values.length<2){
	return undefined;
	}
	
	var comparisonConstructor=getConstructor(values[0]);
	
	var typeMismatchedValue=(0,_find3.default)(values,function(value){
	return comparisonConstructor!==getConstructor(value);
	});
	
	if(typeMismatchedValue){
	var constructorName=getConstructorName(values[0]);
	var otherConstructorName=getConstructorName(typeMismatchedValue);
	
	return new Error(
	"Expected `"+propName+"` in `"+componentName+"` to be a "+("homogeneous array, but found types `"+
	constructorName+"` and ")+("`"+
	otherConstructorName+"`."));
	
	}
	return undefined;
	}),
	
	
	
	
	matchDataLength:makeChainable(function(props,propName){
	if(
	props[propName]&&
	Array.isArray(props[propName])&&
	props[propName].length!==props.data.length)
	{
	return new Error("Length of data and "+propName+" arrays must match.");
	}
	return undefined;
	})};

/***/ }),
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(24);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(44),
	    overRest = __webpack_require__(351),
	    setToString = __webpack_require__(207);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(18),
	    isKey = __webpack_require__(206),
	    stringToPath = __webpack_require__(776),
	    toString = __webpack_require__(368);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(62);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ }),
/* 72 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(320),
	    baseKeysIn = __webpack_require__(684),
	    isArrayLike = __webpack_require__(32);
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}
	
	module.exports = keysIn;


/***/ }),
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	'use strict';
	
	/*<replacement>*/
	
	var processNextTick = __webpack_require__(145);
	/*</replacement>*/
	
	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    keys.push(key);
	  }return keys;
	};
	/*</replacement>*/
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var util = __webpack_require__(89);
	util.inherits = __webpack_require__(90);
	/*</replacement>*/
	
	var Readable = __webpack_require__(441);
	var Writable = __webpack_require__(443);
	
	util.inherits(Duplex, Readable);
	
	var keys = objectKeys(Writable.prototype);
	for (var v = 0; v < keys.length; v++) {
	  var method = keys[v];
	  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
	}
	
	function Duplex(options) {
	  if (!(this instanceof Duplex)) return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false) this.readable = false;
	
	  if (options && options.writable === false) this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended) return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  processNextTick(onEndNT, this);
	}
	
	function onEndNT(self) {
	  self.end();
	}
	
	Object.defineProperty(Duplex.prototype, 'destroyed', {
	  get: function () {
	    if (this._readableState === undefined || this._writableState === undefined) {
	      return false;
	    }
	    return this._readableState.destroyed && this._writableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (this._readableState === undefined || this._writableState === undefined) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._readableState.destroyed = value;
	    this._writableState.destroyed = value;
	  }
	});
	
	Duplex.prototype._destroy = function (err, cb) {
	  this.push(null);
	  this.end();
	
	  processNextTick(cb, err);
	};
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3
	//     http://underscorejs.org
	//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Underscore may be freely distributed under the MIT license.
	
	(function() {
	
	  // Baseline setup
	  // --------------
	
	  // Establish the root object, `window` in the browser, or `exports` on the server.
	  var root = this;
	
	  // Save the previous value of the `_` variable.
	  var previousUnderscore = root._;
	
	  // Save bytes in the minified (but not gzipped) version:
	  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
	
	  // Create quick reference variables for speed access to core prototypes.
	  var
	    push             = ArrayProto.push,
	    slice            = ArrayProto.slice,
	    toString         = ObjProto.toString,
	    hasOwnProperty   = ObjProto.hasOwnProperty;
	
	  // All **ECMAScript 5** native function implementations that we hope to use
	  // are declared here.
	  var
	    nativeIsArray      = Array.isArray,
	    nativeKeys         = Object.keys,
	    nativeBind         = FuncProto.bind,
	    nativeCreate       = Object.create;
	
	  // Naked function reference for surrogate-prototype-swapping.
	  var Ctor = function(){};
	
	  // Create a safe reference to the Underscore object for use below.
	  var _ = function(obj) {
	    if (obj instanceof _) return obj;
	    if (!(this instanceof _)) return new _(obj);
	    this._wrapped = obj;
	  };
	
	  // Export the Underscore object for **Node.js**, with
	  // backwards-compatibility for the old `require()` API. If we're in
	  // the browser, add `_` as a global object.
	  if (true) {
	    if (typeof module !== 'undefined' && module.exports) {
	      exports = module.exports = _;
	    }
	    exports._ = _;
	  } else {
	    root._ = _;
	  }
	
	  // Current version.
	  _.VERSION = '1.8.3';
	
	  // Internal function that returns an efficient (for current engines) version
	  // of the passed-in callback, to be repeatedly applied in other Underscore
	  // functions.
	  var optimizeCb = function(func, context, argCount) {
	    if (context === void 0) return func;
	    switch (argCount == null ? 3 : argCount) {
	      case 1: return function(value) {
	        return func.call(context, value);
	      };
	      case 2: return function(value, other) {
	        return func.call(context, value, other);
	      };
	      case 3: return function(value, index, collection) {
	        return func.call(context, value, index, collection);
	      };
	      case 4: return function(accumulator, value, index, collection) {
	        return func.call(context, accumulator, value, index, collection);
	      };
	    }
	    return function() {
	      return func.apply(context, arguments);
	    };
	  };
	
	  // A mostly-internal function to generate callbacks that can be applied
	  // to each element in a collection, returning the desired result — either
	  // identity, an arbitrary callback, a property matcher, or a property accessor.
	  var cb = function(value, context, argCount) {
	    if (value == null) return _.identity;
	    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
	    if (_.isObject(value)) return _.matcher(value);
	    return _.property(value);
	  };
	  _.iteratee = function(value, context) {
	    return cb(value, context, Infinity);
	  };
	
	  // An internal function for creating assigner functions.
	  var createAssigner = function(keysFunc, undefinedOnly) {
	    return function(obj) {
	      var length = arguments.length;
	      if (length < 2 || obj == null) return obj;
	      for (var index = 1; index < length; index++) {
	        var source = arguments[index],
	            keys = keysFunc(source),
	            l = keys.length;
	        for (var i = 0; i < l; i++) {
	          var key = keys[i];
	          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
	        }
	      }
	      return obj;
	    };
	  };
	
	  // An internal function for creating a new object that inherits from another.
	  var baseCreate = function(prototype) {
	    if (!_.isObject(prototype)) return {};
	    if (nativeCreate) return nativeCreate(prototype);
	    Ctor.prototype = prototype;
	    var result = new Ctor;
	    Ctor.prototype = null;
	    return result;
	  };
	
	  var property = function(key) {
	    return function(obj) {
	      return obj == null ? void 0 : obj[key];
	    };
	  };
	
	  // Helper for collection methods to determine whether a collection
	  // should be iterated as an array or as an object
	  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
	  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
	  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
	  var getLength = property('length');
	  var isArrayLike = function(collection) {
	    var length = getLength(collection);
	    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
	  };
	
	  // Collection Functions
	  // --------------------
	
	  // The cornerstone, an `each` implementation, aka `forEach`.
	  // Handles raw objects in addition to array-likes. Treats all
	  // sparse array-likes as if they were dense.
	  _.each = _.forEach = function(obj, iteratee, context) {
	    iteratee = optimizeCb(iteratee, context);
	    var i, length;
	    if (isArrayLike(obj)) {
	      for (i = 0, length = obj.length; i < length; i++) {
	        iteratee(obj[i], i, obj);
	      }
	    } else {
	      var keys = _.keys(obj);
	      for (i = 0, length = keys.length; i < length; i++) {
	        iteratee(obj[keys[i]], keys[i], obj);
	      }
	    }
	    return obj;
	  };
	
	  // Return the results of applying the iteratee to each element.
	  _.map = _.collect = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length,
	        results = Array(length);
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      results[index] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };
	
	  // Create a reducing function iterating left or right.
	  function createReduce(dir) {
	    // Optimized iterator function as using arguments.length
	    // in the main function will deoptimize the, see #1991.
	    function iterator(obj, iteratee, memo, keys, index, length) {
	      for (; index >= 0 && index < length; index += dir) {
	        var currentKey = keys ? keys[index] : index;
	        memo = iteratee(memo, obj[currentKey], currentKey, obj);
	      }
	      return memo;
	    }
	
	    return function(obj, iteratee, memo, context) {
	      iteratee = optimizeCb(iteratee, context, 4);
	      var keys = !isArrayLike(obj) && _.keys(obj),
	          length = (keys || obj).length,
	          index = dir > 0 ? 0 : length - 1;
	      // Determine the initial value if none is provided.
	      if (arguments.length < 3) {
	        memo = obj[keys ? keys[index] : index];
	        index += dir;
	      }
	      return iterator(obj, iteratee, memo, keys, index, length);
	    };
	  }
	
	  // **Reduce** builds up a single result from a list of values, aka `inject`,
	  // or `foldl`.
	  _.reduce = _.foldl = _.inject = createReduce(1);
	
	  // The right-associative version of reduce, also known as `foldr`.
	  _.reduceRight = _.foldr = createReduce(-1);
	
	  // Return the first value which passes a truth test. Aliased as `detect`.
	  _.find = _.detect = function(obj, predicate, context) {
	    var key;
	    if (isArrayLike(obj)) {
	      key = _.findIndex(obj, predicate, context);
	    } else {
	      key = _.findKey(obj, predicate, context);
	    }
	    if (key !== void 0 && key !== -1) return obj[key];
	  };
	
	  // Return all the elements that pass a truth test.
	  // Aliased as `select`.
	  _.filter = _.select = function(obj, predicate, context) {
	    var results = [];
	    predicate = cb(predicate, context);
	    _.each(obj, function(value, index, list) {
	      if (predicate(value, index, list)) results.push(value);
	    });
	    return results;
	  };
	
	  // Return all the elements for which a truth test fails.
	  _.reject = function(obj, predicate, context) {
	    return _.filter(obj, _.negate(cb(predicate)), context);
	  };
	
	  // Determine whether all of the elements match a truth test.
	  // Aliased as `all`.
	  _.every = _.all = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (!predicate(obj[currentKey], currentKey, obj)) return false;
	    }
	    return true;
	  };
	
	  // Determine if at least one element in the object matches a truth test.
	  // Aliased as `any`.
	  _.some = _.any = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (predicate(obj[currentKey], currentKey, obj)) return true;
	    }
	    return false;
	  };
	
	  // Determine if the array or object contains a given item (using `===`).
	  // Aliased as `includes` and `include`.
	  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
	    if (!isArrayLike(obj)) obj = _.values(obj);
	    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
	    return _.indexOf(obj, item, fromIndex) >= 0;
	  };
	
	  // Invoke a method (with arguments) on every item in a collection.
	  _.invoke = function(obj, method) {
	    var args = slice.call(arguments, 2);
	    var isFunc = _.isFunction(method);
	    return _.map(obj, function(value) {
	      var func = isFunc ? method : value[method];
	      return func == null ? func : func.apply(value, args);
	    });
	  };
	
	  // Convenience version of a common use case of `map`: fetching a property.
	  _.pluck = function(obj, key) {
	    return _.map(obj, _.property(key));
	  };
	
	  // Convenience version of a common use case of `filter`: selecting only objects
	  // containing specific `key:value` pairs.
	  _.where = function(obj, attrs) {
	    return _.filter(obj, _.matcher(attrs));
	  };
	
	  // Convenience version of a common use case of `find`: getting the first object
	  // containing specific `key:value` pairs.
	  _.findWhere = function(obj, attrs) {
	    return _.find(obj, _.matcher(attrs));
	  };
	
	  // Return the maximum element (or element-based computation).
	  _.max = function(obj, iteratee, context) {
	    var result = -Infinity, lastComputed = -Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value > result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };
	
	  // Return the minimum element (or element-based computation).
	  _.min = function(obj, iteratee, context) {
	    var result = Infinity, lastComputed = Infinity,
	        value, computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value < result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed < lastComputed || computed === Infinity && result === Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };
	
	  // Shuffle a collection, using the modern version of the
	  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
	  _.shuffle = function(obj) {
	    var set = isArrayLike(obj) ? obj : _.values(obj);
	    var length = set.length;
	    var shuffled = Array(length);
	    for (var index = 0, rand; index < length; index++) {
	      rand = _.random(0, index);
	      if (rand !== index) shuffled[index] = shuffled[rand];
	      shuffled[rand] = set[index];
	    }
	    return shuffled;
	  };
	
	  // Sample **n** random values from a collection.
	  // If **n** is not specified, returns a single random element.
	  // The internal `guard` argument allows it to work with `map`.
	  _.sample = function(obj, n, guard) {
	    if (n == null || guard) {
	      if (!isArrayLike(obj)) obj = _.values(obj);
	      return obj[_.random(obj.length - 1)];
	    }
	    return _.shuffle(obj).slice(0, Math.max(0, n));
	  };
	
	  // Sort the object's values by a criterion produced by an iteratee.
	  _.sortBy = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    return _.pluck(_.map(obj, function(value, index, list) {
	      return {
	        value: value,
	        index: index,
	        criteria: iteratee(value, index, list)
	      };
	    }).sort(function(left, right) {
	      var a = left.criteria;
	      var b = right.criteria;
	      if (a !== b) {
	        if (a > b || a === void 0) return 1;
	        if (a < b || b === void 0) return -1;
	      }
	      return left.index - right.index;
	    }), 'value');
	  };
	
	  // An internal function used for aggregate "group by" operations.
	  var group = function(behavior) {
	    return function(obj, iteratee, context) {
	      var result = {};
	      iteratee = cb(iteratee, context);
	      _.each(obj, function(value, index) {
	        var key = iteratee(value, index, obj);
	        behavior(result, value, key);
	      });
	      return result;
	    };
	  };
	
	  // Groups the object's values by a criterion. Pass either a string attribute
	  // to group by, or a function that returns the criterion.
	  _.groupBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
	  });
	
	  // Indexes the object's values by a criterion, similar to `groupBy`, but for
	  // when you know that your index values will be unique.
	  _.indexBy = group(function(result, value, key) {
	    result[key] = value;
	  });
	
	  // Counts instances of an object that group by a certain criterion. Pass
	  // either a string attribute to count by, or a function that returns the
	  // criterion.
	  _.countBy = group(function(result, value, key) {
	    if (_.has(result, key)) result[key]++; else result[key] = 1;
	  });
	
	  // Safely create a real, live array from anything iterable.
	  _.toArray = function(obj) {
	    if (!obj) return [];
	    if (_.isArray(obj)) return slice.call(obj);
	    if (isArrayLike(obj)) return _.map(obj, _.identity);
	    return _.values(obj);
	  };
	
	  // Return the number of elements in an object.
	  _.size = function(obj) {
	    if (obj == null) return 0;
	    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
	  };
	
	  // Split a collection into two arrays: one whose elements all satisfy the given
	  // predicate, and one whose elements all do not satisfy the predicate.
	  _.partition = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var pass = [], fail = [];
	    _.each(obj, function(value, key, obj) {
	      (predicate(value, key, obj) ? pass : fail).push(value);
	    });
	    return [pass, fail];
	  };
	
	  // Array Functions
	  // ---------------
	
	  // Get the first element of an array. Passing **n** will return the first N
	  // values in the array. Aliased as `head` and `take`. The **guard** check
	  // allows it to work with `_.map`.
	  _.first = _.head = _.take = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[0];
	    return _.initial(array, array.length - n);
	  };
	
	  // Returns everything but the last entry of the array. Especially useful on
	  // the arguments object. Passing **n** will return all the values in
	  // the array, excluding the last N.
	  _.initial = function(array, n, guard) {
	    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
	  };
	
	  // Get the last element of an array. Passing **n** will return the last N
	  // values in the array.
	  _.last = function(array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[array.length - 1];
	    return _.rest(array, Math.max(0, array.length - n));
	  };
	
	  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
	  // Especially useful on the arguments object. Passing an **n** will return
	  // the rest N values in the array.
	  _.rest = _.tail = _.drop = function(array, n, guard) {
	    return slice.call(array, n == null || guard ? 1 : n);
	  };
	
	  // Trim out all falsy values from an array.
	  _.compact = function(array) {
	    return _.filter(array, _.identity);
	  };
	
	  // Internal implementation of a recursive `flatten` function.
	  var flatten = function(input, shallow, strict, startIndex) {
	    var output = [], idx = 0;
	    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
	      var value = input[i];
	      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
	        //flatten current level of array or arguments object
	        if (!shallow) value = flatten(value, shallow, strict);
	        var j = 0, len = value.length;
	        output.length += len;
	        while (j < len) {
	          output[idx++] = value[j++];
	        }
	      } else if (!strict) {
	        output[idx++] = value;
	      }
	    }
	    return output;
	  };
	
	  // Flatten out an array, either recursively (by default), or just one level.
	  _.flatten = function(array, shallow) {
	    return flatten(array, shallow, false);
	  };
	
	  // Return a version of the array that does not contain the specified value(s).
	  _.without = function(array) {
	    return _.difference(array, slice.call(arguments, 1));
	  };
	
	  // Produce a duplicate-free version of the array. If the array has already
	  // been sorted, you have the option of using a faster algorithm.
	  // Aliased as `unique`.
	  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
	    if (!_.isBoolean(isSorted)) {
	      context = iteratee;
	      iteratee = isSorted;
	      isSorted = false;
	    }
	    if (iteratee != null) iteratee = cb(iteratee, context);
	    var result = [];
	    var seen = [];
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var value = array[i],
	          computed = iteratee ? iteratee(value, i, array) : value;
	      if (isSorted) {
	        if (!i || seen !== computed) result.push(value);
	        seen = computed;
	      } else if (iteratee) {
	        if (!_.contains(seen, computed)) {
	          seen.push(computed);
	          result.push(value);
	        }
	      } else if (!_.contains(result, value)) {
	        result.push(value);
	      }
	    }
	    return result;
	  };
	
	  // Produce an array that contains the union: each distinct element from all of
	  // the passed-in arrays.
	  _.union = function() {
	    return _.uniq(flatten(arguments, true, true));
	  };
	
	  // Produce an array that contains every item shared between all the
	  // passed-in arrays.
	  _.intersection = function(array) {
	    var result = [];
	    var argsLength = arguments.length;
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var item = array[i];
	      if (_.contains(result, item)) continue;
	      for (var j = 1; j < argsLength; j++) {
	        if (!_.contains(arguments[j], item)) break;
	      }
	      if (j === argsLength) result.push(item);
	    }
	    return result;
	  };
	
	  // Take the difference between one array and a number of other arrays.
	  // Only the elements present in just the first array will remain.
	  _.difference = function(array) {
	    var rest = flatten(arguments, true, true, 1);
	    return _.filter(array, function(value){
	      return !_.contains(rest, value);
	    });
	  };
	
	  // Zip together multiple lists into a single array -- elements that share
	  // an index go together.
	  _.zip = function() {
	    return _.unzip(arguments);
	  };
	
	  // Complement of _.zip. Unzip accepts an array of arrays and groups
	  // each array's elements on shared indices
	  _.unzip = function(array) {
	    var length = array && _.max(array, getLength).length || 0;
	    var result = Array(length);
	
	    for (var index = 0; index < length; index++) {
	      result[index] = _.pluck(array, index);
	    }
	    return result;
	  };
	
	  // Converts lists into objects. Pass either a single array of `[key, value]`
	  // pairs, or two parallel arrays of the same length -- one of keys, and one of
	  // the corresponding values.
	  _.object = function(list, values) {
	    var result = {};
	    for (var i = 0, length = getLength(list); i < length; i++) {
	      if (values) {
	        result[list[i]] = values[i];
	      } else {
	        result[list[i][0]] = list[i][1];
	      }
	    }
	    return result;
	  };
	
	  // Generator function to create the findIndex and findLastIndex functions
	  function createPredicateIndexFinder(dir) {
	    return function(array, predicate, context) {
	      predicate = cb(predicate, context);
	      var length = getLength(array);
	      var index = dir > 0 ? 0 : length - 1;
	      for (; index >= 0 && index < length; index += dir) {
	        if (predicate(array[index], index, array)) return index;
	      }
	      return -1;
	    };
	  }
	
	  // Returns the first index on an array-like that passes a predicate test
	  _.findIndex = createPredicateIndexFinder(1);
	  _.findLastIndex = createPredicateIndexFinder(-1);
	
	  // Use a comparator function to figure out the smallest index at which
	  // an object should be inserted so as to maintain order. Uses binary search.
	  _.sortedIndex = function(array, obj, iteratee, context) {
	    iteratee = cb(iteratee, context, 1);
	    var value = iteratee(obj);
	    var low = 0, high = getLength(array);
	    while (low < high) {
	      var mid = Math.floor((low + high) / 2);
	      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
	    }
	    return low;
	  };
	
	  // Generator function to create the indexOf and lastIndexOf functions
	  function createIndexFinder(dir, predicateFind, sortedIndex) {
	    return function(array, item, idx) {
	      var i = 0, length = getLength(array);
	      if (typeof idx == 'number') {
	        if (dir > 0) {
	            i = idx >= 0 ? idx : Math.max(idx + length, i);
	        } else {
	            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
	        }
	      } else if (sortedIndex && idx && length) {
	        idx = sortedIndex(array, item);
	        return array[idx] === item ? idx : -1;
	      }
	      if (item !== item) {
	        idx = predicateFind(slice.call(array, i, length), _.isNaN);
	        return idx >= 0 ? idx + i : -1;
	      }
	      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
	        if (array[idx] === item) return idx;
	      }
	      return -1;
	    };
	  }
	
	  // Return the position of the first occurrence of an item in an array,
	  // or -1 if the item is not included in the array.
	  // If the array is large and already in sort order, pass `true`
	  // for **isSorted** to use binary search.
	  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
	  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);
	
	  // Generate an integer Array containing an arithmetic progression. A port of
	  // the native Python `range()` function. See
	  // [the Python documentation](http://docs.python.org/library/functions.html#range).
	  _.range = function(start, stop, step) {
	    if (stop == null) {
	      stop = start || 0;
	      start = 0;
	    }
	    step = step || 1;
	
	    var length = Math.max(Math.ceil((stop - start) / step), 0);
	    var range = Array(length);
	
	    for (var idx = 0; idx < length; idx++, start += step) {
	      range[idx] = start;
	    }
	
	    return range;
	  };
	
	  // Function (ahem) Functions
	  // ------------------
	
	  // Determines whether to execute a function as a constructor
	  // or a normal function with the provided arguments
	  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
	    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
	    var self = baseCreate(sourceFunc.prototype);
	    var result = sourceFunc.apply(self, args);
	    if (_.isObject(result)) return result;
	    return self;
	  };
	
	  // Create a function bound to a given object (assigning `this`, and arguments,
	  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
	  // available.
	  _.bind = function(func, context) {
	    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
	    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
	    var args = slice.call(arguments, 2);
	    var bound = function() {
	      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
	    };
	    return bound;
	  };
	
	  // Partially apply a function by creating a version that has had some of its
	  // arguments pre-filled, without changing its dynamic `this` context. _ acts
	  // as a placeholder, allowing any combination of arguments to be pre-filled.
	  _.partial = function(func) {
	    var boundArgs = slice.call(arguments, 1);
	    var bound = function() {
	      var position = 0, length = boundArgs.length;
	      var args = Array(length);
	      for (var i = 0; i < length; i++) {
	        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
	      }
	      while (position < arguments.length) args.push(arguments[position++]);
	      return executeBound(func, bound, this, this, args);
	    };
	    return bound;
	  };
	
	  // Bind a number of an object's methods to that object. Remaining arguments
	  // are the method names to be bound. Useful for ensuring that all callbacks
	  // defined on an object belong to it.
	  _.bindAll = function(obj) {
	    var i, length = arguments.length, key;
	    if (length <= 1) throw new Error('bindAll must be passed function names');
	    for (i = 1; i < length; i++) {
	      key = arguments[i];
	      obj[key] = _.bind(obj[key], obj);
	    }
	    return obj;
	  };
	
	  // Memoize an expensive function by storing its results.
	  _.memoize = function(func, hasher) {
	    var memoize = function(key) {
	      var cache = memoize.cache;
	      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
	      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
	      return cache[address];
	    };
	    memoize.cache = {};
	    return memoize;
	  };
	
	  // Delays a function for the given number of milliseconds, and then calls
	  // it with the arguments supplied.
	  _.delay = function(func, wait) {
	    var args = slice.call(arguments, 2);
	    return setTimeout(function(){
	      return func.apply(null, args);
	    }, wait);
	  };
	
	  // Defers a function, scheduling it to run after the current call stack has
	  // cleared.
	  _.defer = _.partial(_.delay, _, 1);
	
	  // Returns a function, that, when invoked, will only be triggered at most once
	  // during a given window of time. Normally, the throttled function will run
	  // as much as it can, without ever going more than once per `wait` duration;
	  // but if you'd like to disable the execution on the leading edge, pass
	  // `{leading: false}`. To disable execution on the trailing edge, ditto.
	  _.throttle = function(func, wait, options) {
	    var context, args, result;
	    var timeout = null;
	    var previous = 0;
	    if (!options) options = {};
	    var later = function() {
	      previous = options.leading === false ? 0 : _.now();
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    };
	    return function() {
	      var now = _.now();
	      if (!previous && options.leading === false) previous = now;
	      var remaining = wait - (now - previous);
	      context = this;
	      args = arguments;
	      if (remaining <= 0 || remaining > wait) {
	        if (timeout) {
	          clearTimeout(timeout);
	          timeout = null;
	        }
	        previous = now;
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      } else if (!timeout && options.trailing !== false) {
	        timeout = setTimeout(later, remaining);
	      }
	      return result;
	    };
	  };
	
	  // Returns a function, that, as long as it continues to be invoked, will not
	  // be triggered. The function will be called after it stops being called for
	  // N milliseconds. If `immediate` is passed, trigger the function on the
	  // leading edge, instead of the trailing.
	  _.debounce = function(func, wait, immediate) {
	    var timeout, args, context, timestamp, result;
	
	    var later = function() {
	      var last = _.now() - timestamp;
	
	      if (last < wait && last >= 0) {
	        timeout = setTimeout(later, wait - last);
	      } else {
	        timeout = null;
	        if (!immediate) {
	          result = func.apply(context, args);
	          if (!timeout) context = args = null;
	        }
	      }
	    };
	
	    return function() {
	      context = this;
	      args = arguments;
	      timestamp = _.now();
	      var callNow = immediate && !timeout;
	      if (!timeout) timeout = setTimeout(later, wait);
	      if (callNow) {
	        result = func.apply(context, args);
	        context = args = null;
	      }
	
	      return result;
	    };
	  };
	
	  // Returns the first function passed as an argument to the second,
	  // allowing you to adjust arguments, run code before and after, and
	  // conditionally execute the original function.
	  _.wrap = function(func, wrapper) {
	    return _.partial(wrapper, func);
	  };
	
	  // Returns a negated version of the passed-in predicate.
	  _.negate = function(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    };
	  };
	
	  // Returns a function that is the composition of a list of functions, each
	  // consuming the return value of the function that follows.
	  _.compose = function() {
	    var args = arguments;
	    var start = args.length - 1;
	    return function() {
	      var i = start;
	      var result = args[start].apply(this, arguments);
	      while (i--) result = args[i].call(this, result);
	      return result;
	    };
	  };
	
	  // Returns a function that will only be executed on and after the Nth call.
	  _.after = function(times, func) {
	    return function() {
	      if (--times < 1) {
	        return func.apply(this, arguments);
	      }
	    };
	  };
	
	  // Returns a function that will only be executed up to (but not including) the Nth call.
	  _.before = function(times, func) {
	    var memo;
	    return function() {
	      if (--times > 0) {
	        memo = func.apply(this, arguments);
	      }
	      if (times <= 1) func = null;
	      return memo;
	    };
	  };
	
	  // Returns a function that will be executed at most one time, no matter how
	  // often you call it. Useful for lazy initialization.
	  _.once = _.partial(_.before, 2);
	
	  // Object Functions
	  // ----------------
	
	  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
	  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
	  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
	                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];
	
	  function collectNonEnumProps(obj, keys) {
	    var nonEnumIdx = nonEnumerableProps.length;
	    var constructor = obj.constructor;
	    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;
	
	    // Constructor is a special case.
	    var prop = 'constructor';
	    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);
	
	    while (nonEnumIdx--) {
	      prop = nonEnumerableProps[nonEnumIdx];
	      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
	        keys.push(prop);
	      }
	    }
	  }
	
	  // Retrieve the names of an object's own properties.
	  // Delegates to **ECMAScript 5**'s native `Object.keys`
	  _.keys = function(obj) {
	    if (!_.isObject(obj)) return [];
	    if (nativeKeys) return nativeKeys(obj);
	    var keys = [];
	    for (var key in obj) if (_.has(obj, key)) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };
	
	  // Retrieve all the property names of an object.
	  _.allKeys = function(obj) {
	    if (!_.isObject(obj)) return [];
	    var keys = [];
	    for (var key in obj) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };
	
	  // Retrieve the values of an object's properties.
	  _.values = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var values = Array(length);
	    for (var i = 0; i < length; i++) {
	      values[i] = obj[keys[i]];
	    }
	    return values;
	  };
	
	  // Returns the results of applying the iteratee to each element of the object
	  // In contrast to _.map it returns an object
	  _.mapObject = function(obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys =  _.keys(obj),
	          length = keys.length,
	          results = {},
	          currentKey;
	      for (var index = 0; index < length; index++) {
	        currentKey = keys[index];
	        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
	      }
	      return results;
	  };
	
	  // Convert an object into a list of `[key, value]` pairs.
	  _.pairs = function(obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var pairs = Array(length);
	    for (var i = 0; i < length; i++) {
	      pairs[i] = [keys[i], obj[keys[i]]];
	    }
	    return pairs;
	  };
	
	  // Invert the keys and values of an object. The values must be serializable.
	  _.invert = function(obj) {
	    var result = {};
	    var keys = _.keys(obj);
	    for (var i = 0, length = keys.length; i < length; i++) {
	      result[obj[keys[i]]] = keys[i];
	    }
	    return result;
	  };
	
	  // Return a sorted list of the function names available on the object.
	  // Aliased as `methods`
	  _.functions = _.methods = function(obj) {
	    var names = [];
	    for (var key in obj) {
	      if (_.isFunction(obj[key])) names.push(key);
	    }
	    return names.sort();
	  };
	
	  // Extend a given object with all the properties in passed-in object(s).
	  _.extend = createAssigner(_.allKeys);
	
	  // Assigns a given object with all the own properties in the passed-in object(s)
	  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
	  _.extendOwn = _.assign = createAssigner(_.keys);
	
	  // Returns the first key on an object that passes a predicate test
	  _.findKey = function(obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = _.keys(obj), key;
	    for (var i = 0, length = keys.length; i < length; i++) {
	      key = keys[i];
	      if (predicate(obj[key], key, obj)) return key;
	    }
	  };
	
	  // Return a copy of the object only containing the whitelisted properties.
	  _.pick = function(object, oiteratee, context) {
	    var result = {}, obj = object, iteratee, keys;
	    if (obj == null) return result;
	    if (_.isFunction(oiteratee)) {
	      keys = _.allKeys(obj);
	      iteratee = optimizeCb(oiteratee, context);
	    } else {
	      keys = flatten(arguments, false, false, 1);
	      iteratee = function(value, key, obj) { return key in obj; };
	      obj = Object(obj);
	    }
	    for (var i = 0, length = keys.length; i < length; i++) {
	      var key = keys[i];
	      var value = obj[key];
	      if (iteratee(value, key, obj)) result[key] = value;
	    }
	    return result;
	  };
	
	   // Return a copy of the object without the blacklisted properties.
	  _.omit = function(obj, iteratee, context) {
	    if (_.isFunction(iteratee)) {
	      iteratee = _.negate(iteratee);
	    } else {
	      var keys = _.map(flatten(arguments, false, false, 1), String);
	      iteratee = function(value, key) {
	        return !_.contains(keys, key);
	      };
	    }
	    return _.pick(obj, iteratee, context);
	  };
	
	  // Fill in a given object with default properties.
	  _.defaults = createAssigner(_.allKeys, true);
	
	  // Creates an object that inherits from the given prototype object.
	  // If additional properties are provided then they will be added to the
	  // created object.
	  _.create = function(prototype, props) {
	    var result = baseCreate(prototype);
	    if (props) _.extendOwn(result, props);
	    return result;
	  };
	
	  // Create a (shallow-cloned) duplicate of an object.
	  _.clone = function(obj) {
	    if (!_.isObject(obj)) return obj;
	    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
	  };
	
	  // Invokes interceptor with the obj, and then returns obj.
	  // The primary purpose of this method is to "tap into" a method chain, in
	  // order to perform operations on intermediate results within the chain.
	  _.tap = function(obj, interceptor) {
	    interceptor(obj);
	    return obj;
	  };
	
	  // Returns whether an object has a given set of `key:value` pairs.
	  _.isMatch = function(object, attrs) {
	    var keys = _.keys(attrs), length = keys.length;
	    if (object == null) return !length;
	    var obj = Object(object);
	    for (var i = 0; i < length; i++) {
	      var key = keys[i];
	      if (attrs[key] !== obj[key] || !(key in obj)) return false;
	    }
	    return true;
	  };
	
	
	  // Internal recursive comparison function for `isEqual`.
	  var eq = function(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b) return a !== 0 || 1 / a === 1 / b;
	    // A strict comparison is necessary because `null == undefined`.
	    if (a == null || b == null) return a === b;
	    // Unwrap any wrapped objects.
	    if (a instanceof _) a = a._wrapped;
	    if (b instanceof _) b = b._wrapped;
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b)) return false;
	    switch (className) {
	      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	      case '[object RegExp]':
	      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	      case '[object String]':
	        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	        // equivalent to `new String("5")`.
	        return '' + a === '' + b;
	      case '[object Number]':
	        // `NaN`s are equivalent, but non-reflexive.
	        // Object(NaN) is equivalent to NaN
	        if (+a !== +a) return +b !== +b;
	        // An `egal` comparison is performed for other numeric values.
	        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	      case '[object Date]':
	      case '[object Boolean]':
	        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	        // millisecond representations. Note that invalid dates with millisecond representations
	        // of `NaN` are not equivalent.
	        return +a === +b;
	    }
	
	    var areArrays = className === '[object Array]';
	    if (!areArrays) {
	      if (typeof a != 'object' || typeof b != 'object') return false;
	
	      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
	      // from different frames are.
	      var aCtor = a.constructor, bCtor = b.constructor;
	      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
	                               _.isFunction(bCtor) && bCtor instanceof bCtor)
	                          && ('constructor' in a && 'constructor' in b)) {
	        return false;
	      }
	    }
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
	
	    // Initializing stack of traversed objects.
	    // It's done here since we only need them for objects and arrays comparison.
	    aStack = aStack || [];
	    bStack = bStack || [];
	    var length = aStack.length;
	    while (length--) {
	      // Linear search. Performance is inversely proportional to the number of
	      // unique nested structures.
	      if (aStack[length] === a) return bStack[length] === b;
	    }
	
	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);
	
	    // Recursively compare objects and arrays.
	    if (areArrays) {
	      // Compare array lengths to determine if a deep comparison is necessary.
	      length = a.length;
	      if (length !== b.length) return false;
	      // Deep compare the contents, ignoring non-numeric properties.
	      while (length--) {
	        if (!eq(a[length], b[length], aStack, bStack)) return false;
	      }
	    } else {
	      // Deep compare objects.
	      var keys = _.keys(a), key;
	      length = keys.length;
	      // Ensure that both objects contain the same number of properties before comparing deep equality.
	      if (_.keys(b).length !== length) return false;
	      while (length--) {
	        // Deep compare each member
	        key = keys[length];
	        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
	      }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return true;
	  };
	
	  // Perform a deep comparison to check if two objects are equal.
	  _.isEqual = function(a, b) {
	    return eq(a, b);
	  };
	
	  // Is a given array, string, or object empty?
	  // An "empty" object has no enumerable own-properties.
	  _.isEmpty = function(obj) {
	    if (obj == null) return true;
	    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
	    return _.keys(obj).length === 0;
	  };
	
	  // Is a given value a DOM element?
	  _.isElement = function(obj) {
	    return !!(obj && obj.nodeType === 1);
	  };
	
	  // Is a given value an array?
	  // Delegates to ECMA5's native Array.isArray
	  _.isArray = nativeIsArray || function(obj) {
	    return toString.call(obj) === '[object Array]';
	  };
	
	  // Is a given variable an object?
	  _.isObject = function(obj) {
	    var type = typeof obj;
	    return type === 'function' || type === 'object' && !!obj;
	  };
	
	  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
	  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
	    _['is' + name] = function(obj) {
	      return toString.call(obj) === '[object ' + name + ']';
	    };
	  });
	
	  // Define a fallback version of the method in browsers (ahem, IE < 9), where
	  // there isn't any inspectable "Arguments" type.
	  if (!_.isArguments(arguments)) {
	    _.isArguments = function(obj) {
	      return _.has(obj, 'callee');
	    };
	  }
	
	  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
	  // IE 11 (#1621), and in Safari 8 (#1929).
	  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
	    _.isFunction = function(obj) {
	      return typeof obj == 'function' || false;
	    };
	  }
	
	  // Is a given object a finite number?
	  _.isFinite = function(obj) {
	    return isFinite(obj) && !isNaN(parseFloat(obj));
	  };
	
	  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
	  _.isNaN = function(obj) {
	    return _.isNumber(obj) && obj !== +obj;
	  };
	
	  // Is a given value a boolean?
	  _.isBoolean = function(obj) {
	    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
	  };
	
	  // Is a given value equal to null?
	  _.isNull = function(obj) {
	    return obj === null;
	  };
	
	  // Is a given variable undefined?
	  _.isUndefined = function(obj) {
	    return obj === void 0;
	  };
	
	  // Shortcut function for checking if an object has a given property directly
	  // on itself (in other words, not on a prototype).
	  _.has = function(obj, key) {
	    return obj != null && hasOwnProperty.call(obj, key);
	  };
	
	  // Utility Functions
	  // -----------------
	
	  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
	  // previous owner. Returns a reference to the Underscore object.
	  _.noConflict = function() {
	    root._ = previousUnderscore;
	    return this;
	  };
	
	  // Keep the identity function around for default iteratees.
	  _.identity = function(value) {
	    return value;
	  };
	
	  // Predicate-generating functions. Often useful outside of Underscore.
	  _.constant = function(value) {
	    return function() {
	      return value;
	    };
	  };
	
	  _.noop = function(){};
	
	  _.property = property;
	
	  // Generates a function for a given object that returns a given property.
	  _.propertyOf = function(obj) {
	    return obj == null ? function(){} : function(key) {
	      return obj[key];
	    };
	  };
	
	  // Returns a predicate for checking whether an object has a given set of
	  // `key:value` pairs.
	  _.matcher = _.matches = function(attrs) {
	    attrs = _.extendOwn({}, attrs);
	    return function(obj) {
	      return _.isMatch(obj, attrs);
	    };
	  };
	
	  // Run a function **n** times.
	  _.times = function(n, iteratee, context) {
	    var accum = Array(Math.max(0, n));
	    iteratee = optimizeCb(iteratee, context, 1);
	    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
	    return accum;
	  };
	
	  // Return a random integer between min and max (inclusive).
	  _.random = function(min, max) {
	    if (max == null) {
	      max = min;
	      min = 0;
	    }
	    return min + Math.floor(Math.random() * (max - min + 1));
	  };
	
	  // A (possibly faster) way to get the current timestamp as an integer.
	  _.now = Date.now || function() {
	    return new Date().getTime();
	  };
	
	   // List of HTML entities for escaping.
	  var escapeMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#x27;',
	    '`': '&#x60;'
	  };
	  var unescapeMap = _.invert(escapeMap);
	
	  // Functions for escaping and unescaping strings to/from HTML interpolation.
	  var createEscaper = function(map) {
	    var escaper = function(match) {
	      return map[match];
	    };
	    // Regexes for identifying a key that needs to be escaped
	    var source = '(?:' + _.keys(map).join('|') + ')';
	    var testRegexp = RegExp(source);
	    var replaceRegexp = RegExp(source, 'g');
	    return function(string) {
	      string = string == null ? '' : '' + string;
	      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	    };
	  };
	  _.escape = createEscaper(escapeMap);
	  _.unescape = createEscaper(unescapeMap);
	
	  // If the value of the named `property` is a function then invoke it with the
	  // `object` as context; otherwise, return it.
	  _.result = function(object, property, fallback) {
	    var value = object == null ? void 0 : object[property];
	    if (value === void 0) {
	      value = fallback;
	    }
	    return _.isFunction(value) ? value.call(object) : value;
	  };
	
	  // Generate a unique integer id (unique within the entire client session).
	  // Useful for temporary DOM ids.
	  var idCounter = 0;
	  _.uniqueId = function(prefix) {
	    var id = ++idCounter + '';
	    return prefix ? prefix + id : id;
	  };
	
	  // By default, Underscore uses ERB-style template delimiters, change the
	  // following template settings to use alternative delimiters.
	  _.templateSettings = {
	    evaluate    : /<%([\s\S]+?)%>/g,
	    interpolate : /<%=([\s\S]+?)%>/g,
	    escape      : /<%-([\s\S]+?)%>/g
	  };
	
	  // When customizing `templateSettings`, if you don't want to define an
	  // interpolation, evaluation or escaping regex, we need one that is
	  // guaranteed not to match.
	  var noMatch = /(.)^/;
	
	  // Certain characters need to be escaped so that they can be put into a
	  // string literal.
	  var escapes = {
	    "'":      "'",
	    '\\':     '\\',
	    '\r':     'r',
	    '\n':     'n',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };
	
	  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;
	
	  var escapeChar = function(match) {
	    return '\\' + escapes[match];
	  };
	
	  // JavaScript micro-templating, similar to John Resig's implementation.
	  // Underscore templating handles arbitrary delimiters, preserves whitespace,
	  // and correctly escapes quotes within interpolated code.
	  // NB: `oldSettings` only exists for backwards compatibility.
	  _.template = function(text, settings, oldSettings) {
	    if (!settings && oldSettings) settings = oldSettings;
	    settings = _.defaults({}, settings, _.templateSettings);
	
	    // Combine delimiters into one regular expression via alternation.
	    var matcher = RegExp([
	      (settings.escape || noMatch).source,
	      (settings.interpolate || noMatch).source,
	      (settings.evaluate || noMatch).source
	    ].join('|') + '|$', 'g');
	
	    // Compile the template source, escaping string literals appropriately.
	    var index = 0;
	    var source = "__p+='";
	    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
	      source += text.slice(index, offset).replace(escaper, escapeChar);
	      index = offset + match.length;
	
	      if (escape) {
	        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
	      } else if (interpolate) {
	        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
	      } else if (evaluate) {
	        source += "';\n" + evaluate + "\n__p+='";
	      }
	
	      // Adobe VMs need the match returned to produce the correct offest.
	      return match;
	    });
	    source += "';\n";
	
	    // If a variable is not specified, place data values in local scope.
	    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';
	
	    source = "var __t,__p='',__j=Array.prototype.join," +
	      "print=function(){__p+=__j.call(arguments,'');};\n" +
	      source + 'return __p;\n';
	
	    try {
	      var render = new Function(settings.variable || 'obj', '_', source);
	    } catch (e) {
	      e.source = source;
	      throw e;
	    }
	
	    var template = function(data) {
	      return render.call(this, data, _);
	    };
	
	    // Provide the compiled source as a convenience for precompilation.
	    var argument = settings.variable || 'obj';
	    template.source = 'function(' + argument + '){\n' + source + '}';
	
	    return template;
	  };
	
	  // Add a "chain" function. Start chaining a wrapped Underscore object.
	  _.chain = function(obj) {
	    var instance = _(obj);
	    instance._chain = true;
	    return instance;
	  };
	
	  // OOP
	  // ---------------
	  // If Underscore is called as a function, it returns a wrapped object that
	  // can be used OO-style. This wrapper holds altered versions of all the
	  // underscore functions. Wrapped objects may be chained.
	
	  // Helper function to continue chaining intermediate results.
	  var result = function(instance, obj) {
	    return instance._chain ? _(obj).chain() : obj;
	  };
	
	  // Add your own custom functions to the Underscore object.
	  _.mixin = function(obj) {
	    _.each(_.functions(obj), function(name) {
	      var func = _[name] = obj[name];
	      _.prototype[name] = function() {
	        var args = [this._wrapped];
	        push.apply(args, arguments);
	        return result(this, func.apply(_, args));
	      };
	    });
	  };
	
	  // Add all of the Underscore functions to the wrapper object.
	  _.mixin(_);
	
	  // Add all mutator Array functions to the wrapper.
	  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      var obj = this._wrapped;
	      method.apply(obj, arguments);
	      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
	      return result(this, obj);
	    };
	  });
	
	  // Add all accessor Array functions to the wrapper.
	  _.each(['concat', 'join', 'slice'], function(name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function() {
	      return result(this, method.apply(this._wrapped, arguments));
	    };
	  });
	
	  // Extracts the result from a wrapped and chained object.
	  _.prototype.value = function() {
	    return this._wrapped;
	  };
	
	  // Provide unwrapping proxy for some methods used in engine operations
	  // such as arithmetic and JSON stringification.
	  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;
	
	  _.prototype.toString = function() {
	    return '' + this._wrapped;
	  };
	
	  // AMD registration happens at the end for compatibility with AMD loaders
	  // that may not enforce next-turn semantics on modules. Even though general
	  // practice for AMD registration is to be anonymous, underscore registers
	  // as a named module because, like jQuery, it is a base library that is
	  // popular enough to be bundled in a third party lib, but not be part of
	  // an AMD load request. Those cases could generate an error when an
	  // anonymous define() is called outside of a loader request.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}.call(this));


/***/ }),
/* 81 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	
	function isArray(arg) {
	  if (Array.isArray) {
	    return Array.isArray(arg);
	  }
	  return objectToString(arg) === '[object Array]';
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = Buffer.isBuffer;
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ }),
/* 90 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ }),
/* 91 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 92 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ }),
/* 93 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ }),
/* 94 */
/***/ (function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value === placeholder || value === PLACEHOLDER) {
	      array[index] = PLACEHOLDER;
	      result[resIndex++] = index;
	    }
	  }
	  return result;
	}
	
	module.exports = replaceHolders;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(678),
	    isObjectLike = __webpack_require__(45);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(24),
	    stubFalse = __webpack_require__(794);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module)))

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Rob Ellis, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12),
	    _ = __webpack_require__(80)._;
	
	// Base Class for RegExp Matching
	var RegexpTokenizer = function(options) {
	    var options = options || {};
	    this._pattern = options.pattern || this._pattern;
	    this.discardEmpty = options.discardEmpty || true;
	
	    // Match and split on GAPS not the actual WORDS
	    this._gaps = options.gaps;
	    
	    if (this._gaps === undefined) {
	        this._gaps = true;
	    }
	};
	
	util.inherits(RegexpTokenizer, Tokenizer);
	
	RegexpTokenizer.prototype.tokenize = function(s) {
	    var results;
	
	    if (this._gaps) {
	        results = s.split(this._pattern);
	        return (this.discardEmpty) ? _.without(results,'',' ') : results;
	    } else {
	        return s.match(this._pattern);
	    }
	};
	
	exports.RegexpTokenizer = RegexpTokenizer;
	
	/***
	 * A tokenizer that divides a text into sequences of alphabetic and
	 * non-alphabetic characters.  E.g.:
	 *
	 *      >>> WordTokenizer().tokenize("She said 'hello'.")
	 *      ['She', 'said', 'hello']
	 * 
	 */
	var WordTokenizer = function(options) {
	    this._pattern = /[^A-Za-zА-Яа-я0-9_]+/;
	    RegexpTokenizer.call(this,options)
	};
	
	util.inherits(WordTokenizer, RegexpTokenizer);
	exports.WordTokenizer = WordTokenizer;
	
	/***
	 * A tokenizer that divides a text into sequences of alphabetic and
	 * non-alphabetic characters.  E.g.:
	 *
	 *      >>> WordPunctTokenizer().tokenize("She said 'hello'.")
	 *      ["She","said","'","hello","'","."]
	 * 
	 */
	var WordPunctTokenizer = function(options) {
	    this._pattern = new RegExp(/(\w+|[а-я0-9_]+|\.|\!|\'|\"")/i);
	    RegexpTokenizer.call(this,options)
	};
	
	util.inherits(WordPunctTokenizer, RegexpTokenizer);
	exports.WordPunctTokenizer = WordPunctTokenizer;


/***/ }),
/* 98 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	
	/**
	 * Generate a replacing function given a table of patterns. Inspired by:
	 * http://code.google.com/p/jslibs/wiki/JavascriptTips#String_converter
	 * The order of elements is significant. Longer elements should be listed first.
	 * @see Speed test http://jsperf.com/build-a-regexp-table
	 *
	 * @param {Object.<string, string>} translationTable The translation table of key value.
	 * @return {function(string): string} A translating function.
	 */
	function replacer(translationTable) {
	  /**
	   * An array of translationTable keys.
	   * @type {Array.<string>}
	   */
	  var pattern = [];
	
	  /**
	   * The regular expression doing the replacement job.
	   * @type {RegExp}
	   */
	  var regExp;
	
	  /**
	   * Used to iterate over translationTable.
	   * @type {string}
	   */
	  var key;
	
	  for (key in translationTable) {
	    // Escaping regexp special chars.
	    // @see Speed test for type casting to string http://jsperf.com/string-type-casting/2
	    // @see http://closure-library.googlecode.com/svn/docs/closure_goog_string_string.js.source.html#line956
	    key = ('' + key).replace(/([-()\[\]{}+?*.$\^|,:#<!\\\/])/g, '\\$1').
	      replace(/\x08/g, '\\x08');
	
	    pattern.push(key);
	  }
	
	  regExp = new RegExp(pattern.join('|'), 'g');
	
	  /**
	   * @param {string} str Input string.
	   * @return {string} The string replaced.
	   */
	  return function(str) {
	    return str.replace(regExp, function(str) {
	      return translationTable[str];
	    });
	  };
	}
	
	
	/**
	 * Exchanges all keys with their associated values in an object.
	 *
	 * @param {Object.<string, string>} obj An object of strings.
	 * @return {Object.<string, string>} An object of strings.
	 */
	function flip(obj) {
	  var newObj = Object.create(null),
	      key;
	
	  for (key in obj) {
	    newObj[obj[key]] = key;
	  }
	
	  return newObj;
	}
	
	
	/**
	 * Merge several objects. Properties from earlier objects are overwritten by
	 * laters's in case of conflict.
	 *
	 * @param {...Object.<string, string>} var_args One or more objects of strings.
	 * @return {!Object.<string, string>} An object of strings.
	 */
	function merge(var_args) {
	  var args = [].slice.call(arguments),
	      newObj = Object.create(null),
	      id = 0, key;
	
	  while (args[id]) {
	    for (key in args[id]) {
	      newObj[key] = args[id][key];
	    }
	
	    id++;
	  }
	
	  return newObj;
	}
	
	exports.replacer = replacer;
	exports.flip = flip;
	exports.merge = merge;


/***/ }),
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.LiveContextTypes = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _transpile = __webpack_require__(427);
	
	var _cn = __webpack_require__(152);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	var _Style = __webpack_require__(984);
	
	var _Style2 = _interopRequireDefault(_Style);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var LiveContextTypes = exports.LiveContextTypes = {
	  live: _propTypes2.default.shape({
	    code: _propTypes2.default.string,
	    error: _propTypes2.default.string,
	
	    onError: _propTypes2.default.func,
	    onChange: _propTypes2.default.func,
	
	    element: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.element, _propTypes2.default.func])
	  })
	};
	
	var LiveProvider = function (_Component) {
	  _inherits(LiveProvider, _Component);
	
	  function LiveProvider() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, LiveProvider);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onChange = function (code) {
	      var _this$props = _this.props,
	          scope = _this$props.scope,
	          transformCode = _this$props.transformCode,
	          noInline = _this$props.noInline;
	
	      _this.transpile({ code: code, scope: scope, transformCode: transformCode, noInline: noInline });
	    }, _this.onError = function (error) {
	      _this.setState({ error: error.toString() });
	    }, _this.transpile = function (_ref) {
	      var code = _ref.code,
	          scope = _ref.scope,
	          transformCode = _ref.transformCode,
	          _ref$noInline = _ref.noInline,
	          noInline = _ref$noInline === undefined ? false : _ref$noInline;
	
	      // Transpilation arguments
	      var input = {
	        code: transformCode ? transformCode(code) : code,
	        scope: scope
	      };
	      var errorCallback = function errorCallback(err) {
	        return _this.setState({ element: undefined, error: err.toString() });
	      };
	      var renderElement = function renderElement(element) {
	        return _this.setState(_extends({}, state, { element: element }));
	      };
	
	      // State reset object
	      var state = { unsafeWrapperError: undefined, error: undefined };
	
	      try {
	        if (noInline) {
	          _this.setState(_extends({}, state, { element: null })); // Reset output for async (no inline) evaluation
	          (0, _transpile.renderElementAsync)(input, renderElement, errorCallback);
	        } else {
	          renderElement((0, _transpile.generateElement)(input, errorCallback));
	        }
	      } catch (error) {
	        _this.setState(_extends({}, state, { error: error.toString() }));
	      }
	    }, _this.getChildContext = function () {
	      return {
	        live: _extends({}, _this.state, {
	          code: _this.props.code,
	          onError: _this.onError,
	          onChange: _this.onChange
	        })
	      };
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  LiveProvider.prototype.componentWillMount = function componentWillMount() {
	    var _props = this.props,
	        code = _props.code,
	        scope = _props.scope,
	        transformCode = _props.transformCode,
	        noInline = _props.noInline;
	
	
	    this.transpile({ code: code, scope: scope, transformCode: transformCode, noInline: noInline });
	  };
	
	  LiveProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref2) {
	    var code = _ref2.code,
	        scope = _ref2.scope,
	        noInline = _ref2.noInline,
	        transformCode = _ref2.transformCode;
	
	    if (code !== this.props.code || scope !== this.props.scope || noInline !== this.props.noInline || transformCode !== this.props.transformCode) {
	      this.transpile({ code: code, scope: scope, transformCode: transformCode, noInline: noInline });
	    }
	  };
	
	  LiveProvider.prototype.render = function render() {
	    var _props2 = this.props,
	        children = _props2.children,
	        className = _props2.className,
	        code = _props2.code,
	        mountStylesheet = _props2.mountStylesheet,
	        noInline = _props2.noInline,
	        transformCode = _props2.transformCode,
	        rest = _objectWithoutProperties(_props2, ['children', 'className', 'code', 'mountStylesheet', 'noInline', 'transformCode']);
	
	    return _react2.default.createElement(
	      'div',
	      _extends({
	        className: (0, _cn2.default)('react-live', className)
	      }, rest),
	      mountStylesheet && _react2.default.createElement(_Style2.default, null),
	      children
	    );
	  };
	
	  return LiveProvider;
	}(_react.Component);
	
	LiveProvider.childContextTypes = LiveContextTypes;
	LiveProvider.defaultProps = {
	  code: '',
	  mountStylesheet: true,
	  noInline: false
	};
	LiveProvider.propTypes = {
	  className: _propTypes2.default.string,
	  code: _propTypes2.default.string,
	  scope: _propTypes2.default.object,
	  mountStylesheet: _propTypes2.default.bool,
	  noInline: _propTypes2.default.bool,
	  transformCode: _propTypes2.default.func
	};
	exports.default = LiveProvider;

/***/ }),
/* 104 */,
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.countSlides = exports.isMagicSlide = exports.getRootIndex = exports.getSlideByIndex = undefined;
	
	var _react = __webpack_require__(1);
	
	var _isUndefined = __webpack_require__(213);
	
	var _isUndefined2 = _interopRequireDefault(_isUndefined);
	
	var _reduce = __webpack_require__(365);
	
	var _reduce2 = _interopRequireDefault(_reduce);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getSlideByIndex = exports.getSlideByIndex = function getSlideByIndex(children, slideReference, index) {
	  children = _react.Children.toArray(children);
	  var slide = void 0;
	  var reference = slideReference[index];
	  if (reference) {
	    if (!(0, _isUndefined2.default)(reference.magicIndex)) {
	      slide = (0, _react.cloneElement)(children[reference.rootIndex], {
	        magicIndex: reference.magicIndex
	      });
	    } else if ((0, _isUndefined2.default)(reference.setIndex)) {
	      slide = children[reference.rootIndex];
	    } else {
	      var setChildren = _react.Children.toArray(children[reference.rootIndex].props.children);
	      slide = setChildren[reference.setIndex];
	    }
	  }
	  return slide;
	};
	
	var getRootIndex = exports.getRootIndex = function getRootIndex(slideReference, index) {
	  var reference = slideReference[index];
	  return reference.rootIndex;
	};
	
	var isMagicSlide = exports.isMagicSlide = function isMagicSlide(slideReference, index) {
	  var reference = slideReference[index];
	  return !(0, _isUndefined2.default)(reference.magicIndex);
	};
	
	var countSlides = exports.countSlides = function countSlides(children) {
	  return (0, _reduce2.default)(_react.Children.toArray(children), function (count, child) {
	    count += child.props.hasSlideChildren ? _react.Children.toArray(child.props.children).length : 1;
	    return count;
	  }, 0);
	};

/***/ }),
/* 106 */
/***/ (function(module, exports) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	// This file is required in order for any other classes to work. Some Vector methods work with the
	// other Sylvester classes and are useless unless they are included. Other classes such as Line and
	// Plane will not function at all without Vector being loaded first.           
	
	Math.sign = function(x) {
	    return x < 0 ? -1: 1;
	}
	                                              
	var Sylvester = {
	    precision: 1e-6,
	    approxPrecision: 1e-5
	};
	
	module.exports = Sylvester;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	// This file is required in order for any other classes to work. Some Vector methods work with the
	// other Sylvester classes and are useless unless they are included. Other classes such as Line and
	// Plane will not function at all without Vector being loaded first.
	
	var Sylvester = __webpack_require__(106),
	Matrix = __webpack_require__(154);
	
	function Vector() {}
	Vector.prototype = {
	
	    norm: function() {
		var n = this.elements.length;
		var sum = 0;
	
		while (n--) {
		    sum += Math.pow(this.elements[n], 2);
		}
	
		return Math.sqrt(sum);
	    },
	
	    // Returns element i of the vector
	    e: function(i) {
	      return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];
	    },
	
	    // Returns the number of rows/columns the vector has
	    dimensions: function() {
	      return {rows: 1, cols: this.elements.length};
	    },
	
	    // Returns the number of rows in the vector
	    rows: function() {
	      return 1;
	    },
	
	    // Returns the number of columns in the vector
	    cols: function() {
	      return this.elements.length;
	    },
	
	    // Returns the modulus ('length') of the vector
	    modulus: function() {
	      return Math.sqrt(this.dot(this));
	    },
	
	    // Returns true iff the vector is equal to the argument
	    eql: function(vector) {
	    	var n = this.elements.length;
	    	var V = vector.elements || vector;
	    	if (n != V.length) { return false; }
	    	while (n--) {
	    	    if (Math.abs(this.elements[n] - V[n]) > Sylvester.precision) { return false; }
	    	}
	    	return true;
	    },
	
	    // Returns a copy of the vector
	    dup: function() {
		    return Vector.create(this.elements);
	    },
	
	    // Maps the vector to another vector according to the given function
	    map: function(fn) {
		var elements = [];
		this.each(function(x, i) {
		    elements.push(fn(x, i));
		});
		return Vector.create(elements);
	    },
	
	    // Calls the iterator for each element of the vector in turn
	    each: function(fn) {
		var n = this.elements.length;
		for (var i = 0; i < n; i++) {
		    fn(this.elements[i], i + 1);
		}
	    },
	
	    // Returns a new vector created by normalizing the receiver
	    toUnitVector: function() {
		var r = this.modulus();
		if (r === 0) { return this.dup(); }
		return this.map(function(x) { return x / r; });
	    },
	
	    // Returns the angle between the vector and the argument (also a vector)
	    angleFrom: function(vector) {
		var V = vector.elements || vector;
		var n = this.elements.length, k = n, i;
		if (n != V.length) { return null; }
		var dot = 0, mod1 = 0, mod2 = 0;
		// Work things out in parallel to save time
		this.each(function(x, i) {
		    dot += x * V[i - 1];
		    mod1 += x * x;
		    mod2 += V[i - 1] * V[i - 1];
		});
		mod1 = Math.sqrt(mod1); mod2 = Math.sqrt(mod2);
		if (mod1 * mod2 === 0) { return null; }
		var theta = dot / (mod1 * mod2);
		if (theta < -1) { theta = -1; }
		if (theta > 1) { theta = 1; }
		return Math.acos(theta);
	    },
	
	    // Returns true iff the vector is parallel to the argument
	    isParallelTo: function(vector) {
		var angle = this.angleFrom(vector);
		return (angle === null) ? null : (angle <= Sylvester.precision);
	    },
	
	    // Returns true iff the vector is antiparallel to the argument
	    isAntiparallelTo: function(vector) {
		var angle = this.angleFrom(vector);
		return (angle === null) ? null : (Math.abs(angle - Math.PI) <= Sylvester.precision);
	    },
	
	    // Returns true iff the vector is perpendicular to the argument
	    isPerpendicularTo: function(vector) {
		var dot = this.dot(vector);
		return (dot === null) ? null : (Math.abs(dot) <= Sylvester.precision);
	    },
	
	    // Returns the result of adding the argument to the vector
	    add: function(value) {
		var V = value.elements || value;
	
		if (this.elements.length != V.length) 
		    return this.map(function(v) { return v + value });
		else
		    return this.map(function(x, i) { return x + V[i - 1]; });
	    },
	
	    // Returns the result of subtracting the argument from the vector
	    subtract: function(v) {
		if (typeof(v) == 'number')
		    return this.map(function(k) { return k - v; });
	
		var V = v.elements || v;
		if (this.elements.length != V.length) { return null; }
		return this.map(function(x, i) { return x - V[i - 1]; });
	    },
	
	    // Returns the result of multiplying the elements of the vector by the argument
	    multiply: function(k) {
		return this.map(function(x) { return x * k; });
	    },
	
	    elementMultiply: function(v) {
		return this.map(function(k, i) {
		    return v.e(i) * k;
		});
	    },
	
	    sum: function() {
		var sum = 0;
		this.map(function(x) { sum += x;});
		return sum;
	    },
	
	    chomp: function(n) {
		var elements = [];
	
		for (var i = n; i < this.elements.length; i++) {
		    elements.push(this.elements[i]);
		}
	
		return Vector.create(elements);
	    },
	
	    top: function(n) {
		var elements = [];
	
		for (var i = 0; i < n; i++) {
		    elements.push(this.elements[i]);
		}
	
		return Vector.create(elements);
	    },
	
	    augment: function(elements) {
		var newElements = this.elements;
	
		for (var i = 0; i < elements.length; i++) {
		    newElements.push(elements[i]);
		}
	
		return Vector.create(newElements);
	    },
	
	    x: function(k) { return this.multiply(k); },
	
	    log: function() {
		return Vector.log(this);
	    },
	
	    elementDivide: function(vector) {
		return this.map(function(v, i) {
		    return v / vector.e(i);
		});
	    },
	
	    product: function() {
		var p = 1;
	
		this.map(function(v) {
		    p *= v;
		});
	
		return p;
	    },
	
	    // Returns the scalar product of the vector with the argument
	    // Both vectors must have equal dimensionality
	    dot: function(vector) {
		var V = vector.elements || vector;
		var i, product = 0, n = this.elements.length;	
		if (n != V.length) { return null; }
		while (n--) { product += this.elements[n] * V[n]; }
		return product;
	    },
	
	    // Returns the vector product of the vector with the argument
	    // Both vectors must have dimensionality 3
	    cross: function(vector) {
		var B = vector.elements || vector;
		if (this.elements.length != 3 || B.length != 3) { return null; }
		var A = this.elements;
		return Vector.create([
		    (A[1] * B[2]) - (A[2] * B[1]),
		    (A[2] * B[0]) - (A[0] * B[2]),
		    (A[0] * B[1]) - (A[1] * B[0])
		]);
	    },
	
	    // Returns the (absolute) largest element of the vector
	    max: function() {
		var m = 0, i = this.elements.length;
		while (i--) {
		    if (Math.abs(this.elements[i]) > Math.abs(m)) { m = this.elements[i]; }
		}
		return m;
	    },
	
	
	    maxIndex: function() {
		var m = 0, i = this.elements.length;
		var maxIndex = -1;
	
		while (i--) {
		    if (Math.abs(this.elements[i]) > Math.abs(m)) { 
			m = this.elements[i]; 
			maxIndex = i + 1;
		    }
		}
	
		return maxIndex;
	    },
	
	
	    // Returns the index of the first match found
	    indexOf: function(x) {
		var index = null, n = this.elements.length;
		for (var i = 0; i < n; i++) {
		    if (index === null && this.elements[i] == x) {
			index = i + 1;
		    }
		}
		return index;
	    },
	
	    // Returns a diagonal matrix with the vector's elements as its diagonal elements
	    toDiagonalMatrix: function() {
		return Matrix.Diagonal(this.elements);
	    },
	
	    // Returns the result of rounding the elements of the vector
	    round: function() {
		return this.map(function(x) { return Math.round(x); });
	    },
	
	    // Transpose a Vector, return a 1xn Matrix
	    transpose: function() {
		var rows = this.elements.length;
		var elements = [];
	
		for (var i = 0; i < rows; i++) {
		    elements.push([this.elements[i]]);
		}
		return Matrix.create(elements);
	    },
	
	    // Returns a copy of the vector with elements set to the given value if they
	    // differ from it by less than Sylvester.precision
	    snapTo: function(x) {
		return this.map(function(y) {
		    return (Math.abs(y - x) <= Sylvester.precision) ? x : y;
		});
	    },
	
	    // Returns the vector's distance from the argument, when considered as a point in space
	    distanceFrom: function(obj) {
		if (obj.anchor || (obj.start && obj.end)) { return obj.distanceFrom(this); }
		var V = obj.elements || obj;
		if (V.length != this.elements.length) { return null; }
		var sum = 0, part;
		this.each(function(x, i) {
		    part = x - V[i - 1];
		    sum += part * part;
		});
		return Math.sqrt(sum);
	    },
	
	    // Returns true if the vector is point on the given line
	    liesOn: function(line) {
		return line.contains(this);
	    },
	
	    // Return true iff the vector is a point in the given plane
	    liesIn: function(plane) {
		return plane.contains(this);
	    },
	
	    // Rotates the vector about the given object. The object should be a
	    // point if the vector is 2D, and a line if it is 3D. Be careful with line directions!
	    rotate: function(t, obj) {
		var V, R = null, x, y, z;
		if (t.determinant) { R = t.elements; }
		switch (this.elements.length) {
		case 2:
	            V = obj.elements || obj;
	            if (V.length != 2) { return null; }
	            if (!R) { R = Matrix.Rotation(t).elements; }
	            x = this.elements[0] - V[0];
	            y = this.elements[1] - V[1];
	            return Vector.create([
			V[0] + R[0][0] * x + R[0][1] * y,
			V[1] + R[1][0] * x + R[1][1] * y
	            ]);
	            break;
		case 3:
	            if (!obj.direction) { return null; }
	            var C = obj.pointClosestTo(this).elements;
	            if (!R) { R = Matrix.Rotation(t, obj.direction).elements; }
	            x = this.elements[0] - C[0];
	            y = this.elements[1] - C[1];
	            z = this.elements[2] - C[2];
	            return Vector.create([
			C[0] + R[0][0] * x + R[0][1] * y + R[0][2] * z,
			C[1] + R[1][0] * x + R[1][1] * y + R[1][2] * z,
			C[2] + R[2][0] * x + R[2][1] * y + R[2][2] * z
	            ]);
	            break;
		default:
	            return null;
		}
	    },
	
	    // Returns the result of reflecting the point in the given point, line or plane
	    reflectionIn: function(obj) {
		if (obj.anchor) {
		    // obj is a plane or line
		    var P = this.elements.slice();
		    var C = obj.pointClosestTo(P).elements;
		    return Vector.create([C[0] + (C[0] - P[0]), C[1] + (C[1] - P[1]), C[2] + (C[2] - (P[2] || 0))]);
		} else {
		    // obj is a point
		    var Q = obj.elements || obj;
		    if (this.elements.length != Q.length) { return null; }
		    return this.map(function(x, i) { return Q[i - 1] + (Q[i - 1] - x); });
		}
	    },
	
	    // Utility to make sure vectors are 3D. If they are 2D, a zero z-component is added
	    to3D: function() {
		var V = this.dup();
		switch (V.elements.length) {
		case 3: break;
		case 2: V.elements.push(0); break;
		default: return null;
		}
		return V;
	    },
	
	    // Returns a string representation of the vector
	    inspect: function() {
		return '[' + this.elements.join(', ') + ']';
	    },
	
	    // Set vector's elements from an array
	    setElements: function(els) {
		this.elements = (els.elements || els).slice();
		return this;
	    }
	};
	
	// Constructor function
	Vector.create = function(elements) {
	    var V = new Vector();
	    return V.setElements(elements);
	};
	
	// i, j, k unit vectors
	Vector.i = Vector.create([1, 0, 0]);
	Vector.j = Vector.create([0, 1, 0]);
	Vector.k = Vector.create([0, 0, 1]);
	
	// Random vector of size n
	Vector.Random = function(n) {
	    var elements = [];
	    while (n--) { elements.push(Math.random()); }
	    return Vector.create(elements);
	};
	
	Vector.Fill = function(n, v) {
	    var elements = [];
	    while (n--) { elements.push(v); }
	    return Vector.create(elements);
	};
	
	// Vector filled with zeros
	Vector.Zero = function(n) {
	    return Vector.Fill(n, 0);
	};
	
	Vector.One = function(n) {
	    return Vector.Fill(n, 1);
	};
	
	Vector.log = function(v) {
	    return v.map(function(x) {
		return Math.log(x);
	    });
	};
	
	module.exports = Vector;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _d3Timer=__webpack_require__(615);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var
	
	Timer=function(){
	function Timer(){_classCallCheck(this,Timer);
	this.shouldAnimate=true;
	this.subscribers=[];
	this.loop=this.loop.bind(this);
	this.timer=(0,_d3Timer.timer)(this.loop);
	}_createClass(Timer,[{key:"bypassAnimation",value:function bypassAnimation()
	
	{
	this.shouldAnimate=false;
	}},{key:"resumeAnimation",value:function resumeAnimation()
	
	{
	this.shouldAnimate=true;
	}},{key:"loop",value:function loop()
	
	{
	this.subscribers.forEach(function(s){
	s.callback((0,_d3Timer.now)()-s.startTime,s.duration);
	});
	}},{key:"start",value:function start()
	
	{
	this.timer.start();
	}},{key:"stop",value:function stop()
	
	{
	this.timer.stop();
	}},{key:"subscribe",value:function subscribe(
	
	callback,duration){
	duration=this.shouldAnimate?duration:0;
	return this.subscribers.push({
	startTime:(0,_d3Timer.now)(),
	callback:callback,
	duration:duration});
	
	}},{key:"unsubscribe",value:function unsubscribe(
	
	id){
	if(id!==null){
	delete this.subscribers[id-1];
	}
	}}]);return Timer;}();exports.default=Timer;

/***/ }),
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.index = mod.exports;
	  }
	})(this, function (exports) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	    return typeof obj;
	  } : function (obj) {
	    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	  };
	
	  var isDate = exports.isDate = function isDate(d) {
	    return d instanceof Date;
	  };
	  var isEmpty = exports.isEmpty = function isEmpty(o) {
	    return Object.keys(o).length === 0;
	  };
	  var isObject = exports.isObject = function isObject(o) {
	    return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object';
	  };
	  var properObject = exports.properObject = function properObject(o) {
	    return isObject(o) && !o.hasOwnProperty ? _extends({}, o) : o;
	  };
	});

/***/ }),
/* 122 */,
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(748),
	    listCacheDelete = __webpack_require__(749),
	    listCacheGet = __webpack_require__(750),
	    listCacheHas = __webpack_require__(751),
	    listCacheSet = __webpack_require__(752);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123),
	    stackClear = __webpack_require__(769),
	    stackDelete = __webpack_require__(770),
	    stackGet = __webpack_require__(771),
	    stackHas = __webpack_require__(772),
	    stackSet = __webpack_require__(773);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ }),
/* 125 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(195),
	    eq = __webpack_require__(72);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(72);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(29);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(70),
	    toKey = __webpack_require__(71);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ }),
/* 130 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(69),
	    isIterateeCall = __webpack_require__(205);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(128),
	    isObject = __webpack_require__(29);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtor;


/***/ }),
/* 133 */
/***/ (function(module, exports) {

	/**
	 * Gets the argument placeholder value for `func`.
	 *
	 * @private
	 * @param {Function} func The function to inspect.
	 * @returns {*} Returns the placeholder value.
	 */
	function getHolder(func) {
	  var object = func;
	  return object.placeholder;
	}
	
	module.exports = getHolder;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(745);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(662),
	    Map = __webpack_require__(189),
	    Promise = __webpack_require__(664),
	    Set = __webpack_require__(314),
	    WeakMap = __webpack_require__(316),
	    baseGetTag = __webpack_require__(60),
	    toSource = __webpack_require__(355);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ }),
/* 137 */
/***/ (function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    isArray = __webpack_require__(18),
	    isObjectLike = __webpack_require__(45);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(683),
	    baseUnary = __webpack_require__(200),
	    nodeUtil = __webpack_require__(762);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(688),
	    createAssigner = __webpack_require__(131);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ }),
/* 141 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var FormSet = function() {
	    this.regularForms = [];
	    this.irregularForms = {};
	}
	
	module.exports = FormSet;


/***/ }),
/* 142 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var TenseInflector = function () {
	};
	
	TenseInflector.prototype.addSingular = function(pattern, replacement) {
	    this.customSingularForms.push([pattern, replacement]);    
	};
	
	TenseInflector.prototype.addPlural = function(pattern, replacement) {
	    this.customPluralForms.push([pattern, replacement]);
	};
	
	TenseInflector.prototype.ize = function (token, formSet, customForms) {
	    var restoreCase = this.restoreCase(token);
	    return restoreCase(this.izeRegExps(token, customForms) || this.izeAbiguous(token) ||
	        this.izeRegulars(token, formSet) || this.izeRegExps(token, formSet.regularForms) ||
	        token);
	}
	
	TenseInflector.prototype.izeAbiguous = function (token) {
	    if(this.ambiguous.indexOf(token.toLowerCase()) > -1)
	        return token.toLowerCase();
	
	    return false;
	}
	
	TenseInflector.prototype.pluralize = function (token) {
	    return this.ize(token, this.pluralForms, this.customPluralForms);
	};
	
	TenseInflector.prototype.singularize = function(token) {
	    return this.ize(token, this.singularForms, this.customSingularForms);
	};    
	
	var uppercaseify = function(token) {
	    return token.toUpperCase();
	}
	var capitalize = function(token) {
	    return token[0].toUpperCase() + token.slice(1);
	}
	var lowercaseify = function(token) {
	    return token.toLowerCase();
	}
	
	TenseInflector.prototype.restoreCase = function(token) {
	    if (token[0] === token[0].toUpperCase()) {
	        if (token[1] && token[1] === token[1].toLowerCase()) {
	            return capitalize;
	        } else {
	            return uppercaseify;
	        }
	    } else {
	        return lowercaseify;
	    }
	}
	
	TenseInflector.prototype.izeRegulars = function(token, formSet) {
	    token = token.toLowerCase();
	    if(formSet.irregularForms.hasOwnProperty(token) && formSet.irregularForms[token])
	        return formSet.irregularForms[token];
	
	    return false;
	}
	
	TenseInflector.prototype.addForm = function(singularTable, pluralTable, singular, plural) {
	    singular = singular.toLowerCase();
	    plural = plural.toLowerCase();
	    pluralTable[singular] = plural;
	    singularTable[plural] = singular;
	};
	
	TenseInflector.prototype.addIrregular = function(singular, plural) {
	    this.addForm(this.singularForms.irregularForms, this.pluralForms.irregularForms, singular, plural);
	};
	
	TenseInflector.prototype.izeRegExps = function(token, forms) {
	        var i, form;
	        for(i = 0; i < forms.length; i++) {
	            form = forms[i];
	            
	            if(token.match(form[0]))
	                return token.replace(form[0], form[1]);
	        }
	        
	        return false;
	    }
	
	module.exports = TenseInflector;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(144);
	var Tokenizer = __webpack_require__(218),
	    tokenizer = new Tokenizer();
	
	module.exports = function() {
	    this.compare = function(stringA, stringB) {
	        return this.process(stringA) == this.process(stringB);
	    };
	
	    this.attach = function() {
		var phonetic = this;
	
	        String.prototype.soundsLike = function(compareTo) {
	            return phonetic.compare(this, compareTo);
	        }
	        
	        String.prototype.phonetics = function() {
	            return phonetic.process(this);
	        }
		
	        String.prototype.tokenizeAndPhoneticize = function(keepStops) {
	            var phoneticizedTokens = [];
	            
	            tokenizer.tokenize(this).forEach(function(token) {
	                if(keepStops || stopwords.words.indexOf(token) < 0)
	                    phoneticizedTokens.push(token.phonetics());
	            });
	            
	            return phoneticizedTokens;
	        }
	    };
	};


/***/ }),
/* 144 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    'about', 'above', 'after', 'again', 'all', 'also', 'am', 'an', 'and', 'another',
	    'any', 'are', 'as', 'at', 'be', 'because', 'been', 'before', 'being', 'below',
	    'between', 'both', 'but', 'by', 'came', 'can', 'cannot', 'come', 'could', 'did',
	    'do', 'does', 'doing', 'during', 'each', 'few', 'for', 'from', 'further', 'get',
	    'got', 'has', 'had', 'he', 'have', 'her', 'here', 'him', 'himself', 'his', 'how',
	    'if', 'in', 'into', 'is', 'it', 'its', 'itself', 'like', 'make', 'many', 'me',
	    'might', 'more', 'most', 'much', 'must', 'my', 'myself', 'never', 'now', 'of', 'on',
	    'only', 'or', 'other', 'our', 'ours', 'ourselves', 'out', 'over', 'own',
	    'said', 'same', 'see', 'should', 'since', 'so', 'some', 'still', 'such', 'take', 'than',
	    'that', 'the', 'their', 'theirs', 'them', 'themselves', 'then', 'there', 'these', 'they',
	    'this', 'those', 'through', 'to', 'too', 'under', 'until', 'up', 'very', 'was',
	    'way', 'we', 'well', 'were', 'what', 'where', 'when', 'which', 'while', 'who',
	    'whom', 'with', 'would', 'why', 'you', 'your', 'yours', 'yourself',
	    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
	    'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '$', '1',
	    '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	
	// tell the world about the noise words.
	exports.words = words;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	if (!process.version ||
	    process.version.indexOf('v0.') === 0 ||
	    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
	  module.exports = nextTick;
	} else {
	  module.exports = process.nextTick;
	}
	
	function nextTick(fn, arg1, arg2, arg3) {
	  if (typeof fn !== 'function') {
	    throw new TypeError('"callback" argument must be a function');
	  }
	  var len = arguments.length;
	  var args, i;
	  switch (len) {
	  case 0:
	  case 1:
	    return process.nextTick(fn);
	  case 2:
	    return process.nextTick(function afterTickOne() {
	      fn.call(null, arg1);
	    });
	  case 3:
	    return process.nextTick(function afterTickTwo() {
	      fn.call(null, arg1, arg2);
	    });
	  case 4:
	    return process.nextTick(function afterTickThree() {
	      fn.call(null, arg1, arg2, arg3);
	    });
	  default:
	    args = new Array(len - 1);
	    i = 0;
	    while (i < args.length) {
	      args[i++] = arguments[i];
	    }
	    return process.nextTick(function afterTick() {
	      fn.apply(null, args);
	    });
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var cn = function cn() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  return args.filter(Boolean).join(' ');
	};
	
	exports.default = cn;
	module.exports = exports['default'];

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.combineActions = exports.handleActions = exports.handleAction = exports.createActions = exports.createAction = undefined;
	
	var _createAction = __webpack_require__(448);
	
	var _createAction2 = _interopRequireDefault(_createAction);
	
	var _handleAction = __webpack_require__(450);
	
	var _handleAction2 = _interopRequireDefault(_handleAction);
	
	var _handleActions = __webpack_require__(1048);
	
	var _handleActions2 = _interopRequireDefault(_handleActions);
	
	var _combineActions = __webpack_require__(447);
	
	var _combineActions2 = _interopRequireDefault(_combineActions);
	
	var _createActions = __webpack_require__(1047);
	
	var _createActions2 = _interopRequireDefault(_createActions);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.createAction = _createAction2.default;
	exports.createActions = _createActions2.default;
	exports.handleAction = _handleAction2.default;
	exports.handleActions = _handleActions2.default;
	exports.combineActions = _combineActions2.default;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	// Matrix class - depends on Vector.
	
	var fs = __webpack_require__(37);
	var Sylvester = __webpack_require__(106);
	var Vector = __webpack_require__(107);
	
	// augment a matrix M with identity rows/cols
	function identSize(M, m, n, k) {
	    var e = M.elements;
	    var i = k - 1;
	
	    while(i--) {
		var row = [];
		
		for(var j = 0; j < n; j++)
		    row.push(j == i ? 1 : 0);
		
	        e.unshift(row);
	    }
	    
	    for(var i = k - 1; i < m; i++) {
	        while(e[i].length < n)
	            e[i].unshift(0);
	    }
	
	    return $M(e);
	}
	
	function pca(X) {
	    var Sigma = X.transpose().x(X).x(1 / X.rows());
	    var svd = Sigma.svd();
	    return {U: svd.U, S: svd.S};
	}
	
	// singular value decomposition in pure javascript
	function svdJs() {
	    var A = this;
	    var V = Matrix.I(A.rows());
	    var S = A.transpose();
	    var U = Matrix.I(A.cols());
	    var err = Number.MAX_VALUE;
	    var i = 0;
	    var maxLoop = 100;
	
	    while(err > 2.2737e-13 && i < maxLoop) {
	        var qr = S.transpose().qrJs();
	        S = qr.R;
	        V = V.x(qr.Q);
	        qr = S.transpose().qrJs();
	        U = U.x(qr.Q);
	        S = qr.R;
	
	        var e = S.triu(1).unroll().norm();
	        var f = S.diagonal().norm();
	
	        if(f == 0)
	            f = 1;
	
	        err = e / f;
	
	        i++;
	    }
	
	    var ss = S.diagonal();
	    var s = [];
	
	    for(var i = 1; i <= ss.cols(); i++) {
	        var ssn = ss.e(i);
	        s.push(Math.abs(ssn));
	
	        if(ssn < 0) {
	            for(var j = 0; j < U.rows(); j++) {
	                V.elements[j][i - 1] = -(V.elements[j][i - 1]);
	            }
	        }
	    }
	
	    return {U: U, S: $V(s).toDiagonalMatrix(), V: V};
	}
	
	// singular value decomposition using LAPACK
	function svdPack() {
	    var result = lapack.sgesvd('A', 'A', this.elements);
	
	    return {
	        U: $M(result.U),
	        S: $M(result.S).column(1).toDiagonalMatrix(),
		V: $M(result.VT).transpose()
	    };
	}
	
	// QR decomposition in pure javascript
	function qrJs() {
	    var m = this.rows();
	    var n = this.cols();
	    var Q = Matrix.I(m);
	    var A = this;
	    
	    for(var k = 1; k < Math.min(m, n); k++) {
		var ak = A.slice(k, 0, k, k).col(1);
		var oneZero = [1];
		
		while(oneZero.length <=  m - k)
		    oneZero.push(0);
		
		oneZero = $V(oneZero);
		var vk = ak.add(oneZero.x(ak.norm() * Math.sign(ak.e(1))));
		var Vk = $M(vk);
		var Hk = Matrix.I(m - k + 1).subtract(Vk.x(2).x(Vk.transpose()).div(Vk.transpose().x(Vk).e(1, 1)));
		var Qk = identSize(Hk, m, n, k);
		A = Qk.x(A);
		// slow way to compute Q
		Q = Q.x(Qk);
	    }
	    
	    return {Q: Q, R: A};
	}
	
	// QR decomposition using LAPACK
	function qrPack() {
	    var qr = lapack.qr(this.elements);
	
	    return {
		Q: $M(qr.Q),
		R: $M(qr.R)
	    };
	}
	
	function Matrix() {}
	Matrix.prototype = {
	    // solve a system of linear equations (work in progress)
	    solve: function(b) {
		var lu = this.lu();
		b = lu.P.x(b);
		var y = lu.L.forwardSubstitute(b);
		var x = lu.U.backSubstitute(y);
		return lu.P.x(x);
		//return this.inv().x(b);
	    },
	
	    // project a matrix onto a lower dim
	    pcaProject: function(k, U) {
		var U = U || pca(this).U;
		var Ureduce= U.slice(1, U.rows(), 1, k);
		return {Z: this.x(Ureduce), U: U};
	    },
	
	    // recover a matrix to a higher dimension
	    pcaRecover: function(U) {
		var k = this.cols();
		var Ureduce = U.slice(1, U.rows(), 1, k);
		return this.x(Ureduce.transpose());
	    },    
	
	    // grab the upper triangular part of the matrix
	    triu: function(k) {
		if(!k)
		    k = 0;
		
		return this.map(function(x, i, j) {
		    return j - i >= k ? x : 0;
		});
	    },
	
	    // unroll a matrix into a vector
	    unroll: function() {
		var v = [];
		
		for(var i = 1; i <= this.cols(); i++) {
		    for(var j = 1; j <= this.rows(); j++) {
			v.push(this.e(j, i));
		    }
		}
	
		return $V(v);
	    },
	
	    // return a sub-block of the matrix
	    slice: function(startRow, endRow, startCol, endCol) {
		var x = [];
		
		if(endRow == 0)
		    endRow = this.rows();
		
		if(endCol == 0)
		    endCol = this.cols();
	
		for(i = startRow; i <= endRow; i++) {
		    var row = [];
	
		    for(j = startCol; j <= endCol; j++) {
			row.push(this.e(i, j));
		    }
	
		    x.push(row);
		}
	
		return $M(x);
	    },
	
	    // Returns element (i,j) of the matrix
	    e: function(i,j) {
		if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length) { return null; }
		return this.elements[i - 1][j - 1];
	    },
	
	    // Returns row k of the matrix as a vector
	    row: function(i) {
		if (i > this.elements.length) { return null; }
		return $V(this.elements[i - 1]);
	    },
	
	    // Returns column k of the matrix as a vector
	    col: function(j) {
		if (j > this.elements[0].length) { return null; }
		var col = [], n = this.elements.length;
		for (var i = 0; i < n; i++) { col.push(this.elements[i][j - 1]); }
		return $V(col);
	    },
	
	    // Returns the number of rows/columns the matrix has
	    dimensions: function() {
		return {rows: this.elements.length, cols: this.elements[0].length};
	    },
	
	    // Returns the number of rows in the matrix
	    rows: function() {
		return this.elements.length;
	    },
	
	    // Returns the number of columns in the matrix
	    cols: function() {
		return this.elements[0].length;
	    },
	
	    approxEql: function(matrix) {
		return this.eql(matrix, Sylvester.approxPrecision);
	    },
	
	    // Returns true iff the matrix is equal to the argument. You can supply
	    // a vector as the argument, in which case the receiver must be a
	    // one-column matrix equal to the vector.
	    eql: function(matrix, precision) {
		var M = matrix.elements || matrix;
		if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		if (this.elements.length != M.length ||
	            this.elements[0].length != M[0].length) { return false; }
		var i = this.elements.length, nj = this.elements[0].length, j;
		while (i--) { j = nj;
			      while (j--) {
				  if (Math.abs(this.elements[i][j] - M[i][j]) > (precision || Sylvester.precision)) { return false; }
			      }
			    }
		return true;
	    },
	
	    // Returns a copy of the matrix
	    dup: function() {
		return Matrix.create(this.elements);
	    },
	
	    // Maps the matrix to another matrix (of the same dimensions) according to the given function
	    map: function(fn) {
	    var els = [], i = this.elements.length, nj = this.elements[0].length, j;
		while (i--) { j = nj;
			      els[i] = [];
			      while (j--) {
				  els[i][j] = fn(this.elements[i][j], i + 1, j + 1);
			      }
			    }
		return Matrix.create(els);
	    },
	
	    // Returns true iff the argument has the same dimensions as the matrix
	    isSameSizeAs: function(matrix) {
		var M = matrix.elements || matrix;
		if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		return (this.elements.length == M.length &&
			this.elements[0].length == M[0].length);
	    },
	
	    // Returns the result of adding the argument to the matrix
	    add: function(matrix) {
		if(typeof(matrix) == 'number') {
		    return this.map(function(x, i, j) { return x + matrix});
		} else {
		    var M = matrix.elements || matrix;
		    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		    if (!this.isSameSizeAs(M)) { return null; }
		    return this.map(function(x, i, j) { return x + M[i - 1][j - 1]; });
		}
	    },
	
	    // Returns the result of subtracting the argument from the matrix
	    subtract: function(matrix) {
		if(typeof(matrix) == 'number') {
		    return this.map(function(x, i, j) { return x - matrix});
		} else {
		    var M = matrix.elements || matrix;
		    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		    if (!this.isSameSizeAs(M)) { return null; }
		    return this.map(function(x, i, j) { return x - M[i - 1][j - 1]; });
		}
	    },
	
	    // Returns true iff the matrix can multiply the argument from the left
	    canMultiplyFromLeft: function(matrix) {
		var M = matrix.elements || matrix;
		if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		// this.columns should equal matrix.rows
		return (this.elements[0].length == M.length);
	    },
	
	    // Returns the result of a multiplication-style operation the matrix from the right by the argument.
	    // If the argument is a scalar then just operate on all the elements. If the argument is
	    // a vector, a vector is returned, which saves you having to remember calling
	    // col(1) on the result.
	    mulOp: function(matrix, op) {
		if (!matrix.elements) {
		    return this.map(function(x) { return op(x, matrix); });
		}
	
		var returnVector = matrix.modulus ? true : false;
		var M = matrix.elements || matrix;
		if (typeof(M[0][0]) == 'undefined') 
		    M = Matrix.create(M).elements;
		if (!this.canMultiplyFromLeft(M)) 
		    return null; 
		var e = this.elements, rowThis, rowElem, elements = [],
	        sum, m = e.length, n = M[0].length, o = e[0].length, i = m, j, k;
	
		while (i--) {
	            rowElem = [];
	            rowThis = e[i];
	            j = n;
	
	            while (j--) {
			sum = 0;
			k = o;
	
			while (k--) {
	                    sum += op(rowThis[k], M[k][j]);
			}
	
			rowElem[j] = sum;
	            }
	
	            elements[i] = rowElem;
		}
	
		var M = Matrix.create(elements);
		return returnVector ? M.col(1) : M;
	    },
	
	    // Returns the result of dividing the matrix from the right by the argument.
	    // If the argument is a scalar then just divide all the elements. If the argument is
	    // a vector, a vector is returned, which saves you having to remember calling
	    // col(1) on the result.
	    div: function(matrix) {
		return this.mulOp(matrix, function(x, y) { return x / y});
	    },
	
	    // Returns the result of multiplying the matrix from the right by the argument.
	    // If the argument is a scalar then just multiply all the elements. If the argument is
	    // a vector, a vector is returned, which saves you having to remember calling
	    // col(1) on the result.
	    multiply: function(matrix) {
		return this.mulOp(matrix, function(x, y) { return x * y});
	    },
	
	    x: function(matrix) { return this.multiply(matrix); },
	
	    elementMultiply: function(v) {
	        return this.map(function(k, i, j) {
	            return v.e(i, j) * k;
	        });
	    },
	
	    // sum all elements in the matrix
	    sum: function() {
	        var sum = 0;
	
	        this.map(function(x) { sum += x;});
	
	        return sum;
	    },
	
	    // Returns a Vector of each colum averaged.
	    mean: function() {
	      var dim = this.dimensions();
	      var r = [];
	      for (var i = 1; i <= dim.cols; i++) {
	        r.push(this.col(i).sum() / dim.rows);
	      }
	      return $V(r);
	    },
	
	    column: function(n) {
		return this.col(n);
	    },
	
	    // element-wise log
	    log: function() {
		return this.map(function(x) { return Math.log(x); });
	    },
	
	    // Returns a submatrix taken from the matrix
	    // Argument order is: start row, start col, nrows, ncols
	    // Element selection wraps if the required index is outside the matrix's bounds, so you could
	    // use this to perform row/column cycling or copy-augmenting.
	    minor: function(a, b, c, d) {
		var elements = [], ni = c, i, nj, j;
		var rows = this.elements.length, cols = this.elements[0].length;
		while (ni--) {
		    i = c - ni - 1;
		    elements[i] = [];
		    nj = d;
		    while (nj--) {
			j = d - nj - 1;
			elements[i][j] = this.elements[(a + i - 1) % rows][(b + j - 1) % cols];
		    }
		}
		return Matrix.create(elements);
	    },
	
	    // Returns the transpose of the matrix
	    transpose: function() {
	    var rows = this.elements.length, i, cols = this.elements[0].length, j;
		var elements = [], i = cols;
		while (i--) {
		    j = rows;
		    elements[i] = [];
		    while (j--) {
			elements[i][j] = this.elements[j][i];
		    }
		}
		return Matrix.create(elements);
	    },
	
	    // Returns true iff the matrix is square
	    isSquare: function() {
		return (this.elements.length == this.elements[0].length);
	    },
	
	    // Returns the (absolute) largest element of the matrix
	    max: function() {
		var m = 0, i = this.elements.length, nj = this.elements[0].length, j;
		while (i--) {
		    j = nj;
		    while (j--) {
			if (Math.abs(this.elements[i][j]) > Math.abs(m)) { m = this.elements[i][j]; }
		    }
		}
		return m;
	    },
	
	    // Returns the indeces of the first match found by reading row-by-row from left to right
	    indexOf: function(x) {
		var index = null, ni = this.elements.length, i, nj = this.elements[0].length, j;
		for (i = 0; i < ni; i++) {
		    for (j = 0; j < nj; j++) {
			if (this.elements[i][j] == x) { return {i: i + 1, j: j + 1}; }
		    }
		}
		return null;
	    },
	
	    // If the matrix is square, returns the diagonal elements as a vector.
	    // Otherwise, returns null.
	    diagonal: function() {
		if (!this.isSquare) { return null; }
		var els = [], n = this.elements.length;
		for (var i = 0; i < n; i++) {
		    els.push(this.elements[i][i]);
		}
		return $V(els);
	    },
	
	    // Make the matrix upper (right) triangular by Gaussian elimination.
	    // This method only adds multiples of rows to other rows. No rows are
	    // scaled up or switched, and the determinant is preserved.
	    toRightTriangular: function() {
		var M = this.dup(), els;
		var n = this.elements.length, i, j, np = this.elements[0].length, p;
		for (i = 0; i < n; i++) {
		    if (M.elements[i][i] == 0) {
			for (j = i + 1; j < n; j++) {
			    if (M.elements[j][i] != 0) {
				els = [];
				for (p = 0; p < np; p++) { els.push(M.elements[i][p] + M.elements[j][p]); }
				M.elements[i] = els;
				break;
			    }
			}
		    }
		    if (M.elements[i][i] != 0) {
			for (j = i + 1; j < n; j++) {
			    var multiplier = M.elements[j][i] / M.elements[i][i];
			    els = [];
			    for (p = 0; p < np; p++) {
				// Elements with column numbers up to an including the number
				// of the row that we're subtracting can safely be set straight to
				// zero, since that's the point of this routine and it avoids having
				// to loop over and correct rounding errors later
				els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);
			    }
			    M.elements[j] = els;
			}
		    }
		}
		return M;
	    },
	
	    toUpperTriangular: function() { return this.toRightTriangular(); },
	
	    // Returns the determinant for square matrices
	    determinant: function() {
		if (!this.isSquare()) { return null; }
		if (this.cols == 1 && this.rows == 1) { return this.row(1); }
		if (this.cols == 0 && this.rows == 0) { return 1; }
		var M = this.toRightTriangular();
		var det = M.elements[0][0], n = M.elements.length;
		for (var i = 1; i < n; i++) {
		    det = det * M.elements[i][i];
		}
		return det;
	    },
	    det: function() { return this.determinant(); },
	
	    // Returns true iff the matrix is singular
	    isSingular: function() {
		return (this.isSquare() && this.determinant() === 0);
	    },
	
	    // Returns the trace for square matrices
	    trace: function() {
		if (!this.isSquare()) { return null; }
		var tr = this.elements[0][0], n = this.elements.length;
		for (var i = 1; i < n; i++) {
		    tr += this.elements[i][i];
		}
		return tr;
	    },
	
	    tr: function() { return this.trace(); },
	
	    // Returns the rank of the matrix
	    rank: function() {
		var M = this.toRightTriangular(), rank = 0;
		var i = this.elements.length, nj = this.elements[0].length, j;
		while (i--) {
		    j = nj;
		    while (j--) {
			if (Math.abs(M.elements[i][j]) > Sylvester.precision) { rank++; break; }
		    }
		}
		return rank;
	    },
	
	    rk: function() { return this.rank(); },
	
	    // Returns the result of attaching the given argument to the right-hand side of the matrix
	    augment: function(matrix) {
		var M = matrix.elements || matrix;
		if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }
		var T = this.dup(), cols = T.elements[0].length;
		var i = T.elements.length, nj = M[0].length, j;
		if (i != M.length) { return null; }
		while (i--) {
		    j = nj;
		    while (j--) {
			T.elements[i][cols + j] = M[i][j];
		    }
		}
		return T;
	    },
	
	    // Returns the inverse (if one exists) using Gauss-Jordan
	    inverse: function() {
		if (!this.isSquare() || this.isSingular()) { return null; }
		var n = this.elements.length, i = n, j;
		var M = this.augment(Matrix.I(n)).toRightTriangular();
		var np = M.elements[0].length, p, els, divisor;
		var inverse_elements = [], new_element;
		// Matrix is non-singular so there will be no zeros on the diagonal
		// Cycle through rows from last to first
		while (i--) {
		    // First, normalise diagonal elements to 1
		    els = [];
		    inverse_elements[i] = [];
		    divisor = M.elements[i][i];
		    for (p = 0; p < np; p++) {
	        new_element = M.elements[i][p] / divisor;
			els.push(new_element);
			// Shuffle off the current row of the right hand side into the results
			// array as it will not be modified by later runs through this loop
			if (p >= n) { inverse_elements[i].push(new_element); }
		    }
		    M.elements[i] = els;
		    // Then, subtract this row from those above it to
		    // give the identity matrix on the left hand side
		    j = i;
		    while (j--) {
			els = [];
			for (p = 0; p < np; p++) {
			    els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);
			}
			M.elements[j] = els;
		    }
		}
		return Matrix.create(inverse_elements);
	    },
	
	    inv: function() { return this.inverse(); },
	
	    // Returns the result of rounding all the elements
	    round: function() {
		return this.map(function(x) { return Math.round(x); });
	    },
	
	    // Returns a copy of the matrix with elements set to the given value if they
	    // differ from it by less than Sylvester.precision
	    snapTo: function(x) {
		return this.map(function(p) {
		    return (Math.abs(p - x) <= Sylvester.precision) ? x : p;
		});
	    },
	
	    // Returns a string representation of the matrix
	    inspect: function() {
		var matrix_rows = [];
		var n = this.elements.length;
		for (var i = 0; i < n; i++) {
		    matrix_rows.push($V(this.elements[i]).inspect());
		}
		return matrix_rows.join('\n');
	    },
	
	    // Returns a array representation of the matrix
	    toArray: function() {
	    	var matrix_rows = [];
	    	var n = this.elements.length;
	    	for (var i = 0; i < n; i++) {
	        matrix_rows.push(this.elements[i]);
	    	}
	      return matrix_rows;
	    },
	
	
	    // Set the matrix's elements from an array. If the argument passed
	    // is a vector, the resulting matrix will be a single column.
	    setElements: function(els) {
		var i, j, elements = els.elements || els;
		if (typeof(elements[0][0]) != 'undefined') {
		    i = elements.length;
		    this.elements = [];
		    while (i--) {
			j = elements[i].length;
			this.elements[i] = [];
			while (j--) {
			    this.elements[i][j] = elements[i][j];
			}
		    }
		    return this;
		}
		var n = elements.length;
		this.elements = [];
		for (i = 0; i < n; i++) {
		    this.elements.push([elements[i]]);
		}
		return this;
	    },
	
	    // return the indexes of the columns with the largest value
	    // for each row
	    maxColumnIndexes: function() {
		var maxes = [];
	
		for(var i = 1; i <= this.rows(); i++) {
		    var max = null;
		    var maxIndex = -1;
	
		    for(var j = 1; j <= this.cols(); j++) {
			if(max === null || this.e(i, j) > max) {
			    max = this.e(i, j);
			    maxIndex = j;
			}
		    }
	
		    maxes.push(maxIndex);
		}
	
		return $V(maxes);
	    },
	
	    // return the largest values in each row
	    maxColumns: function() {
		var maxes = [];
	
		for(var i = 1; i <= this.rows(); i++) {
		    var max = null;
	
		    for(var j = 1; j <= this.cols(); j++) {
			if(max === null || this.e(i, j) > max) {
			    max = this.e(i, j);
			}
		    }
	
		    maxes.push(max);
		}
	
		return $V(maxes);
	    },
	
	    // return the indexes of the columns with the smallest values
	    // for each row
	    minColumnIndexes: function() {
		var mins = [];
	
		for(var i = 1; i <= this.rows(); i++) {
		    var min = null;
		    var minIndex = -1;
	
		    for(var j = 1; j <= this.cols(); j++) {
			if(min === null || this.e(i, j) < min) {
			    min = this.e(i, j);
			    minIndex = j;
			}
		    }
	
		    mins.push(minIndex);
		}
	
		return $V(mins);
	    },
	
	    // return the smallest values in each row
	    minColumns: function() {
		var mins = [];
	
		for(var i = 1; i <= this.rows(); i++) {
		    var min = null;
	
		    for(var j = 1; j <= this.cols(); j++) {
			if(min === null || this.e(i, j) < min) {
			    min = this.e(i, j);
			}
		    }
	
		    mins.push(min);
		}
	
		return $V(mins);
	    },
	    
	    // perorm a partial pivot on the matrix. essentially move the largest
	    // row below-or-including the pivot and replace the pivot's row with it.
	    // a pivot matrix is returned so multiplication can perform the transform.
	    partialPivot: function(k, j, P, A, L) {
		var maxIndex = 0;
		var maxValue = 0;
	
		for(var i = k; i <= A.rows(); i++) {
		    if(Math.abs(A.e(i, j)) > maxValue) {
			maxValue = Math.abs(A.e(k, j));
			maxIndex = i;
		    }
		}
	
		if(maxIndex != k) {
		    var tmp = A.elements[k - 1];
		    A.elements[k - 1] = A.elements[maxIndex - 1];
		    A.elements[maxIndex - 1] = tmp;
		    
		    P.elements[k - 1][k - 1] = 0;
		    P.elements[k - 1][maxIndex - 1] = 1;
		    P.elements[maxIndex - 1][maxIndex - 1] = 0;
		    P.elements[maxIndex - 1][k - 1] = 1;
		}
		
		return P;
	    },
	
	    // solve lower-triangular matrix * x = b via forward substitution
	    forwardSubstitute: function(b) {
		var xa = [];
	
		for(var i = 1; i <= this.rows(); i++) {
		    var w = 0;
	
		    for(var j = 1; j < i; j++) {
			w += this.e(i, j) * xa[j - 1];
		    }
	
		    xa.push((b.e(i) - w) / this.e(i, i));
		}
	
		return $V(xa);
	    },
	
	    // solve an upper-triangular matrix * x = b via back substitution
	    backSubstitute: function(b) {
		var xa = [];
	
		for(var i = this.rows(); i > 0; i--) {
		    var w = 0;
	
		    for(var j = this.cols(); j > i; j--) {
			w += this.e(i, j) * xa[this.rows() - j];
		    }
	
		    xa.push((b.e(i) - w) / this.e(i, i));
		}
	
		return $V(xa.reverse());
	    },
	    
	    luPack: luPack,
	    luJs: luJs,
	    svdJs: svdJs,
	    svdPack: svdPack,
	    qrJs: qrJs,
	    qrPack: qrPack
	};
	
	// LU factorization from LAPACK
	function luPack() {
	    var lu = lapack.lu(this.elements);
	    return {
		L: $M(lu.L),
		U: $M(lu.U),
		P: $M(lu.P)
		// don't pass back IPIV
	    };
	}
	
	var tolerance =  1.4901e-08;
	
	// pure Javascript LU factorization
	function luJs() {
	    var A = this.dup();
	    var L = Matrix.I(A.rows());
	    var P = Matrix.I(A.rows());
	    var U = Matrix.Zeros(A.rows(), A.cols());
	    var p = 1;
	
	    for(var k = 1; k <= Math.min(A.cols(), A.rows()); k++) {
		P = A.partialPivot(k, p, P, A, L);
		
		for(var i = k + 1; i <= A.rows(); i++) {
		    var l = A.e(i, p) / A.e(k, p);
		    L.elements[i - 1][k - 1] = l;
		    
		    for(var j = k + 1 ; j <= A.cols(); j++) {
			A.elements[i - 1][j - 1] -= A.e(k, j) * l;
		    }
		}
		
		for(var j = k; j <= A.cols(); j++) {
		    U.elements[k - 1][j - 1] = A.e(k, j);
		}
	
		if(p < A.cols())
		    p++;
	    }    
	    
	    return {L: L, U: U, P: P};
	}
	
	function getLapack() {
	    try {
		return __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"lapack\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	    } catch(e) {}
	}
	
	var lapack;
	
	// if node-lapack is installed use the fast, native fortran routines
	if(lapack = getLapack()) {
	    Matrix.prototype.svd = svdPack;
	    Matrix.prototype.qr = qrPack;
	    Matrix.prototype.lu = luPack;
	} else {
	    // otherwise use the slower pure Javascript versions
	    Matrix.prototype.svd = svdJs;
	    Matrix.prototype.qr = qrJs;
	    Matrix.prototype.lu = luJs;
	}
	
	// Constructor function
	Matrix.create = function(aElements, ignoreLapack) {
	    var M = new Matrix().setElements(aElements);
	    return M;
	};
	
	// Identity matrix of size n
	Matrix.I = function(n) {
	    var els = [], i = n, j;
	    while (i--) {
		j = n;
		els[i] = [];
		while (j--) {
		    els[i][j] = (i == j) ? 1 : 0;
		}
	    }
	    return Matrix.create(els);
	};
	
	Matrix.loadFile = function(file) {
	    var contents = fs.readFileSync(file, 'utf-8');
	    var matrix = [];
	
	    var rowArray = contents.split('\n');
	    for (var i = 0; i < rowArray.length; i++) {
		var d = rowArray[i].split(',');
		if (d.length > 1) {
		    matrix.push(d);
		}
	    }
	
	    var M = new Matrix();
	    return M.setElements(matrix);
	};
	
	// Diagonal matrix - all off-diagonal elements are zero
	Matrix.Diagonal = function(elements) {
	    var i = elements.length;
	    var M = Matrix.I(i);
	    while (i--) {
		M.elements[i][i] = elements[i];
	    }
	    return M;
	};
	
	// Rotation matrix about some axis. If no axis is
	// supplied, assume we're after a 2D transform
	Matrix.Rotation = function(theta, a) {
	    if (!a) {
		return Matrix.create([
		    [Math.cos(theta), -Math.sin(theta)],
		    [Math.sin(theta), Math.cos(theta)]
		]);
	    }
	    var axis = a.dup();
	    if (axis.elements.length != 3) { return null; }
	    var mod = axis.modulus();
	    var x = axis.elements[0] / mod, y = axis.elements[1] / mod, z = axis.elements[2] / mod;
	    var s = Math.sin(theta), c = Math.cos(theta), t = 1 - c;
	    // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp
	    // That proof rotates the co-ordinate system so theta
	    // becomes -theta and sin becomes -sin here.
	    return Matrix.create([
		[t * x * x + c, t * x * y - s * z, t * x * z + s * y],
		[t * x * y + s * z, t * y * y + c, t * y * z - s * x],
		[t * x * z - s * y, t * y * z + s * x, t * z * z + c]
	    ]);
	};
	
	// Special case rotations
	Matrix.RotationX = function(t) {
	    var c = Math.cos(t), s = Math.sin(t);
	    return Matrix.create([
		[1, 0, 0],
		[0, c, -s],
		[0, s, c]
	    ]);
	};
	
	Matrix.RotationY = function(t) {
	    var c = Math.cos(t), s = Math.sin(t);
	    return Matrix.create([
		[c, 0, s],
		[0, 1, 0],
		[-s, 0, c]
	    ]);
	};
	
	Matrix.RotationZ = function(t) {
	    var c = Math.cos(t), s = Math.sin(t);
	    return Matrix.create([
		[c, -s, 0],
		[s, c, 0],
		[0, 0, 1]
	    ]);
	};
	
	// Random matrix of n rows, m columns
	Matrix.Random = function(n, m) {
	    if (arguments.length === 1) m = n;
	    return Matrix.Zero(n, m).map(
		function() { return Math.random(); }
	  );
	};
	
	Matrix.Fill = function(n, m, v) {
	    if (arguments.length === 2) {
		v = m;
		m = n;
	    }
	
	    var els = [], i = n, j;
	
	    while (i--) {
		j = m;
		els[i] = [];
	
		while (j--) {
		    els[i][j] = v;
		}
	    }
	
	    return Matrix.create(els);
	};
	
	// Matrix filled with zeros
	Matrix.Zero = function(n, m) {
	    return Matrix.Fill(n, m, 0);
	};
	
	// Matrix filled with zeros
	Matrix.Zeros = function(n, m) {
	    return Matrix.Zero(n, m);
	};
	
	// Matrix filled with ones
	Matrix.One = function(n, m) {
	    return Matrix.Fill(n, m, 1);
	};
	
	// Matrix filled with ones
	Matrix.Ones = function(n, m) {
	    return Matrix.One(n, m);
	};
	
	module.exports = Matrix;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});exports.default=
	
	
	
	{
	warn:function warn(message){
	if(false){
	if(console&&console.warn){
	console.warn(message);
	}
	}
	}};

/***/ }),
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var emptyObject = __webpack_require__(66);
	var _invariant = __webpack_require__(7);
	
	if (false) {
	  var warning = require('fbjs/lib/warning');
	}
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	var ReactPropTypeLocationNames;
	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}
	
	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */
	
	  var injectedMixins = [];
	
	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',
	
	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',
	
	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',
	
	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',
	
	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',
	
	    // ==== Definition methods ====
	
	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',
	
	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',
	
	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',
	
	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',
	
	    // ==== Delegate methods ====
	
	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',
	
	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',
	
	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',
	
	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',
	
	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',
	
	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',
	
	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',
	
	    // ==== Advanced methods ====
	
	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };
	
	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (false) {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (false) {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (false) {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };
	
	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (false) {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }
	
	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;
	
	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }
	
	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }
	
	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (false) {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }
	
	      return;
	    }
	
	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );
	
	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;
	
	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }
	
	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }
	
	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }
	
	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);
	
	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;
	
	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];
	
	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );
	
	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (false) {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }
	
	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }
	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }
	
	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );
	
	      var isInherited = name in Constructor;
	      _invariant(
	        !isInherited,
	        'ReactClass: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be ' +
	          'due to a mixin.',
	        name
	      );
	      Constructor[name] = property;
	    }
	  }
	
	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );
	
	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }
	
	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }
	
	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }
	
	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (false) {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }
	
	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }
	
	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	
	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };
	
	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };
	
	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },
	
	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (false) {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };
	
	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (false) {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );
	
	    if (false) {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  }
	
	  return createClass;
	}
	
	module.exports = factory;


/***/ }),
/* 178 */,
/* 179 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ }),
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};
	
	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	
	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }
	
	        var keys = getOwnPropertyNames(sourceComponent);
	
	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }
	
	        return targetComponent;
	    }
	
	    return targetComponent;
	};


/***/ }),
/* 186 */,
/* 187 */,
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(128),
	    baseLodash = __webpack_require__(199);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}
	
	// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;
	
	module.exports = LazyWrapper;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61),
	    root = __webpack_require__(24);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(753),
	    mapCacheDelete = __webpack_require__(754),
	    mapCacheGet = __webpack_require__(755),
	    mapCacheHas = __webpack_require__(756),
	    mapCacheSet = __webpack_require__(757);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(190),
	    setCacheAdd = __webpack_require__(767),
	    setCacheHas = __webpack_require__(768);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(327);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 193 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ }),
/* 194 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(337);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(325),
	    createBaseEach = __webpack_require__(717);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(679),
	    isObjectLike = __webpack_require__(45);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(93),
	    nativeKeys = __webpack_require__(760);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ }),
/* 199 */
/***/ (function(module, exports) {

	/**
	 * The function whose prototype chain sequence wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}
	
	module.exports = baseLodash;


/***/ }),
/* 200 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ }),
/* 201 */
/***/ (function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(315);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(350);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(318),
	    stubArray = __webpack_require__(366);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};
	
	module.exports = getSymbols;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(72),
	    isArrayLike = __webpack_require__(32),
	    isIndex = __webpack_require__(92),
	    isObject = __webpack_require__(29);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(18),
	    isSymbol = __webpack_require__(62);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(697),
	    shortOut = __webpack_require__(354);
	
	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);
	
	module.exports = setToString;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(322),
	    baseIteratee = __webpack_require__(52),
	    toInteger = __webpack_require__(217);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}
	
	module.exports = findIndex;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(129);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(327),
	    isArrayLike = __webpack_require__(32),
	    isString = __webpack_require__(138),
	    toInteger = __webpack_require__(217),
	    values = __webpack_require__(799);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Checks if `value` is in `collection`. If `collection` is a string, it's
	 * checked for a substring of `value`, otherwise
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'a': 1, 'b': 2 }, 1);
	 * // => true
	 *
	 * _.includes('abcd', 'bc');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}
	
	module.exports = includes;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(198),
	    getTag = __webpack_require__(135),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(18),
	    isArrayLike = __webpack_require__(32),
	    isBuffer = __webpack_require__(96),
	    isPrototype = __webpack_require__(93),
	    isTypedArray = __webpack_require__(139);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ }),
/* 212 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ }),
/* 213 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ }),
/* 214 */
/***/ (function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(91),
	    baseClone = __webpack_require__(671),
	    baseUnset = __webpack_require__(704),
	    castPath = __webpack_require__(70),
	    copyObject = __webpack_require__(43),
	    customOmitClone = __webpack_require__(726),
	    flatRest = __webpack_require__(339),
	    getAllKeysIn = __webpack_require__(342);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});
	
	module.exports = omit;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(328),
	    basePropertyDeep = __webpack_require__(693),
	    isKey = __webpack_require__(206),
	    toKey = __webpack_require__(71);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(367);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/\W+/));
	};


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2014, Lee Wenzhu
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	'use strict';
	
	var util = __webpack_require__(12),
	    Bag = __webpack_require__(857);
	
	var DirectedEdge = function(start, end, weight) {
	    this.start = start;
	    this.end = end;
	    this.weight = weight;
	};
	
	DirectedEdge.prototype.weight = function() {
	    return this.weight;
	};
	
	DirectedEdge.prototype.from = function() {
	    return this.start;
	};
	
	DirectedEdge.prototype.to = function() {
	    return this.end;
	};
	
	DirectedEdge.prototype.toString = function() {
	    return util.format('%s -> %s, %s', this.start, this.end, this.weight);
	};
	
	var EdgeWeightedDigraph = function() {
	    this.edgesNum = 0;
	    this.adj = []; // adjacency list
	};
	
	/**
	 * the number of vertexs saved.
	 */
	EdgeWeightedDigraph.prototype.v = function() {
	    return this.adj.length;
	};
	
	/**
	 * the number of edges saved.
	 */
	EdgeWeightedDigraph.prototype.e = function() {
	    return this.edgesNum;
	};
	
	EdgeWeightedDigraph.prototype.add = function(start, end, weight) {
	    var e = new DirectedEdge(start, end, weight);
	    this.addEdge(e);
	};
	
	EdgeWeightedDigraph.prototype.addEdge = function(e) {
	    if(!this.adj[e.from()]) {
	        this.adj[e.from()] = new Bag();
	    }
	    this.adj[e.from()].add(e);
	    this.edgesNum++;
	};
	
	/**
	 * use callback on all edges from v.
	 */
	EdgeWeightedDigraph.prototype.getAdj = function(v) {
	    if(!this.adj[v]) return [];
	    return this.adj[v].unpack();
	};
	
	/**
	 * use callback on all edges.
	 */
	EdgeWeightedDigraph.prototype.edges = function() {
	    var adj = this.adj;
	    var list = new Bag();
	    for(var i in adj) {
	        adj[i].unpack().forEach(function(item) {
	            list.add(item);
	        });
	    }
	    return list.unpack();
	};
	
	EdgeWeightedDigraph.prototype.toString = function() {
	    var result = [];
	    var list = this.edges();
	    list.forEach(function(edge) {
	        result.push(edge.toString());
	    });
	    return result.join('\n');
	};
	
	module.exports = EdgeWeightedDigraph;


/***/ }),
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(998);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connectAdvanced = __webpack_require__(429);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _connect = __webpack_require__(999);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Provider = _Provider2.default;
	exports.createProvider = _Provider.createProvider;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ }),
/* 237 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = ownKeys;
	function ownKeys(object) {
	  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
	    return Reflect.ownKeys(object);
	  }
	
	  var keys = Object.getOwnPropertyNames(object);
	
	  if (typeof Object.getOwnPropertySymbols === 'function') {
	    keys = keys.concat(Object.getOwnPropertySymbols(object));
	  }
	
	  return keys;
	}

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(452);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(1052);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(1051);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(1050);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(451);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(453);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (false) {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable node/no-deprecated-api */
	var buffer = __webpack_require__(41)
	var Buffer = buffer.Buffer
	
	// alternative to using Object.keys for old browsers
	function copyProps (src, dst) {
	  for (var key in src) {
	    dst[key] = src[key]
	  }
	}
	if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
	  module.exports = buffer
	} else {
	  // Copy properties from require('buffer')
	  copyProps(buffer, exports)
	  exports.Buffer = SafeBuffer
	}
	
	function SafeBuffer (arg, encodingOrOffset, length) {
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	// Copy static methods from Buffer
	copyProps(Buffer, SafeBuffer)
	
	SafeBuffer.from = function (arg, encodingOrOffset, length) {
	  if (typeof arg === 'number') {
	    throw new TypeError('Argument must not be a number')
	  }
	  return Buffer(arg, encodingOrOffset, length)
	}
	
	SafeBuffer.alloc = function (size, fill, encoding) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  var buf = Buffer(size)
	  if (fill !== undefined) {
	    if (typeof encoding === 'string') {
	      buf.fill(fill, encoding)
	    } else {
	      buf.fill(fill)
	    }
	  } else {
	    buf.fill(0)
	  }
	  return buf
	}
	
	SafeBuffer.allocUnsafe = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return Buffer(size)
	}
	
	SafeBuffer.allocUnsafeSlow = function (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('Argument must be a number')
	  }
	  return buffer.SlowBuffer(size)
	}


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.setGlobalStyle = exports.updateRoute = exports.updateFragment = exports.addFragment = undefined;
	
	var _reduxActions = __webpack_require__(153);
	
	var addFragment = exports.addFragment = (0, _reduxActions.createAction)('ADD_FRAGMENT');
	var updateFragment = exports.updateFragment = (0, _reduxActions.createAction)('UPDATE_FRAGMENT');
	
	var updateRoute = exports.updateRoute = (0, _reduxActions.createAction)('UPDATE_ROUTE');
	
	var setGlobalStyle = exports.setGlobalStyle = (0, _reduxActions.createAction)('SET_GLOBAL_STYLE');

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TSingleButton = exports.TButtonContainer = exports.TimeContainer = exports.Clock = undefined;
	
	var _emotion = __webpack_require__(307);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Clock = /*#__PURE__*/exports.Clock = (0, _reactEmotion2.default)('h2')('position:relative;top:50%;transform:translateY(-50%);float:right;margin:0;line-height:1;display:inline-block;font-size:28px;');
	
	var TimeContainer = /*#__PURE__*/exports.TimeContainer = (0, _reactEmotion2.default)('div')('padding:20px 0;');
	
	var TButtonContainer = /*#__PURE__*/exports.TButtonContainer = (0, _reactEmotion2.default)('div')('position:relative;float:right;padding-right:20px;-webkit-transform:translateY(-45%);font-size:20.088px;');
	
	var fadeIn = /*#__PURE__*/(0, _emotion.keyframes)('from{opacity:0;}to{opacity:1;}');
	
	var vanishOut = /*#__PURE__*/(0, _emotion.keyframes)('from{opacity:1;transform-origin:50% 50%;transform:scale(1,1);filter:blur(0px);}to{opacity:0;transform-origin:50% 50%;transform:scale(2,2);filter:blur(2px);}');
	
	var TSingleButton = /*#__PURE__*/exports.TSingleButton = (0, _reactEmotion2.default)('button')('width:68px;font-size:1em;font-family:"Open Sans Condensed";margin:3px;border:0;border-radius:15px;background:', function (props) {
	  if (props.stop) {
	    return '#e23d3d';
	  } else if (props.start) {
	    return '#42a53c';
	  } else {
	    return '#darkgrey';
	  }
	}, ';&:focus{outline:0px;}&:active{animation:', vanishOut, ' 0.5s;}opacity:0;/* make things invisible upon start */\n  animation:', fadeIn, ' ease-in 1;animation-fill-mode:forwards;animation-duration:0.5s;animation-delay:0s;');

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _screen = __webpack_require__(1089);
	
	var _screen2 = _interopRequireDefault(_screen);
	
	var _print = __webpack_require__(1088);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = function styles(colors, fonts) {
	  return {
	    screen: (0, _screen2.default)(colors, fonts),
	    print: (0, _print2.default)()
	  };
	};
	
	exports.default = styles;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	var Vector = __webpack_require__(107);
	var Matrix = __webpack_require__(154);
	var Plane = __webpack_require__(481);
	var Sylvester = __webpack_require__(106);
	
	// Line class - depends on Vector, and some methods require Matrix and Plane.
	
	function Line() {}
	Line.prototype = {
	
	  // Returns true if the argument occupies the same space as the line
	  eql: function(line) {
	    return (this.isParallelTo(line) && this.contains(line.anchor));
	  },
	
	  // Returns a copy of the line
	  dup: function() {
	    return Line.create(this.anchor, this.direction);
	  },
	
	  // Returns the result of translating the line by the given vector/array
	  translate: function(vector) {
	    var V = vector.elements || vector;
	    return Line.create([
	      this.anchor.elements[0] + V[0],
	      this.anchor.elements[1] + V[1],
	      this.anchor.elements[2] + (V[2] || 0)
	    ], this.direction);
	  },
	
	  // Returns true if the line is parallel to the argument. Here, 'parallel to'
	  // means that the argument's direction is either parallel or antiparallel to
	  // the line's own direction. A line is parallel to a plane if the two do not
	  // have a unique intersection.
	  isParallelTo: function(obj) {
	    if (obj.normal || (obj.start && obj.end)) { return obj.isParallelTo(this); }
	    var theta = this.direction.angleFrom(obj.direction);
	    return (Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision);
	  },
	
	  // Returns the line's perpendicular distance from the argument,
	  // which can be a point, a line or a plane
	  distanceFrom: function(obj) {
	    if (obj.normal || (obj.start && obj.end)) { return obj.distanceFrom(this); }
	    if (obj.direction) {
	      // obj is a line
	      if (this.isParallelTo(obj)) { return this.distanceFrom(obj.anchor); }
	      var N = this.direction.cross(obj.direction).toUnitVector().elements;
	      var A = this.anchor.elements, B = obj.anchor.elements;
	      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);
	    } else {
	      // obj is a point
	      var P = obj.elements || obj;
	      var A = this.anchor.elements, D = this.direction.elements;
	      var PA1 = P[0] - A[0], PA2 = P[1] - A[1], PA3 = (P[2] || 0) - A[2];
	      var modPA = Math.sqrt(PA1*PA1 + PA2*PA2 + PA3*PA3);
	      if (modPA === 0) return 0;
	      // Assumes direction vector is normalized
	      var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;
	      var sin2 = 1 - cosTheta*cosTheta;
	      return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));
	    }
	  },
	
	  // Returns true iff the argument is a point on the line, or if the argument
	  // is a line segment lying within the receiver
	  contains: function(obj) {
	    if (obj.start && obj.end) { return this.contains(obj.start) && this.contains(obj.end); }
	    var dist = this.distanceFrom(obj);
	    return (dist !== null && dist <= Sylvester.precision);
	  },
	
	  // Returns the distance from the anchor of the given point. Negative values are
	  // returned for points that are in the opposite direction to the line's direction from
	  // the line's anchor point.
	  positionOf: function(point) {
	    if (!this.contains(point)) { return null; }
	    var P = point.elements || point;
	    var A = this.anchor.elements, D = this.direction.elements;
	    return (P[0] - A[0]) * D[0] + (P[1] - A[1]) * D[1] + ((P[2] || 0) - A[2]) * D[2];
	  },
	
	  // Returns true iff the line lies in the given plane
	  liesIn: function(plane) {
	    return plane.contains(this);
	  },
	
	  // Returns true iff the line has a unique point of intersection with the argument
	  intersects: function(obj) {
	    if (obj.normal) { return obj.intersects(this); }
	    return (!this.isParallelTo(obj) && this.distanceFrom(obj) <= Sylvester.precision);
	  },
	
	  // Returns the unique intersection point with the argument, if one exists
	  intersectionWith: function(obj) {
	    if (obj.normal || (obj.start && obj.end)) { return obj.intersectionWith(this); }
	    if (!this.intersects(obj)) { return null; }
	    var P = this.anchor.elements, X = this.direction.elements,
	        Q = obj.anchor.elements, Y = obj.direction.elements;
	    var X1 = X[0], X2 = X[1], X3 = X[2], Y1 = Y[0], Y2 = Y[1], Y3 = Y[2];
	    var PsubQ1 = P[0] - Q[0], PsubQ2 = P[1] - Q[1], PsubQ3 = P[2] - Q[2];
	    var XdotQsubP = - X1*PsubQ1 - X2*PsubQ2 - X3*PsubQ3;
	    var YdotPsubQ = Y1*PsubQ1 + Y2*PsubQ2 + Y3*PsubQ3;
	    var XdotX = X1*X1 + X2*X2 + X3*X3;
	    var YdotY = Y1*Y1 + Y2*Y2 + Y3*Y3;
	    var XdotY = X1*Y1 + X2*Y2 + X3*Y3;
	    var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);
	    return Vector.create([P[0] + k*X1, P[1] + k*X2, P[2] + k*X3]);
	  },
	
	  // Returns the point on the line that is closest to the given point or line/line segment
	  pointClosestTo: function(obj) {
	    if (obj.start && obj.end) {
	      // obj is a line segment
	      var P = obj.pointClosestTo(this);
	      return (P === null) ? null : this.pointClosestTo(P);
	    } else if (obj.direction) {
	      // obj is a line
	      if (this.intersects(obj)) { return this.intersectionWith(obj); }
	      if (this.isParallelTo(obj)) { return null; }
	      var D = this.direction.elements, E = obj.direction.elements;
	      var D1 = D[0], D2 = D[1], D3 = D[2], E1 = E[0], E2 = E[1], E3 = E[2];
	      // Create plane containing obj and the shared normal and intersect this with it
	      // Thank you: http://www.cgafaq.info/wiki/Line-line_distance
	      var x = (D3 * E1 - D1 * E3), y = (D1 * E2 - D2 * E1), z = (D2 * E3 - D3 * E2);
	      var N = [x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1];
	      var P = Plane.create(obj.anchor, N);
	      return P.intersectionWith(this);
	    } else {
	      // obj is a point
	      var P = obj.elements || obj;
	      if (this.contains(P)) { return Vector.create(P); }
	      var A = this.anchor.elements, D = this.direction.elements;
	      var D1 = D[0], D2 = D[1], D3 = D[2], A1 = A[0], A2 = A[1], A3 = A[2];
	      var x = D1 * (P[1]-A2) - D2 * (P[0]-A1), y = D2 * ((P[2] || 0) - A3) - D3 * (P[1]-A2),
	          z = D3 * (P[0]-A1) - D1 * ((P[2] || 0) - A3);
	      var V = Vector.create([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);
	      var k = this.distanceFrom(P) / V.modulus();
	      return Vector.create([
	        P[0] + V.elements[0] * k,
	        P[1] + V.elements[1] * k,
	        (P[2] || 0) + V.elements[2] * k
	      ]);
	    }
	  },
	
	  // Returns a copy of the line rotated by t radians about the given line. Works by
	  // finding the argument's closest point to this line's anchor point (call this C) and
	  // rotating the anchor about C. Also rotates the line's direction about the argument's.
	  // Be careful with this - the rotation axis' direction affects the outcome!
	  rotate: function(t, line) {
	    // If we're working in 2D
	    if (typeof(line.direction) == 'undefined') { line = Line.create(line.to3D(), Vector.k); }
	    var R = Matrix.Rotation(t, line.direction).elements;
	    var C = line.pointClosestTo(this.anchor).elements;
	    var A = this.anchor.elements, D = this.direction.elements;
	    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];
	    var x = A1 - C1, y = A2 - C2, z = A3 - C3;
	    return Line.create([
	      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,
	      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,
	      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z
	    ], [
	      R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2],
	      R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2],
	      R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]
	    ]);
	  },
	
	  // Returns a copy of the line with its direction vector reversed.
	  // Useful when using lines for rotations.
	  reverse: function() {
	    return Line.create(this.anchor, this.direction.x(-1));
	  },
	
	  // Returns the line's reflection in the given point or line
	  reflectionIn: function(obj) {
	    if (obj.normal) {
	      // obj is a plane
	      var A = this.anchor.elements, D = this.direction.elements;
	      var A1 = A[0], A2 = A[1], A3 = A[2], D1 = D[0], D2 = D[1], D3 = D[2];
	      var newA = this.anchor.reflectionIn(obj).elements;
	      // Add the line's direction vector to its anchor, then mirror that in the plane
	      var AD1 = A1 + D1, AD2 = A2 + D2, AD3 = A3 + D3;
	      var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;
	      var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];
	      return Line.create(newA, newD);
	    } else if (obj.direction) {
	      // obj is a line - reflection obtained by rotating PI radians about obj
	      return this.rotate(Math.PI, obj);
	    } else {
	      // obj is a point - just reflect the line's anchor in it
	      var P = obj.elements || obj;
	      return Line.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.direction);
	    }
	  },
	
	  // Set the line's anchor point and direction.
	  setVectors: function(anchor, direction) {
	    // Need to do this so that line's properties are not
	    // references to the arguments passed in
	    anchor = Vector.create(anchor);
	    direction = Vector.create(direction);
	    if (anchor.elements.length == 2) {anchor.elements.push(0); }
	    if (direction.elements.length == 2) { direction.elements.push(0); }
	    if (anchor.elements.length > 3 || direction.elements.length > 3) { return null; }
	    var mod = direction.modulus();
	    if (mod === 0) { return null; }
	    this.anchor = anchor;
	    this.direction = Vector.create([
	      direction.elements[0] / mod,
	      direction.elements[1] / mod,
	      direction.elements[2] / mod
	    ]);
	    return this;
	  }
	};
	
	// Constructor function
	Line.create = function(anchor, direction) {
	  var L = new Line();
	  return L.setVectors(anchor, direction);
	};
	
	// Axes
	Line.X = Line.create(Vector.Zero(3), Vector.i);
	Line.Y = Line.create(Vector.Zero(3), Vector.j);
	Line.Z = Line.create(Vector.Zero(3), Vector.k);
	
	module.exports = Line;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _merge2=__webpack_require__(140);var _merge3=_interopRequireDefault(_merge2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-label/victory-label.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _victoryPortal=__webpack_require__(250);var _victoryPortal2=_interopRequireDefault(_victoryPortal);
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _style=__webpack_require__(255);var _style2=_interopRequireDefault(_style);
	var _log=__webpack_require__(155);var _log2=_interopRequireDefault(_log);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
	
	
	var defaultStyles={
	fill:"#252525",
	fontSize:14,
	fontFamily:"'Gill Sans', 'Gill Sans MT', 'Ser­avek', 'Trebuchet MS', sans-serif",
	stroke:"transparent"};var
	
	
	VictoryLabel=function(_React$Component){_inherits(VictoryLabel,_React$Component);function VictoryLabel(){_classCallCheck(this,VictoryLabel);return _possibleConstructorReturn(this,(VictoryLabel.__proto__||Object.getPrototypeOf(VictoryLabel)).apply(this,arguments));}_createClass(VictoryLabel,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
	this.cacheAttributes(this.calculateAttributes(this.props));
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){
	var attrs=this.calculateAttributes(nextProps);var
	style=attrs.style,dx=attrs.dx,dy=attrs.dy,content=attrs.content,lineHeight=attrs.lineHeight,textAnchor=attrs.textAnchor,transform=attrs.transform;var _props=
	this.props,angle=_props.angle,className=_props.className,datum=_props.datum,x=_props.x,y=_props.y;
	if(!_collection2.default.allSetsEqual([
	[angle,nextProps.angle],
	[className,nextProps.className],
	[x,nextProps.x],
	[y,nextProps.y],
	[dx,this.dx],
	[dy,this.dy],
	[lineHeight,this.lineHeight],
	[textAnchor,this.textAnchor],
	[transform,this.transform],
	[content,this.content],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.cacheAttributes(attrs);
	return true;
	}
	return false;
	}},{key:"cacheAttributes",value:function cacheAttributes(
	
	attrs){var
	style=attrs.style,dx=attrs.dx,dy=attrs.dy,content=attrs.content,textAnchor=attrs.textAnchor,transform=attrs.transform,lineHeight=attrs.lineHeight;
	this.style=style;
	this.dx=dx;
	this.dy=dy;
	this.content=content;
	this.textAnchor=textAnchor;
	this.lineHeight=lineHeight;
	this.transform=transform;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){
	var style=this.getStyles(props);
	var lineHeight=this.getHeight(props,"lineHeight");
	var textAnchor=props.textAnchor?
	_helpers2.default.evaluateProp(props.textAnchor,props.datum):"start";
	var content=this.getContent(props);
	var dx=props.dx?_helpers2.default.evaluateProp(this.props.dx,props.datum):0;
	var dy=this.getDy(props,style,content,lineHeight);
	var transform=this.getTransform(props,style);
	return{
	style:style,dx:dx,dy:dy,content:content,lineHeight:lineHeight,textAnchor:textAnchor,transform:transform};
	
	}},{key:"getStyle",value:function getStyle(
	
	props,style){
	style=style?(0,_merge3.default)({},defaultStyles,style):defaultStyles;
	var datum=props.datum||props.data;
	var baseStyles=_helpers2.default.evaluateStyle(style,datum,props.active);
	return(0,_assign3.default)({},baseStyles,{fontSize:this.getFontSize(baseStyles)});
	}},{key:"getStyles",value:function getStyles(
	
	props){var _this2=this;
	return Array.isArray(props.style)?
	props.style.map(function(style){return _this2.getStyle(props,style);}):[this.getStyle(props,props.style)];
	}},{key:"getHeight",value:function getHeight(
	
	props,type){
	var datum=props.datum||props.data;
	return _helpers2.default.evaluateProp(props[type],datum,props.active);
	}},{key:"getContent",value:function getContent(
	
	props){
	if(props.text===undefined||props.text===null){
	return[" "];
	}
	var datum=props.datum||props.data;
	if(Array.isArray(props.text)){
	return props.text.map(function(line){return _helpers2.default.evaluateProp(line,datum,props.active);});
	}
	var child=_helpers2.default.evaluateProp(props.text,datum,props.active);
	return(""+child).split("\n");
	}},{key:"getDy",value:function getDy(
	
	props,style,content,lineHeight){
	var fontSize=style[0].fontSize;
	var datum=props.datum||props.data;
	var dy=props.dy?_helpers2.default.evaluateProp(props.dy,datum):0;
	var length=content.length;
	var capHeight=this.getHeight(props,"capHeight");
	var verticalAnchor=style.verticalAnchor||props.verticalAnchor;
	var anchor=verticalAnchor?
	_helpers2.default.evaluateProp(verticalAnchor,datum):"middle";
	switch(anchor){
	case"end":
	return dy+(capHeight/2+(0.5-length)*lineHeight)*fontSize;
	case"middle":
	return dy+(capHeight/2+(0.5-length/2)*lineHeight)*fontSize;
	default:
	return dy+(capHeight/2+lineHeight/2)*fontSize;}
	
	}},{key:"getTransform",value:function getTransform(
	
	props,style){var
	datum=props.datum,x=props.x,y=props.y;
	var angle=style.angle||props.angle;
	var transform=props.transform||style.transform;
	var transformPart=transform&&_helpers2.default.evaluateProp(transform,datum);
	var rotatePart=angle&&{rotate:[angle,x,y]};
	return transformPart||angle?
	_style2.default.toTransformString(transformPart,rotatePart):undefined;
	}},{key:"getFontSize",value:function getFontSize(
	
	style){
	var baseSize=style&&style.fontSize;
	if(typeof baseSize==="number"){
	return baseSize;
	}else if(baseSize===undefined||baseSize===null){
	return defaultStyles.fontSize;
	}else if(typeof baseSize==="string"){
	var fontSize=+baseSize.replace("px","");
	if(!isNaN(fontSize)){
	return fontSize;
	}else{
	_log2.default.warn("fontSize should be expressed as a number of pixels");
	return defaultStyles.fontSize;
	}
	}
	return defaultStyles.fontSize;
	}},{key:"renderElements",value:function renderElements(
	
	
	props){var _this3=this;
	var textProps={
	dx:this.dx,dy:this.dy,x:props.x,y:props.y,
	transform:this.transform,className:props.className};
	
	return(
	_react2.default.createElement("text",_extends({},textProps,
	props.events,{__source:{fileName:_jsxFileName,lineNumber:233}}),
	
	this.props.title&&_react2.default.createElement("title",{__source:{fileName:_jsxFileName,lineNumber:236}},this.props.title),
	this.props.desc&&_react2.default.createElement("desc",{__source:{fileName:_jsxFileName,lineNumber:237}},this.props.desc),
	this.content.map(function(line,i){
	var style=_this3.style[i]||_this3.style[0];
	var lastStyle=_this3.style[i-1]||_this3.style[0];
	var fontSize=(style.fontSize+lastStyle.fontSize)/2;
	var textAnchor=style.textAnchor||_this3.textAnchor;
	var dy=i?_this3.lineHeight*fontSize:undefined;
	return(
	_react2.default.createElement("tspan",{key:i,x:props.x,dy:dy,dx:_this3.dx,style:style,textAnchor:textAnchor,__source:{fileName:_jsxFileName,lineNumber:245}},
	line));
	
	
	})));
	
	
	}},{key:"render",value:function render()
	
	{
	var label=this.renderElements(this.props);
	return this.props.renderInPortal?_react2.default.createElement(_victoryPortal2.default,{__source:{fileName:_jsxFileName,lineNumber:256}},label):label;
	}}]);return VictoryLabel;}(_react2.default.Component);VictoryLabel.displayName="VictoryLabel";VictoryLabel.role="label";VictoryLabel.propTypes={active:_propTypes2.default.bool,angle:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number]),capHeight:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes4.default.nonNegative,_propTypes2.default.func]),className:_propTypes2.default.string,data:_propTypes2.default.array,datum:_propTypes2.default.any,desc:_propTypes2.default.string,dx:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.string,_propTypes2.default.func]),dy:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.string,_propTypes2.default.func]),events:_propTypes2.default.object,index:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.string]),lineHeight:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes4.default.nonNegative,_propTypes2.default.func]),renderInPortal:_propTypes2.default.bool,style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.array]),text:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number,_propTypes2.default.func,_propTypes2.default.array]),textAnchor:_propTypes2.default.oneOfType([_propTypes2.default.oneOf(["start","middle","end","inherit"]),_propTypes2.default.func]),title:_propTypes2.default.string,transform:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.object,_propTypes2.default.func]),verticalAnchor:_propTypes2.default.oneOfType([_propTypes2.default.oneOf(["start","middle","end"]),_propTypes2.default.func]),x:_propTypes2.default.number,y:_propTypes2.default.number};VictoryLabel.defaultProps={capHeight:0.71,lineHeight:1};exports.default=VictoryLabel;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _omit2=__webpack_require__(215);var _omit3=_interopRequireDefault(_omit2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _log=__webpack_require__(155);var _log2=_interopRequireDefault(_log);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	
	VictoryPortal=function(_React$Component){_inherits(VictoryPortal,_React$Component);function VictoryPortal(){_classCallCheck(this,VictoryPortal);return _possibleConstructorReturn(this,(VictoryPortal.__proto__||Object.getPrototypeOf(VictoryPortal)).apply(this,arguments));}_createClass(VictoryPortal,[{key:"componentDidMount",value:function componentDidMount()
	
	
	
	
	
	
	
	
	
	
	{
	if(!this.checkedContext){
	if(typeof this.context.portalUpdate!=="function"){
	var msg="`renderInPortal` is not supported outside of `VictoryContainer`. "+
	"Component will be rendered in place";
	_log2.default.warn(msg);
	this.renderInPlace=true;
	}
	this.checkedContext=true;
	}
	this.forceUpdate();
	}},{key:"componentDidUpdate",value:function componentDidUpdate()
	
	{
	if(!this.renderInPlace){
	this.portalKey=this.portalKey||this.context.portalRegister();
	this.context.portalUpdate(this.portalKey,this.element);
	}
	}},{key:"componentWillUnmount",value:function componentWillUnmount()
	
	{
	if(this.context&&this.context.portalDeregister){
	this.context.portalDeregister(this.portalKey);
	}
	}},{key:"renderPortal",value:function renderPortal(
	
	
	child){
	if(this.renderInPlace){
	return child;
	}
	this.element=child;
	return null;
	}},{key:"render",value:function render()
	
	{var
	children=this.props.children;
	var childProps=children&&children.props||{};
	var child=children&&_react2.default.cloneElement(
	children,(0,_defaults3.default)({},childProps,(0,_omit3.default)(this.props,"children")));
	
	return this.renderPortal(child);
	}}]);return VictoryPortal;}(_react2.default.Component);VictoryPortal.propTypes={children:_propTypes2.default.node};VictoryPortal.contextTypes={portalDeregister:_propTypes2.default.func,portalRegister:_propTypes2.default.func,portalUpdate:_propTypes2.default.func};exports.default=VictoryPortal;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _material=__webpack_require__(1129);var _material2=_interopRequireDefault(_material);
	var _grayscale=__webpack_require__(1128);var _grayscale2=_interopRequireDefault(_grayscale);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=
	
	{
	material:_material2.default,
	grayscale:_grayscale2.default};

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _sortBy2=__webpack_require__(793);var _sortBy3=_interopRequireDefault(_sortBy2);var _property2=__webpack_require__(216);var _property3=_interopRequireDefault(_property2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _last2=__webpack_require__(214);var _last3=_interopRequireDefault(_last2);var _range2=__webpack_require__(364);var _range3=_interopRequireDefault(_range2);var _uniq2=__webpack_require__(798);var _uniq3=_interopRequireDefault(_uniq2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _scale=__webpack_require__(254);var _scale2=_interopRequireDefault(_scale);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=
	
	{
	
	
	
	
	
	getData:function getData(props){
	var data=void 0;
	if(props.data){
	if(props.data.length<1){
	return[];
	}else{
	data=this.formatData(props.data,props);
	}
	}else{
	data=this.formatData(this.generateData(props),props);
	}
	return this.addEventKeys(props,data);
	},
	
	
	
	
	
	
	
	generateDataArray:function generateDataArray(props,axis){
	var propsDomain=props.domain&&Array.isArray(props.domain)?
	props.domain:props.domain&&props.domain[axis];
	var domain=propsDomain||_scale2.default.getBaseScale(props,axis).domain();
	var samples=props.samples||1;
	var domainMax=Math.max.apply(Math,_toConsumableArray(domain));
	var domainMin=Math.min.apply(Math,_toConsumableArray(domain));
	var step=(domainMax-domainMin)/samples;
	var values=(0,_range3.default)(domainMin,domainMax,step);
	return(0,_last3.default)(values)===domainMax?values:values.concat(domainMax);
	},
	
	
	
	
	
	
	generateData:function generateData(props){
	var xValues=this.generateDataArray(props,"x");
	var yValues=this.generateDataArray(props,"y");
	var values=xValues.map(function(x,i){
	return{x:x,y:yValues[i]};
	});
	return values;
	},
	
	
	
	
	
	
	
	
	formatData:function formatData(dataset,props,stringMap){
	if(!Array.isArray(dataset)){
	return[];
	}
	stringMap=stringMap||{
	x:this.createStringMap(props,"x"),
	y:this.createStringMap(props,"y")};
	
	var accessor={
	x:_helpers2.default.createAccessor(props.x!==undefined?props.x:"x"),
	y:_helpers2.default.createAccessor(props.y!==undefined?props.y:"y"),
	y0:_helpers2.default.createAccessor(props.y0!==undefined?props.y0:"y0")};
	
	var data=dataset.map(function(datum,index){
	var evaluatedX=datum._x!==undefined?datum._x:accessor.x(datum);
	var evaluatedY=datum._y!==undefined?datum._y:accessor.y(datum);
	var y0=datum._y0!==undefined?datum._y0:accessor.y0(datum);
	var x=evaluatedX!==undefined?evaluatedX:index;
	var y=evaluatedY!==undefined?evaluatedY:datum;
	var originalValues=y0===undefined?{x:x,y:y}:{x:x,y:y,y0:y0};
	var privateValues=y0===undefined?{_x:x,_y:y}:{_x:x,_y:y,_y0:y0};
	return(0,_assign3.default)(
	originalValues,datum,privateValues,
	
	typeof x==="string"?{_x:stringMap.x[x],xName:x}:{},
	typeof y==="string"?{_y:stringMap.y[y],yName:y}:{},
	typeof y0==="string"?{_y0:stringMap.y[y0],yName:y0}:{});
	
	});
	
	var sortedData=this.sortData(data,props.sortKey);
	
	return this.cleanData(sortedData,props);
	},
	
	
	
	
	
	
	
	
	sortData:function sortData(dataset,sortKey){
	if(!sortKey){
	return dataset;
	}
	
	
	if(sortKey==="x"||sortKey==="y"){
	sortKey="_"+sortKey;
	}
	
	return(0,_sortBy3.default)(dataset,sortKey);
	},
	
	
	
	
	
	
	
	
	
	cleanData:function cleanData(dataset,props){
	var scaleType={
	x:_scale2.default.getScaleType(props,"x"),
	y:_scale2.default.getScaleType(props,"y")};
	
	if(scaleType.x!=="log"&&scaleType.y!=="log"){
	return dataset;
	}
	var rules=function rules(datum,axis){
	return scaleType[axis]==="log"?datum["_"+axis]!==0:true;
	};
	return dataset.filter(function(datum){
	return rules(datum,"x")&&rules(datum,"y")&&rules(datum,"y0");
	});
	},
	
	
	getEventKey:function getEventKey(key){
	
	
	if((0,_isFunction3.default)(key)){
	return key;
	}else if(key===null||typeof key==="undefined"){
	return function(){return undefined;};
	}
	
	return(0,_property3.default)(key);
	},
	
	
	addEventKeys:function addEventKeys(props,data){
	var eventKeyAccessor=this.getEventKey(props.eventKey);
	return data.map(function(datum,index){
	var eventKey=datum.eventKey||eventKeyAccessor(datum)||index;
	return(0,_assign3.default)({eventKey:eventKey},datum);
	});
	},
	
	
	
	
	
	
	
	createStringMap:function createStringMap(props,axis){
	var stringsFromAxes=this.getStringsFromAxes(props,axis);
	var stringsFromCategories=this.getStringsFromCategories(props,axis);
	var stringsFromData=this.getStringsFromData(props,axis);
	
	var allStrings=(0,_uniq3.default)([].concat(_toConsumableArray(stringsFromAxes),_toConsumableArray(stringsFromCategories),_toConsumableArray(stringsFromData)));
	return allStrings.length===0?null:
	allStrings.reduce(function(memo,string,index){
	memo[string]=index+1;
	return memo;
	},{});
	},
	
	
	
	
	
	
	
	getStringsFromData:function getStringsFromData(props,axis){
	if(!Array.isArray(props.data)){
	return[];
	}
	var key=typeof props[axis]==="undefined"?axis:props[axis];
	var accessor=_helpers2.default.createAccessor(key);
	var dataStrings=props.data.
	map(function(datum){return accessor(datum);}).
	filter(function(datum){return typeof datum==="string";});
	
	return dataStrings.reduce(function(prev,curr){
	if(typeof curr!=="undefined"&&curr!==null&&prev.indexOf(curr)===-1){
	prev.push(curr);
	}
	return prev;
	},[]);
	},
	
	
	
	
	
	
	
	getStringsFromAxes:function getStringsFromAxes(props,axis){
	if(!props.tickValues||!Array.isArray(props.tickValues)&&!props.tickValues[axis]){
	return[];
	}
	var tickValueArray=props.tickValues[axis]||props.tickValues;
	return tickValueArray.filter(function(val){return typeof val==="string";});
	},
	
	
	
	
	
	
	
	getStringsFromCategories:function getStringsFromCategories(props,axis){
	if(!props.categories){
	return[];
	}
	var categories=this.getCategories(props,axis);
	var categoryStrings=categories&&categories.filter(function(val){return typeof val==="string";});
	return categoryStrings?_collection2.default.removeUndefined(categoryStrings):[];
	},
	
	
	
	
	
	
	
	getCategories:function getCategories(props,axis){
	return props.categories&&!Array.isArray(props.categories)?
	props.categories[axis]:props.categories;
	}};

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _without2=__webpack_require__(369);var _without3=_interopRequireDefault(_without2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _isEmpty2=__webpack_require__(211);var _isEmpty3=_interopRequireDefault(_isEmpty2);var _partial2=__webpack_require__(791);var _partial3=_interopRequireDefault(_partial2);var _merge2=__webpack_require__(140);var _merge3=_interopRequireDefault(_merge2);var _extend6=__webpack_require__(783);var _extend7=_interopRequireDefault(_extend6);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=
	
	{
	
	
	
	
	
	
	getEvents:function getEvents(props,target,eventKey,getScopedEvents){var _this=this;
	
	var getEventsByTarget=function getEventsByTarget(events){
	var getSelectedEvents=function getSelectedEvents(){
	var targetEvents=events.reduce(function(memo,event){
	if(event.target!==undefined){
	return""+event.target===""+target?memo.concat(event):memo;
	}
	return memo.concat(event);
	},[]);
	
	if(eventKey!==undefined&&target!=="parent"){
	return targetEvents.filter(function(obj){
	var targetKeys=obj.eventKey;
	var useKey=function useKey(key){return key?""+key===""+eventKey:true;};
	return Array.isArray(targetKeys)?
	targetKeys.some(function(k){return useKey(k);}):useKey(targetKeys);
	});
	}
	return targetEvents;
	};
	
	var selectedEvents=getSelectedEvents();
	return Array.isArray(selectedEvents)&&selectedEvents.reduce(function(memo,event){
	return event?(0,_assign3.default)(memo,event.eventHandlers):memo;
	},{});
	};
	
	
	
	
	
	var getAllEvents=function getAllEvents(){
	if(Array.isArray(_this.componentEvents)){var _componentEvents;
	return Array.isArray(props.events)?
	(_componentEvents=_this.componentEvents).concat.apply(_componentEvents,_toConsumableArray(props.events)):_this.componentEvents;
	}
	return props.events;
	};
	
	var allEvents=getAllEvents();
	var ownEvents=allEvents&&(0,_isFunction3.default)(getScopedEvents)?
	getScopedEvents(getEventsByTarget(allEvents),target):undefined;
	if(!props.sharedEvents){
	return ownEvents;
	}
	var getSharedEvents=props.sharedEvents.getEvents;
	var sharedEvents=props.sharedEvents.events&&
	getSharedEvents(getEventsByTarget(props.sharedEvents.events),target);
	return(0,_assign3.default)({},sharedEvents,ownEvents);
	},
	
	
	
	
	
	
	getScopedEvents:function getScopedEvents(events,namespace,childType,baseProps){var _this2=this;
	if((0,_isEmpty3.default)(events)){
	return{};
	}
	
	baseProps=baseProps||this.baseProps;
	
	var getTargetProps=function getTargetProps(identifier,type){var
	childName=identifier.childName,target=identifier.target,key=identifier.key;
	var baseType=type==="props"?baseProps:_this2.state;
	var base=childName===undefined||childName===null||!baseType[childName]?
	baseType:baseType[childName];
	return key==="parent"?base.parent:base[key]&&base[key][target];
	};
	
	
	
	var parseEvent=function parseEvent(eventReturn,eventKey){
	var childNames=namespace==="parent"?
	eventReturn.childName:eventReturn.childName||childType;
	var target=eventReturn.target||namespace;
	
	
	var getKeys=function getKeys(childName){
	if(eventReturn.eventKey==="all"){
	return baseProps[childName]?
	(0,_without3.default)(Object.keys(baseProps[childName]),"parent"):
	(0,_without3.default)(Object.keys(baseProps),"parent");
	}else if(eventReturn.eventKey===undefined&&eventKey==="parent"){
	return baseProps[childName]?
	Object.keys(baseProps[childName]):Object.keys(baseProps);
	}
	return eventReturn.eventKey!==undefined?eventReturn.eventKey:eventKey;
	};
	
	
	var getMutationObject=function getMutationObject(key,childName){
	var nullFunction=function nullFunction(){return null;};
	var mutationTargetProps=getTargetProps({childName:childName,key:key,target:target},"props");
	var mutationTargetState=getTargetProps({childName:childName,key:key,target:target},"state");
	var mutation=eventReturn.mutation||nullFunction;
	var mutatedProps=mutation(
	(0,_assign3.default)({},mutationTargetProps,mutationTargetState),baseProps);
	
	var childState=_this2.state[childName]||{};
	var extendState=function extendState(state){
	return target==="parent"?
	(0,_extend7.default)(state[key],mutatedProps):(0,_extend7.default)(state[key],_defineProperty({},target,mutatedProps));
	};
	return childName!==undefined&&childName!==null?
	(0,_extend7.default)(_this2.state,_defineProperty({},
	childName,(0,_extend7.default)(childState,_defineProperty({},key,extendState(childState))))):
	
	(0,_extend7.default)(_this2.state,_defineProperty({},key,extendState(_this2.state)));
	};
	
	
	var getReturnByChild=function getReturnByChild(childName){
	var mutationKeys=getKeys(childName);
	return Array.isArray(mutationKeys)?
	mutationKeys.reduce(function(memo,key){
	return(0,_assign3.default)(memo,getMutationObject(key,childName));
	},{}):
	getMutationObject(mutationKeys,childName);
	};
	
	
	var allChildNames=childNames==="all"?
	(0,_without3.default)(Object.keys(baseProps),"parent"):childNames;
	return Array.isArray(allChildNames)?allChildNames.reduce(function(memo,childName){
	return(0,_assign3.default)(memo,getReturnByChild(childName));
	},{}):getReturnByChild(allChildNames);
	};
	
	
	var parseEventReturn=function parseEventReturn(eventReturn,eventKey){
	return Array.isArray(eventReturn)?
	eventReturn.reduce(function(memo,props){
	memo=(0,_merge3.default)({},memo,parseEvent(props,eventKey));
	return memo;
	},{}):
	parseEvent(eventReturn,eventKey);
	};
	
	var compileCallbacks=function compileCallbacks(eventReturn){
	var getCallback=function getCallback(obj){return(0,_isFunction3.default)(obj.callback)&&obj.callback;};
	var callbacks=Array.isArray(eventReturn)?
	eventReturn.map(function(evtObj){return getCallback(evtObj);}):[getCallback(eventReturn)];
	var callbackArray=callbacks.filter(function(callback){return callback!==false;});
	return callbackArray.length?
	function(){return callbackArray.forEach(function(callback){return callback();});}:undefined;
	};
	
	
	
	var onEvent=function onEvent(evt,childProps,eventKey,eventName){
	var eventReturn=events[eventName](evt,childProps,eventKey,_this2);
	if(eventReturn){
	var callbacks=compileCallbacks(eventReturn);
	_this2.setState(parseEventReturn(eventReturn,eventKey),callbacks);
	}
	};
	
	
	return Object.keys(events).reduce(function(memo,event){
	memo[event]=onEvent;
	return memo;
	},{});
	},
	
	
	
	
	getPartialEvents:function getPartialEvents(events,eventKey,childProps){
	return events?
	Object.keys(events).reduce(function(memo,eventName){
	
	memo[eventName]=(0,_partial3.default)(
	events[eventName],
	_partial3.default.placeholder,
	childProps,
	eventKey,
	eventName);
	
	return memo;
	},{}):
	{};
	},
	
	
	
	
	getEventState:function getEventState(eventKey,namespace,childType){
	if(!childType){
	return eventKey==="parent"?
	this.state[eventKey]&&this.state[eventKey][namespace]||this.state[eventKey]:
	this.state[eventKey]&&this.state[eventKey][namespace];
	}
	return this.state[childType]&&
	this.state[childType][eventKey]&&
	this.state[childType][eventKey][namespace];
	
	},
	
	
	
	
	getComponentEvents:function getComponentEvents(props,components){
	var events=Array.isArray(components)&&components.reduce(function(memo,componentName){var _memo;
	var component=props[componentName];
	var componentEvents=component&&component.type&&component.type.defaultEvents;
	memo=Array.isArray(componentEvents)?(_memo=memo).concat.apply(_memo,_toConsumableArray(componentEvents)):memo;
	return memo;
	},[]);
	return events&&events.length?events:undefined;
	}};

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _includes2=__webpack_require__(210);var _includes3=_interopRequireDefault(_includes2);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _d3Scale=__webpack_require__(613);var d3Scale=_interopRequireWildcard(_d3Scale);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	
	var supportedScaleStrings=["linear","time","log","sqrt"];exports.default=
	
	{
	
	getDefaultScale:function getDefaultScale(){
	return d3Scale.scaleLinear();
	},
	
	toNewName:function toNewName(scale){
	
	var capitalize=function capitalize(s){return s&&s[0].toUpperCase()+s.slice(1);};
	return"scale"+capitalize(scale);
	},
	
	validScale:function validScale(scale){
	if(typeof scale==="function"){
	return(0,_isFunction3.default)(scale.copy)&&(0,_isFunction3.default)(scale.domain)&&(0,_isFunction3.default)(scale.range);
	}else if(typeof scale==="string"){
	return(0,_includes3.default)(supportedScaleStrings,scale);
	}
	return false;
	},
	
	isScaleDefined:function isScaleDefined(props,axis){
	if(!props.scale){
	return false;
	}else if(props.scale.x||props.scale.y){
	return props.scale[axis]?true:false;
	}
	return true;
	},
	
	getScaleTypeFromProps:function getScaleTypeFromProps(props,axis){
	if(!this.isScaleDefined(props,axis)){
	return undefined;
	}
	var scale=props.scale[axis]||props.scale;
	return typeof scale==="string"?scale:this.getType(scale);
	},
	
	getScaleFromProps:function getScaleFromProps(props,axis){
	if(!this.isScaleDefined(props,axis)){
	return undefined;
	}
	var scale=props.scale[axis]||props.scale;
	
	if(this.validScale(scale)){
	return(0,_isFunction3.default)(scale)?scale:d3Scale[this.toNewName(scale)]();
	}
	return undefined;
	},
	
	getScaleTypeFromData:function getScaleTypeFromData(props,axis){
	if(!props.data){
	return"linear";
	}
	var accessor=_helpers2.default.createAccessor(props[axis]);
	var axisData=props.data.map(accessor);
	return _collection2.default.containsDates(axisData)?"time":"linear";
	},
	
	getBaseScale:function getBaseScale(props,axis){
	var scale=this.getScaleFromProps(props,axis);
	if(scale){
	return scale;
	}
	var dataScale=this.getScaleTypeFromData(props,axis);
	return d3Scale[this.toNewName(dataScale)]();
	},
	
	getType:function getType(scale){
	var duckTypes=[
	{name:"log",method:"base"},
	{name:"ordinal",method:"unknown"},
	{name:"pow-sqrt",method:"exponent"},
	{name:"quantile",method:"quantiles"},
	{name:"quantize-threshold",method:"invertExtent"}];
	
	var scaleType=duckTypes.filter(function(type){
	return scale[type.method]!==undefined;
	})[0];
	return scaleType?scaleType.name:undefined;
	},
	
	getScaleType:function getScaleType(props,axis){
	
	return this.getScaleTypeFromProps(props,axis)||this.getScaleTypeFromData(props,axis);
	}};

/***/ }),
/* 255 */
/***/ (function(module, exports) {

	Object.defineProperty(exports,"__esModule",{value:true});
	
	
	
	
	
	
	
	
	var toTransformString=function toTransformString(obj){for(var _len=arguments.length,more=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){more[_key-1]=arguments[_key];}
	if(more.length>0){
	return more.reduce(function(memo,currentObj){
	return[memo,toTransformString(currentObj)].join(" ");
	},toTransformString(obj));
	}else{
	if(!obj||typeof obj==="string"){
	return obj;
	}
	var transforms=[];
	for(var key in obj){
	if(obj.hasOwnProperty(key)){
	var value=obj[key];
	transforms.push(key+"("+value+")");
	}
	}
	return transforms.join(" ");
	}
	};exports.default=
	
	{
	
	toTransformString:toTransformString,
	
	
	
	
	
	
	
	
	getColorScale:function getColorScale(name){
	var scales={
	grayscale:[
	"#cccccc","#969696","#636363","#252525"],
	
	qualitative:[
	"#334D5C","#45B29D","#EFC94C","#E27A3F","#DF5A49",
	"#4F7DA1","#55DBC1","#EFDA97","#E2A37F","#DF948A"],
	
	heatmap:["#428517","#77D200","#D6D305","#EC8E19","#C92B05"],
	warm:["#940031","#C43343","#DC5429","#FF821D","#FFAF55"],
	cool:["#2746B9","#0B69D4","#2794DB","#31BB76","#60E83B"],
	red:["#FCAE91","#FB6A4A","#DE2D26","#A50F15","#750B0E"],
	blue:["#002C61","#004B8F","#006BC9","#3795E5","#65B4F4"],
	green:["#354722","#466631","#649146","#8AB25C","#A9C97E"]};
	
	return name?scales[name]:scales.greyscale;
	}};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _merge2=__webpack_require__(140);var _merge3=_interopRequireDefault(_merge2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}
	
	
	
	var fontDictionary={
	"American Typewriter":2.09,
	"Baskerville":2.51,
	"Georgia":2.27,
	"Hoefler Text":2.39,
	"Palatino":2.26,
	"Times New Roman":2.48,
	"Arial":2.26,
	"Gill Sans":2.47,
	"Gill Sans 300":2.58,
	"Helvetica Neue":2.24,
	"Lucida Grande":2.05,
	"Tahoma":2.25,
	"Trebuchet MS":2.2,
	"Verdana":1.96,
	"Courier New":1.67,
	"cursive":1.84,
	"fantasy":2.09,
	"monospace":1.81,
	"serif":2.04,
	"sans-serif":1.89};
	
	
	
	var absoluteMeasurementUnitsToPixels={
	"mm":3.8,
	"sm":38,
	"pt":1.33,
	"pc":16,
	"in":96,
	"px":1};
	
	var relativeMeasurementUnitsCoef={
	"em":1,
	"ex":0.5};
	
	
	var coefficients={
	averageFontConstant:2.1675,
	widthOverlapCoef:1.25,
	heightOverlapCoef:1.05,
	lineCapitalCoef:1.15,
	lineSpaceHeightCoef:0.2};
	
	var defaultStyle={
	lineHeight:1,
	letterSpacing:"0px",
	fontSize:0,
	angle:0,
	fontFamily:""};
	
	
	var _degreeToRadian=function _degreeToRadian(angle){return angle*Math.PI/180;};
	
	var _getFontCharacterConstant=function _getFontCharacterConstant(fontFamily){
	var firstFont=fontFamily.split(",")[0].replace(/'|"/g,"");
	return fontDictionary[firstFont]||coefficients.averageFontConstant;
	};
	
	var _splitToLines=function _splitToLines(text){
	return Array.isArray(text)?text:text.toString().split(/\r\n|\r|\n/g);
	};
	
	var _getSizeWithRotate=function _getSizeWithRotate(axisSize,dependentSize,angle){
	var angleInRadian=_degreeToRadian(angle);
	return Math.abs(Math.cos(angleInRadian)*axisSize)+
	Math.abs(Math.sin(angleInRadian)*dependentSize);
	};
	
	
	
	
	
	
	
	var convertLengthToPixels=function convertLengthToPixels(length,fontSize){
	var attribute=length.match(/[a-zA-Z%]+/)[0];
	var value=length.match(/[0-9.,]+/);
	var result=void 0;
	if(absoluteMeasurementUnitsToPixels.hasOwnProperty(attribute)){
	result=value*absoluteMeasurementUnitsToPixels[attribute];
	}else if(relativeMeasurementUnitsCoef.hasOwnProperty(attribute)){
	result=(fontSize?value*fontSize:value*coefficients.defaultFontSize)*
	relativeMeasurementUnitsCoef[attribute];
	}else{
	result=value;
	}
	return result;
	};
	
	var _prepareParams=function _prepareParams(inputStyle,index){
	var lineStyle=Array.isArray(inputStyle)?inputStyle[index]:inputStyle;
	var style=(0,_defaults3.default)({},lineStyle,defaultStyle);
	return(0,_merge3.default)({},style,{
	characterConstant:style.characterConstant||_getFontCharacterConstant(style.fontFamily),
	letterSpacing:convertLengthToPixels(style.letterSpacing,style.fontSize),
	fontSize:typeof style.fontSize==="number"?
	style.fontSize:
	convertLengthToPixels(String(style.fontSize))});
	
	};
	
	var _approximateTextWidthInternal=function _approximateTextWidthInternal(text,style){
	var widths=_splitToLines(text).map(function(line,index){
	var len=line.toString().length;var _prepareParams2=
	_prepareParams(style,index),fontSize=_prepareParams2.fontSize,characterConstant=_prepareParams2.characterConstant,letterSpacing=_prepareParams2.letterSpacing;
	return len*fontSize/characterConstant+letterSpacing*Math.max(len-1,0);
	});
	return Math.max.apply(Math,_toConsumableArray(widths));
	};
	
	var _approximateTextHeightInternal=function _approximateTextHeightInternal(text,style){
	return _splitToLines(text).reduce(function(total,line,index){
	var lineStyle=_prepareParams(style,index);
	var height=lineStyle.fontSize*coefficients.lineCapitalCoef;
	var emptySpace=index===0?0:lineStyle.fontSize*coefficients.lineSpaceHeightCoef;
	return total+lineStyle.lineHeight*(height+emptySpace);
	},0);
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	var approximateTextSize=function approximateTextSize(text,style){
	var angle=Array.isArray(style)?style[0]&&style[0].angle:style&&style.angle;
	var height=_approximateTextHeightInternal(text,style);
	var width=_approximateTextWidthInternal(text,style);
	var widthWithRotate=angle?_getSizeWithRotate(width,height,angle):width;
	var heightWithRotate=angle?_getSizeWithRotate(height,width,angle):height;
	return{
	width:widthWithRotate*coefficients.widthOverlapCoef,
	height:heightWithRotate*coefficients.heightOverlapCoef};
	
	};exports.default=
	
	{
	approximateTextSize:approximateTextSize,
	convertLengthToPixels:convertLengthToPixels};

/***/ }),
/* 257 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	function Classifier() {
	}
	
	function restore(classifier) {
	    classifier = typeof classifier == 'string' ?  JSON.parse(classifier) : classifier;
	
	    return classifier;
	}
	
	function addExample(observation, classification) {
	    throw 'Not implemented';
	}
	
	function classify(observation) {
		var classifications = this.getClassifications(observation);
		if(!classifications || classifications.length === 0) {
			throw "Not Trained";
		} 
	    return this.getClassifications(observation)[0].label;
	}
	
	function train() {
	    throw 'Not implemented';
	}
	
	Classifier.prototype.addExample = addExample;
	Classifier.prototype.train = train;
	Classifier.prototype.classify = classify;
	
	Classifier.restore = restore;
	
	module.exports = Classifier;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	
	exports.BayesClassifier = __webpack_require__(500);
	exports.LogisticRegressionClassifier = __webpack_require__(501);
	exports.KMeans = __webpack_require__(502);


/***/ }),
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */
/***/ (function(module, exports) {

	/**
	 * Global Names
	 */
	
	var globals = /\b(Array|Date|Object|Math|JSON)\b/g;
	
	/**
	 * Return immediate identifiers parsed from `str`.
	 *
	 * @param {String} str
	 * @param {String|Function} map function or prefix
	 * @return {Array}
	 * @api public
	 */
	
	module.exports = function(str, fn){
	  var p = unique(props(str));
	  if (fn && 'string' == typeof fn) fn = prefixed(fn);
	  if (fn) return map(str, p, fn);
	  return p;
	};
	
	/**
	 * Return immediate identifiers in `str`.
	 *
	 * @param {String} str
	 * @return {Array}
	 * @api private
	 */
	
	function props(str) {
	  return str
	    .replace(/\.\w+|\w+ *\(|"[^"]*"|'[^']*'|\/([^/]+)\//g, '')
	    .replace(globals, '')
	    .match(/[a-zA-Z_]\w*/g)
	    || [];
	}
	
	/**
	 * Return `str` with `props` mapped with `fn`.
	 *
	 * @param {String} str
	 * @param {Array} props
	 * @param {Function} fn
	 * @return {String}
	 * @api private
	 */
	
	function map(str, props, fn) {
	  var re = /\.\w+|\w+ *\(|"[^"]*"|'[^']*'|\/([^/]+)\/|[a-zA-Z_]\w*/g;
	  return str.replace(re, function(_){
	    if ('(' == _[_.length - 1]) return fn(_);
	    if (!~props.indexOf(_)) return _;
	    return fn(_);
	  });
	}
	
	/**
	 * Return unique array.
	 *
	 * @param {Array} arr
	 * @return {Array}
	 * @api private
	 */
	
	function unique(arr) {
	  var ret = [];
	
	  for (var i = 0; i < arr.length; i++) {
	    if (~ret.indexOf(arr[i])) continue;
	    ret.push(arr[i]);
	  }
	
	  return ret;
	}
	
	/**
	 * Map with prefix `str`.
	 */
	
	function prefixed(str) {
	  return function(_){
	    return str + _;
	  };
	}


/***/ }),
/* 264 */
/***/ (function(module, exports) {

	/**
	 * Expose `xor`
	 */
	
	module.exports = xor;
	
	/**
	 * XOR utility
	 *
	 * T T F
	 * T F T
	 * F T T
	 * F F F
	 *
	 * @param {Boolean} a
	 * @param {Boolean} b
	 * @return {Boolean}
	 */
	
	function xor(a, b) {
	  return !a != !b;
	}


/***/ }),
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var define = function(constructor, factory, prototype) {
	  constructor.prototype = factory.prototype = prototype;
	  prototype.constructor = constructor;
	};
	
	function extend(parent, definition) {
	  var prototype = Object.create(parent.prototype);
	  for (var key in definition) prototype[key] = definition[key];
	  return prototype;
	}
	
	function Color() {}
	
	var darker = 0.7;
	var brighter = 1 / darker;
	
	var reI = "\\s*([+-]?\\d+)\\s*";
	var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
	var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
	var reHex3 = /^#([0-9a-f]{3})$/;
	var reHex6 = /^#([0-9a-f]{6})$/;
	var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
	var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
	var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
	var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
	var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
	var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
	
	var named = {
	  aliceblue: 0xf0f8ff,
	  antiquewhite: 0xfaebd7,
	  aqua: 0x00ffff,
	  aquamarine: 0x7fffd4,
	  azure: 0xf0ffff,
	  beige: 0xf5f5dc,
	  bisque: 0xffe4c4,
	  black: 0x000000,
	  blanchedalmond: 0xffebcd,
	  blue: 0x0000ff,
	  blueviolet: 0x8a2be2,
	  brown: 0xa52a2a,
	  burlywood: 0xdeb887,
	  cadetblue: 0x5f9ea0,
	  chartreuse: 0x7fff00,
	  chocolate: 0xd2691e,
	  coral: 0xff7f50,
	  cornflowerblue: 0x6495ed,
	  cornsilk: 0xfff8dc,
	  crimson: 0xdc143c,
	  cyan: 0x00ffff,
	  darkblue: 0x00008b,
	  darkcyan: 0x008b8b,
	  darkgoldenrod: 0xb8860b,
	  darkgray: 0xa9a9a9,
	  darkgreen: 0x006400,
	  darkgrey: 0xa9a9a9,
	  darkkhaki: 0xbdb76b,
	  darkmagenta: 0x8b008b,
	  darkolivegreen: 0x556b2f,
	  darkorange: 0xff8c00,
	  darkorchid: 0x9932cc,
	  darkred: 0x8b0000,
	  darksalmon: 0xe9967a,
	  darkseagreen: 0x8fbc8f,
	  darkslateblue: 0x483d8b,
	  darkslategray: 0x2f4f4f,
	  darkslategrey: 0x2f4f4f,
	  darkturquoise: 0x00ced1,
	  darkviolet: 0x9400d3,
	  deeppink: 0xff1493,
	  deepskyblue: 0x00bfff,
	  dimgray: 0x696969,
	  dimgrey: 0x696969,
	  dodgerblue: 0x1e90ff,
	  firebrick: 0xb22222,
	  floralwhite: 0xfffaf0,
	  forestgreen: 0x228b22,
	  fuchsia: 0xff00ff,
	  gainsboro: 0xdcdcdc,
	  ghostwhite: 0xf8f8ff,
	  gold: 0xffd700,
	  goldenrod: 0xdaa520,
	  gray: 0x808080,
	  green: 0x008000,
	  greenyellow: 0xadff2f,
	  grey: 0x808080,
	  honeydew: 0xf0fff0,
	  hotpink: 0xff69b4,
	  indianred: 0xcd5c5c,
	  indigo: 0x4b0082,
	  ivory: 0xfffff0,
	  khaki: 0xf0e68c,
	  lavender: 0xe6e6fa,
	  lavenderblush: 0xfff0f5,
	  lawngreen: 0x7cfc00,
	  lemonchiffon: 0xfffacd,
	  lightblue: 0xadd8e6,
	  lightcoral: 0xf08080,
	  lightcyan: 0xe0ffff,
	  lightgoldenrodyellow: 0xfafad2,
	  lightgray: 0xd3d3d3,
	  lightgreen: 0x90ee90,
	  lightgrey: 0xd3d3d3,
	  lightpink: 0xffb6c1,
	  lightsalmon: 0xffa07a,
	  lightseagreen: 0x20b2aa,
	  lightskyblue: 0x87cefa,
	  lightslategray: 0x778899,
	  lightslategrey: 0x778899,
	  lightsteelblue: 0xb0c4de,
	  lightyellow: 0xffffe0,
	  lime: 0x00ff00,
	  limegreen: 0x32cd32,
	  linen: 0xfaf0e6,
	  magenta: 0xff00ff,
	  maroon: 0x800000,
	  mediumaquamarine: 0x66cdaa,
	  mediumblue: 0x0000cd,
	  mediumorchid: 0xba55d3,
	  mediumpurple: 0x9370db,
	  mediumseagreen: 0x3cb371,
	  mediumslateblue: 0x7b68ee,
	  mediumspringgreen: 0x00fa9a,
	  mediumturquoise: 0x48d1cc,
	  mediumvioletred: 0xc71585,
	  midnightblue: 0x191970,
	  mintcream: 0xf5fffa,
	  mistyrose: 0xffe4e1,
	  moccasin: 0xffe4b5,
	  navajowhite: 0xffdead,
	  navy: 0x000080,
	  oldlace: 0xfdf5e6,
	  olive: 0x808000,
	  olivedrab: 0x6b8e23,
	  orange: 0xffa500,
	  orangered: 0xff4500,
	  orchid: 0xda70d6,
	  palegoldenrod: 0xeee8aa,
	  palegreen: 0x98fb98,
	  paleturquoise: 0xafeeee,
	  palevioletred: 0xdb7093,
	  papayawhip: 0xffefd5,
	  peachpuff: 0xffdab9,
	  peru: 0xcd853f,
	  pink: 0xffc0cb,
	  plum: 0xdda0dd,
	  powderblue: 0xb0e0e6,
	  purple: 0x800080,
	  rebeccapurple: 0x663399,
	  red: 0xff0000,
	  rosybrown: 0xbc8f8f,
	  royalblue: 0x4169e1,
	  saddlebrown: 0x8b4513,
	  salmon: 0xfa8072,
	  sandybrown: 0xf4a460,
	  seagreen: 0x2e8b57,
	  seashell: 0xfff5ee,
	  sienna: 0xa0522d,
	  silver: 0xc0c0c0,
	  skyblue: 0x87ceeb,
	  slateblue: 0x6a5acd,
	  slategray: 0x708090,
	  slategrey: 0x708090,
	  snow: 0xfffafa,
	  springgreen: 0x00ff7f,
	  steelblue: 0x4682b4,
	  tan: 0xd2b48c,
	  teal: 0x008080,
	  thistle: 0xd8bfd8,
	  tomato: 0xff6347,
	  turquoise: 0x40e0d0,
	  violet: 0xee82ee,
	  wheat: 0xf5deb3,
	  white: 0xffffff,
	  whitesmoke: 0xf5f5f5,
	  yellow: 0xffff00,
	  yellowgreen: 0x9acd32
	};
	
	define(Color, color, {
	  displayable: function() {
	    return this.rgb().displayable();
	  },
	  toString: function() {
	    return this.rgb() + "";
	  }
	});
	
	function color(format) {
	  var m;
	  format = (format + "").trim().toLowerCase();
	  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00
	      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
	      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
	      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
	      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
	      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
	      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
	      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
	      : named.hasOwnProperty(format) ? rgbn(named[format])
	      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
	      : null;
	}
	
	function rgbn(n) {
	  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
	}
	
	function rgba(r, g, b, a) {
	  if (a <= 0) r = g = b = NaN;
	  return new Rgb(r, g, b, a);
	}
	
	function rgbConvert(o) {
	  if (!(o instanceof Color)) o = color(o);
	  if (!o) return new Rgb;
	  o = o.rgb();
	  return new Rgb(o.r, o.g, o.b, o.opacity);
	}
	
	function rgb(r, g, b, opacity) {
	  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
	}
	
	function Rgb(r, g, b, opacity) {
	  this.r = +r;
	  this.g = +g;
	  this.b = +b;
	  this.opacity = +opacity;
	}
	
	define(Rgb, rgb, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	  },
	  rgb: function() {
	    return this;
	  },
	  displayable: function() {
	    return (0 <= this.r && this.r <= 255)
	        && (0 <= this.g && this.g <= 255)
	        && (0 <= this.b && this.b <= 255)
	        && (0 <= this.opacity && this.opacity <= 1);
	  },
	  toString: function() {
	    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
	    return (a === 1 ? "rgb(" : "rgba(")
	        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
	        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
	        + Math.max(0, Math.min(255, Math.round(this.b) || 0))
	        + (a === 1 ? ")" : ", " + a + ")");
	  }
	}));
	
	function hsla(h, s, l, a) {
	  if (a <= 0) h = s = l = NaN;
	  else if (l <= 0 || l >= 1) h = s = NaN;
	  else if (s <= 0) h = NaN;
	  return new Hsl(h, s, l, a);
	}
	
	function hslConvert(o) {
	  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
	  if (!(o instanceof Color)) o = color(o);
	  if (!o) return new Hsl;
	  if (o instanceof Hsl) return o;
	  o = o.rgb();
	  var r = o.r / 255,
	      g = o.g / 255,
	      b = o.b / 255,
	      min = Math.min(r, g, b),
	      max = Math.max(r, g, b),
	      h = NaN,
	      s = max - min,
	      l = (max + min) / 2;
	  if (s) {
	    if (r === max) h = (g - b) / s + (g < b) * 6;
	    else if (g === max) h = (b - r) / s + 2;
	    else h = (r - g) / s + 4;
	    s /= l < 0.5 ? max + min : 2 - max - min;
	    h *= 60;
	  } else {
	    s = l > 0 && l < 1 ? 0 : h;
	  }
	  return new Hsl(h, s, l, o.opacity);
	}
	
	function hsl(h, s, l, opacity) {
	  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
	}
	
	function Hsl(h, s, l, opacity) {
	  this.h = +h;
	  this.s = +s;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Hsl, hsl, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Hsl(this.h, this.s, this.l * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Hsl(this.h, this.s, this.l * k, this.opacity);
	  },
	  rgb: function() {
	    var h = this.h % 360 + (this.h < 0) * 360,
	        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
	        l = this.l,
	        m2 = l + (l < 0.5 ? l : 1 - l) * s,
	        m1 = 2 * l - m2;
	    return new Rgb(
	      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
	      hsl2rgb(h, m1, m2),
	      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
	      this.opacity
	    );
	  },
	  displayable: function() {
	    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
	        && (0 <= this.l && this.l <= 1)
	        && (0 <= this.opacity && this.opacity <= 1);
	  }
	}));
	
	/* From FvD 13.37, CSS Color Module Level 3 */
	function hsl2rgb(h, m1, m2) {
	  return (h < 60 ? m1 + (m2 - m1) * h / 60
	      : h < 180 ? m2
	      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
	      : m1) * 255;
	}
	
	var deg2rad = Math.PI / 180;
	var rad2deg = 180 / Math.PI;
	
	var Kn = 18;
	var Xn = 0.950470;
	var Yn = 1;
	var Zn = 1.088830;
	var t0 = 4 / 29;
	var t1 = 6 / 29;
	var t2 = 3 * t1 * t1;
	var t3 = t1 * t1 * t1;
	
	function labConvert(o) {
	  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
	  if (o instanceof Hcl) {
	    var h = o.h * deg2rad;
	    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
	  }
	  if (!(o instanceof Rgb)) o = rgbConvert(o);
	  var b = rgb2xyz(o.r),
	      a = rgb2xyz(o.g),
	      l = rgb2xyz(o.b),
	      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
	      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
	      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
	  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
	}
	
	function lab(l, a, b, opacity) {
	  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
	}
	
	function Lab(l, a, b, opacity) {
	  this.l = +l;
	  this.a = +a;
	  this.b = +b;
	  this.opacity = +opacity;
	}
	
	define(Lab, lab, extend(Color, {
	  brighter: function(k) {
	    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	  },
	  darker: function(k) {
	    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	  },
	  rgb: function() {
	    var y = (this.l + 16) / 116,
	        x = isNaN(this.a) ? y : y + this.a / 500,
	        z = isNaN(this.b) ? y : y - this.b / 200;
	    y = Yn * lab2xyz(y);
	    x = Xn * lab2xyz(x);
	    z = Zn * lab2xyz(z);
	    return new Rgb(
	      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
	      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
	      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),
	      this.opacity
	    );
	  }
	}));
	
	function xyz2lab(t) {
	  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
	}
	
	function lab2xyz(t) {
	  return t > t1 ? t * t * t : t2 * (t - t0);
	}
	
	function xyz2rgb(x) {
	  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
	}
	
	function rgb2xyz(x) {
	  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
	}
	
	function hclConvert(o) {
	  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
	  if (!(o instanceof Lab)) o = labConvert(o);
	  var h = Math.atan2(o.b, o.a) * rad2deg;
	  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
	}
	
	function hcl(h, c, l, opacity) {
	  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
	}
	
	function Hcl(h, c, l, opacity) {
	  this.h = +h;
	  this.c = +c;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Hcl, hcl, extend(Color, {
	  brighter: function(k) {
	    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
	  },
	  darker: function(k) {
	    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
	  },
	  rgb: function() {
	    return labConvert(this).rgb();
	  }
	}));
	
	var A = -0.14861;
	var B = +1.78277;
	var C = -0.29227;
	var D = -0.90649;
	var E = +1.97294;
	var ED = E * D;
	var EB = E * B;
	var BC_DA = B * C - D * A;
	
	function cubehelixConvert(o) {
	  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
	  if (!(o instanceof Rgb)) o = rgbConvert(o);
	  var r = o.r / 255,
	      g = o.g / 255,
	      b = o.b / 255,
	      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
	      bl = b - l,
	      k = (E * (g - l) - C * bl) / D,
	      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
	      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
	  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
	}
	
	function cubehelix(h, s, l, opacity) {
	  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
	}
	
	function Cubehelix(h, s, l, opacity) {
	  this.h = +h;
	  this.s = +s;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Cubehelix, cubehelix, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	  },
	  rgb: function() {
	    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
	        l = +this.l,
	        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
	        cosh = Math.cos(h),
	        sinh = Math.sin(h);
	    return new Rgb(
	      255 * (l + a * (A * cosh + B * sinh)),
	      255 * (l + a * (C * cosh + D * sinh)),
	      255 * (l + a * (E * cosh)),
	      this.opacity
	    );
	  }
	}));
	
	exports.color = color;
	exports.rgb = rgb;
	exports.hsl = hsl;
	exports.lab = lab;
	exports.hcl = hcl;
	exports.cubehelix = cubehelix;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-interpolate/ Version 1.1.6. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports, __webpack_require__(298)) :
		typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :
		(factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Color) { 'use strict';
	
	function basis(t1, v0, v1, v2, v3) {
	  var t2 = t1 * t1, t3 = t2 * t1;
	  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
	      + (4 - 6 * t2 + 3 * t3) * v1
	      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
	      + t3 * v3) / 6;
	}
	
	var basis$1 = function(values) {
	  var n = values.length - 1;
	  return function(t) {
	    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
	        v1 = values[i],
	        v2 = values[i + 1],
	        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
	        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
	    return basis((t - i / n) * n, v0, v1, v2, v3);
	  };
	};
	
	var basisClosed = function(values) {
	  var n = values.length;
	  return function(t) {
	    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
	        v0 = values[(i + n - 1) % n],
	        v1 = values[i % n],
	        v2 = values[(i + 1) % n],
	        v3 = values[(i + 2) % n];
	    return basis((t - i / n) * n, v0, v1, v2, v3);
	  };
	};
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	function linear(a, d) {
	  return function(t) {
	    return a + t * d;
	  };
	}
	
	function exponential(a, b, y) {
	  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
	    return Math.pow(a + t * b, y);
	  };
	}
	
	function hue(a, b) {
	  var d = b - a;
	  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
	}
	
	function gamma(y) {
	  return (y = +y) === 1 ? nogamma : function(a, b) {
	    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
	  };
	}
	
	function nogamma(a, b) {
	  var d = b - a;
	  return d ? linear(a, d) : constant(isNaN(a) ? b : a);
	}
	
	var rgb$1 = ((function rgbGamma(y) {
	  var color$$1 = gamma(y);
	
	  function rgb$$1(start, end) {
	    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),
	        g = color$$1(start.g, end.g),
	        b = color$$1(start.b, end.b),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.r = r(t);
	      start.g = g(t);
	      start.b = b(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	
	  rgb$$1.gamma = rgbGamma;
	
	  return rgb$$1;
	}))(1);
	
	function rgbSpline(spline) {
	  return function(colors) {
	    var n = colors.length,
	        r = new Array(n),
	        g = new Array(n),
	        b = new Array(n),
	        i, color$$1;
	    for (i = 0; i < n; ++i) {
	      color$$1 = d3Color.rgb(colors[i]);
	      r[i] = color$$1.r || 0;
	      g[i] = color$$1.g || 0;
	      b[i] = color$$1.b || 0;
	    }
	    r = spline(r);
	    g = spline(g);
	    b = spline(b);
	    color$$1.opacity = 1;
	    return function(t) {
	      color$$1.r = r(t);
	      color$$1.g = g(t);
	      color$$1.b = b(t);
	      return color$$1 + "";
	    };
	  };
	}
	
	var rgbBasis = rgbSpline(basis$1);
	var rgbBasisClosed = rgbSpline(basisClosed);
	
	var array = function(a, b) {
	  var nb = b ? b.length : 0,
	      na = a ? Math.min(nb, a.length) : 0,
	      x = new Array(na),
	      c = new Array(nb),
	      i;
	
	  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);
	  for (; i < nb; ++i) c[i] = b[i];
	
	  return function(t) {
	    for (i = 0; i < na; ++i) c[i] = x[i](t);
	    return c;
	  };
	};
	
	var date = function(a, b) {
	  var d = new Date;
	  return a = +a, b -= a, function(t) {
	    return d.setTime(a + b * t), d;
	  };
	};
	
	var number = function(a, b) {
	  return a = +a, b -= a, function(t) {
	    return a + b * t;
	  };
	};
	
	var object = function(a, b) {
	  var i = {},
	      c = {},
	      k;
	
	  if (a === null || typeof a !== "object") a = {};
	  if (b === null || typeof b !== "object") b = {};
	
	  for (k in b) {
	    if (k in a) {
	      i[k] = value(a[k], b[k]);
	    } else {
	      c[k] = b[k];
	    }
	  }
	
	  return function(t) {
	    for (k in i) c[k] = i[k](t);
	    return c;
	  };
	};
	
	var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
	var reB = new RegExp(reA.source, "g");
	
	function zero(b) {
	  return function() {
	    return b;
	  };
	}
	
	function one(b) {
	  return function(t) {
	    return b(t) + "";
	  };
	}
	
	var string = function(a, b) {
	  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
	      am, // current match in a
	      bm, // current match in b
	      bs, // string preceding current number in b, if any
	      i = -1, // index in s
	      s = [], // string constants and placeholders
	      q = []; // number interpolators
	
	  // Coerce inputs to strings.
	  a = a + "", b = b + "";
	
	  // Interpolate pairs of numbers in a & b.
	  while ((am = reA.exec(a))
	      && (bm = reB.exec(b))) {
	    if ((bs = bm.index) > bi) { // a string precedes the next number in b
	      bs = b.slice(bi, bs);
	      if (s[i]) s[i] += bs; // coalesce with previous string
	      else s[++i] = bs;
	    }
	    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
	      if (s[i]) s[i] += bm; // coalesce with previous string
	      else s[++i] = bm;
	    } else { // interpolate non-matching numbers
	      s[++i] = null;
	      q.push({i: i, x: number(am, bm)});
	    }
	    bi = reB.lastIndex;
	  }
	
	  // Add remains of b.
	  if (bi < b.length) {
	    bs = b.slice(bi);
	    if (s[i]) s[i] += bs; // coalesce with previous string
	    else s[++i] = bs;
	  }
	
	  // Special optimization for only a single match.
	  // Otherwise, interpolate each of the numbers and rejoin the string.
	  return s.length < 2 ? (q[0]
	      ? one(q[0].x)
	      : zero(b))
	      : (b = q.length, function(t) {
	          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	          return s.join("");
	        });
	};
	
	var value = function(a, b) {
	  var t = typeof b, c;
	  return b == null || t === "boolean" ? constant(b)
	      : (t === "number" ? number
	      : t === "string" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)
	      : b instanceof d3Color.color ? rgb$1
	      : b instanceof Date ? date
	      : Array.isArray(b) ? array
	      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
	      : number)(a, b);
	};
	
	var round = function(a, b) {
	  return a = +a, b -= a, function(t) {
	    return Math.round(a + b * t);
	  };
	};
	
	var degrees = 180 / Math.PI;
	
	var identity = {
	  translateX: 0,
	  translateY: 0,
	  rotate: 0,
	  skewX: 0,
	  scaleX: 1,
	  scaleY: 1
	};
	
	var decompose = function(a, b, c, d, e, f) {
	  var scaleX, scaleY, skewX;
	  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
	  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
	  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
	  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
	  return {
	    translateX: e,
	    translateY: f,
	    rotate: Math.atan2(b, a) * degrees,
	    skewX: Math.atan(skewX) * degrees,
	    scaleX: scaleX,
	    scaleY: scaleY
	  };
	};
	
	var cssNode;
	var cssRoot;
	var cssView;
	var svgNode;
	
	function parseCss(value) {
	  if (value === "none") return identity;
	  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
	  cssNode.style.transform = value;
	  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
	  cssRoot.removeChild(cssNode);
	  value = value.slice(7, -1).split(",");
	  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
	}
	
	function parseSvg(value) {
	  if (value == null) return identity;
	  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
	  svgNode.setAttribute("transform", value);
	  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;
	  value = value.matrix;
	  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
	}
	
	function interpolateTransform(parse, pxComma, pxParen, degParen) {
	
	  function pop(s) {
	    return s.length ? s.pop() + " " : "";
	  }
	
	  function translate(xa, ya, xb, yb, s, q) {
	    if (xa !== xb || ya !== yb) {
	      var i = s.push("translate(", null, pxComma, null, pxParen);
	      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
	    } else if (xb || yb) {
	      s.push("translate(" + xb + pxComma + yb + pxParen);
	    }
	  }
	
	  function rotate(a, b, s, q) {
	    if (a !== b) {
	      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
	      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: number(a, b)});
	    } else if (b) {
	      s.push(pop(s) + "rotate(" + b + degParen);
	    }
	  }
	
	  function skewX(a, b, s, q) {
	    if (a !== b) {
	      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: number(a, b)});
	    } else if (b) {
	      s.push(pop(s) + "skewX(" + b + degParen);
	    }
	  }
	
	  function scale(xa, ya, xb, yb, s, q) {
	    if (xa !== xb || ya !== yb) {
	      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
	      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
	    } else if (xb !== 1 || yb !== 1) {
	      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
	    }
	  }
	
	  return function(a, b) {
	    var s = [], // string constants and placeholders
	        q = []; // number interpolators
	    a = parse(a), b = parse(b);
	    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
	    rotate(a.rotate, b.rotate, s, q);
	    skewX(a.skewX, b.skewX, s, q);
	    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
	    a = b = null; // gc
	    return function(t) {
	      var i = -1, n = q.length, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  };
	}
	
	var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
	var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
	
	var rho = Math.SQRT2;
	var rho2 = 2;
	var rho4 = 4;
	var epsilon2 = 1e-12;
	
	function cosh(x) {
	  return ((x = Math.exp(x)) + 1 / x) / 2;
	}
	
	function sinh(x) {
	  return ((x = Math.exp(x)) - 1 / x) / 2;
	}
	
	function tanh(x) {
	  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	}
	
	// p0 = [ux0, uy0, w0]
	// p1 = [ux1, uy1, w1]
	var zoom = function(p0, p1) {
	  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
	      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
	      dx = ux1 - ux0,
	      dy = uy1 - uy0,
	      d2 = dx * dx + dy * dy,
	      i,
	      S;
	
	  // Special case for u0 ≅ u1.
	  if (d2 < epsilon2) {
	    S = Math.log(w1 / w0) / rho;
	    i = function(t) {
	      return [
	        ux0 + t * dx,
	        uy0 + t * dy,
	        w0 * Math.exp(rho * t * S)
	      ];
	    };
	  }
	
	  // General case.
	  else {
	    var d1 = Math.sqrt(d2),
	        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
	        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
	        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
	        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	    S = (r1 - r0) / rho;
	    i = function(t) {
	      var s = t * S,
	          coshr0 = cosh(r0),
	          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
	      return [
	        ux0 + u * dx,
	        uy0 + u * dy,
	        w0 * coshr0 / cosh(rho * s + r0)
	      ];
	    };
	  }
	
	  i.duration = S * 1000;
	
	  return i;
	};
	
	function hsl$1(hue$$1) {
	  return function(start, end) {
	    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
	        s = nogamma(start.s, end.s),
	        l = nogamma(start.l, end.l),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.h = h(t);
	      start.s = s(t);
	      start.l = l(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	}
	
	var hsl$2 = hsl$1(hue);
	var hslLong = hsl$1(nogamma);
	
	function lab$1(start, end) {
	  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),
	      a = nogamma(start.a, end.a),
	      b = nogamma(start.b, end.b),
	      opacity = nogamma(start.opacity, end.opacity);
	  return function(t) {
	    start.l = l(t);
	    start.a = a(t);
	    start.b = b(t);
	    start.opacity = opacity(t);
	    return start + "";
	  };
	}
	
	function hcl$1(hue$$1) {
	  return function(start, end) {
	    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
	        c = nogamma(start.c, end.c),
	        l = nogamma(start.l, end.l),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.h = h(t);
	      start.c = c(t);
	      start.l = l(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	}
	
	var hcl$2 = hcl$1(hue);
	var hclLong = hcl$1(nogamma);
	
	function cubehelix$1(hue$$1) {
	  return (function cubehelixGamma(y) {
	    y = +y;
	
	    function cubehelix$$1(start, end) {
	      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
	          s = nogamma(start.s, end.s),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.s = s(t);
	        start.l = l(Math.pow(t, y));
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	
	    cubehelix$$1.gamma = cubehelixGamma;
	
	    return cubehelix$$1;
	  })(1);
	}
	
	var cubehelix$2 = cubehelix$1(hue);
	var cubehelixLong = cubehelix$1(nogamma);
	
	var quantize = function(interpolator, n) {
	  var samples = new Array(n);
	  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
	  return samples;
	};
	
	exports.interpolate = value;
	exports.interpolateArray = array;
	exports.interpolateBasis = basis$1;
	exports.interpolateBasisClosed = basisClosed;
	exports.interpolateDate = date;
	exports.interpolateNumber = number;
	exports.interpolateObject = object;
	exports.interpolateRound = round;
	exports.interpolateString = string;
	exports.interpolateTransformCss = interpolateTransformCss;
	exports.interpolateTransformSvg = interpolateTransformSvg;
	exports.interpolateZoom = zoom;
	exports.interpolateRgb = rgb$1;
	exports.interpolateRgbBasis = rgbBasis;
	exports.interpolateRgbBasisClosed = rgbBasisClosed;
	exports.interpolateHsl = hsl$2;
	exports.interpolateHslLong = hslLong;
	exports.interpolateLab = lab$1;
	exports.interpolateHcl = hcl$2;
	exports.interpolateHclLong = hclLong;
	exports.interpolateCubehelix = cubehelix$2;
	exports.interpolateCubehelixLong = cubehelixLong;
	exports.quantize = quantize;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports, __webpack_require__(612)) :
		typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :
		(factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Path) { 'use strict';
	
	var constant = function(x) {
	  return function constant() {
	    return x;
	  };
	};
	
	var abs = Math.abs;
	var atan2 = Math.atan2;
	var cos = Math.cos;
	var max = Math.max;
	var min = Math.min;
	var sin = Math.sin;
	var sqrt = Math.sqrt;
	
	var epsilon = 1e-12;
	var pi = Math.PI;
	var halfPi = pi / 2;
	var tau = 2 * pi;
	
	function acos(x) {
	  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
	}
	
	function asin(x) {
	  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
	}
	
	function arcInnerRadius(d) {
	  return d.innerRadius;
	}
	
	function arcOuterRadius(d) {
	  return d.outerRadius;
	}
	
	function arcStartAngle(d) {
	  return d.startAngle;
	}
	
	function arcEndAngle(d) {
	  return d.endAngle;
	}
	
	function arcPadAngle(d) {
	  return d && d.padAngle; // Note: optional!
	}
	
	function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
	  var x10 = x1 - x0, y10 = y1 - y0,
	      x32 = x3 - x2, y32 = y3 - y2,
	      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
	  return [x0 + t * x10, y0 + t * y10];
	}
	
	// Compute perpendicular offset line of length rc.
	// http://mathworld.wolfram.com/Circle-LineIntersection.html
	function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
	  var x01 = x0 - x1,
	      y01 = y0 - y1,
	      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),
	      ox = lo * y01,
	      oy = -lo * x01,
	      x11 = x0 + ox,
	      y11 = y0 + oy,
	      x10 = x1 + ox,
	      y10 = y1 + oy,
	      x00 = (x11 + x10) / 2,
	      y00 = (y11 + y10) / 2,
	      dx = x10 - x11,
	      dy = y10 - y11,
	      d2 = dx * dx + dy * dy,
	      r = r1 - rc,
	      D = x11 * y10 - x10 * y11,
	      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),
	      cx0 = (D * dy - dx * d) / d2,
	      cy0 = (-D * dx - dy * d) / d2,
	      cx1 = (D * dy + dx * d) / d2,
	      cy1 = (-D * dx + dy * d) / d2,
	      dx0 = cx0 - x00,
	      dy0 = cy0 - y00,
	      dx1 = cx1 - x00,
	      dy1 = cy1 - y00;
	
	  // Pick the closer of the two intersection points.
	  // TODO Is there a faster way to determine which intersection to use?
	  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	
	  return {
	    cx: cx0,
	    cy: cy0,
	    x01: -ox,
	    y01: -oy,
	    x11: cx0 * (r1 / r - 1),
	    y11: cy0 * (r1 / r - 1)
	  };
	}
	
	var arc = function() {
	  var innerRadius = arcInnerRadius,
	      outerRadius = arcOuterRadius,
	      cornerRadius = constant(0),
	      padRadius = null,
	      startAngle = arcStartAngle,
	      endAngle = arcEndAngle,
	      padAngle = arcPadAngle,
	      context = null;
	
	  function arc() {
	    var buffer,
	        r,
	        r0 = +innerRadius.apply(this, arguments),
	        r1 = +outerRadius.apply(this, arguments),
	        a0 = startAngle.apply(this, arguments) - halfPi,
	        a1 = endAngle.apply(this, arguments) - halfPi,
	        da = abs(a1 - a0),
	        cw = a1 > a0;
	
	    if (!context) context = buffer = d3Path.path();
	
	    // Ensure that the outer radius is always larger than the inner radius.
	    if (r1 < r0) r = r1, r1 = r0, r0 = r;
	
	    // Is it a point?
	    if (!(r1 > epsilon)) context.moveTo(0, 0);
	
	    // Or is it a circle or annulus?
	    else if (da > tau - epsilon) {
	      context.moveTo(r1 * cos(a0), r1 * sin(a0));
	      context.arc(0, 0, r1, a0, a1, !cw);
	      if (r0 > epsilon) {
	        context.moveTo(r0 * cos(a1), r0 * sin(a1));
	        context.arc(0, 0, r0, a1, a0, cw);
	      }
	    }
	
	    // Or is it a circular or annular sector?
	    else {
	      var a01 = a0,
	          a11 = a1,
	          a00 = a0,
	          a10 = a1,
	          da0 = da,
	          da1 = da,
	          ap = padAngle.apply(this, arguments) / 2,
	          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),
	          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
	          rc0 = rc,
	          rc1 = rc,
	          t0,
	          t1;
	
	      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
	      if (rp > epsilon) {
	        var p0 = asin(rp / r0 * sin(ap)),
	            p1 = asin(rp / r1 * sin(ap));
	        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
	        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
	        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
	        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
	      }
	
	      var x01 = r1 * cos(a01),
	          y01 = r1 * sin(a01),
	          x10 = r0 * cos(a10),
	          y10 = r0 * sin(a10);
	
	      // Apply rounded corners?
	      if (rc > epsilon) {
	        var x11 = r1 * cos(a11),
	            y11 = r1 * sin(a11),
	            x00 = r0 * cos(a00),
	            y00 = r0 * sin(a00);
	
	        // Restrict the corner radius according to the sector angle.
	        if (da < pi) {
	          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
	              ax = x01 - oc[0],
	              ay = y01 - oc[1],
	              bx = x11 - oc[0],
	              by = y11 - oc[1],
	              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),
	              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	          rc0 = min(rc, (r0 - lc) / (kc - 1));
	          rc1 = min(rc, (r1 - lc) / (kc + 1));
	        }
	      }
	
	      // Is the sector collapsed to a line?
	      if (!(da1 > epsilon)) context.moveTo(x01, y01);
	
	      // Does the sector’s outer ring have rounded corners?
	      else if (rc1 > epsilon) {
	        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
	        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
	
	        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	        // Have the corners merged?
	        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);
	
	        // Otherwise, draw the two corners and the ring.
	        else {
	          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
	          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
	          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
	        }
	      }
	
	      // Or is the outer ring just a circular arc?
	      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
	
	      // Is there no inner ring, and it’s a circular sector?
	      // Or perhaps it’s an annular sector collapsed due to padding?
	      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);
	
	      // Does the sector’s inner ring (or point) have rounded corners?
	      else if (rc0 > epsilon) {
	        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
	        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
	
	        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	        // Have the corners merged?
	        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);
	
	        // Otherwise, draw the two corners and the ring.
	        else {
	          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
	          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
	          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
	        }
	      }
	
	      // Or is the inner ring just a circular arc?
	      else context.arc(0, 0, r0, a10, a00, cw);
	    }
	
	    context.closePath();
	
	    if (buffer) return context = null, buffer + "" || null;
	  }
	
	  arc.centroid = function() {
	    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
	        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
	    return [cos(a) * r, sin(a) * r];
	  };
	
	  arc.innerRadius = function(_) {
	    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant(+_), arc) : innerRadius;
	  };
	
	  arc.outerRadius = function(_) {
	    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant(+_), arc) : outerRadius;
	  };
	
	  arc.cornerRadius = function(_) {
	    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant(+_), arc) : cornerRadius;
	  };
	
	  arc.padRadius = function(_) {
	    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant(+_), arc) : padRadius;
	  };
	
	  arc.startAngle = function(_) {
	    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), arc) : startAngle;
	  };
	
	  arc.endAngle = function(_) {
	    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), arc) : endAngle;
	  };
	
	  arc.padAngle = function(_) {
	    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), arc) : padAngle;
	  };
	
	  arc.context = function(_) {
	    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
	  };
	
	  return arc;
	};
	
	function Linear(context) {
	  this._context = context;
	}
	
	Linear.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; // proceed
	      default: this._context.lineTo(x, y); break;
	    }
	  }
	};
	
	var curveLinear = function(context) {
	  return new Linear(context);
	};
	
	function x(p) {
	  return p[0];
	}
	
	function y(p) {
	  return p[1];
	}
	
	var line = function() {
	  var x$$1 = x,
	      y$$1 = y,
	      defined = constant(true),
	      context = null,
	      curve = curveLinear,
	      output = null;
	
	  function line(data) {
	    var i,
	        n = data.length,
	        d,
	        defined0 = false,
	        buffer;
	
	    if (context == null) output = curve(buffer = d3Path.path());
	
	    for (i = 0; i <= n; ++i) {
	      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	        if (defined0 = !defined0) output.lineStart();
	        else output.lineEnd();
	      }
	      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));
	    }
	
	    if (buffer) return output = null, buffer + "" || null;
	  }
	
	  line.x = function(_) {
	    return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant(+_), line) : x$$1;
	  };
	
	  line.y = function(_) {
	    return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant(+_), line) : y$$1;
	  };
	
	  line.defined = function(_) {
	    return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), line) : defined;
	  };
	
	  line.curve = function(_) {
	    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
	  };
	
	  line.context = function(_) {
	    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
	  };
	
	  return line;
	};
	
	var area = function() {
	  var x0 = x,
	      x1 = null,
	      y0 = constant(0),
	      y1 = y,
	      defined = constant(true),
	      context = null,
	      curve = curveLinear,
	      output = null;
	
	  function area(data) {
	    var i,
	        j,
	        k,
	        n = data.length,
	        d,
	        defined0 = false,
	        buffer,
	        x0z = new Array(n),
	        y0z = new Array(n);
	
	    if (context == null) output = curve(buffer = d3Path.path());
	
	    for (i = 0; i <= n; ++i) {
	      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	        if (defined0 = !defined0) {
	          j = i;
	          output.areaStart();
	          output.lineStart();
	        } else {
	          output.lineEnd();
	          output.lineStart();
	          for (k = i - 1; k >= j; --k) {
	            output.point(x0z[k], y0z[k]);
	          }
	          output.lineEnd();
	          output.areaEnd();
	        }
	      }
	      if (defined0) {
	        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
	        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
	      }
	    }
	
	    if (buffer) return output = null, buffer + "" || null;
	  }
	
	  function arealine() {
	    return line().defined(defined).curve(curve).context(context);
	  }
	
	  area.x = function(_) {
	    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), x1 = null, area) : x0;
	  };
	
	  area.x0 = function(_) {
	    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), area) : x0;
	  };
	
	  area.x1 = function(_) {
	    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : x1;
	  };
	
	  area.y = function(_) {
	    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), y1 = null, area) : y0;
	  };
	
	  area.y0 = function(_) {
	    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), area) : y0;
	  };
	
	  area.y1 = function(_) {
	    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : y1;
	  };
	
	  area.lineX0 =
	  area.lineY0 = function() {
	    return arealine().x(x0).y(y0);
	  };
	
	  area.lineY1 = function() {
	    return arealine().x(x0).y(y1);
	  };
	
	  area.lineX1 = function() {
	    return arealine().x(x1).y(y0);
	  };
	
	  area.defined = function(_) {
	    return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), area) : defined;
	  };
	
	  area.curve = function(_) {
	    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
	  };
	
	  area.context = function(_) {
	    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
	  };
	
	  return area;
	};
	
	var descending = function(a, b) {
	  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	};
	
	var identity = function(d) {
	  return d;
	};
	
	var pie = function() {
	  var value = identity,
	      sortValues = descending,
	      sort = null,
	      startAngle = constant(0),
	      endAngle = constant(tau),
	      padAngle = constant(0);
	
	  function pie(data) {
	    var i,
	        n = data.length,
	        j,
	        k,
	        sum = 0,
	        index = new Array(n),
	        arcs = new Array(n),
	        a0 = +startAngle.apply(this, arguments),
	        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
	        a1,
	        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
	        pa = p * (da < 0 ? -1 : 1),
	        v;
	
	    for (i = 0; i < n; ++i) {
	      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
	        sum += v;
	      }
	    }
	
	    // Optionally sort the arcs by previously-computed values or by data.
	    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
	    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });
	
	    // Compute the arcs! They are stored in the original data's order.
	    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
	      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
	        data: data[j],
	        index: i,
	        value: v,
	        startAngle: a0,
	        endAngle: a1,
	        padAngle: p
	      };
	    }
	
	    return arcs;
	  }
	
	  pie.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), pie) : value;
	  };
	
	  pie.sortValues = function(_) {
	    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
	  };
	
	  pie.sort = function(_) {
	    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
	  };
	
	  pie.startAngle = function(_) {
	    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), pie) : startAngle;
	  };
	
	  pie.endAngle = function(_) {
	    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), pie) : endAngle;
	  };
	
	  pie.padAngle = function(_) {
	    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), pie) : padAngle;
	  };
	
	  return pie;
	};
	
	var curveRadialLinear = curveRadial(curveLinear);
	
	function Radial(curve) {
	  this._curve = curve;
	}
	
	Radial.prototype = {
	  areaStart: function() {
	    this._curve.areaStart();
	  },
	  areaEnd: function() {
	    this._curve.areaEnd();
	  },
	  lineStart: function() {
	    this._curve.lineStart();
	  },
	  lineEnd: function() {
	    this._curve.lineEnd();
	  },
	  point: function(a, r) {
	    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
	  }
	};
	
	function curveRadial(curve) {
	
	  function radial(context) {
	    return new Radial(curve(context));
	  }
	
	  radial._curve = curve;
	
	  return radial;
	}
	
	function lineRadial(l) {
	  var c = l.curve;
	
	  l.angle = l.x, delete l.x;
	  l.radius = l.y, delete l.y;
	
	  l.curve = function(_) {
	    return arguments.length ? c(curveRadial(_)) : c()._curve;
	  };
	
	  return l;
	}
	
	var lineRadial$1 = function() {
	  return lineRadial(line().curve(curveRadialLinear));
	};
	
	var areaRadial = function() {
	  var a = area().curve(curveRadialLinear),
	      c = a.curve,
	      x0 = a.lineX0,
	      x1 = a.lineX1,
	      y0 = a.lineY0,
	      y1 = a.lineY1;
	
	  a.angle = a.x, delete a.x;
	  a.startAngle = a.x0, delete a.x0;
	  a.endAngle = a.x1, delete a.x1;
	  a.radius = a.y, delete a.y;
	  a.innerRadius = a.y0, delete a.y0;
	  a.outerRadius = a.y1, delete a.y1;
	  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;
	  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;
	  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;
	  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;
	
	  a.curve = function(_) {
	    return arguments.length ? c(curveRadial(_)) : c()._curve;
	  };
	
	  return a;
	};
	
	var pointRadial = function(x, y) {
	  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
	};
	
	var slice = Array.prototype.slice;
	
	function linkSource(d) {
	  return d.source;
	}
	
	function linkTarget(d) {
	  return d.target;
	}
	
	function link(curve) {
	  var source = linkSource,
	      target = linkTarget,
	      x$$1 = x,
	      y$$1 = y,
	      context = null;
	
	  function link() {
	    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
	    if (!context) context = buffer = d3Path.path();
	    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));
	    if (buffer) return context = null, buffer + "" || null;
	  }
	
	  link.source = function(_) {
	    return arguments.length ? (source = _, link) : source;
	  };
	
	  link.target = function(_) {
	    return arguments.length ? (target = _, link) : target;
	  };
	
	  link.x = function(_) {
	    return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant(+_), link) : x$$1;
	  };
	
	  link.y = function(_) {
	    return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant(+_), link) : y$$1;
	  };
	
	  link.context = function(_) {
	    return arguments.length ? ((context = _ == null ? null : _), link) : context;
	  };
	
	  return link;
	}
	
	function curveHorizontal(context, x0, y0, x1, y1) {
	  context.moveTo(x0, y0);
	  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
	}
	
	function curveVertical(context, x0, y0, x1, y1) {
	  context.moveTo(x0, y0);
	  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
	}
	
	function curveRadial$1(context, x0, y0, x1, y1) {
	  var p0 = pointRadial(x0, y0),
	      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),
	      p2 = pointRadial(x1, y0),
	      p3 = pointRadial(x1, y1);
	  context.moveTo(p0[0], p0[1]);
	  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
	}
	
	function linkHorizontal() {
	  return link(curveHorizontal);
	}
	
	function linkVertical() {
	  return link(curveVertical);
	}
	
	function linkRadial() {
	  var l = link(curveRadial$1);
	  l.angle = l.x, delete l.x;
	  l.radius = l.y, delete l.y;
	  return l;
	}
	
	var circle = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / pi);
	    context.moveTo(r, 0);
	    context.arc(0, 0, r, 0, tau);
	  }
	};
	
	var cross = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / 5) / 2;
	    context.moveTo(-3 * r, -r);
	    context.lineTo(-r, -r);
	    context.lineTo(-r, -3 * r);
	    context.lineTo(r, -3 * r);
	    context.lineTo(r, -r);
	    context.lineTo(3 * r, -r);
	    context.lineTo(3 * r, r);
	    context.lineTo(r, r);
	    context.lineTo(r, 3 * r);
	    context.lineTo(-r, 3 * r);
	    context.lineTo(-r, r);
	    context.lineTo(-3 * r, r);
	    context.closePath();
	  }
	};
	
	var tan30 = Math.sqrt(1 / 3);
	var tan30_2 = tan30 * 2;
	
	var diamond = {
	  draw: function(context, size) {
	    var y = Math.sqrt(size / tan30_2),
	        x = y * tan30;
	    context.moveTo(0, -y);
	    context.lineTo(x, 0);
	    context.lineTo(0, y);
	    context.lineTo(-x, 0);
	    context.closePath();
	  }
	};
	
	var ka = 0.89081309152928522810;
	var kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);
	var kx = Math.sin(tau / 10) * kr;
	var ky = -Math.cos(tau / 10) * kr;
	
	var star = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size * ka),
	        x = kx * r,
	        y = ky * r;
	    context.moveTo(0, -r);
	    context.lineTo(x, y);
	    for (var i = 1; i < 5; ++i) {
	      var a = tau * i / 5,
	          c = Math.cos(a),
	          s = Math.sin(a);
	      context.lineTo(s * r, -c * r);
	      context.lineTo(c * x - s * y, s * x + c * y);
	    }
	    context.closePath();
	  }
	};
	
	var square = {
	  draw: function(context, size) {
	    var w = Math.sqrt(size),
	        x = -w / 2;
	    context.rect(x, x, w, w);
	  }
	};
	
	var sqrt3 = Math.sqrt(3);
	
	var triangle = {
	  draw: function(context, size) {
	    var y = -Math.sqrt(size / (sqrt3 * 3));
	    context.moveTo(0, y * 2);
	    context.lineTo(-sqrt3 * y, -y);
	    context.lineTo(sqrt3 * y, -y);
	    context.closePath();
	  }
	};
	
	var c = -0.5;
	var s = Math.sqrt(3) / 2;
	var k = 1 / Math.sqrt(12);
	var a = (k / 2 + 1) * 3;
	
	var wye = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / a),
	        x0 = r / 2,
	        y0 = r * k,
	        x1 = x0,
	        y1 = r * k + r,
	        x2 = -x1,
	        y2 = y1;
	    context.moveTo(x0, y0);
	    context.lineTo(x1, y1);
	    context.lineTo(x2, y2);
	    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
	    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
	    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
	    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
	    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
	    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
	    context.closePath();
	  }
	};
	
	var symbols = [
	  circle,
	  cross,
	  diamond,
	  square,
	  star,
	  triangle,
	  wye
	];
	
	var symbol = function() {
	  var type = constant(circle),
	      size = constant(64),
	      context = null;
	
	  function symbol() {
	    var buffer;
	    if (!context) context = buffer = d3Path.path();
	    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
	    if (buffer) return context = null, buffer + "" || null;
	  }
	
	  symbol.type = function(_) {
	    return arguments.length ? (type = typeof _ === "function" ? _ : constant(_), symbol) : type;
	  };
	
	  symbol.size = function(_) {
	    return arguments.length ? (size = typeof _ === "function" ? _ : constant(+_), symbol) : size;
	  };
	
	  symbol.context = function(_) {
	    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
	  };
	
	  return symbol;
	};
	
	var noop = function() {};
	
	function point(that, x, y) {
	  that._context.bezierCurveTo(
	    (2 * that._x0 + that._x1) / 3,
	    (2 * that._y0 + that._y1) / 3,
	    (that._x0 + 2 * that._x1) / 3,
	    (that._y0 + 2 * that._y1) / 3,
	    (that._x0 + 4 * that._x1 + x) / 6,
	    (that._y0 + 4 * that._y1 + y) / 6
	  );
	}
	
	function Basis(context) {
	  this._context = context;
	}
	
	Basis.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 3: point(this, this._x1, this._y1); // proceed
	      case 2: this._context.lineTo(this._x1, this._y1); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basis = function(context) {
	  return new Basis(context);
	};
	
	function BasisClosed(context) {
	  this._context = context;
	}
	
	BasisClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x2, this._y2);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
	        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x2, this._y2);
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
	      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
	      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basisClosed = function(context) {
	  return new BasisClosed(context);
	};
	
	function BasisOpen(context) {
	  this._context = context;
	}
	
	BasisOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
	      case 3: this._point = 4; // proceed
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basisOpen = function(context) {
	  return new BasisOpen(context);
	};
	
	function Bundle(context, beta) {
	  this._basis = new Basis(context);
	  this._beta = beta;
	}
	
	Bundle.prototype = {
	  lineStart: function() {
	    this._x = [];
	    this._y = [];
	    this._basis.lineStart();
	  },
	  lineEnd: function() {
	    var x = this._x,
	        y = this._y,
	        j = x.length - 1;
	
	    if (j > 0) {
	      var x0 = x[0],
	          y0 = y[0],
	          dx = x[j] - x0,
	          dy = y[j] - y0,
	          i = -1,
	          t;
	
	      while (++i <= j) {
	        t = i / j;
	        this._basis.point(
	          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
	          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
	        );
	      }
	    }
	
	    this._x = this._y = null;
	    this._basis.lineEnd();
	  },
	  point: function(x, y) {
	    this._x.push(+x);
	    this._y.push(+y);
	  }
	};
	
	var bundle = ((function custom(beta) {
	
	  function bundle(context) {
	    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
	  }
	
	  bundle.beta = function(beta) {
	    return custom(+beta);
	  };
	
	  return bundle;
	}))(0.85);
	
	function point$1(that, x, y) {
	  that._context.bezierCurveTo(
	    that._x1 + that._k * (that._x2 - that._x0),
	    that._y1 + that._k * (that._y2 - that._y0),
	    that._x2 + that._k * (that._x1 - x),
	    that._y2 + that._k * (that._y1 - y),
	    that._x2,
	    that._y2
	  );
	}
	
	function Cardinal(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	Cardinal.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x2, this._y2); break;
	      case 3: point$1(this, this._x1, this._y1); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
	      case 2: this._point = 3; // proceed
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinal = ((function custom(tension) {
	
	  function cardinal(context) {
	    return new Cardinal(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	}))(0);
	
	function CardinalClosed(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	CardinalClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.lineTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        this.point(this._x5, this._y5);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinalClosed = ((function custom(tension) {
	
	  function cardinal(context) {
	    return new CardinalClosed(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	}))(0);
	
	function CardinalOpen(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	CardinalOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	      case 3: this._point = 4; // proceed
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinalOpen = ((function custom(tension) {
	
	  function cardinal(context) {
	    return new CardinalOpen(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	}))(0);
	
	function point$2(that, x, y) {
	  var x1 = that._x1,
	      y1 = that._y1,
	      x2 = that._x2,
	      y2 = that._y2;
	
	  if (that._l01_a > epsilon) {
	    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
	        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
	    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
	    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
	  }
	
	  if (that._l23_a > epsilon) {
	    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
	        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
	    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
	    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
	  }
	
	  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
	}
	
	function CatmullRom(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRom.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x2, this._y2); break;
	      case 3: this.point(this._x2, this._y2); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; // proceed
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRom = ((function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	}))(0.5);
	
	function CatmullRomClosed(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRomClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.lineTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        this.point(this._x5, this._y5);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRomClosed = ((function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	}))(0.5);
	
	function CatmullRomOpen(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRomOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	      case 3: this._point = 4; // proceed
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRomOpen = ((function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	}))(0.5);
	
	function LinearClosed(context) {
	  this._context = context;
	}
	
	LinearClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._point) this._context.closePath();
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    if (this._point) this._context.lineTo(x, y);
	    else this._point = 1, this._context.moveTo(x, y);
	  }
	};
	
	var linearClosed = function(context) {
	  return new LinearClosed(context);
	};
	
	function sign(x) {
	  return x < 0 ? -1 : 1;
	}
	
	// Calculate the slopes of the tangents (Hermite-type interpolation) based on
	// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
	// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
	// NOV(II), P. 443, 1990.
	function slope3(that, x2, y2) {
	  var h0 = that._x1 - that._x0,
	      h1 = x2 - that._x1,
	      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
	      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
	      p = (s0 * h1 + s1 * h0) / (h0 + h1);
	  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
	}
	
	// Calculate a one-sided slope.
	function slope2(that, t) {
	  var h = that._x1 - that._x0;
	  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
	}
	
	// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
	// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
	// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
	function point$3(that, t0, t1) {
	  var x0 = that._x0,
	      y0 = that._y0,
	      x1 = that._x1,
	      y1 = that._y1,
	      dx = (x1 - x0) / 3;
	  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
	}
	
	function MonotoneX(context) {
	  this._context = context;
	}
	
	MonotoneX.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 =
	    this._t0 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x1, this._y1); break;
	      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    var t1 = NaN;
	
	    x = +x, y = +y;
	    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
	      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;
	    }
	
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	    this._t0 = t1;
	  }
	};
	
	function MonotoneY(context) {
	  this._context = new ReflectContext(context);
	}
	
	(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
	  MonotoneX.prototype.point.call(this, y, x);
	};
	
	function ReflectContext(context) {
	  this._context = context;
	}
	
	ReflectContext.prototype = {
	  moveTo: function(x, y) { this._context.moveTo(y, x); },
	  closePath: function() { this._context.closePath(); },
	  lineTo: function(x, y) { this._context.lineTo(y, x); },
	  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
	};
	
	function monotoneX(context) {
	  return new MonotoneX(context);
	}
	
	function monotoneY(context) {
	  return new MonotoneY(context);
	}
	
	function Natural(context) {
	  this._context = context;
	}
	
	Natural.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x = [];
	    this._y = [];
	  },
	  lineEnd: function() {
	    var x = this._x,
	        y = this._y,
	        n = x.length;
	
	    if (n) {
	      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
	      if (n === 2) {
	        this._context.lineTo(x[1], y[1]);
	      } else {
	        var px = controlPoints(x),
	            py = controlPoints(y);
	        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
	          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
	        }
	      }
	    }
	
	    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	    this._x = this._y = null;
	  },
	  point: function(x, y) {
	    this._x.push(+x);
	    this._y.push(+y);
	  }
	};
	
	// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
	function controlPoints(x) {
	  var i,
	      n = x.length - 1,
	      m,
	      a = new Array(n),
	      b = new Array(n),
	      r = new Array(n);
	  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
	  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
	  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
	  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
	  a[n - 1] = r[n - 1] / b[n - 1];
	  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
	  b[n - 1] = (x[n] + a[n - 1]) / 2;
	  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
	  return [a, b];
	}
	
	var natural = function(context) {
	  return new Natural(context);
	};
	
	function Step(context, t) {
	  this._context = context;
	  this._t = t;
	}
	
	Step.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x = this._y = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; // proceed
	      default: {
	        if (this._t <= 0) {
	          this._context.lineTo(this._x, y);
	          this._context.lineTo(x, y);
	        } else {
	          var x1 = this._x * (1 - this._t) + x * this._t;
	          this._context.lineTo(x1, this._y);
	          this._context.lineTo(x1, y);
	        }
	        break;
	      }
	    }
	    this._x = x, this._y = y;
	  }
	};
	
	var step = function(context) {
	  return new Step(context, 0.5);
	};
	
	function stepBefore(context) {
	  return new Step(context, 0);
	}
	
	function stepAfter(context) {
	  return new Step(context, 1);
	}
	
	var none = function(series, order) {
	  if (!((n = series.length) > 1)) return;
	  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
	    s0 = s1, s1 = series[order[i]];
	    for (j = 0; j < m; ++j) {
	      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
	    }
	  }
	};
	
	var none$1 = function(series) {
	  var n = series.length, o = new Array(n);
	  while (--n >= 0) o[n] = n;
	  return o;
	};
	
	function stackValue(d, key) {
	  return d[key];
	}
	
	var stack = function() {
	  var keys = constant([]),
	      order = none$1,
	      offset = none,
	      value = stackValue;
	
	  function stack(data) {
	    var kz = keys.apply(this, arguments),
	        i,
	        m = data.length,
	        n = kz.length,
	        sz = new Array(n),
	        oz;
	
	    for (i = 0; i < n; ++i) {
	      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
	        si[j] = sij = [0, +value(data[j], ki, j, data)];
	        sij.data = data[j];
	      }
	      si.key = ki;
	    }
	
	    for (i = 0, oz = order(sz); i < n; ++i) {
	      sz[oz[i]].index = i;
	    }
	
	    offset(sz, oz);
	    return sz;
	  }
	
	  stack.keys = function(_) {
	    return arguments.length ? (keys = typeof _ === "function" ? _ : constant(slice.call(_)), stack) : keys;
	  };
	
	  stack.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), stack) : value;
	  };
	
	  stack.order = function(_) {
	    return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant(slice.call(_)), stack) : order;
	  };
	
	  stack.offset = function(_) {
	    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
	  };
	
	  return stack;
	};
	
	var expand = function(series, order) {
	  if (!((n = series.length) > 0)) return;
	  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
	    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
	    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
	  }
	  none(series, order);
	};
	
	var diverging = function(series, order) {
	  if (!((n = series.length) > 1)) return;
	  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
	    for (yp = yn = 0, i = 0; i < n; ++i) {
	      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
	        d[0] = yp, d[1] = yp += dy;
	      } else if (dy < 0) {
	        d[1] = yn, d[0] = yn += dy;
	      } else {
	        d[0] = yp;
	      }
	    }
	  }
	};
	
	var silhouette = function(series, order) {
	  if (!((n = series.length) > 0)) return;
	  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
	    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
	    s0[j][1] += s0[j][0] = -y / 2;
	  }
	  none(series, order);
	};
	
	var wiggle = function(series, order) {
	  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
	  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
	    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
	      var si = series[order[i]],
	          sij0 = si[j][1] || 0,
	          sij1 = si[j - 1][1] || 0,
	          s3 = (sij0 - sij1) / 2;
	      for (var k = 0; k < i; ++k) {
	        var sk = series[order[k]],
	            skj0 = sk[j][1] || 0,
	            skj1 = sk[j - 1][1] || 0;
	        s3 += skj0 - skj1;
	      }
	      s1 += sij0, s2 += s3 * sij0;
	    }
	    s0[j - 1][1] += s0[j - 1][0] = y;
	    if (s1) y -= s2 / s1;
	  }
	  s0[j - 1][1] += s0[j - 1][0] = y;
	  none(series, order);
	};
	
	var ascending = function(series) {
	  var sums = series.map(sum);
	  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });
	};
	
	function sum(series) {
	  var s = 0, i = -1, n = series.length, v;
	  while (++i < n) if (v = +series[i][1]) s += v;
	  return s;
	}
	
	var descending$1 = function(series) {
	  return ascending(series).reverse();
	};
	
	var insideOut = function(series) {
	  var n = series.length,
	      i,
	      j,
	      sums = series.map(sum),
	      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),
	      top = 0,
	      bottom = 0,
	      tops = [],
	      bottoms = [];
	
	  for (i = 0; i < n; ++i) {
	    j = order[i];
	    if (top < bottom) {
	      top += sums[j];
	      tops.push(j);
	    } else {
	      bottom += sums[j];
	      bottoms.push(j);
	    }
	  }
	
	  return bottoms.reverse().concat(tops);
	};
	
	var reverse = function(series) {
	  return none$1(series).reverse();
	};
	
	exports.arc = arc;
	exports.area = area;
	exports.line = line;
	exports.pie = pie;
	exports.areaRadial = areaRadial;
	exports.radialArea = areaRadial;
	exports.lineRadial = lineRadial$1;
	exports.radialLine = lineRadial$1;
	exports.pointRadial = pointRadial;
	exports.linkHorizontal = linkHorizontal;
	exports.linkVertical = linkVertical;
	exports.linkRadial = linkRadial;
	exports.symbol = symbol;
	exports.symbols = symbols;
	exports.symbolCircle = circle;
	exports.symbolCross = cross;
	exports.symbolDiamond = diamond;
	exports.symbolSquare = square;
	exports.symbolStar = star;
	exports.symbolTriangle = triangle;
	exports.symbolWye = wye;
	exports.curveBasisClosed = basisClosed;
	exports.curveBasisOpen = basisOpen;
	exports.curveBasis = basis;
	exports.curveBundle = bundle;
	exports.curveCardinalClosed = cardinalClosed;
	exports.curveCardinalOpen = cardinalOpen;
	exports.curveCardinal = cardinal;
	exports.curveCatmullRomClosed = catmullRomClosed;
	exports.curveCatmullRomOpen = catmullRomOpen;
	exports.curveCatmullRom = catmullRom;
	exports.curveLinearClosed = linearClosed;
	exports.curveLinear = curveLinear;
	exports.curveMonotoneX = monotoneX;
	exports.curveMonotoneY = monotoneY;
	exports.curveNatural = natural;
	exports.curveStep = step;
	exports.curveStepAfter = stepAfter;
	exports.curveStepBefore = stepBefore;
	exports.stack = stack;
	exports.stackOffsetExpand = expand;
	exports.stackOffsetDiverging = diverging;
	exports.stackOffsetNone = none;
	exports.stackOffsetSilhouette = silhouette;
	exports.stackOffsetWiggle = wiggle;
	exports.stackOrderAscending = ascending;
	exports.stackOrderDescending = descending$1;
	exports.stackOrderInsideOut = insideOut;
	exports.stackOrderNone = none$1;
	exports.stackOrderReverse = reverse;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-time/ Version 1.0.8. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var t0 = new Date;
	var t1 = new Date;
	
	function newInterval(floori, offseti, count, field) {
	
	  function interval(date) {
	    return floori(date = new Date(+date)), date;
	  }
	
	  interval.floor = interval;
	
	  interval.ceil = function(date) {
	    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
	  };
	
	  interval.round = function(date) {
	    var d0 = interval(date),
	        d1 = interval.ceil(date);
	    return date - d0 < d1 - date ? d0 : d1;
	  };
	
	  interval.offset = function(date, step) {
	    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
	  };
	
	  interval.range = function(start, stop, step) {
	    var range = [], previous;
	    start = interval.ceil(start);
	    step = step == null ? 1 : Math.floor(step);
	    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
	    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
	    while (previous < start && start < stop);
	    return range;
	  };
	
	  interval.filter = function(test) {
	    return newInterval(function(date) {
	      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
	    }, function(date, step) {
	      if (date >= date) {
	        if (step < 0) while (++step <= 0) {
	          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
	        } else while (--step >= 0) {
	          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
	        }
	      }
	    });
	  };
	
	  if (count) {
	    interval.count = function(start, end) {
	      t0.setTime(+start), t1.setTime(+end);
	      floori(t0), floori(t1);
	      return Math.floor(count(t0, t1));
	    };
	
	    interval.every = function(step) {
	      step = Math.floor(step);
	      return !isFinite(step) || !(step > 0) ? null
	          : !(step > 1) ? interval
	          : interval.filter(field
	              ? function(d) { return field(d) % step === 0; }
	              : function(d) { return interval.count(0, d) % step === 0; });
	    };
	  }
	
	  return interval;
	}
	
	var millisecond = newInterval(function() {
	  // noop
	}, function(date, step) {
	  date.setTime(+date + step);
	}, function(start, end) {
	  return end - start;
	});
	
	// An optimized implementation for this simple case.
	millisecond.every = function(k) {
	  k = Math.floor(k);
	  if (!isFinite(k) || !(k > 0)) return null;
	  if (!(k > 1)) return millisecond;
	  return newInterval(function(date) {
	    date.setTime(Math.floor(date / k) * k);
	  }, function(date, step) {
	    date.setTime(+date + step * k);
	  }, function(start, end) {
	    return (end - start) / k;
	  });
	};
	
	var milliseconds = millisecond.range;
	
	var durationSecond = 1e3;
	var durationMinute = 6e4;
	var durationHour = 36e5;
	var durationDay = 864e5;
	var durationWeek = 6048e5;
	
	var second = newInterval(function(date) {
	  date.setTime(Math.floor(date / durationSecond) * durationSecond);
	}, function(date, step) {
	  date.setTime(+date + step * durationSecond);
	}, function(start, end) {
	  return (end - start) / durationSecond;
	}, function(date) {
	  return date.getUTCSeconds();
	});
	
	var seconds = second.range;
	
	var minute = newInterval(function(date) {
	  date.setTime(Math.floor(date / durationMinute) * durationMinute);
	}, function(date, step) {
	  date.setTime(+date + step * durationMinute);
	}, function(start, end) {
	  return (end - start) / durationMinute;
	}, function(date) {
	  return date.getMinutes();
	});
	
	var minutes = minute.range;
	
	var hour = newInterval(function(date) {
	  var offset = date.getTimezoneOffset() * durationMinute % durationHour;
	  if (offset < 0) offset += durationHour;
	  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);
	}, function(date, step) {
	  date.setTime(+date + step * durationHour);
	}, function(start, end) {
	  return (end - start) / durationHour;
	}, function(date) {
	  return date.getHours();
	});
	
	var hours = hour.range;
	
	var day = newInterval(function(date) {
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setDate(date.getDate() + step);
	}, function(start, end) {
	  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
	}, function(date) {
	  return date.getDate() - 1;
	});
	
	var days = day.range;
	
	function weekday(i) {
	  return newInterval(function(date) {
	    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setDate(date.getDate() + step * 7);
	  }, function(start, end) {
	    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
	  });
	}
	
	var sunday = weekday(0);
	var monday = weekday(1);
	var tuesday = weekday(2);
	var wednesday = weekday(3);
	var thursday = weekday(4);
	var friday = weekday(5);
	var saturday = weekday(6);
	
	var sundays = sunday.range;
	var mondays = monday.range;
	var tuesdays = tuesday.range;
	var wednesdays = wednesday.range;
	var thursdays = thursday.range;
	var fridays = friday.range;
	var saturdays = saturday.range;
	
	var month = newInterval(function(date) {
	  date.setDate(1);
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setMonth(date.getMonth() + step);
	}, function(start, end) {
	  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
	}, function(date) {
	  return date.getMonth();
	});
	
	var months = month.range;
	
	var year = newInterval(function(date) {
	  date.setMonth(0, 1);
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setFullYear(date.getFullYear() + step);
	}, function(start, end) {
	  return end.getFullYear() - start.getFullYear();
	}, function(date) {
	  return date.getFullYear();
	});
	
	// An optimized implementation for this simple case.
	year.every = function(k) {
	  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
	    date.setMonth(0, 1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setFullYear(date.getFullYear() + step * k);
	  });
	};
	
	var years = year.range;
	
	var utcMinute = newInterval(function(date) {
	  date.setUTCSeconds(0, 0);
	}, function(date, step) {
	  date.setTime(+date + step * durationMinute);
	}, function(start, end) {
	  return (end - start) / durationMinute;
	}, function(date) {
	  return date.getUTCMinutes();
	});
	
	var utcMinutes = utcMinute.range;
	
	var utcHour = newInterval(function(date) {
	  date.setUTCMinutes(0, 0, 0);
	}, function(date, step) {
	  date.setTime(+date + step * durationHour);
	}, function(start, end) {
	  return (end - start) / durationHour;
	}, function(date) {
	  return date.getUTCHours();
	});
	
	var utcHours = utcHour.range;
	
	var utcDay = newInterval(function(date) {
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCDate(date.getUTCDate() + step);
	}, function(start, end) {
	  return (end - start) / durationDay;
	}, function(date) {
	  return date.getUTCDate() - 1;
	});
	
	var utcDays = utcDay.range;
	
	function utcWeekday(i) {
	  return newInterval(function(date) {
	    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCDate(date.getUTCDate() + step * 7);
	  }, function(start, end) {
	    return (end - start) / durationWeek;
	  });
	}
	
	var utcSunday = utcWeekday(0);
	var utcMonday = utcWeekday(1);
	var utcTuesday = utcWeekday(2);
	var utcWednesday = utcWeekday(3);
	var utcThursday = utcWeekday(4);
	var utcFriday = utcWeekday(5);
	var utcSaturday = utcWeekday(6);
	
	var utcSundays = utcSunday.range;
	var utcMondays = utcMonday.range;
	var utcTuesdays = utcTuesday.range;
	var utcWednesdays = utcWednesday.range;
	var utcThursdays = utcThursday.range;
	var utcFridays = utcFriday.range;
	var utcSaturdays = utcSaturday.range;
	
	var utcMonth = newInterval(function(date) {
	  date.setUTCDate(1);
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCMonth(date.getUTCMonth() + step);
	}, function(start, end) {
	  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
	}, function(date) {
	  return date.getUTCMonth();
	});
	
	var utcMonths = utcMonth.range;
	
	var utcYear = newInterval(function(date) {
	  date.setUTCMonth(0, 1);
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCFullYear(date.getUTCFullYear() + step);
	}, function(start, end) {
	  return end.getUTCFullYear() - start.getUTCFullYear();
	}, function(date) {
	  return date.getUTCFullYear();
	});
	
	// An optimized implementation for this simple case.
	utcYear.every = function(k) {
	  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
	    date.setUTCMonth(0, 1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCFullYear(date.getUTCFullYear() + step * k);
	  });
	};
	
	var utcYears = utcYear.range;
	
	exports.timeInterval = newInterval;
	exports.timeMillisecond = millisecond;
	exports.timeMilliseconds = milliseconds;
	exports.utcMillisecond = millisecond;
	exports.utcMilliseconds = milliseconds;
	exports.timeSecond = second;
	exports.timeSeconds = seconds;
	exports.utcSecond = second;
	exports.utcSeconds = seconds;
	exports.timeMinute = minute;
	exports.timeMinutes = minutes;
	exports.timeHour = hour;
	exports.timeHours = hours;
	exports.timeDay = day;
	exports.timeDays = days;
	exports.timeWeek = sunday;
	exports.timeWeeks = sundays;
	exports.timeSunday = sunday;
	exports.timeSundays = sundays;
	exports.timeMonday = monday;
	exports.timeMondays = mondays;
	exports.timeTuesday = tuesday;
	exports.timeTuesdays = tuesdays;
	exports.timeWednesday = wednesday;
	exports.timeWednesdays = wednesdays;
	exports.timeThursday = thursday;
	exports.timeThursdays = thursdays;
	exports.timeFriday = friday;
	exports.timeFridays = fridays;
	exports.timeSaturday = saturday;
	exports.timeSaturdays = saturdays;
	exports.timeMonth = month;
	exports.timeMonths = months;
	exports.timeYear = year;
	exports.timeYears = years;
	exports.utcMinute = utcMinute;
	exports.utcMinutes = utcMinutes;
	exports.utcHour = utcHour;
	exports.utcHours = utcHours;
	exports.utcDay = utcDay;
	exports.utcDays = utcDays;
	exports.utcWeek = utcSunday;
	exports.utcWeeks = utcSundays;
	exports.utcSunday = utcSunday;
	exports.utcSundays = utcSundays;
	exports.utcMonday = utcMonday;
	exports.utcMondays = utcMondays;
	exports.utcTuesday = utcTuesday;
	exports.utcTuesdays = utcTuesdays;
	exports.utcWednesday = utcWednesday;
	exports.utcWednesdays = utcWednesdays;
	exports.utcThursday = utcThursday;
	exports.utcThursdays = utcThursdays;
	exports.utcFriday = utcFriday;
	exports.utcFridays = utcFridays;
	exports.utcSaturday = utcSaturday;
	exports.utcSaturdays = utcSaturdays;
	exports.utcMonth = utcMonth;
	exports.utcMonths = utcMonths;
	exports.utcYear = utcYear;
	exports.utcYears = utcYears;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports, __webpack_require__(121)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(module, exports, require('../utils'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod, mod.exports, global.utils);
	    global.index = mod.exports;
	  }
	})(this, function (module, exports, _utils) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  function _defineProperty(obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }
	
	    return obj;
	  }
	
	  var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  var addedDiff = function addedDiff(lhs, rhs) {
	
	    if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};
	
	    var l = (0, _utils.properObject)(lhs);
	    var r = (0, _utils.properObject)(rhs);
	
	    return Object.keys(r).reduce(function (acc, key) {
	      if (l.hasOwnProperty(key)) {
	        var difference = addedDiff(l[key], r[key]);
	
	        if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;
	
	        return _extends({}, acc, _defineProperty({}, key, difference));
	      }
	
	      return _extends({}, acc, _defineProperty({}, key, r[key]));
	    }, {});
	  };
	
	  exports.default = addedDiff;
	  module.exports = exports['default'];
	});

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports, __webpack_require__(121)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(module, exports, require('../utils'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod, mod.exports, global.utils);
	    global.index = mod.exports;
	  }
	})(this, function (module, exports, _utils) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  function _defineProperty(obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }
	
	    return obj;
	  }
	
	  var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  var deletedDiff = function deletedDiff(lhs, rhs) {
	    if (lhs === rhs || !(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return {};
	
	    var l = (0, _utils.properObject)(lhs);
	    var r = (0, _utils.properObject)(rhs);
	
	    return Object.keys(l).reduce(function (acc, key) {
	      if (r.hasOwnProperty(key)) {
	        var difference = deletedDiff(l[key], r[key]);
	
	        if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference)) return acc;
	
	        return _extends({}, acc, _defineProperty({}, key, difference));
	      }
	
	      return _extends({}, acc, _defineProperty({}, key, undefined));
	    }, {});
	  };
	
	  exports.default = deletedDiff;
	  module.exports = exports['default'];
	});

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports, __webpack_require__(121)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(module, exports, require('../utils'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod, mod.exports, global.utils);
	    global.index = mod.exports;
	  }
	})(this, function (module, exports, _utils) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  function _defineProperty(obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }
	
	    return obj;
	  }
	
	  var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  var updatedDiff = function updatedDiff(lhs, rhs) {
	
	    if (lhs === rhs) return {};
	
	    if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs;
	
	    var l = (0, _utils.properObject)(lhs);
	    var r = (0, _utils.properObject)(rhs);
	
	    if ((0, _utils.isDate)(l) || (0, _utils.isDate)(r)) {
	      if (l.valueOf() == r.valueOf()) return {};
	      return r;
	    }
	
	    return Object.keys(r).reduce(function (acc, key) {
	
	      if (l.hasOwnProperty(key)) {
	        var difference = updatedDiff(l[key], r[key]);
	
	        if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference) && !(0, _utils.isDate)(difference)) return acc;
	
	        return _extends({}, acc, _defineProperty({}, key, difference));
	      }
	
	      return acc;
	    }, {});
	  };
	
	  exports.default = updatedDiff;
	  module.exports = exports['default'];
	});

/***/ }),
/* 305 */,
/* 306 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	// murmurhash2 via https://gist.github.com/raycmorgan/588423
	function hashString(str) {
	  return hash(str, str.length).toString(36);
	}
	
	function hash(str, seed) {
	  var m = 0x5bd1e995;
	  var r = 24;
	  var h = seed ^ str.length;
	  var length = str.length;
	  var currentIndex = 0;
	
	  while (length >= 4) {
	    var k = UInt32(str, currentIndex);
	    k = Umul32(k, m);
	    k ^= k >>> r;
	    k = Umul32(k, m);
	    h = Umul32(h, m);
	    h ^= k;
	    currentIndex += 4;
	    length -= 4;
	  }
	
	  switch (length) {
	    case 3:
	      h ^= UInt16(str, currentIndex);
	      h ^= str.charCodeAt(currentIndex + 2) << 16;
	      h = Umul32(h, m);
	      break;
	
	    case 2:
	      h ^= UInt16(str, currentIndex);
	      h = Umul32(h, m);
	      break;
	
	    case 1:
	      h ^= str.charCodeAt(currentIndex);
	      h = Umul32(h, m);
	      break;
	  }
	
	  h ^= h >>> 13;
	  h = Umul32(h, m);
	  h ^= h >>> 15;
	  return h >>> 0;
	}
	
	function UInt32(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
	}
	
	function UInt16(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
	}
	
	function Umul32(n, m) {
	  n = n | 0;
	  m = m | 0;
	  var nlo = n & 0xffff;
	  var nhi = n >>> 16;
	  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
	  return res;
	}
	
	var pa = function fa(ha) {
	  function V(b, c, d, k, l) {
	    for (var a = 0, f = 0, n = 0, e = 0, h, q, m, v = 0, A = 0, B = 0, x = 0, C = 0, p = 0, G = 0, r = 0, N = q = 0, L = 0, t = 0, D = d.length, F = D - 1, g = "", u = "", S = "", M = "", H; r < D;) {
	      m = d.charCodeAt(r);
	      r === F && 0 !== f + e + n + a && (0 !== f && (m = 47 === f ? 10 : 47), e = n = a = 0, D++, F++);
	
	      if (0 === f + e + n + a) {
	        if (r === F && (0 < q && (g = g.replace(P, "")), 0 < g.trim().length)) {
	          switch (m) {
	            case 32:
	            case 9:
	            case 59:
	            case 13:
	            case 10:
	              break;
	
	            default:
	              g += d.charAt(r);
	          }
	
	          m = 59;
	        }
	
	        if (1 === N) switch (m) {
	          case 123:
	          case 125:
	          case 59:
	          case 34:
	          case 39:
	          case 40:
	          case 41:
	          case 44:
	            N = 0;
	
	          case 9:
	          case 13:
	          case 10:
	          case 32:
	            break;
	
	          default:
	            for (N = 0, t = r, h = m, r--, m = 59; t < D;) {
	              switch (d.charCodeAt(++t)) {
	                case 10:
	                case 13:
	                case 59:
	                  r++, m = h;
	
	                case 58:
	                case 123:
	                  t = D;
	              }
	            }
	
	        }
	
	        switch (m) {
	          case 123:
	            g = g.trim();
	            h = g.charCodeAt(0);
	            x = 1;
	
	            for (t = ++r; r < D;) {
	              m = d.charCodeAt(r);
	
	              switch (m) {
	                case 123:
	                  x++;
	                  break;
	
	                case 125:
	                  x--;
	              }
	
	              if (0 === x) break;
	              r++;
	            }
	
	            p = d.substring(t, r);
	            0 === h && (h = (g = g.replace(qa, "").trim()).charCodeAt(0));
	
	            switch (h) {
	              case 64:
	                0 < q && (g = g.replace(P, ""));
	                q = g.charCodeAt(1);
	
	                switch (q) {
	                  case 100:
	                  case 109:
	                  case 115:
	                  case 45:
	                    h = c;
	                    break;
	
	                  default:
	                    h = W;
	                }
	
	                p = V(c, h, p, q, l + 1);
	                t = p.length;
	                0 < X && 0 === t && (t = g.length);
	                0 < E && (h = ia(W, g, L), H = O(3, p, h, c, I, y, t, q, l), g = h.join(""), void 0 !== H && 0 === (t = (p = H.trim()).length) && (q = 0, p = ""));
	                if (0 < t) switch (q) {
	                  case 115:
	                    g = g.replace(ra, sa);
	
	                  case 100:
	                  case 109:
	                  case 45:
	                    p = g + "{" + p + "}";
	                    break;
	
	                  case 107:
	                    g = g.replace(ta, "$1 $2" + (0 < Q ? T : ""));
	                    p = g + "{" + p + "}";
	                    p = 1 === w || 2 === w && U("@" + p, 3) ? "@-webkit-" + p + "@" + p : "@" + p;
	                    break;
	
	                  default:
	                    p = g + p, 112 === k && (p = (u += p, ""));
	                } else p = "";
	                break;
	
	              default:
	                p = V(c, ia(c, g, L), p, k, l + 1);
	            }
	
	            S += p;
	            p = L = q = G = N = C = 0;
	            g = "";
	            m = d.charCodeAt(++r);
	            break;
	
	          case 125:
	          case 59:
	            g = (0 < q ? g.replace(P, "") : g).trim();
	            if (1 < (t = g.length)) switch (0 === G && (h = g.charCodeAt(0), 45 === h || 96 < h && 123 > h) && (t = (g = g.replace(" ", ":")).length), 0 < E && void 0 !== (H = O(1, g, c, b, I, y, u.length, k, l)) && 0 === (t = (g = H.trim()).length) && (g = "\x00\x00"), h = g.charCodeAt(0), q = g.charCodeAt(1), h + q) {
	              case 0:
	                break;
	
	              case 169:
	              case 163:
	                M += g + d.charAt(r);
	                break;
	
	              default:
	                58 !== g.charCodeAt(t - 1) && (u += ja(g, h, q, g.charCodeAt(2)));
	            }
	            L = q = G = N = C = 0;
	            g = "";
	            m = d.charCodeAt(++r);
	        }
	      }
	
	      switch (m) {
	        case 13:
	        case 10:
	          if (0 === f + e + n + a + ka) switch (B) {
	            case 41:
	            case 39:
	            case 34:
	            case 64:
	            case 126:
	            case 62:
	            case 42:
	            case 43:
	            case 47:
	            case 45:
	            case 58:
	            case 44:
	            case 59:
	            case 123:
	            case 125:
	              break;
	
	            default:
	              0 < G && (N = 1);
	          }
	          47 === f ? f = 0 : 0 === z + C && (q = 1, g += "\x00");
	          0 < E * la && O(0, g, c, b, I, y, u.length, k, l);
	          y = 1;
	          I++;
	          break;
	
	        case 59:
	        case 125:
	          if (0 === f + e + n + a) {
	            y++;
	            break;
	          }
	
	        default:
	          y++;
	          h = d.charAt(r);
	
	          switch (m) {
	            case 9:
	            case 32:
	              if (0 === e + a + f) switch (v) {
	                case 44:
	                case 58:
	                case 9:
	                case 32:
	                  h = "";
	                  break;
	
	                default:
	                  32 !== m && (h = " ");
	              }
	              break;
	
	            case 0:
	              h = "\\0";
	              break;
	
	            case 12:
	              h = "\\f";
	              break;
	
	            case 11:
	              h = "\\v";
	              break;
	
	            case 38:
	              0 === e + f + a && 0 < z && (q = L = 1, h = "\f" + h);
	              break;
	
	            case 108:
	              if (0 === e + f + a + J && 0 < G) switch (r - G) {
	                case 2:
	                  112 === v && 58 === d.charCodeAt(r - 3) && (J = v);
	
	                case 8:
	                  111 === A && (J = A);
	              }
	              break;
	
	            case 58:
	              0 === e + f + a && (G = r);
	              break;
	
	            case 44:
	              0 === f + n + e + a && (q = 1, h += "\r");
	              break;
	
	            case 34:
	              0 === f && (e = e === m ? 0 : 0 === e ? m : e);
	              break;
	
	            case 39:
	              0 === f && (e = e === m ? 0 : 0 === e ? m : e);
	              break;
	
	            case 91:
	              0 === e + f + n && a++;
	              break;
	
	            case 93:
	              0 === e + f + n && a--;
	              break;
	
	            case 41:
	              0 === e + f + a && n--;
	              break;
	
	            case 40:
	              if (0 === e + f + a) {
	                if (0 === C) switch (2 * v + 3 * A) {
	                  case 533:
	                    break;
	
	                  default:
	                    x = 0, C = 1;
	                }
	                n++;
	              }
	
	              break;
	
	            case 64:
	              0 === f + n + e + a + G + p && (p = 1);
	              break;
	
	            case 42:
	            case 47:
	              if (!(0 < e + a + n)) switch (f) {
	                case 0:
	                  switch (2 * m + 3 * d.charCodeAt(r + 1)) {
	                    case 235:
	                      f = 47;
	                      break;
	
	                    case 220:
	                      t = r, f = 42;
	                  }
	
	                  break;
	
	                case 42:
	                  47 === m && 42 === v && (33 === d.charCodeAt(t + 2) && (u += d.substring(t, r + 1)), h = "", f = 0);
	              }
	          }
	
	          if (0 === f) {
	            if (0 === z + e + a + p && 107 !== k && 59 !== m) switch (m) {
	              case 44:
	              case 126:
	              case 62:
	              case 43:
	              case 41:
	              case 40:
	                if (0 === C) {
	                  switch (v) {
	                    case 9:
	                    case 32:
	                    case 10:
	                    case 13:
	                      h += "\x00";
	                      break;
	
	                    default:
	                      h = "\x00" + h + (44 === m ? "" : "\x00");
	                  }
	
	                  q = 1;
	                } else switch (m) {
	                  case 40:
	                    C = ++x;
	                    break;
	
	                  case 41:
	                    0 === (C = --x) && (q = 1, h += "\x00");
	                }
	
	                break;
	
	              case 9:
	              case 32:
	                switch (v) {
	                  case 0:
	                  case 123:
	                  case 125:
	                  case 59:
	                  case 44:
	                  case 12:
	                  case 9:
	                  case 32:
	                  case 10:
	                  case 13:
	                    break;
	
	                  default:
	                    0 === C && (q = 1, h += "\x00");
	                }
	
	            }
	            g += h;
	            32 !== m && 9 !== m && (B = m);
	          }
	
	      }
	
	      A = v;
	      v = m;
	      r++;
	    }
	
	    t = u.length;
	    0 < X && 0 === t && 0 === S.length && 0 === c[0].length === !1 && (109 !== k || 1 === c.length && (0 < z ? K : R) === c[0]) && (t = c.join(",").length + 2);
	
	    if (0 < t) {
	      if (0 === z && 107 !== k) {
	        d = 0;
	        a = c.length;
	
	        for (f = Array(a); d < a; ++d) {
	          v = c[d].split(ua);
	          A = "";
	          B = 0;
	
	          for (D = v.length; B < D; ++B) {
	            if (!(0 === (x = (e = v[B]).length) && 1 < D)) {
	              r = A.charCodeAt(A.length - 1);
	              L = e.charCodeAt(0);
	              n = "";
	              if (0 !== B) switch (r) {
	                case 42:
	                case 126:
	                case 62:
	                case 43:
	                case 32:
	                case 40:
	                  break;
	
	                default:
	                  n = " ";
	              }
	
	              switch (L) {
	                case 38:
	                  e = n + K;
	
	                case 126:
	                case 62:
	                case 43:
	                case 32:
	                case 41:
	                case 40:
	                  break;
	
	                case 91:
	                  e = n + e + K;
	                  break;
	
	                case 58:
	                  switch (2 * e.charCodeAt(1) + 3 * e.charCodeAt(2)) {
	                    case 530:
	                      if (0 < Y) {
	                        e = n + e.substring(8, x - 1);
	                        break;
	                      }
	
	                    default:
	                      if (1 > B || 1 > v[B - 1].length) e = n + K + e;
	                  }
	
	                  break;
	
	                case 44:
	                  n = "";
	
	                default:
	                  e = 1 < x && 0 < e.indexOf(":") ? n + e.replace(va, "$1" + K + "$2") : n + e + K;
	              }
	
	              A += e;
	            }
	          }
	
	          f[d] = A.replace(P, "").trim();
	        }
	
	        c = f;
	      }
	
	      h = c;
	      if (0 < E && (H = O(2, u, h, b, I, y, t, k, l), void 0 !== H && 0 === (u = H).length)) return M + u + S;
	      u = h.join(",") + "{" + u + "}";
	
	      if (0 !== w * J) {
	        2 !== w || U(u, 2) || (J = 0);
	
	        switch (J) {
	          case 111:
	            u = u.replace(wa, ":-moz-$1") + u;
	            break;
	
	          case 112:
	            u = u.replace(Z, "::-webkit-input-$1") + u.replace(Z, "::-moz-$1") + u.replace(Z, ":-ms-input-$1") + u;
	        }
	
	        J = 0;
	      }
	    }
	
	    return M + u + S;
	  }
	
	  function ia(b, c, d) {
	    var k = c.trim().split(xa);
	    c = k;
	    var l = k.length,
	        a = b.length;
	
	    switch (a) {
	      case 0:
	      case 1:
	        var f = 0;
	
	        for (b = 0 === a ? "" : b[0] + " "; f < l; ++f) {
	          c[f] = ma(b, c[f], d, a).trim();
	        }
	
	        break;
	
	      default:
	        var n = f = 0;
	
	        for (c = []; f < l; ++f) {
	          for (var e = 0; e < a; ++e) {
	            c[n++] = ma(b[e] + " ", k[f], d, a).trim();
	          }
	        }
	
	    }
	
	    return c;
	  }
	
	  function ma(b, c, d, k) {
	    var l = c.charCodeAt(0);
	    33 > l && (l = (c = c.trim()).charCodeAt(0));
	
	    switch (l) {
	      case 38:
	        switch (z + k) {
	          case 0:
	          case 1:
	            if (0 === b.trim().length) break;
	
	          default:
	            return c.replace(M, "$1" + b.trim());
	        }
	
	        break;
	
	      case 58:
	        switch (c.charCodeAt(1)) {
	          case 103:
	            if (0 < Y && 0 < z) return c.replace(ya, "$1").replace(M, "$1" + R);
	            break;
	
	          default:
	            return b.trim() + c;
	        }
	
	      default:
	        if (0 < d * z && 0 < c.indexOf("\f")) return c.replace(M, (58 === b.charCodeAt(0) ? "" : "$1") + b.trim());
	    }
	
	    return b + c;
	  }
	
	  function ja(b, c, d, k) {
	    var l = 0,
	        a = b + ";";
	    c = 2 * c + 3 * d + 4 * k;
	
	    if (944 === c) {
	      l = a.length;
	      b = a.indexOf(":", 9) + 1;
	      d = a.substring(0, b).trim();
	      k = a.substring(b, l - 1).trim();
	
	      switch (a.charCodeAt(9) * Q) {
	        case 0:
	          break;
	
	        case 45:
	          if (110 !== a.charCodeAt(10)) break;
	
	        default:
	          for (a = k.split((k = "", za)), b = c = 0, l = a.length; c < l; b = 0, ++c) {
	            for (var f = a[c], n = f.split(Aa); f = n[b];) {
	              var e = f.charCodeAt(0);
	              if (1 === Q && (64 < e && 90 > e || 96 < e && 123 > e || 95 === e || 45 === e && 45 !== f.charCodeAt(1))) switch (isNaN(parseFloat(f)) + (-1 !== f.indexOf("("))) {
	                case 1:
	                  switch (f) {
	                    case "infinite":
	                    case "alternate":
	                    case "backwards":
	                    case "running":
	                    case "normal":
	                    case "forwards":
	                    case "both":
	                    case "none":
	                    case "linear":
	                    case "ease":
	                    case "ease-in":
	                    case "ease-out":
	                    case "ease-in-out":
	                    case "paused":
	                    case "reverse":
	                    case "alternate-reverse":
	                    case "inherit":
	                    case "initial":
	                    case "unset":
	                    case "step-start":
	                    case "step-end":
	                      break;
	
	                    default:
	                      f += T;
	                  }
	
	              }
	              n[b++] = f;
	            }
	
	            k += (0 === c ? "" : ",") + n.join(" ");
	          }
	
	      }
	
	      k = d + k + ";";
	      return 1 === w || 2 === w && U(k, 1) ? "-webkit-" + k + k : k;
	    }
	
	    if (0 === w || 2 === w && !U(a, 1)) return a;
	
	    switch (c) {
	      case 1015:
	        return 45 === a.charCodeAt(9) ? "-webkit-" + a + a : a;
	
	      case 951:
	        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
	
	      case 963:
	        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
	
	      case 1009:
	        if (100 !== a.charCodeAt(4)) break;
	
	      case 969:
	      case 942:
	        return "-webkit-" + a + a;
	
	      case 978:
	        return "-webkit-" + a + "-moz-" + a + a;
	
	      case 1019:
	      case 983:
	        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
	
	      case 883:
	        return 45 === a.charCodeAt(8) ? "-webkit-" + a + a : a;
	
	      case 932:
	        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
	          case 103:
	            return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;
	
	          case 115:
	            return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;
	
	          case 98:
	            return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
	        }
	        return "-webkit-" + a + "-ms-" + a + a;
	
	      case 964:
	        return "-webkit-" + a + "-ms-flex-" + a + a;
	
	      case 1023:
	        if (99 !== a.charCodeAt(8)) break;
	        b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
	        return "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a;
	
	      case 1005:
	        return Ba.test(a) ? a.replace(na, ":-webkit-") + a.replace(na, ":-moz-") + a : a;
	
	      case 1E3:
	        b = a.substring(13).trim();
	        l = b.indexOf("-") + 1;
	
	        switch (b.charCodeAt(0) + b.charCodeAt(l)) {
	          case 226:
	            b = a.replace(aa, "tb");
	            break;
	
	          case 232:
	            b = a.replace(aa, "tb-rl");
	            break;
	
	          case 220:
	            b = a.replace(aa, "lr");
	            break;
	
	          default:
	            return a;
	        }
	
	        return "-webkit-" + a + "-ms-" + b + a;
	
	      case 1017:
	        if (-1 === a.indexOf("sticky", 9)) break;
	
	      case 975:
	        l = (a = b).length - 10;
	        b = (33 === a.charCodeAt(l) ? a.substring(0, l) : a).substring(b.indexOf(":", 7) + 1).trim();
	
	        switch (c = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
	          case 203:
	            if (111 > b.charCodeAt(8)) break;
	
	          case 115:
	            a = a.replace(b, "-webkit-" + b) + ";" + a;
	            break;
	
	          case 207:
	          case 102:
	            a = a.replace(b, "-webkit-" + (102 < c ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;
	        }
	
	        return a + ";";
	
	      case 938:
	        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
	          case 105:
	            return b = a.replace("-items", ""), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;
	
	          case 115:
	            return "-webkit-" + a + "-ms-flex-item-" + a.replace(Ca, "") + a;
	
	          default:
	            return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "") + a;
	        }
	        break;
	
	      case 953:
	        if (0 < (l = a.indexOf("-content", 9)) && 109 === a.charCodeAt(l - 3) && 45 !== a.charCodeAt(l - 4)) return b = a.substring(l - 3), "width:-webkit-" + b + "width:-moz-" + b + "width:" + b;
	        break;
	
	      case 962:
	        if (a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a, 211 === d + k && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)) return a.substring(0, a.indexOf(";", 27) + 1).replace(Da, "$1-webkit-$2") + a;
	    }
	
	    return a;
	  }
	
	  function U(b, c) {
	    var d = b.indexOf(1 === c ? ":" : "{"),
	        k = b.substring(0, 3 !== c ? d : 10);
	    d = b.substring(d + 1, b.length - 1);
	    return ba(2 !== c ? k : k.replace(Ea, "$1"), d, c);
	  }
	
	  function sa(b, c) {
	    var d = ja(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
	    return d !== c + ";" ? d.replace(Fa, " or ($1)").substring(4) : "(" + c + ")";
	  }
	
	  function O(b, c, d, k, l, a, f, n, e) {
	    for (var h = 0, q = c, m; h < E; ++h) {
	      switch (m = ca[h].call(F, b, q, d, k, l, a, f, n, e)) {
	        case void 0:
	        case !1:
	        case !0:
	        case null:
	          break;
	
	        default:
	          q = m;
	      }
	    }
	
	    switch (q) {
	      case void 0:
	      case !1:
	      case !0:
	      case null:
	      case c:
	        break;
	
	      default:
	        return q;
	    }
	  }
	
	  function da(b) {
	    switch (b) {
	      case void 0:
	      case null:
	        E = ca.length = 0;
	        break;
	
	      default:
	        switch (b.constructor) {
	          case Array:
	            for (var c = 0, d = b.length; c < d; ++c) {
	              da(b[c]);
	            }
	
	            break;
	
	          case Function:
	            ca[E++] = b;
	            break;
	
	          case Boolean:
	            la = !!b | 0;
	        }
	
	    }
	
	    return da;
	  }
	
	  function ea(b) {
	    for (var c in b) {
	      var d = b[c];
	
	      switch (c) {
	        case "keyframe":
	          Q = d | 0;
	          break;
	
	        case "global":
	          Y = d | 0;
	          break;
	
	        case "cascade":
	          z = d | 0;
	          break;
	
	        case "compress":
	          oa = d | 0;
	          break;
	
	        case "semicolon":
	          ka = d | 0;
	          break;
	
	        case "preserve":
	          X = d | 0;
	          break;
	
	        case "prefix":
	          ba = null, d ? "function" !== typeof d ? w = 1 : (w = 2, ba = d) : w = 0;
	      }
	    }
	
	    return ea;
	  }
	
	  function F(b, c) {
	    if (void 0 !== this && this.constructor === F) return fa(b);
	    var d = b,
	        k = d.charCodeAt(0);
	    33 > k && (k = (d = d.trim()).charCodeAt(0));
	    0 < Q && (T = d.replace(Ga, 91 === k ? "" : "-"));
	    k = 1;
	    1 === z ? R = d : K = d;
	    d = [R];
	
	    if (0 < E) {
	      var l = O(-1, c, d, d, I, y, 0, 0, 0);
	      void 0 !== l && "string" === typeof l && (c = l);
	    }
	
	    var a = V(W, d, c, 0, 0);
	    0 < E && (l = O(-2, a, d, d, I, y, a.length, 0, 0), void 0 !== l && "string" !== typeof (a = l) && (k = 0));
	    K = R = T = "";
	    J = 0;
	    y = I = 1;
	    return 0 === oa * k ? a : a.replace(P, "").replace(Ha, "").replace(Ia, "$1").replace(Ja, "$1").replace(Ka, " ");
	  }
	
	  var qa = /^\0+/g,
	      P = /[\0\r\f]/g,
	      na = /: */g,
	      Ba = /zoo|gra/,
	      Da = /([,: ])(transform)/g,
	      za = /,+\s*(?![^(]*[)])/g,
	      Aa = / +\s*(?![^(]*[)])/g,
	      ua = / *[\0] */g,
	      xa = /,\r+?/g,
	      M = /([\t\r\n ])*\f?&/g,
	      ya = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,
	      Ga = /\W+/g,
	      ta = /@(k\w+)\s*(\S*)\s*/,
	      Z = /::(place)/g,
	      wa = /:(read-only)/g,
	      Ha = /\s+(?=[{\];=:>])/g,
	      Ia = /([[}=:>])\s+/g,
	      Ja = /(\{[^{]+?);(?=\})/g,
	      Ka = /\s{2,}/g,
	      va = /([^\(])(:+) */g,
	      aa = /[svh]\w+-[tblr]{2}/,
	      ra = /\(\s*(.*)\s*\)/g,
	      Fa = /([^]*?);/g,
	      Ca = /-self|flex-/g,
	      Ea = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
	      y = 1,
	      I = 1,
	      J = 0,
	      z = 1,
	      w = 1,
	      Y = 1,
	      oa = 0,
	      ka = 0,
	      X = 0,
	      W = [],
	      ca = [],
	      E = 0,
	      ba = null,
	      la = 0,
	      Q = 1,
	      T = "",
	      K = "",
	      R = "";
	  F.use = da;
	  F.set = ea;
	  void 0 !== ha && ea(ha);
	  return F;
	};
	
	//  weak
	function memoize(fn) {
	  var cache = {};
	  return function (arg) {
	    if (cache[arg] === undefined) cache[arg] = fn(arg);
	    return cache[arg];
	  };
	}
	var STYLES_KEY = '__emotion_styles';
	var TARGET_KEY = '__emotion_target';
	var unitless = {
	  animationIterationCount: 1,
	  borderImageOutset: 1,
	  borderImageSlice: 1,
	  borderImageWidth: 1,
	  boxFlex: 1,
	  boxFlexGroup: 1,
	  boxOrdinalGroup: 1,
	  columnCount: 1,
	  columns: 1,
	  flex: 1,
	  flexGrow: 1,
	  flexPositive: 1,
	  flexShrink: 1,
	  flexNegative: 1,
	  flexOrder: 1,
	  gridRow: 1,
	  gridRowEnd: 1,
	  gridRowSpan: 1,
	  gridRowStart: 1,
	  gridColumn: 1,
	  gridColumnEnd: 1,
	  gridColumnSpan: 1,
	  gridColumnStart: 1,
	  fontWeight: 1,
	  lineClamp: 1,
	  lineHeight: 1,
	  opacity: 1,
	  order: 1,
	  orphans: 1,
	  tabSize: 1,
	  widows: 1,
	  zIndex: 1,
	  zoom: 1,
	  // SVG-related properties
	  fillOpacity: 1,
	  floodOpacity: 1,
	  stopOpacity: 1,
	  strokeDasharray: 1,
	  strokeDashoffset: 1,
	  strokeMiterlimit: 1,
	  strokeOpacity: 1,
	  strokeWidth: 1
	};
	
	exports.memoize = memoize;
	exports.STYLES_KEY = STYLES_KEY;
	exports.TARGET_KEY = TARGET_KEY;
	exports.unitless = unitless;
	exports.hashString = hashString;
	exports.Stylis = pa;
	//# sourceMappingURL=index.cjs.js.map


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
	
	var emotionUtils = __webpack_require__(306);
	var stylisRuleSheet = _interopDefault(__webpack_require__(1096));
	
	/*
	
	high performance StyleSheet for css-in-js systems
	
	- uses multiple style tags behind the scenes for millions of rules
	- uses `insertRule` for appending in production for *much* faster performance
	- 'polyfills' on server side
	
	// usage
	
	import StyleSheet from 'glamor/lib/sheet'
	let styleSheet = new StyleSheet()
	
	styleSheet.inject()
	- 'injects' the stylesheet into the page (or into memory if on server)
	
	styleSheet.insert('#box { border: 1px solid red; }')
	- appends a css rule into the stylesheet
	
	styleSheet.flush()
	- empties the stylesheet of all its contents
	
	*/
	function sheetForTag(tag) {
	  if (tag.sheet) {
	    return tag.sheet;
	  } // this weirdness brought to you by firefox
	
	
	  for (var i = 0; i < document.styleSheets.length; i++) {
	    if (document.styleSheets[i].ownerNode === tag) {
	      return document.styleSheets[i];
	    }
	  }
	}
	
	function makeStyleTag() {
	  var tag = document.createElement('style');
	  tag.type = 'text/css';
	  tag.setAttribute('data-emotion', '');
	  tag.appendChild(document.createTextNode(''));
	  document.head.appendChild(tag);
	  return tag;
	}
	
	var StyleSheet =
	/*#__PURE__*/
	function () {
	  function StyleSheet() {
	    this.isBrowser = typeof window !== 'undefined';
	    this.isSpeedy = ("production") === 'production'; // the big drawback here is that the css won't be editable in devtools
	
	    this.tags = [];
	    this.ctr = 0;
	  }
	
	  var _proto = StyleSheet.prototype;
	
	  _proto.inject = function inject() {
	    if (this.injected) {
	      throw new Error('already injected!');
	    }
	
	    if (this.isBrowser) {
	      this.tags[0] = makeStyleTag();
	    } else {
	      // server side 'polyfill'. just enough behavior to be useful.
	      this.sheet = [];
	    }
	
	    this.injected = true;
	  };
	
	  _proto.speedy = function speedy(bool) {
	    if (this.ctr !== 0) {
	      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})
	      throw new Error("cannot change speedy now");
	    }
	
	    this.isSpeedy = !!bool;
	  };
	
	  _proto.insert = function insert(rule, sourceMap) {
	    if (this.isBrowser) {
	      // this is the ultrafast version, works across browsers
	      if (this.isSpeedy) {
	        var tag = this.tags[this.tags.length - 1];
	        var sheet = sheetForTag(tag);
	
	        try {
	          sheet.insertRule(rule, sheet.cssRules.length);
	        } catch (e) {
	          if (false) {
	            console.warn('illegal rule', rule); // eslint-disable-line no-console
	          }
	        }
	      } else {
	        var _tag = makeStyleTag();
	
	        this.tags.push(_tag);
	
	        _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));
	      }
	
	      this.ctr++;
	
	      if (this.ctr % 65000 === 0) {
	        this.tags.push(makeStyleTag());
	      }
	    } else {
	      // enough 'spec compliance' to be able to extract the rules later
	      // in other words, just the rule
	      this.sheet.push(rule);
	    }
	  };
	
	  _proto.flush = function flush() {
	    if (this.isBrowser) {
	      this.tags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	      });
	      this.tags = [];
	      this.ctr = 0; // todo - look for remnants in document.styleSheets
	    } else {
	      // simpler on server
	      this.sheet = [];
	    }
	
	    this.injected = false;
	  };
	
	  return StyleSheet;
	}();
	
	var sheet = new StyleSheet(); // 🚀
	
	sheet.inject();
	var stylisOptions = {
	  keyframe: false
	};
	
	if (false) {
	  stylisOptions.compress = false;
	}
	
	var stylis = new emotionUtils.Stylis(stylisOptions);
	var externalStylisPlugins = [];
	var use = stylis.use;
	
	function insertRule(rule) {
	  sheet.insert(rule, currentSourceMap);
	}
	
	var insertionPlugin = stylisRuleSheet(insertRule);
	var useStylisPlugin = function useStylisPlugin(plugin) {
	  externalStylisPlugins.push(plugin);
	  use(null)(externalStylisPlugins)(insertionPlugin);
	};
	exports.registered = {};
	exports.inserted = {};
	var currentSourceMap = '';
	stylis.use(insertionPlugin);
	
	function handleInterpolation(interpolation, couldBeSelectorInterpolation) {
	  if (interpolation == null) {
	    return '';
	  }
	
	  switch (typeof interpolation) {
	    case 'boolean':
	      return '';
	
	    case 'function':
	      if (interpolation[emotionUtils.STYLES_KEY] !== undefined) {
	        if (false) {
	          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
	        }
	
	        return "." + interpolation[emotionUtils.TARGET_KEY];
	      }
	
	      return handleInterpolation.call(this, this === undefined ? interpolation() : interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);
	
	    case 'object':
	      return createStringFromObject.call(this, interpolation);
	
	    default:
	      var cached = exports.registered[interpolation];
	      return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;
	  }
	}
	
	var hyphenateRegex = /[A-Z]|^ms/g;
	var processStyleName = emotionUtils.memoize(function (styleName) {
	  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();
	});
	
	var processStyleValue = function processStyleValue(key, value) {
	  if (value === undefined || value === null || typeof value === 'boolean') return '';
	
	  if (emotionUtils.unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties
	  !isNaN(value) && value !== 0) {
	    return value + 'px';
	  }
	
	  return value;
	};
	
	var objectToStringCache = new WeakMap();
	
	function createStringFromObject(obj) {
	  if (objectToStringCache.has(obj)) {
	    return objectToStringCache.get(obj);
	  }
	
	  var string = '';
	
	  if (Array.isArray(obj)) {
	    obj.forEach(function (interpolation) {
	      string += handleInterpolation.call(this, interpolation, false);
	    }, this);
	  } else {
	    Object.keys(obj).forEach(function (key) {
	      if (typeof obj[key] !== 'object') {
	        if (exports.registered[obj[key]] !== undefined) {
	          string += key + "{" + exports.registered[obj[key]] + "}";
	        } else {
	          string += processStyleName(key) + ":" + processStyleValue(key, obj[key]) + ";";
	        }
	      } else {
	        string += key + "{" + handleInterpolation.call(this, obj[key], false) + "}";
	      }
	    }, this);
	  }
	
	  objectToStringCache.set(obj, string);
	  return string;
	}
	
	function isLastCharDot(string) {
	  return string.charCodeAt(string.length - 1) === 46; // .
	}
	
	var hash;
	var name;
	var labelPattern = /label:\s*([^\s;\n]+)\s*[;\n]/g;
	
	function createStyles(strings) {
	  var stringMode = true;
	  var styles = '';
	  var identifierName = '';
	
	  if (strings == null || strings.raw === undefined) {
	    stringMode = false;
	    styles = handleInterpolation.call(this, strings, false);
	  } else {
	    styles = strings[0];
	  }
	
	  for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    interpolations[_key - 1] = arguments[_key];
	  }
	
	  interpolations.forEach(function (interpolation, i) {
	    styles += handleInterpolation.call(this, interpolation, isLastCharDot(styles));
	
	    if (stringMode === true && strings[i + 1] !== undefined) {
	      styles += strings[i + 1];
	    }
	  }, this);
	  styles = styles.replace(labelPattern, function (match, p1) {
	    identifierName += "-" + p1;
	    return '';
	  });
	  hash = emotionUtils.hashString(styles + identifierName);
	  name = hash + identifierName;
	  return styles;
	}
	
	if (false) {
	  var sourceMapRegEx = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//;
	  var oldStylis = stylis;
	
	  stylis = function stylis(selector, styles) {
	    var result = sourceMapRegEx.exec(styles);
	    currentSourceMap = result ? result[0] : '';
	    oldStylis(selector, styles);
	    currentSourceMap = '';
	  };
	}
	
	function css() {
	  var styles = createStyles.apply(this, arguments);
	  var selector = "css-" + name;
	
	  if (exports.registered[selector] === undefined) {
	    exports.registered[selector] = styles;
	  }
	
	  if (exports.inserted[hash] === undefined) {
	    stylis("." + selector, styles);
	    exports.inserted[hash] = true;
	  }
	
	  return selector;
	}
	function keyframes() {
	  var styles = createStyles.apply(this, arguments);
	  var animation = "animation-" + name;
	
	  if (exports.inserted[hash] === undefined) {
	    stylis('', "@keyframes " + animation + "{" + styles + "}");
	    exports.inserted[hash] = true;
	  }
	
	  return animation;
	}
	function injectGlobal() {
	  var styles = createStyles.apply(this, arguments);
	
	  if (exports.inserted[hash] === undefined) {
	    stylis('', styles);
	    exports.inserted[hash] = true;
	  }
	}
	function fontFace() {
	  var styles = createStyles.apply(void 0, arguments);
	
	  if (exports.inserted[hash] === undefined) {
	    stylis('', "@font-face{" + styles + "}");
	    exports.inserted[hash] = true;
	  }
	}
	function getRegisteredStyles(registeredStyles, classNames) {
	  var rawClassName = '';
	  classNames.split(' ').forEach(function (className) {
	    if (exports.registered[className] !== undefined) {
	      registeredStyles.push(className);
	    } else {
	      rawClassName += className + " ";
	    }
	  });
	  return rawClassName;
	}
	function merge(className, sourceMap) {
	  var registeredStyles = [];
	  var rawClassName = getRegisteredStyles(registeredStyles, className);
	
	  if (registeredStyles.length < 2) {
	    return className;
	  }
	
	  return rawClassName + css(registeredStyles, sourceMap);
	}
	
	function classnames() {
	  var len = arguments.length;
	  var i = 0;
	  var cls = '';
	
	  for (; i < len; i++) {
	    var arg = arguments[i];
	    if (arg == null) continue;
	    var next = cls && cls + ' ' || cls;
	
	    switch (typeof arg) {
	      case 'boolean':
	        break;
	
	      case 'function':
	        cls = next + classnames(arg());
	        break;
	
	      case 'object':
	        {
	          if (Array.isArray(arg)) {
	            cls = next + classnames.apply(null, arg);
	          } else {
	            for (var k in arg) {
	              if (arg[k]) {
	                cls && (cls += ' ');
	                cls += k;
	              }
	            }
	          }
	
	          break;
	        }
	
	      default:
	        {
	          cls = next + arg;
	        }
	    }
	  }
	
	  return cls;
	}
	
	function cx() {
	  return merge(classnames.apply(void 0, arguments));
	}
	function hydrate(ids) {
	  ids.forEach(function (id) {
	    exports.inserted[id] = true;
	  });
	}
	function flush() {
	  sheet.flush();
	  exports.inserted = {};
	  exports.registered = {};
	  sheet.inject();
	}
	
	exports.sheet = sheet;
	exports.useStylisPlugin = useStylisPlugin;
	exports.css = css;
	exports.keyframes = keyframes;
	exports.injectGlobal = injectGlobal;
	exports.fontFace = fontFace;
	exports.getRegisteredStyles = getRegisteredStyles;
	exports.merge = merge;
	exports.cx = cx;
	exports.hydrate = hydrate;
	exports.flush = flush;
	//# sourceMappingURL=index.cjs.js.map


/***/ }),
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(128),
	    baseLodash = __webpack_require__(199);
	
	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable explicit method chain sequences.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}
	
	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;
	
	module.exports = LodashWrapper;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61),
	    root = __webpack_require__(24);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(24);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61),
	    root = __webpack_require__(24);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ }),
/* 317 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ }),
/* 318 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ }),
/* 319 */
/***/ (function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(701),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(18),
	    isBuffer = __webpack_require__(96),
	    isIndex = __webpack_require__(92),
	    isTypedArray = __webpack_require__(139);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(195),
	    eq = __webpack_require__(72);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ }),
/* 322 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(193),
	    isFlattenable = __webpack_require__(744);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(718);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(324),
	    keys = __webpack_require__(53);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(193),
	    isArray = __webpack_require__(18);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(322),
	    baseIsNaN = __webpack_require__(681),
	    strictIndexOf = __webpack_require__(774);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}
	
	module.exports = baseIndexOf;


/***/ }),
/* 328 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(44),
	    metaMap = __webpack_require__(349);
	
	/**
	 * The base implementation of `setData` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};
	
	module.exports = baseSetData;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(24);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module)))

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(202);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ }),
/* 332 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ }),
/* 333 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;
	
	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(332),
	    composeArgsRight = __webpack_require__(333),
	    countHolders = __webpack_require__(716),
	    createCtor = __webpack_require__(132),
	    createRecurry = __webpack_require__(335),
	    getHolder = __webpack_require__(133),
	    reorder = __webpack_require__(766),
	    replaceHolders = __webpack_require__(94),
	    root = __webpack_require__(24);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybrid;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(746),
	    setData = __webpack_require__(352),
	    setWrapToString = __webpack_require__(353);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}
	
	module.exports = createRecurry;


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(329),
	    createBind = __webpack_require__(719),
	    createCurry = __webpack_require__(720),
	    createHybrid = __webpack_require__(334),
	    createPartial = __webpack_require__(722),
	    getData = __webpack_require__(343),
	    mergeData = __webpack_require__(759),
	    setData = __webpack_require__(352),
	    setWrapToString = __webpack_require__(353),
	    toInteger = __webpack_require__(217);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}
	
	module.exports = createWrap;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(191),
	    arraySome = __webpack_require__(667),
	    cacheHas = __webpack_require__(201);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(356),
	    overRest = __webpack_require__(351),
	    setToString = __webpack_require__(207);
	
	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}
	
	module.exports = flatRest;


/***/ }),
/* 340 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(326),
	    getSymbols = __webpack_require__(204),
	    keys = __webpack_require__(53);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(326),
	    getSymbolsIn = __webpack_require__(344),
	    keysIn = __webpack_require__(73);
	
	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}
	
	module.exports = getAllKeysIn;


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(349),
	    noop = __webpack_require__(361);
	
	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};
	
	module.exports = getData;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(193),
	    getPrototype = __webpack_require__(203),
	    getSymbols = __webpack_require__(204),
	    stubArray = __webpack_require__(366);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own and inherited enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};
	
	module.exports = getSymbolsIn;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(128),
	    getPrototype = __webpack_require__(203),
	    isPrototype = __webpack_require__(93);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(29);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ }),
/* 347 */
/***/ (function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ }),
/* 348 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(316);
	
	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;
	
	module.exports = metaMap;


/***/ }),
/* 350 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(125);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(329),
	    shortOut = __webpack_require__(354);
	
	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity
	 * function to avoid garbage collection pauses in V8. See
	 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = shortOut(baseSetData);
	
	module.exports = setData;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	var getWrapDetails = __webpack_require__(733),
	    insertWrapDetails = __webpack_require__(743),
	    setToString = __webpack_require__(207),
	    updateWrapDetails = __webpack_require__(778);
	
	/**
	 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	 * with wrapper details in a comment at the top of the source body.
	 *
	 * @private
	 * @param {Function} wrapper The function to modify.
	 * @param {Function} reference The reference function.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Function} Returns `wrapper`.
	 */
	function setWrapToString(wrapper, reference, bitmask) {
	  var source = (reference + '');
	  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	}
	
	module.exports = setWrapToString;


/***/ }),
/* 354 */
/***/ (function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;
	
	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;
	
	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}
	
	module.exports = shortOut;


/***/ }),
/* 355 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(323);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(677),
	    hasPath = __webpack_require__(734);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(32),
	    isObjectLike = __webpack_require__(45);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ }),
/* 359 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `null` or `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	 * @example
	 *
	 * _.isNil(null);
	 * // => true
	 *
	 * _.isNil(void 0);
	 * // => true
	 *
	 * _.isNil(NaN);
	 * // => false
	 */
	function isNil(value) {
	  return value == null;
	}
	
	module.exports = isNil;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(190);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Expose `MapCache`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ }),
/* 361 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(69),
	    createWrap = __webpack_require__(336),
	    getHolder = __webpack_require__(133),
	    replaceHolders = __webpack_require__(94);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partialRight.placeholder = {};
	
	module.exports = partialRight;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(691),
	    flatRest = __webpack_require__(339);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});
	
	module.exports = pick;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(723);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(194),
	    baseEach = __webpack_require__(196),
	    baseIteratee = __webpack_require__(52),
	    baseReduce = __webpack_require__(695),
	    isArray = __webpack_require__(18);
	
	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;
	
	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}
	
	module.exports = reduce;


/***/ }),
/* 366 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(796);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(702);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(672),
	    baseRest = __webpack_require__(69),
	    isArrayLikeObject = __webpack_require__(358);
	
	/**
	 * Creates an array excluding all given values using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * **Note:** Unlike `_.pull`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...*} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.difference, _.xor
	 * @example
	 *
	 * _.without([2, 1, 2, 3], 1, 2);
	 * // => [3]
	 */
	var without = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, values)
	    : [];
	});
	
	module.exports = without;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * marked - a markdown parser
	 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)
	 * https://github.com/chjj/marked
	 */
	
	;(function() {
	
	/**
	 * Block-Level Grammar
	 */
	
	var block = {
	  newline: /^\n+/,
	  code: /^( {4}[^\n]+\n*)+/,
	  fences: noop,
	  hr: /^( *[-*_]){3,} *(?:\n+|$)/,
	  heading: /^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,
	  nptable: noop,
	  lheading: /^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,
	  blockquote: /^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,
	  list: /^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
	  html: /^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,
	  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,
	  table: noop,
	  paragraph: /^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
	  text: /^[^\n]+/
	};
	
	block.bullet = /(?:[*+-]|\d+\.)/;
	block.item = /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
	block.item = replace(block.item, 'gm')
	  (/bull/g, block.bullet)
	  ();
	
	block.list = replace(block.list)
	  (/bull/g, block.bullet)
	  ('hr', '\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))')
	  ('def', '\\n+(?=' + block.def.source + ')')
	  ();
	
	block.blockquote = replace(block.blockquote)
	  ('def', block.def)
	  ();
	
	block._tag = '(?!(?:'
	  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'
	  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'
	  + '|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b';
	
	block.html = replace(block.html)
	  ('comment', /<!--[\s\S]*?-->/)
	  ('closed', /<(tag)[\s\S]+?<\/\1>/)
	  ('closing', /<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)
	  (/tag/g, block._tag)
	  ();
	
	block.paragraph = replace(block.paragraph)
	  ('hr', block.hr)
	  ('heading', block.heading)
	  ('lheading', block.lheading)
	  ('blockquote', block.blockquote)
	  ('tag', '<' + block._tag)
	  ('def', block.def)
	  ();
	
	/**
	 * Normal Block Grammar
	 */
	
	block.normal = merge({}, block);
	
	/**
	 * GFM Block Grammar
	 */
	
	block.gfm = merge({}, block.normal, {
	  fences: /^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,
	  paragraph: /^/,
	  heading: /^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/
	});
	
	block.gfm.paragraph = replace(block.paragraph)
	  ('(?!', '(?!'
	    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
	    + block.list.source.replace('\\1', '\\3') + '|')
	  ();
	
	/**
	 * GFM + Tables Block Grammar
	 */
	
	block.tables = merge({}, block.gfm, {
	  nptable: /^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,
	  table: /^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/
	});
	
	/**
	 * Block Lexer
	 */
	
	function Lexer(options) {
	  this.tokens = [];
	  this.tokens.links = {};
	  this.options = options || marked.defaults;
	  this.rules = block.normal;
	
	  if (this.options.gfm) {
	    if (this.options.tables) {
	      this.rules = block.tables;
	    } else {
	      this.rules = block.gfm;
	    }
	  }
	}
	
	/**
	 * Expose Block Rules
	 */
	
	Lexer.rules = block;
	
	/**
	 * Static Lex Method
	 */
	
	Lexer.lex = function(src, options) {
	  var lexer = new Lexer(options);
	  return lexer.lex(src);
	};
	
	/**
	 * Preprocessing
	 */
	
	Lexer.prototype.lex = function(src) {
	  src = src
	    .replace(/\r\n|\r/g, '\n')
	    .replace(/\t/g, '    ')
	    .replace(/\u00a0/g, ' ')
	    .replace(/\u2424/g, '\n');
	
	  return this.token(src, true);
	};
	
	/**
	 * Lexing
	 */
	
	Lexer.prototype.token = function(src, top, bq) {
	  var src = src.replace(/^ +$/gm, '')
	    , next
	    , loose
	    , cap
	    , bull
	    , b
	    , item
	    , space
	    , i
	    , l;
	
	  while (src) {
	    // newline
	    if (cap = this.rules.newline.exec(src)) {
	      src = src.substring(cap[0].length);
	      if (cap[0].length > 1) {
	        this.tokens.push({
	          type: 'space'
	        });
	      }
	    }
	
	    // code
	    if (cap = this.rules.code.exec(src)) {
	      src = src.substring(cap[0].length);
	      cap = cap[0].replace(/^ {4}/gm, '');
	      this.tokens.push({
	        type: 'code',
	        text: !this.options.pedantic
	          ? cap.replace(/\n+$/, '')
	          : cap
	      });
	      continue;
	    }
	
	    // fences (gfm)
	    if (cap = this.rules.fences.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'code',
	        lang: cap[2],
	        text: cap[3] || ''
	      });
	      continue;
	    }
	
	    // heading
	    if (cap = this.rules.heading.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'heading',
	        depth: cap[1].length,
	        text: cap[2]
	      });
	      continue;
	    }
	
	    // table no leading pipe (gfm)
	    if (top && (cap = this.rules.nptable.exec(src))) {
	      src = src.substring(cap[0].length);
	
	      item = {
	        type: 'table',
	        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
	        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
	        cells: cap[3].replace(/\n$/, '').split('\n')
	      };
	
	      for (i = 0; i < item.align.length; i++) {
	        if (/^ *-+: *$/.test(item.align[i])) {
	          item.align[i] = 'right';
	        } else if (/^ *:-+: *$/.test(item.align[i])) {
	          item.align[i] = 'center';
	        } else if (/^ *:-+ *$/.test(item.align[i])) {
	          item.align[i] = 'left';
	        } else {
	          item.align[i] = null;
	        }
	      }
	
	      for (i = 0; i < item.cells.length; i++) {
	        item.cells[i] = item.cells[i].split(/ *\| */);
	      }
	
	      this.tokens.push(item);
	
	      continue;
	    }
	
	    // lheading
	    if (cap = this.rules.lheading.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'heading',
	        depth: cap[2] === '=' ? 1 : 2,
	        text: cap[1]
	      });
	      continue;
	    }
	
	    // hr
	    if (cap = this.rules.hr.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'hr'
	      });
	      continue;
	    }
	
	    // blockquote
	    if (cap = this.rules.blockquote.exec(src)) {
	      src = src.substring(cap[0].length);
	
	      this.tokens.push({
	        type: 'blockquote_start'
	      });
	
	      cap = cap[0].replace(/^ *> ?/gm, '');
	
	      // Pass `top` to keep the current
	      // "toplevel" state. This is exactly
	      // how markdown.pl works.
	      this.token(cap, top, true);
	
	      this.tokens.push({
	        type: 'blockquote_end'
	      });
	
	      continue;
	    }
	
	    // list
	    if (cap = this.rules.list.exec(src)) {
	      src = src.substring(cap[0].length);
	      bull = cap[2];
	
	      this.tokens.push({
	        type: 'list_start',
	        ordered: bull.length > 1
	      });
	
	      // Get each top-level item.
	      cap = cap[0].match(this.rules.item);
	
	      next = false;
	      l = cap.length;
	      i = 0;
	
	      for (; i < l; i++) {
	        item = cap[i];
	
	        // Remove the list item's bullet
	        // so it is seen as the next token.
	        space = item.length;
	        item = item.replace(/^ *([*+-]|\d+\.) +/, '');
	
	        // Outdent whatever the
	        // list item contains. Hacky.
	        if (~item.indexOf('\n ')) {
	          space -= item.length;
	          item = !this.options.pedantic
	            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
	            : item.replace(/^ {1,4}/gm, '');
	        }
	
	        // Determine whether the next list item belongs here.
	        // Backpedal if it does not belong in this list.
	        if (this.options.smartLists && i !== l - 1) {
	          b = block.bullet.exec(cap[i + 1])[0];
	          if (bull !== b && !(bull.length > 1 && b.length > 1)) {
	            src = cap.slice(i + 1).join('\n') + src;
	            i = l - 1;
	          }
	        }
	
	        // Determine whether item is loose or not.
	        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
	        // for discount behavior.
	        loose = next || /\n\n(?!\s*$)/.test(item);
	        if (i !== l - 1) {
	          next = item.charAt(item.length - 1) === '\n';
	          if (!loose) loose = next;
	        }
	
	        this.tokens.push({
	          type: loose
	            ? 'loose_item_start'
	            : 'list_item_start'
	        });
	
	        // Recurse.
	        this.token(item, false, bq);
	
	        this.tokens.push({
	          type: 'list_item_end'
	        });
	      }
	
	      this.tokens.push({
	        type: 'list_end'
	      });
	
	      continue;
	    }
	
	    // html
	    if (cap = this.rules.html.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: this.options.sanitize
	          ? 'paragraph'
	          : 'html',
	        pre: !this.options.sanitizer
	          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),
	        text: cap[0]
	      });
	      continue;
	    }
	
	    // def
	    if ((!bq && top) && (cap = this.rules.def.exec(src))) {
	      src = src.substring(cap[0].length);
	      this.tokens.links[cap[1].toLowerCase()] = {
	        href: cap[2],
	        title: cap[3]
	      };
	      continue;
	    }
	
	    // table (gfm)
	    if (top && (cap = this.rules.table.exec(src))) {
	      src = src.substring(cap[0].length);
	
	      item = {
	        type: 'table',
	        header: cap[1].replace(/^ *| *\| *$/g, '').split(/ *\| */),
	        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
	        cells: cap[3].replace(/(?: *\| *)?\n$/, '').split('\n')
	      };
	
	      for (i = 0; i < item.align.length; i++) {
	        if (/^ *-+: *$/.test(item.align[i])) {
	          item.align[i] = 'right';
	        } else if (/^ *:-+: *$/.test(item.align[i])) {
	          item.align[i] = 'center';
	        } else if (/^ *:-+ *$/.test(item.align[i])) {
	          item.align[i] = 'left';
	        } else {
	          item.align[i] = null;
	        }
	      }
	
	      for (i = 0; i < item.cells.length; i++) {
	        item.cells[i] = item.cells[i]
	          .replace(/^ *\| *| *\| *$/g, '')
	          .split(/ *\| */);
	      }
	
	      this.tokens.push(item);
	
	      continue;
	    }
	
	    // top-level paragraph
	    if (top && (cap = this.rules.paragraph.exec(src))) {
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'paragraph',
	        text: cap[1].charAt(cap[1].length - 1) === '\n'
	          ? cap[1].slice(0, -1)
	          : cap[1]
	      });
	      continue;
	    }
	
	    // text
	    if (cap = this.rules.text.exec(src)) {
	      // Top-level should never reach here.
	      src = src.substring(cap[0].length);
	      this.tokens.push({
	        type: 'text',
	        text: cap[0]
	      });
	      continue;
	    }
	
	    if (src) {
	      throw new
	        Error('Infinite loop on byte: ' + src.charCodeAt(0));
	    }
	  }
	
	  return this.tokens;
	};
	
	/**
	 * Inline-Level Grammar
	 */
	
	var inline = {
	  escape: /^\\([\\`*{}\[\]()#+\-.!_>])/,
	  autolink: /^<([^ >]+(@|:\/)[^ >]+)>/,
	  url: noop,
	  tag: /^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,
	  link: /^!?\[(inside)\]\(href\)/,
	  reflink: /^!?\[(inside)\]\s*\[([^\]]*)\]/,
	  nolink: /^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,
	  strong: /^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,
	  em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,
	  code: /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,
	  br: /^ {2,}\n(?!\s*$)/,
	  del: noop,
	  text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/
	};
	
	inline._inside = /(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/;
	inline._href = /\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;
	
	inline.link = replace(inline.link)
	  ('inside', inline._inside)
	  ('href', inline._href)
	  ();
	
	inline.reflink = replace(inline.reflink)
	  ('inside', inline._inside)
	  ();
	
	/**
	 * Normal Inline Grammar
	 */
	
	inline.normal = merge({}, inline);
	
	/**
	 * Pedantic Inline Grammar
	 */
	
	inline.pedantic = merge({}, inline.normal, {
	  strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
	  em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/
	});
	
	/**
	 * GFM Inline Grammar
	 */
	
	inline.gfm = merge({}, inline.normal, {
	  escape: replace(inline.escape)('])', '~|])')(),
	  url: /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,
	  del: /^~~(?=\S)([\s\S]*?\S)~~/,
	  text: replace(inline.text)
	    (']|', '~]|')
	    ('|', '|https?://|')
	    ()
	});
	
	/**
	 * GFM + Line Breaks Inline Grammar
	 */
	
	inline.breaks = merge({}, inline.gfm, {
	  br: replace(inline.br)('{2,}', '*')(),
	  text: replace(inline.gfm.text)('{2,}', '*')()
	});
	
	/**
	 * Inline Lexer & Compiler
	 */
	
	function InlineLexer(links, options) {
	  this.options = options || marked.defaults;
	  this.links = links;
	  this.rules = inline.normal;
	  this.renderer = this.options.renderer || new Renderer;
	  this.renderer.options = this.options;
	
	  if (!this.links) {
	    throw new
	      Error('Tokens array requires a `links` property.');
	  }
	
	  if (this.options.gfm) {
	    if (this.options.breaks) {
	      this.rules = inline.breaks;
	    } else {
	      this.rules = inline.gfm;
	    }
	  } else if (this.options.pedantic) {
	    this.rules = inline.pedantic;
	  }
	}
	
	/**
	 * Expose Inline Rules
	 */
	
	InlineLexer.rules = inline;
	
	/**
	 * Static Lexing/Compiling Method
	 */
	
	InlineLexer.output = function(src, links, options) {
	  var inline = new InlineLexer(links, options);
	  return inline.output(src);
	};
	
	/**
	 * Lexing/Compiling
	 */
	
	InlineLexer.prototype.output = function(src) {
	  var out = ''
	    , link
	    , text
	    , href
	    , cap;
	
	  while (src) {
	    // escape
	    if (cap = this.rules.escape.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += cap[1];
	      continue;
	    }
	
	    // autolink
	    if (cap = this.rules.autolink.exec(src)) {
	      src = src.substring(cap[0].length);
	      if (cap[2] === '@') {
	        text = cap[1].charAt(6) === ':'
	          ? this.mangle(cap[1].substring(7))
	          : this.mangle(cap[1]);
	        href = this.mangle('mailto:') + text;
	      } else {
	        text = escape(cap[1]);
	        href = text;
	      }
	      out += this.renderer.link(href, null, text);
	      continue;
	    }
	
	    // url (gfm)
	    if (!this.inLink && (cap = this.rules.url.exec(src))) {
	      src = src.substring(cap[0].length);
	      text = escape(cap[1]);
	      href = text;
	      out += this.renderer.link(href, null, text);
	      continue;
	    }
	
	    // tag
	    if (cap = this.rules.tag.exec(src)) {
	      if (!this.inLink && /^<a /i.test(cap[0])) {
	        this.inLink = true;
	      } else if (this.inLink && /^<\/a>/i.test(cap[0])) {
	        this.inLink = false;
	      }
	      src = src.substring(cap[0].length);
	      out += this.options.sanitize
	        ? this.options.sanitizer
	          ? this.options.sanitizer(cap[0])
	          : escape(cap[0])
	        : cap[0]
	      continue;
	    }
	
	    // link
	    if (cap = this.rules.link.exec(src)) {
	      src = src.substring(cap[0].length);
	      this.inLink = true;
	      out += this.outputLink(cap, {
	        href: cap[2],
	        title: cap[3]
	      });
	      this.inLink = false;
	      continue;
	    }
	
	    // reflink, nolink
	    if ((cap = this.rules.reflink.exec(src))
	        || (cap = this.rules.nolink.exec(src))) {
	      src = src.substring(cap[0].length);
	      link = (cap[2] || cap[1]).replace(/\s+/g, ' ');
	      link = this.links[link.toLowerCase()];
	      if (!link || !link.href) {
	        out += cap[0].charAt(0);
	        src = cap[0].substring(1) + src;
	        continue;
	      }
	      this.inLink = true;
	      out += this.outputLink(cap, link);
	      this.inLink = false;
	      continue;
	    }
	
	    // strong
	    if (cap = this.rules.strong.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.strong(this.output(cap[2] || cap[1]));
	      continue;
	    }
	
	    // em
	    if (cap = this.rules.em.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.em(this.output(cap[2] || cap[1]));
	      continue;
	    }
	
	    // code
	    if (cap = this.rules.code.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.codespan(escape(cap[2], true));
	      continue;
	    }
	
	    // br
	    if (cap = this.rules.br.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.br();
	      continue;
	    }
	
	    // del (gfm)
	    if (cap = this.rules.del.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.del(this.output(cap[1]));
	      continue;
	    }
	
	    // text
	    if (cap = this.rules.text.exec(src)) {
	      src = src.substring(cap[0].length);
	      out += this.renderer.text(escape(this.smartypants(cap[0])));
	      continue;
	    }
	
	    if (src) {
	      throw new
	        Error('Infinite loop on byte: ' + src.charCodeAt(0));
	    }
	  }
	
	  return out;
	};
	
	/**
	 * Compile Link
	 */
	
	InlineLexer.prototype.outputLink = function(cap, link) {
	  var href = escape(link.href)
	    , title = link.title ? escape(link.title) : null;
	
	  return cap[0].charAt(0) !== '!'
	    ? this.renderer.link(href, title, this.output(cap[1]))
	    : this.renderer.image(href, title, escape(cap[1]));
	};
	
	/**
	 * Smartypants Transformations
	 */
	
	InlineLexer.prototype.smartypants = function(text) {
	  if (!this.options.smartypants) return text;
	  return text
	    // em-dashes
	    .replace(/---/g, '\u2014')
	    // en-dashes
	    .replace(/--/g, '\u2013')
	    // opening singles
	    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
	    // closing singles & apostrophes
	    .replace(/'/g, '\u2019')
	    // opening doubles
	    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
	    // closing doubles
	    .replace(/"/g, '\u201d')
	    // ellipses
	    .replace(/\.{3}/g, '\u2026');
	};
	
	/**
	 * Mangle Links
	 */
	
	InlineLexer.prototype.mangle = function(text) {
	  if (!this.options.mangle) return text;
	  var out = ''
	    , l = text.length
	    , i = 0
	    , ch;
	
	  for (; i < l; i++) {
	    ch = text.charCodeAt(i);
	    if (Math.random() > 0.5) {
	      ch = 'x' + ch.toString(16);
	    }
	    out += '&#' + ch + ';';
	  }
	
	  return out;
	};
	
	/**
	 * Renderer
	 */
	
	function Renderer(options) {
	  this.options = options || {};
	}
	
	Renderer.prototype.code = function(code, lang, escaped) {
	  if (this.options.highlight) {
	    var out = this.options.highlight(code, lang);
	    if (out != null && out !== code) {
	      escaped = true;
	      code = out;
	    }
	  }
	
	  if (!lang) {
	    return '<pre><code>'
	      + (escaped ? code : escape(code, true))
	      + '\n</code></pre>';
	  }
	
	  return '<pre><code class="'
	    + this.options.langPrefix
	    + escape(lang, true)
	    + '">'
	    + (escaped ? code : escape(code, true))
	    + '\n</code></pre>\n';
	};
	
	Renderer.prototype.blockquote = function(quote) {
	  return '<blockquote>\n' + quote + '</blockquote>\n';
	};
	
	Renderer.prototype.html = function(html) {
	  return html;
	};
	
	Renderer.prototype.heading = function(text, level, raw) {
	  return '<h'
	    + level
	    + ' id="'
	    + this.options.headerPrefix
	    + raw.toLowerCase().replace(/[^\w]+/g, '-')
	    + '">'
	    + text
	    + '</h'
	    + level
	    + '>\n';
	};
	
	Renderer.prototype.hr = function() {
	  return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
	};
	
	Renderer.prototype.list = function(body, ordered) {
	  var type = ordered ? 'ol' : 'ul';
	  return '<' + type + '>\n' + body + '</' + type + '>\n';
	};
	
	Renderer.prototype.listitem = function(text) {
	  return '<li>' + text + '</li>\n';
	};
	
	Renderer.prototype.paragraph = function(text) {
	  return '<p>' + text + '</p>\n';
	};
	
	Renderer.prototype.table = function(header, body) {
	  return '<table>\n'
	    + '<thead>\n'
	    + header
	    + '</thead>\n'
	    + '<tbody>\n'
	    + body
	    + '</tbody>\n'
	    + '</table>\n';
	};
	
	Renderer.prototype.tablerow = function(content) {
	  return '<tr>\n' + content + '</tr>\n';
	};
	
	Renderer.prototype.tablecell = function(content, flags) {
	  var type = flags.header ? 'th' : 'td';
	  var tag = flags.align
	    ? '<' + type + ' style="text-align:' + flags.align + '">'
	    : '<' + type + '>';
	  return tag + content + '</' + type + '>\n';
	};
	
	// span level renderer
	Renderer.prototype.strong = function(text) {
	  return '<strong>' + text + '</strong>';
	};
	
	Renderer.prototype.em = function(text) {
	  return '<em>' + text + '</em>';
	};
	
	Renderer.prototype.codespan = function(text) {
	  return '<code>' + text + '</code>';
	};
	
	Renderer.prototype.br = function() {
	  return this.options.xhtml ? '<br/>' : '<br>';
	};
	
	Renderer.prototype.del = function(text) {
	  return '<del>' + text + '</del>';
	};
	
	Renderer.prototype.link = function(href, title, text) {
	  if (this.options.sanitize) {
	    try {
	      var prot = decodeURIComponent(unescape(href))
	        .replace(/[^\w:]/g, '')
	        .toLowerCase();
	    } catch (e) {
	      return '';
	    }
	    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {
	      return '';
	    }
	  }
	  var out = '<a href="' + href + '"';
	  if (title) {
	    out += ' title="' + title + '"';
	  }
	  out += '>' + text + '</a>';
	  return out;
	};
	
	Renderer.prototype.image = function(href, title, text) {
	  var out = '<img src="' + href + '" alt="' + text + '"';
	  if (title) {
	    out += ' title="' + title + '"';
	  }
	  out += this.options.xhtml ? '/>' : '>';
	  return out;
	};
	
	Renderer.prototype.text = function(text) {
	  return text;
	};
	
	/**
	 * Parsing & Compiling
	 */
	
	function Parser(options) {
	  this.tokens = [];
	  this.token = null;
	  this.options = options || marked.defaults;
	  this.options.renderer = this.options.renderer || new Renderer;
	  this.renderer = this.options.renderer;
	  this.renderer.options = this.options;
	}
	
	/**
	 * Static Parse Method
	 */
	
	Parser.parse = function(src, options, renderer) {
	  var parser = new Parser(options, renderer);
	  return parser.parse(src);
	};
	
	/**
	 * Parse Loop
	 */
	
	Parser.prototype.parse = function(src) {
	  this.inline = new InlineLexer(src.links, this.options, this.renderer);
	  this.tokens = src.reverse();
	
	  var out = '';
	  while (this.next()) {
	    out += this.tok();
	  }
	
	  return out;
	};
	
	/**
	 * Next Token
	 */
	
	Parser.prototype.next = function() {
	  return this.token = this.tokens.pop();
	};
	
	/**
	 * Preview Next Token
	 */
	
	Parser.prototype.peek = function() {
	  return this.tokens[this.tokens.length - 1] || 0;
	};
	
	/**
	 * Parse Text Tokens
	 */
	
	Parser.prototype.parseText = function() {
	  var body = this.token.text;
	
	  while (this.peek().type === 'text') {
	    body += '\n' + this.next().text;
	  }
	
	  return this.inline.output(body);
	};
	
	/**
	 * Parse Current Token
	 */
	
	Parser.prototype.tok = function() {
	  switch (this.token.type) {
	    case 'space': {
	      return '';
	    }
	    case 'hr': {
	      return this.renderer.hr();
	    }
	    case 'heading': {
	      return this.renderer.heading(
	        this.inline.output(this.token.text),
	        this.token.depth,
	        this.token.text);
	    }
	    case 'code': {
	      return this.renderer.code(this.token.text,
	        this.token.lang,
	        this.token.escaped);
	    }
	    case 'table': {
	      var header = ''
	        , body = ''
	        , i
	        , row
	        , cell
	        , flags
	        , j;
	
	      // header
	      cell = '';
	      for (i = 0; i < this.token.header.length; i++) {
	        flags = { header: true, align: this.token.align[i] };
	        cell += this.renderer.tablecell(
	          this.inline.output(this.token.header[i]),
	          { header: true, align: this.token.align[i] }
	        );
	      }
	      header += this.renderer.tablerow(cell);
	
	      for (i = 0; i < this.token.cells.length; i++) {
	        row = this.token.cells[i];
	
	        cell = '';
	        for (j = 0; j < row.length; j++) {
	          cell += this.renderer.tablecell(
	            this.inline.output(row[j]),
	            { header: false, align: this.token.align[j] }
	          );
	        }
	
	        body += this.renderer.tablerow(cell);
	      }
	      return this.renderer.table(header, body);
	    }
	    case 'blockquote_start': {
	      var body = '';
	
	      while (this.next().type !== 'blockquote_end') {
	        body += this.tok();
	      }
	
	      return this.renderer.blockquote(body);
	    }
	    case 'list_start': {
	      var body = ''
	        , ordered = this.token.ordered;
	
	      while (this.next().type !== 'list_end') {
	        body += this.tok();
	      }
	
	      return this.renderer.list(body, ordered);
	    }
	    case 'list_item_start': {
	      var body = '';
	
	      while (this.next().type !== 'list_item_end') {
	        body += this.token.type === 'text'
	          ? this.parseText()
	          : this.tok();
	      }
	
	      return this.renderer.listitem(body);
	    }
	    case 'loose_item_start': {
	      var body = '';
	
	      while (this.next().type !== 'list_item_end') {
	        body += this.tok();
	      }
	
	      return this.renderer.listitem(body);
	    }
	    case 'html': {
	      var html = !this.token.pre && !this.options.pedantic
	        ? this.inline.output(this.token.text)
	        : this.token.text;
	      return this.renderer.html(html);
	    }
	    case 'paragraph': {
	      return this.renderer.paragraph(this.inline.output(this.token.text));
	    }
	    case 'text': {
	      return this.renderer.paragraph(this.parseText());
	    }
	  }
	};
	
	/**
	 * Helpers
	 */
	
	function escape(html, encode) {
	  return html
	    .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
	    .replace(/</g, '&lt;')
	    .replace(/>/g, '&gt;')
	    .replace(/"/g, '&quot;')
	    .replace(/'/g, '&#39;');
	}
	
	function unescape(html) {
		// explicitly match decimal, hex, and named HTML entities 
	  return html.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g, function(_, n) {
	    n = n.toLowerCase();
	    if (n === 'colon') return ':';
	    if (n.charAt(0) === '#') {
	      return n.charAt(1) === 'x'
	        ? String.fromCharCode(parseInt(n.substring(2), 16))
	        : String.fromCharCode(+n.substring(1));
	    }
	    return '';
	  });
	}
	
	function replace(regex, opt) {
	  regex = regex.source;
	  opt = opt || '';
	  return function self(name, val) {
	    if (!name) return new RegExp(regex, opt);
	    val = val.source || val;
	    val = val.replace(/(^|[^\[])\^/g, '$1');
	    regex = regex.replace(name, val);
	    return self;
	  };
	}
	
	function noop() {}
	noop.exec = noop;
	
	function merge(obj) {
	  var i = 1
	    , target
	    , key;
	
	  for (; i < arguments.length; i++) {
	    target = arguments[i];
	    for (key in target) {
	      if (Object.prototype.hasOwnProperty.call(target, key)) {
	        obj[key] = target[key];
	      }
	    }
	  }
	
	  return obj;
	}
	
	
	/**
	 * Marked
	 */
	
	function marked(src, opt, callback) {
	  if (callback || typeof opt === 'function') {
	    if (!callback) {
	      callback = opt;
	      opt = null;
	    }
	
	    opt = merge({}, marked.defaults, opt || {});
	
	    var highlight = opt.highlight
	      , tokens
	      , pending
	      , i = 0;
	
	    try {
	      tokens = Lexer.lex(src, opt)
	    } catch (e) {
	      return callback(e);
	    }
	
	    pending = tokens.length;
	
	    var done = function(err) {
	      if (err) {
	        opt.highlight = highlight;
	        return callback(err);
	      }
	
	      var out;
	
	      try {
	        out = Parser.parse(tokens, opt);
	      } catch (e) {
	        err = e;
	      }
	
	      opt.highlight = highlight;
	
	      return err
	        ? callback(err)
	        : callback(null, out);
	    };
	
	    if (!highlight || highlight.length < 3) {
	      return done();
	    }
	
	    delete opt.highlight;
	
	    if (!pending) return done();
	
	    for (; i < tokens.length; i++) {
	      (function(token) {
	        if (token.type !== 'code') {
	          return --pending || done();
	        }
	        return highlight(token.text, token.lang, function(err, code) {
	          if (err) return done(err);
	          if (code == null || code === token.text) {
	            return --pending || done();
	          }
	          token.text = code;
	          token.escaped = true;
	          --pending || done();
	        });
	      })(tokens[i]);
	    }
	
	    return;
	  }
	  try {
	    if (opt) opt = merge({}, marked.defaults, opt);
	    return Parser.parse(Lexer.lex(src, opt), opt);
	  } catch (e) {
	    e.message += '\nPlease report this to https://github.com/chjj/marked.';
	    if ((opt || marked.defaults).silent) {
	      return '<p>An error occured:</p><pre>'
	        + escape(e.message + '', true)
	        + '</pre>';
	    }
	    throw e;
	  }
	}
	
	/**
	 * Options
	 */
	
	marked.options =
	marked.setOptions = function(opt) {
	  merge(marked.defaults, opt);
	  return marked;
	};
	
	marked.defaults = {
	  gfm: true,
	  tables: true,
	  breaks: false,
	  pedantic: false,
	  sanitize: false,
	  sanitizer: null,
	  mangle: true,
	  smartLists: false,
	  silent: false,
	  highlight: null,
	  langPrefix: 'lang-',
	  smartypants: false,
	  headerPrefix: '',
	  renderer: new Renderer,
	  xhtml: false
	};
	
	/**
	 * Expose
	 */
	
	marked.Parser = Parser;
	marked.parser = Parser.parse;
	
	marked.Renderer = Renderer;
	
	marked.Lexer = Lexer;
	marked.lexer = Lexer.lex;
	
	marked.InlineLexer = InlineLexer;
	marked.inlineLexer = InlineLexer.output;
	
	marked.parse = marked;
	
	if (true) {
	  module.exports = marked;
	} else if (typeof define === 'function' && define.amd) {
	  define(function() { return marked; });
	} else {
	  this.marked = marked;
	}
	
	}).call(function() {
	  return this || (typeof window !== 'undefined' ? window : global);
	}());
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 371 */
/***/ (function(module, exports) {

	module.exports = function normalize(path) {
		var parts = path.split(/(\\+|\/+)/);
		if(parts.length === 1)
			return path;
		var result = [];
		var absolutePathStart = 0;
		for(var i = 0, sep = false; i < parts.length; i++, sep = !sep) {
			var part = parts[i];
			if(i === 0 && /^([A-Z]:)?$/i.test(part)) {
				result.push(part);
				absolutePathStart = 2;
			} else if(sep) {
				result.push(part[0]);
			} else if(part === "..") {
				switch(result.length) {
					case 0:
						// i. e. ".." => ".."
						// i. e. "../a/b/c" => "../a/b/c"
						result.push(part);
						break;
					case 2:
						// i. e. "a/.." => ""
						// i. e. "/.." => "/"
						// i. e. "C:\.." => "C:\"
						// i. e. "a/../b/c" => "b/c"
						// i. e. "/../b/c" => "/b/c"
						// i. e. "C:\..\a\b\c" => "C:\a\b\c"
						i++;
						sep = !sep;
						result.length = absolutePathStart;
						break;
					case 4:
						// i. e. "a/b/.." => "a"
						// i. e. "/a/.." => "/"
						// i. e. "C:\a\.." => "C:\"
						// i. e. "/a/../b/c" => "/b/c"
						if(absolutePathStart === 0) {
							result.length -= 3;
						} else {
							i++;
							sep = !sep;
							result.length = 2;
						}
						break;
					default:
						// i. e. "/a/b/.." => "/a"
						// i. e. "/a/b/../c" => "/a/c"
						result.length -= 3;
						break;
				}
			} else if(part === ".") {
				switch(result.length) {
					case 0:
						// i. e. "." => "."
						// i. e. "./a/b/c" => "./a/b/c"
						result.push(part);
						break;
					case 2:
						// i. e. "a/." => "a"
						// i. e. "/." => "/"
						// i. e. "C:\." => "C:\"
						// i. e. "C:\.\a\b\c" => "C:\a\b\c"
						if(absolutePathStart === 0) {
							result.length--;
						} else {
							i++;
							sep = !sep;
						}
						break;
					default:
						// i. e. "a/b/." => "a/b"
						// i. e. "/a/." => "/"
						// i. e. "C:\a\." => "C:\"
						// i. e. "a/./b/c" => "a/b/c"
						// i. e. "/a/./b/c" => "/a/b/c"
						result.length--;
						break;
				}
			} else if(part) {
				result.push(part);
			}
		}
		if(result.length === 1 && /^[A-Za-z]:$/.test(result))
			return result[0] + "\\";
		return result.join("");
	};


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Lexicon class
	  Copyright (C) 2016 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	var fs = __webpack_require__(37);
	
	// Parses a lexicon in JSON or text format
	function Lexicon(filename, defaultCategory, defaultCategoryCapitalised) {
	  this.lexicon = {};
	
	  if (filename) {
	    this.defaultCategory = defaultCategory;
	    // Read lexicon
	    try {
	      var data = fs.readFileSync(filename, 'utf8');
	      if (data[0] === "{") {
	        // Lexicon is in JSON format
	        this.lexicon = JSON.parse(data);
	      }
	      else {
	        // Lexicon is plain text
	        this.parseLexicon(data);
	      }
	      // console.log('Brill_POS_Tagger.read_lexicon: number of lexicon entries read: ' + Object.keys(that.lexicon).length);
	    }
	    catch (error) {
	      console.error(error);
	    }
	    if (defaultCategory) {
	      this.defaultCategory = defaultCategory;
	      if (defaultCategoryCapitalised) {
	        this.defaultCategoryCapitalised = defaultCategoryCapitalised;
	      }
	    }
	  }
	}
	
	// Parses a lexicon in text format: word cat1 cat2 ... catn
	Lexicon.prototype.parseLexicon = function(data) {
	  // Split into an array of non-empty lines
	  var arrayOfLines = data.match(/[^\r\n]+/g);
	  this.lexicon = {};
	  var that = this;
	  arrayOfLines.forEach(function(line) {
	    // Split line by whitespace
	    var elements = line.trim().split(/\s+/);
	    if (elements.length > 0) {
	      that.lexicon[elements[0]] = elements.slice(1);
	    }
	  });
	};
	
	// Returns a list of categories for word
	Lexicon.prototype.tagWord = function(word) {
	  var categories = this.lexicon[word];
	  if (!categories) {
	    categories = this.lexicon[word.toLowerCase()];
	  }
	  if (!categories) {
	    if (/[A-Z]/.test(word[0]) && this.defaultCategoryCapitalised) {
	      // Capitalised
	      categories = [this.defaultCategoryCapitalised];
	    }
	    else {
	      // If not found assign default_category
	      categories = [this.defaultCategory];
	    }
	  }
	  return(categories);
	};
	
	// Adds a word to the lexicon. NB simply replaces the entry
	Lexicon.prototype.addWord = function(word, categories) {
	  this.lexicon[word] = categories;
	};
	
	Lexicon.prototype.prettyPrint = function() {
	  var result = "";
	  var that = this;
	  Object.keys(this.lexicon).forEach(function(token) {
	    result += token + "\t";
	    that.lexicon[token].forEach(function(cat) {
	      result += cat + "\t";
	    });
	    result += "\n";
	  });
	  return result;
	};
	
	Lexicon.prototype.nrEntries = function() {
	  return Object.keys(this.lexicon).length;
	};
	
	Lexicon.prototype.setDefaultCategories = function(category, categoryCapitalised) {
	  this.defaultCategory = category;
	  if (categoryCapitalised) {
	    this.defaultCategoryCapitalised = categoryCapitalised;
	  }
	};
	
	module.exports = Lexicon;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	   Set of transformation rules
	   Copyright (C) 2017 Hugo W.L. ter Doest
	
	   This program is free software: you can redistribute it and/or modify
	   it under the terms of the GNU General Public License as published by
	   the Free Software Foundation, either version 3 of the License, or
	   (at your option) any later version.
	
	   This program is distributed in the hope that it will be useful,
	   but WITHOUT ANY WARRANTY; without even the implied warranty of
	   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	   GNU General Public License for more details.
	
	   You should have received a copy of the GNU General Public License
	   along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	var fs = __webpack_require__(37);
	var TF_Parser = __webpack_require__(375);
	
	function RuleSet(filename) {
	  //this.rules = [];
	  this.rules = {};
	
	  if (filename) {
	    // Read transformation rules
	    try {
	      var data = fs.readFileSync(filename, 'utf8');
	      this.rules = TF_Parser.parse(data);
	      // console.log(this.rules);
	      // console.log('Brill_POS_Tagger.read_transformation_rules: number of transformation rules read: ' + this.rules.length);
	    }
	    catch (error) {
	      console.error(error);
	    }
	  }
	}
	
	RuleSet.prototype.addRule = function(rule) {
	  //this.rules.push(rule);
	  if (!this.rules[rule.key()]) {
	    this.rules[rule.key()] = rule;
	    return true;
	  }
	  else {
	    return false;
	  }
	};
	
	RuleSet.prototype.removeRule = function(rule) {
	  if (this.rules[rule.key()]) {
	    delete this.rules[rule.key()];
	  }
	};
	
	RuleSet.prototype.getRules = function() {
	  var that = this;
	  return Object.keys(this.rules).map(function(key) {
	    return that.rules[key];
	  });
	};
	
	RuleSet.prototype.nrRules = function() {
	  return Object.keys(this.rules).length;
	};
	
	RuleSet.prototype.hasRule = function(rule) {
	  if (this.rules[rule.key()]) {
	    return true;
	  }
	  else {
	    return false;
	  }
	};
	
	RuleSet.prototype.prettyPrint = function() {
	  var result = "";
	  //this.rules.forEach(function(rule) {
	  var that = this;
	  Object.keys(this.rules).forEach(function(key) {
	    var rule = that.rules[key];
	    result += rule.prettyPrint() + "\n";
	  });
	  return result;
	};
	
	module.exports = RuleSet;


/***/ }),
/* 374 */
/***/ (function(module, exports) {

	/*
	  Rule templates that provide metadata for generating transformation rules
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	var ruleTemplates = {
	  // Predicates as used in the English rules in data/English/tr_from_posjs.txt
	  "NEXT-TAG": {
	    // maps to the predicate function
	    "function": next_tag_is,
	    // Minimum required space before or after current position to be a relevant predicate
	    "window": [0, 1],
	    // The number of parameters the predicate takes
	    "nrParameters": 1,
	    // Function that returns relevant values for parameter 1
	    "parameter1Values": nextTagParameterValues
	  },
	  "NEXT-WORD-IS-CAP": {
	    "function": next_word_is_cap,
	    "window": [0, 1],
	    "nrParameters" : 0
	  },
	  "PREV-1-OR-2-OR-3-TAG": {
	    "function": prev_1_or_2_or_3_tag,
	    "window" : [-1, 0],
	    "nrParameters" : 1,
	    "parameter1Values": prev1Or2Or3TagParameterValues
	  },
	  "PREV-1-OR-2-TAG": {
	    "function": prev_1_or_2_tag,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prev1Or2TagParameterValues
	  },
	  "NEXT-WORD-IS-TAG": {
	    "function": next_tag_is,
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": nextTagParameterValues
	  },
	  "PREV-TAG": {
	    "function": prev_tag_is,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prevTagParameterValues
	  },
	  /*
	 "CURRENT-WORD-IS-TAG": {
	   "function": current_word_is_tag,
	   "window": [0],
	   "nrParameter": 1,
	   "parameter1Values": currentTagParameterValues
	   },
	  */
	  "PREV-WORD-IS-CAP": {
	    "function": prev_word_is_cap,
	    "window": [-1, 0],
	    "nrParameters": 0
	  },
	  "CURRENT-WORD-IS-CAP": {
	    "function": current_word_is_cap,
	    "window": [0, 0],
	    "nrParameters": 0
	  },
	  "CURRENT-WORD-IS-NUMBER": {
	    "function": current_word_is_number,
	    "window": [0, 0],
	    "nrParameters": 0
	  },
	  "CURRENT-WORD-IS-URL": {
	    "function": current_word_is_url,
	    "window": [0, 0],
	    "nrParameters": 0
	  },
	  "CURRENT-WORD-ENDS-WITH": {
	    "function": current_word_ends_with,
	    "window": [0, 0],
	    "nrParameters": 1,
	    "parameter1Values": currentWordEndsWithParameterValues
	  },
	  "PREV-WORD-IS": {
	    "function": prev_word_is,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prevWordParameterValues
	  },
	
	  // Predicates as used in the Dutch rules in data/Dutch/brill_CONTEXTRULES.jg
	  "PREVTAG": {
	    "function": prev_tag_is,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prevTagParameterValues
	  },
	  "NEXT1OR2TAG": {
	    "function": next_1_or_2_tag_is,
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": next1Or2TagIsParameterValues
	  },
	  "NEXTTAG": {
	    "function": next_tag_is,
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": nextTagParameterValues
	  },
	  "PREV1OR2TAG": {
	    "function": prev_1_or_2_tag,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prev1Or2TagParameterValues
	  },
	  "WDAND2TAGAFT": {
	    "function": current_word_and_2_tag_after_are,
	    "window": [0, 2],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": twoTagAfterParameterValues
	  },
	  "NEXT1OR2OR3TAG": {
	    "function": next_1_or_2_or_3_tag,
	    // Minimum required window to apply this template is one tag to the right
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": next1Or2Or3TagParameterValues
	  },
	  "CURWD": {
	    "function": current_word_is,
	    "window": [0, 0],
	    "nrParameters": 1,
	    "parameter1Values": currentWordParameterValues
	  },
	  "SURROUNDTAG": {
	    "function": surrounded_by_tags,
	    "window": [-1, 1],
	    "nrParameters": 2,
	    "parameter1Values": prevTagParameterValues,
	    "parameter2Values": nextTagParameterValues
	  },
	  "PREV1OR2OR3TAG": {
	    "function": prev_1_or_2_or_3_tag,
	    // Minimum required window to apply this template is one tag to the left
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prev1Or2Or3TagParameterValues
	  },
	  "WDNEXTTAG": {
	    "function": current_word_and_next_tag_are,
	    "window": [0, 1],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": nextTagParameterValues
	  },
	  "PREV1OR2WD": {
	    "function": prev_1_or_2_word_is,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prev1Or2WordParameterValues
	  },
	  "NEXTWD": {
	    "function": next_word_is,
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": nextWordParameterValues
	  },
	  "PREVWD": {
	    "function": prev_word_is,
	    "window": [-1, 0],
	    "nrParameters": 1,
	    "parameter1Values": prevWordParameterValues
	  },
	  "NEXT2TAG": {
	    "function": next_2_tag_is,
	    "window": [0, 2],
	    "nrParameters": 1,
	    "parameter1Values": next2TagParameterValues
	  },
	  "WDAND2TAGBFR": {
	    "function": current_word_and_2_tag_before_are,
	    "window": [-2, 0],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": twoTagBeforeParameterValues
	  },
	  "WDAND2AFT": {
	    "function": current_word_and_2_after_are,
	    "window": [0, 2],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": twoTagAfterParameterValues
	  },
	  "WDPREVTAG": {
	    "function": current_word_and_prev_tag_are,
	    "window": [-1, 0],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": prevTagParameterValues
	  },
	  "RBIGRAM": {
	    "function": right_bigram_is,
	    "window": [0, 1],
	    "nrParameters": 2,
	    "parameter1Values": currentWordParameterValues,
	    "parameter2Values": nextWordParameterValues
	  },
	  "LBIGRAM": {
	    "function": left_bigram_is,
	    "window": [-1, 0],
	    "nrParameters": 2,
	    "parameter1Values": prevWordParameterValues,
	    "parameter2Values": currentWordParameterValues
	  },
	  "NEXTBIGRAM": {
	    "function": next_bigram_is,
	    "window": [0, 2],
	    "nrParameters": 2,
	    "parameter1Values": nextWordParameterValues,
	    "parameter2Values": twoWordAfterParameterValues
	  },
	  "PREVBIGRAM": {
	    "function": prev_bigram_is,
	    "window": [-2, 0],
	    "nrParameters": 2,
	    "parameter1Values": twoWordBeforeParameterValues,
	    "parameter2Values": prevWordParameterValues
	  },
	  "PREV2TAG": {
	    "function": prev_2_tag_is,
	    "window": [-2, 0],
	    "nrParameters": 2,
	    "parameter1Values": twoTagBeforeParameterValues,
	    "parameter2Values": prevTagParameterValues
	  },
	  "NEXT1OR2WD": {
	    "function": next_1_or_2_word_is,
	    "window": [0, 1],
	    "nrParameters": 1,
	    "parameter1Values": next1Or2WordParameterValues
	  },
	  "DEFAULT": {
	    "function": default_predicate,
	    "window": [0, 0],
	    "nrParameters": 0
	  }
	};
	
	
	// ==================================
	// Predicates that start with words
	// ==================================
	function next_word_is_cap(tagged_sentence, i, parameter) {
	  if (i < tagged_sentence.length - 1) {
	    var next_word = tagged_sentence[i+1][0];
	    return(next_word[0] === next_word[0].toUpperCase());
	  }
	  else {
	    return(false);
	  }
	}
	
	/*
	function next_word_is_cap(sentence, i, parameter) {
	  if (i < sentence.length - 1) {
	    var next_word = tagged_sentence[i+1].token;
	    return(next_word[0] === next_word[0].toUpperCase());
	  }
	  else {
	    return(false);
	  }
	}
	*/
	
	function next_word_is(tagged_sentence, i, parameter) {
	  if (i < tagged_sentence.length - 1) {
	    return(tagged_sentence[i + 1][0] === parameter);
	  }
	}
	
	function nextWordParameterValues(sentence, i) {
	  if (i < sentence.length - 1) {
	    return [sentence[i + 1].token];
	  }
	  else {
	    return [];
	  }
	}
	
	function prev_word_is_cap(tagged_sentence, i, parameter) {
	  var prev_word = null;
	  if (i > 0) {
	    prev_word = tagged_sentence[i-1][0];
	    return(prev_word[0] === prev_word[0].toUpperCase());
	  }
	  return(false);
	}
	
	function current_word_is_cap(tagged_sentence, i, parameter) {
	  var current_word = tagged_sentence[i][0];
	  return(current_word[0] === current_word[0].toUpperCase());
	}
	
	function currentWordParameterValues(sentence, i) {
	  return [sentence[i].token];
	}
	
	function current_word_is(tagged_sentence, i, parameter) {
	  return(tagged_sentence[i][0] === parameter);
	}
	
	function isNumeric(num) {
	  return (!isNaN(num));
	}
	
	function current_word_is_number(tagged_sentence, i, parameter) {
	  var is_number = isNumeric(tagged_sentence[i][0]);
	  // Attempt to parse it as a float
	  if (!is_number) {
	    is_number = parseFloat(tagged_sentence[i][0]);
	  }
	  return((parameter === "YES") ? is_number : !is_number);
	}
	
	// Checks if the current word is a url
	// Adapted from the original Javascript Brill tagger
	function current_word_is_url(tagged_sentence, i, parameter) {
	  var is_url = false;
	  if (tagged_sentence[i][0].indexOf(".") > -1) {
	    // url if there are two contiguous alpha characters
	    if (/[a-zA-Z]{2}/.test(tagged_sentence[i][0])) {
	      is_url = true;
	    }
	  }
	  return((parameter === "YES") ? is_url : !is_url);
	}
	
	function current_word_and_2_tag_after_are(tagged_sentence, i, parameter1, parameter2) {
	  if (i < tagged_sentence.length - 2) {
	    if (tagged_sentence[i+2][1] === parameter2) {
	      return(tagged_sentence[i][0] === parameter1);
	    }
	    else {
	      return(false);
	    }
	  }
	  else {
	    return(false);
	  }
	}
	
	function twoTagAfterParameterValues(sentence, i) {
	  if (i < sentence.length - 2) {
	    return [sentence[i + 2].tag];
	  }
	  else {
	    return [];
	  }
	}
	
	function current_word_and_next_tag_are(tagged_sentence, i, parameter1, parameter2) {
	  var next_tag = false;
	  // check current word
	  var current_word = (tagged_sentence[i][0] === parameter1);
	  // check next tag
	  if (i < tagged_sentence.length - 1) {
	    next_tag = (tagged_sentence[i+1][1] === parameter2);
	  }
	  return(current_word && next_tag);
	}
	
	function current_word_and_prev_tag_are(tagged_sentence, i, parameter1, parameter2) {
	  var prev_tag = false;
	  // check current word
	  var current_word = (tagged_sentence[i][0] === parameter2);
	  // check prev tag
	  if (i > 0) {
	    prev_tag = (tagged_sentence[i-1][1] === parameter1);
	  }
	  return(current_word && prev_tag);
	}
	
	function current_word_and_2_tag_before_are(tagged_sentence, i, parameter1, parameter2) {
	  var two_tags_before = false;
	  // check current word
	  var current_word = (tagged_sentence[i][0] === parameter2);
	  if (i > 1) {
	    // check two tags before
	    two_tags_before = (tagged_sentence[i-2][1] === parameter1);
	  }
	  return(current_word && two_tags_before);
	}
	
	function twoTagBeforeParameterValues(sentence, i) {
	  if (i > 1) {
	    return [sentence[i - 2].tag];
	  }
	  else {
	    return [];
	  }
	}
	
	function current_word_and_2_after_are(tagged_sentence, i, parameter1, parameter2) {
	  var two_words_after = false;
	  // check current word
	  var current_word = (tagged_sentence[i][0] === parameter1);
	  if (i < tagged_sentence - 2) {
	    two_words_after = (tagged_sentence[i+2][0] === parameter2);
	  }
	  return(current_word && two_words_after);
	}
	
	function prev_word_is(tagged_sentence, i, parameter) {
	  if (i > 0) {
	    return(tagged_sentence[i-1][0].toLowerCase() === parameter.toLowerCase());
	  }
	  else {
	    return(false);
	  }
	}
	
	// Returns the right value for parameter 1 of prev_word_is
	function prevWordParameterValues(sentence, i) {
	  if (i > 0) {
	    return [sentence[i - 1].token];
	  }
	  else {
	    return [];
	  }
	}
	
	function prev_1_or_2_word_is(tagged_sentence, i, parameter) {
	  var prev_1 = false;
	  var prev_2 = false;
	  if (i > 0) {
	    prev_1 = (tagged_sentence[i-1][0].toLowerCase() === parameter.toLowerCase());
	  }
	  if (i > 1) {
	    prev_2 = (tagged_sentence[i-2][0].toLowerCase() === parameter.toLowerCase());
	  }
	  return(prev_1 || prev_2);
	}
	
	function prev1Or2WordParameterValues(sentence, i) {
	  var values = [];
	  if (i > 0) {
	    values.push(sentence[i - 1].token);
	  }
	  if (i > 1) {
	    values.push(sentence[i - 2].token);
	  }
	  return values;
	}
	
	// Indicates whether or not this string ends with the specified string.
	// Adapted from the original Javascript Brill tagger
	function current_word_ends_with(tagged_sentence, i, parameter) {
	  var word = tagged_sentence[i][0];
	  if (!parameter || (parameter.length > word.length)) {
	    return false;
	  }
	  return(word.indexOf(parameter) === (word.length - parameter.length));
	}
	
	// sentence is an array of token records
	function currentWordEndsWithParameterValues(sentence, i) {
	  var values = ["ing"];
	
	  return values;
	}
	
	function right_bigram_is(tagged_sentence, i, parameter1, parameter2) {
	  var word_1 = (tagged_sentence[i][0] === parameter1);
	  var word_2 = false;
	  if (i < tagged_sentence.length - 1) {
	    word_2 = (tagged_sentence[i+1][0] === parameter2);
	  }
	  return(word_1 && word_2);
	}
	
	function left_bigram_is(tagged_sentence, i, parameter1, parameter2) {
	  var word_1 = false;
	  var word_2 = (tagged_sentence[i][0] === parameter2);
	  if (i > 0) {
	    word_1 = (tagged_sentence[i-1][0] === parameter1);
	  }
	  return(word_1 && word_2);
	}
	
	function next_bigram_is(tagged_sentence, i, parameter1, parameter2) {
	  var word_1 = false;
	  var word_2 = false;
	  if (i < tagged_sentence.length - 1) {
	    word_1 = (tagged_sentence[i+1][0] === parameter1);
	  }
	  if (i < tagged_sentence.length - 2) {
	    word_2 = (tagged_sentence[i+2][0] === parameter2);
	  }
	  return(word_1 && word_2);
	}
	
	function twoWordAfterParameterValues(sentence, i) {
	  if (i < sentence.length - 2) {
	    return [sentence[i + 2].token];
	  }
	  else {
	    return [];
	  }
	}
	
	function prev_bigram_is(tagged_sentence, i, parameter1, parameter2) {
	  var word_1 = false;
	  var word_2 = false;
	  if (i >  1) {
	    word_1 = (tagged_sentence[i-2][0] === parameter1);
	  }
	  if (i > 0) {
	    word_2 = (tagged_sentence[i-1][0] === parameter2);
	  }
	  return(word_1 && word_2);
	}
	
	function twoWordBeforeParameterValues(sentence, i) {
	  if (i >  1) {
	    return [sentence[i - 2].token];
	  }
	  else {
	    return [];
	  }
	}
	
	function next_1_or_2_word_is(tagged_sentence, i, parameter1, parameter2) {
	  next_1 = false;
	  next_2 = false;
	  if (i < tagged_sentence.length - 1) {
	    next_1 = (tagged_sentence[i+1][0] === parameter1);
	  }
	  if (i < tagged_sentence.length - 2) {
	    next_2 = (tagged_sentence[i+2][0] === parameter2);
	  }
	  return(next_1 || next_2);
	}
	
	function next1Or2WordParameterValues(sentence, i) {
	  var values = [];
	  if (i < sentence.length - 1) {
	    values.push(sentence[i + 1].token);
	  }
	  if (i < sentence.length - 2) {
	    values.push(sentence[i + 2].token);
	  }
	  return values;
	}
	
	// ==================================
	// Predicates about tags
	// ==================================
	function next_tag_is(tagged_sentence, i, parameter) {
	  if (i < tagged_sentence.length - 1) {
	    return(tagged_sentence[i+1][1] === parameter);
	  }
	  else {
	    return(false);
	  }
	}
	
	function nextTagParameterValues(sentence, i) {
	  if (i < sentence.length - 1) {
	    return [sentence[i + 1].tag];
	  }
	  else {
	    return [];
	  }
	}
	
	function next_2_tag_is(tagged_sentence, i, parameter) {
	  if (i < tagged_sentence.length - 2) {
	    return(tagged_sentence[i+2][1] === parameter);
	  }
	  else {
	    return(false);
	  }
	}
	
	function next2TagParameterValues(sentence, i) {
	  if (i < sentence.length - 2) {
	    return [sentence[i+2].tag];
	  }
	  else {
	    return [];
	  }
	}
	
	function next_1_or_2_tag_is(tagged_sentence, i, parameter) {
	  var next_1 = false;
	  var next_2 = false;
	  if (i < tagged_sentence.length - 1) {
	    next_1 = (tagged_sentence[i+1][1] === parameter);
	  }
	  if (i < tagged_sentence.length - 2) {
	    next_2 = (tagged_sentence[i+2][1] === parameter);
	  }
	  return(next_1 || next_2);
	}
	
	function next1Or2TagIsParameterValues(sentence, i) {
	  var values = [];
	  if (i < sentence.length - 1) {
	    values.push(sentence[i + 1].tag);
	  }
	  if (i < sentence.length - 2) {
	    values.push(sentence[i + 2].tag);
	  }
	  return values;
	}
	
	function next_1_or_2_or_3_tag(tagged_sentence, i, parameter) {
	  var next_1 = false;
	  var next_2 = false;
	  var next_3 = false;
	  if (i < tagged_sentence.length - 1) {
	    next_1 = (tagged_sentence[i+1][1] === parameter);
	  }
	  if (i < tagged_sentence.length - 2) {
	    next_2 = (tagged_sentence[i+2][1] === parameter);
	  }
	  if (i < tagged_sentence.length - 3) {
	    next_3 = (tagged_sentence[i+3][1] === parameter);
	  }
	  return(next_1 || next_2 || next_3);
	}
	
	function next1Or2Or3TagParameterValues(sentence, i) {
	  var values = [];
	  if (i < sentence.length - 1) {
	    values.push(sentence[i + 1].tag);
	  }
	  if (i < sentence.length - 2) {
	    values.push(sentence[i + 2].tag);
	  }
	  if (i < sentence.length - 3) {
	    values.push(sentence[i + 3].tag);
	  }
	  return values;
	}
	
	function surrounded_by_tags(tagged_sentence, i, parameter1, parameter2) {
	  if (i < tagged_sentence.length - 1) {
	    // check next tag
	    if (tagged_sentence[i+1][1] === parameter2) {
	      // check previous tag
	      if (i > 0) {
	        return(tagged_sentence[i-1][1] === parameter1)
	      }
	      else {
	        return(false);
	      }
	    }
	    else {
	      return(false);
	    }
	  }
	  else {
	    return(false);
	  }
	}
	
	function prev_1_or_2_or_3_tag(tagged_sentence, i, parameter) {
	  var prev_1 = null;
	  if (i > 0) {
	    prev_1 = tagged_sentence[i-1][1];
	  }
	  var prev_2 = null;
	  if (i > 1) {
	    prev_2 = tagged_sentence[i-2][1];
	  }
	  var prev_3 = null;
	  if (i > 2) {
	    prev_3 = tagged_sentence[i-3][1];
	  }
	  return((prev_1 === parameter) || (prev_2 === parameter) || (prev_3 === parameter));
	}
	
	function prev1Or2Or3TagParameterValues(sentence, i) {
	  var values = [];
	  if (i > 0) {
	    values.push(sentence[i - 1].tag);
	  }
	  if (i > 1) {
	    values.push(sentence[i - 2].tag);
	  }
	  if (i > 2) {
	    values.push(sentence[i - 3].tag);
	  }
	  return values;
	}
	
	function prev_1_or_2_tag(tagged_sentence, i, parameter) {
	  var prev_1 = null;
	  if (i > 0) {
	    prev_1 = tagged_sentence[i-1][1];
	  }
	  var prev_2 = null;
	  if (i > 1) {
	    prev_2 = tagged_sentence[i-2][1];
	  }
	  return((prev_1 === parameter) || (prev_2 === parameter));
	}
	
	function prev1Or2TagParameterValues(sentence, i) {
	  values = [];
	  if (i > 0) {
	    values.push(sentence[i - 1].tag);
	  }
	  if (i > 1) {
	    values.push(sentence[i - 2].tag);
	  }
	  return values;
	}
	
	function prev_tag_is(tagged_sentence, i, parameter) {
	  var prev = false;
	  if (i > 0) {
	    prev = (tagged_sentence[i-1][1] === parameter);
	  }
	  return(prev);
	}
	
	function prevTagParameterValues(sentence, i) {
	  if (i > 0) {
	    return [sentence[i - 1].tag];
	  }
	  else {
	    return [];
	  }
	}
	
	// Looks like a useless predicate because transformation already take the
	// current tag into account
	function current_word_is_tag(tagged_sentence, i, parameter) {
	  return(tagged_sentence[i][1] === parameter);
	}
	
	function prev_2_tag_is(tagged_sentence, i, parameter) {
	  var prev_2 = false;
	  if (i > 1) {
	    prev_2 = (tagged_sentence[i-2][1] === parameter);
	  }
	  return(prev_2);
	}
	
	function default_predicate(tagged_sentence, i, parameter) {
	  return(false);
	}
	
	module.exports = ruleTemplates;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = (function() {
	  /*
	   * Generated by PEG.js 0.8.0.
	   *
	   * http://pegjs.majda.cz/
	   */
	
	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }
	
	  function SyntaxError(message, expected, found, offset, line, column) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.offset   = offset;
	    this.line     = line;
	    this.column   = column;
	
	    this.name     = "SyntaxError";
	  }
	
	  peg$subclass(SyntaxError, Error);
	
	  function parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},
	
	        peg$FAILED = {},
	
	        peg$startRuleFunctions = { transformation_rules: peg$parsetransformation_rules },
	        peg$startRuleFunction  = peg$parsetransformation_rules,
	
	        peg$c0 = [],
	        peg$c1 = peg$FAILED,
	        peg$c2 = function(rules) {
	          var result = {};
	
	          for (var i = 0; i < rules.length; i++) {
	            var rule = rules[i][1];
	            result[rule.key()] = rule;
	          }
	          return(result);
	        },
	        peg$c3 = null,
	        peg$c4 = function(c1, c2, pred, par1, par2) {
	          // Construct rule
	          var result = new TransformationRule(c1, c2, pred, par1, par2);
	          return(result);
	        },
	        peg$c5 = /^[a-zA-Z_0-9_\-.,()]/,
	        peg$c6 = { type: "class", value: "[a-zA-Z_0-9_\\-.,()]", description: "[a-zA-Z_0-9_\\-.,()]" },
	        peg$c7 = function(characters) {
	           var s = "";
	           for (var i = 0; i < characters.length; i++) {
	             s += characters[i];
	           }
	           return(s);
	          },
	        peg$c8 = "*",
	        peg$c9 = { type: "literal", value: "*", description: "\"*\"" },
	        peg$c10 = function(wc) {
	           return(wc)
	          },
	        peg$c11 = "\r\n",
	        peg$c12 = { type: "literal", value: "\r\n", description: "\"\\r\\n\"" },
	        peg$c13 = "\n",
	        peg$c14 = { type: "literal", value: "\n", description: "\"\\n\"" },
	        peg$c15 = "\r",
	        peg$c16 = { type: "literal", value: "\r", description: "\"\\r\"" },
	        peg$c17 = "//",
	        peg$c18 = { type: "literal", value: "//", description: "\"//\"" },
	        peg$c19 = void 0,
	        peg$c20 = { type: "any", description: "any character" },
	        peg$c21 = " ",
	        peg$c22 = { type: "literal", value: " ", description: "\" \"" },
	        peg$c23 = "\t",
	        peg$c24 = { type: "literal", value: "\t", description: "\"\\t\"" },
	
	        peg$currPos          = 0,
	        peg$reportedPos      = 0,
	        peg$cachedPos        = 0,
	        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,
	
	        peg$result;
	
	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }
	
	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }
	
	    function text() {
	      return input.substring(peg$reportedPos, peg$currPos);
	    }
	
	    function offset() {
	      return peg$reportedPos;
	    }
	
	    function line() {
	      return peg$computePosDetails(peg$reportedPos).line;
	    }
	
	    function column() {
	      return peg$computePosDetails(peg$reportedPos).column;
	    }
	
	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        peg$reportedPos
	      );
	    }
	
	    function error(message) {
	      throw peg$buildException(message, null, peg$reportedPos);
	    }
	
	    function peg$computePosDetails(pos) {
	      function advance(details, startPos, endPos) {
	        var p, ch;
	
	        for (p = startPos; p < endPos; p++) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }
	        }
	      }
	
	      if (peg$cachedPos !== pos) {
	        if (peg$cachedPos > pos) {
	          peg$cachedPos = 0;
	          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
	        }
	        advance(peg$cachedPosDetails, peg$cachedPos, pos);
	        peg$cachedPos = pos;
	      }
	
	      return peg$cachedPosDetails;
	    }
	
	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }
	
	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }
	
	      peg$maxFailExpected.push(expected);
	    }
	
	    function peg$buildException(message, expected, pos) {
	      function cleanupExpected(expected) {
	        var i = 1;
	
	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });
	
	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }
	
	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }
	
	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }
	
	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;
	
	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }
	
	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];
	
	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";
	
	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }
	
	      var posDetails = peg$computePosDetails(pos),
	          found      = pos < input.length ? input.charAt(pos) : null;
	
	      if (expected !== null) {
	        cleanupExpected(expected);
	      }
	
	      return new SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        pos,
	        posDetails.line,
	        posDetails.column
	      );
	    }
	
	    function peg$parsetransformation_rules() {
	      var s0, s1, s2, s3, s4, s5;
	
	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$currPos;
	      s3 = peg$parseS();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parsetransformation_rule();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseS();
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$c1;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$c1;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$c1;
	      }
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$currPos;
	          s3 = peg$parseS();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parsetransformation_rule();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseS();
	              if (s5 !== peg$FAILED) {
	                s3 = [s3, s4, s5];
	                s2 = s3;
	              } else {
	                peg$currPos = s2;
	                s2 = peg$c1;
	              }
	            } else {
	              peg$currPos = s2;
	              s2 = peg$c1;
	            }
	          } else {
	            peg$currPos = s2;
	            s2 = peg$c1;
	          }
	        }
	      } else {
	        s1 = peg$c1;
	      }
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c2(s1);
	      }
	      s0 = s1;
	
	      return s0;
	    }
	
	    function peg$parsetransformation_rule() {
	      var s0, s1, s2, s3, s4, s5;
	
	      s0 = peg$currPos;
	      s1 = peg$parsecategory1();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseidentifier();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseidentifier();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseidentifier();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseidentifier();
	              if (s5 === peg$FAILED) {
	                s5 = peg$c3;
	              }
	              if (s5 !== peg$FAILED) {
	                peg$reportedPos = s0;
	                s1 = peg$c4(s1, s2, s3, s4, s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c1;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c1;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c1;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c1;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c1;
	      }
	
	      return s0;
	    }
	
	    function peg$parsecategory1() {
	      var s0;
	
	      s0 = peg$parsewild_card();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseidentifier();
	      }
	
	      return s0;
	    }
	
	    function peg$parseidentifier() {
	      var s0, s1, s2;
	
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c5.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c6); }
	      }
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          if (peg$c5.test(input.charAt(peg$currPos))) {
	            s2 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s2 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c6); }
	          }
	        }
	      } else {
	        s1 = peg$c1;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseS_no_eol();
	        if (s2 !== peg$FAILED) {
	          peg$reportedPos = s0;
	          s1 = peg$c7(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c1;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c1;
	      }
	
	      return s0;
	    }
	
	    function peg$parsewild_card() {
	      var s0, s1, s2;
	
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c8;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c9); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseS_no_eol();
	        if (s2 !== peg$FAILED) {
	          peg$reportedPos = s0;
	          s1 = peg$c10(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c1;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c1;
	      }
	
	      return s0;
	    }
	
	    function peg$parseEOL() {
	      var s0;
	
	      if (input.substr(peg$currPos, 2) === peg$c11) {
	        s0 = peg$c11;
	        peg$currPos += 2;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c12); }
	      }
	      if (s0 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 10) {
	          s0 = peg$c13;
	          peg$currPos++;
	        } else {
	          s0 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c14); }
	        }
	        if (s0 === peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 13) {
	            s0 = peg$c15;
	            peg$currPos++;
	          } else {
	            s0 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c16); }
	          }
	        }
	      }
	
	      return s0;
	    }
	
	    function peg$parseComment() {
	      var s0, s1, s2, s3, s4, s5;
	
	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c17) {
	        s1 = peg$c17;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c18); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$currPos;
	        peg$silentFails++;
	        s5 = peg$parseEOL();
	        peg$silentFails--;
	        if (s5 === peg$FAILED) {
	          s4 = peg$c19;
	        } else {
	          peg$currPos = s4;
	          s4 = peg$c1;
	        }
	        if (s4 !== peg$FAILED) {
	          if (input.length > peg$currPos) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c20); }
	          }
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$c1;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$c1;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$currPos;
	          peg$silentFails++;
	          s5 = peg$parseEOL();
	          peg$silentFails--;
	          if (s5 === peg$FAILED) {
	            s4 = peg$c19;
	          } else {
	            peg$currPos = s4;
	            s4 = peg$c1;
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.length > peg$currPos) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c20); }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$c1;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$c1;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseEOL();
	          if (s3 === peg$FAILED) {
	            s3 = peg$parseEOI();
	          }
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c1;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c1;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c1;
	      }
	
	      return s0;
	    }
	
	    function peg$parseS() {
	      var s0, s1;
	
	      s0 = [];
	      if (input.charCodeAt(peg$currPos) === 32) {
	        s1 = peg$c21;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c22); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 9) {
	          s1 = peg$c23;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c24); }
	        }
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseEOL();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseComment();
	          }
	        }
	      }
	      while (s1 !== peg$FAILED) {
	        s0.push(s1);
	        if (input.charCodeAt(peg$currPos) === 32) {
	          s1 = peg$c21;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c22); }
	        }
	        if (s1 === peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 9) {
	            s1 = peg$c23;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c24); }
	          }
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseEOL();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseComment();
	            }
	          }
	        }
	      }
	
	      return s0;
	    }
	
	    function peg$parseS_no_eol() {
	      var s0, s1;
	
	      s0 = [];
	      if (input.charCodeAt(peg$currPos) === 32) {
	        s1 = peg$c21;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c22); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 9) {
	          s1 = peg$c23;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c24); }
	        }
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseComment();
	        }
	      }
	      while (s1 !== peg$FAILED) {
	        s0.push(s1);
	        if (input.charCodeAt(peg$currPos) === 32) {
	          s1 = peg$c21;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c22); }
	        }
	        if (s1 === peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 9) {
	            s1 = peg$c23;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c24); }
	          }
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseComment();
	          }
	        }
	      }
	
	      return s0;
	    }
	
	    function peg$parseEOI() {
	      var s0, s1;
	
	      s0 = peg$currPos;
	      peg$silentFails++;
	      if (input.length > peg$currPos) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c20); }
	      }
	      peg$silentFails--;
	      if (s1 === peg$FAILED) {
	        s0 = peg$c19;
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c1;
	      }
	
	      return s0;
	    }
	
	
	      var TransformationRule = __webpack_require__(376);
	
	
	    peg$result = peg$startRuleFunction();
	
	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }
	
	      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
	    }
	  }
	
	  return {
	    SyntaxError: SyntaxError,
	    parse:       parse
	  };
	})();


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Transformation rules for the Brill tagger
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	//var log4js = require('log4js');
	//var logger = log4js.getLogger();
	
	var Predicate = __webpack_require__(810);
	
	//logger.setLevel('INFO');
	
	var category_wild_card = "*";
	
	function TransformationRule(c1, c2, predicate, parameter1, parameter2) {
	  this.literal = [c1, c2, predicate, parameter1, parameter2];
	  this.predicate = new Predicate(predicate, parameter1, parameter2);
	  this.old_category = c1;
	  this.new_category = c2;
	  // These members are for the learning algorithm
	  this.neutral = 0;
	  this.negative = 0;
	  this.positive = 0;
	  this.hasBeenSelectedAsHighRuleBefore = false;
	  //logger.debug('TransformationRule constructor: ' + this.literal);
	}
	
	TransformationRule.prototype.key = function() {
	  return(this.literal.toString());
	};
	
	TransformationRule.prototype.apply = function(tagged_sentence, position) {
	  if ((tagged_sentence[position][1] === this.old_category) ||
	      (this.old_category === category_wild_card)) {
	    if (this.predicate.evaluate(tagged_sentence, position)) {
	      tagged_sentence[position][1] = this.new_category;
	      //logger.debug('TransformationRule.apply: changed category ' +
	        //this.old_category + ' to ' + this.new_category +
	        //' at position ' + position);
	    }
	  }
	};
	
	//
	// Methods for processing sentences from a corpus that consist of an array of tokens
	//
	
	// Returns true if the rule applies at site. As a side effect it assigns the new
	// category to newTag
	TransformationRule.prototype.isApplicableAt = function(sentence, taggedSentence, i) {
	  //logger.debug("TransformationRule.prototype.isApplicableAt: " + taggedSentence);
	  var applies = (taggedSentence[i][1] === this.old_category) &&
	    this.predicate.evaluate(taggedSentence, i);
	  //logger.debug("TransformationRule.prototype.isApplicableAt: " + applies);
	
	  // Set newTag to let the trainer know what the new tag would become
	  if (applies) {
	    sentence[i].newTag = this.new_category;
	  }
	  return(applies);
	};
	
	TransformationRule.prototype.prettyPrint = function() {
	  var result = "";
	  // Old category and new category
	  result += this.old_category + " " + this.new_category;
	  // Predicate name
	  result += " " + this.predicate.name;
	  // Parameter 1 and 2
	  if (this.predicate.parameter1) {
	    result += " " + this.predicate.parameter1;
	    if (this.predicate.parameter2) {
	      result += " " + this.predicate.parameter2;
	    }
	  }
	  return result;
	};
	
	
	// Applies the rule the given location (if it applies)
	TransformationRule.prototype.applyAt = function(sentence, i) {
	  var taggedSentence = sentence.map(function(token) {
	    return [token.token, token.tag];
	  });
	
	  //logger.debug("TransformationRule.prototype.applyAt: input sentence length: " + sentence.length);
	  //logger.debug("TransformationRule.prototype.applyAt: tagged sentence length: " + taggedSentence.length);
	
	  this.apply(taggedSentence, i);
	  // Assign the new tag to the corpus site
	  sentence[i].testTag = taggedSentence[i][1];
	};
	
	// Calculate the net score of this rule
	TransformationRule.prototype.score = function() {
	  return (this.positive - this.negative);
	};
	
	module.exports = TransformationRule;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var PorterStemmer = __webpack_require__(379),
	util = __webpack_require__(12),
	events = __webpack_require__(179),
	os = __webpack_require__(1135);
	
	try {
	    var Threads = __webpack_require__(872);
	} catch (e) {
	    // Since webworker-threads are optional, only thow if the module is found
	    if (e.code !== 'MODULE_NOT_FOUND') throw e;
	}
	
	function checkThreadSupport() {
	    if (typeof Threads === 'undefined') {
	        throw new Error('parallel classification requires the optional dependency webworker-threads');
	    }
	}
	
	var Classifier = function(classifier, stemmer) {
	    this.classifier = classifier;
	    this.docs = [];
	    this.features = {};
	    this.stemmer = stemmer || PorterStemmer;
	    this.lastAdded = 0;
	    this.events = new events.EventEmitter();
	};
	
	function addDocument(text, classification) {
	
	    // Ignore further processing if classification is undefined
	    if(typeof classification === 'undefined') return;
	
	    // If classification is type of string then make sure it's dosen't have blank space at both end
	    if(typeof classification === 'string'){
	      classification = classification.trim();
	    }
	
	    if(typeof text === 'string')
		text = this.stemmer.tokenizeAndStem(text);
	
	    if(text.length === 0) {
	        // ignore empty documents
	        return;
	    }
	
	    this.docs.push({
		label: classification,
		text: text
	    });
	
	    for (var i = 0; i < text.length; i++) {
	        var token = text[i];
	        this.features[token] = (this.features[token] || 0) + 1;
	    }
	}
	
	function removeDocument(text, classification) {
	  var docs = this.docs
	    , doc
	    , pos;
	
	  if (typeof text === 'string') {
	    text = this.stemmer.tokenizeAndStem(text);
	  }
	
	  for (var i = 0, ii = docs.length; i < ii; i++) {
	    doc = docs[i];
	    if (doc.text.join(' ') == text.join(' ') &&
	        doc.label == classification) {
	      pos = i;
	    }
	  }
	
	  // Remove if there's a match
	  if (!isNaN(pos)) {
	    this.docs.splice(pos, 1);
	
	    for (var i = 0, ii = text.length; i < ii; i++) {
	      delete this.features[text[i]];
	    }
	  }
	}
	
	function textToFeatures(observation) {
	    var features = [];
	
	    if(typeof observation === 'string')
		observation = this.stemmer.tokenizeAndStem(observation);
	
	    for(var feature in this.features) {
	        if(observation.indexOf(feature) > -1)
	            features.push(1);
	        else
	            features.push(0);
	    }
	
	    return features;
	}
	
	function docsToFeatures(docs) {
	    var parsedDocs = [];
	
	    for (var i = 0; i < docs.length; i++) {
	        var features = [];
	
	        for (var feature in FEATURES) {
	            if (docs[i].observation.indexOf(feature) > -1)
	                features.push(1);
	            else
	                features.push(0);
	        }
	
	        parsedDocs.push({
	            index: docs[i].index,
	            features: features
	        });
	    }
	
	    return JSON.stringify(parsedDocs);
	}
	
	function train() {
	    var totalDocs = this.docs.length;
	    for(var i = this.lastAdded; i < totalDocs; i++) {
	        var features = this.textToFeatures(this.docs[i].text);
	        this.classifier.addExample(features, this.docs[i].label);
	        this.events.emit('trainedWithDocument', {index: i, total: totalDocs, doc: this.docs[i]});
	        this.lastAdded++;
	    }
	    this.events.emit('doneTraining', true);
	    this.classifier.train();
	}
	
	function trainParallel(numThreads, callback) {
	    checkThreadSupport();
	
	    if (!callback) {
	        callback = numThreads;
	        numThreads = undefined;
	    }
	
	    if (isNaN(numThreads)) {
	        numThreads = os.cpus().length;
	    }
	
	    var totalDocs = this.docs.length;
	    var threadPool = Threads.createPool(numThreads);
	    var docFeatures = {};
	    var finished = 0;
	    var self = this;
	
	    // Init pool; send the features array and the parsing function
	    threadPool.all.eval('var FEATURES = ' + JSON.stringify(this.features));
	    threadPool.all.eval(docsToFeatures);
	
	    // Convert docs to observation objects
	    var obsDocs = [];
	    for (var i = this.lastAdded; i < totalDocs; i++) {
	        var observation = this.docs[i].text;
	        if (typeof observation === 'string')
	            observation = this.stemmer.tokenizeAndStem(observation);
	        obsDocs.push({
	            index: i,
	            observation: observation
	        });
	    }
	
	    // Called when a batch completes processing
	    var onFeaturesResult = function(docs) {
	        setTimeout(function() {
	            self.events.emit('processedBatch', {
	                size: docs.length,
	                docs: totalDocs,
	                batches: numThreads,
	                index: finished
	            });
	        });
	
	        for (var j = 0; j < docs.length; j++) {
	            docFeatures[docs[j].index] = docs[j].features;
	        }
	    };
	
	    // Called when all batches finish processing
	    var onFinished = function(err) {
	        if (err) {
	            threadPool.destroy();
	            return callback(err);
	        }
	
	        for (var j = self.lastAdded; j < totalDocs; j++) {
	            self.classifier.addExample(docFeatures[j], self.docs[j].label);
	            self.events.emit('trainedWithDocument', {
	                index: j,
	                total: totalDocs,
	                doc: self.docs[j]
	            });
	            self.lastAdded++;
	        }
	
	        self.events.emit('doneTraining', true);
	        self.classifier.train();
	
	        threadPool.destroy();
	        callback(null);
	    };
	
	    // Split the docs and start processing
	    var batchSize = Math.ceil(obsDocs.length / numThreads);
	    var lastError;
	
	    for (var i = 0; i < numThreads; i++) {
	        var batchDocs = obsDocs.slice(i * batchSize, (i+1) * batchSize);
	        var batchJson = JSON.stringify(batchDocs);
	
	        threadPool.any.eval('docsToFeatures(' + batchJson + ')', function(err, docs) {
	            lastError = err || lastError;
	            finished++;
	
	            if (docs) {
	                docs = JSON.parse(docs);
	                onFeaturesResult(docs);
	            }
	
	            if (finished >= numThreads) {
	                onFinished(lastError);
	            }
	        });
	    }
	}
	
	function trainParallelBatches(options) {
	    checkThreadSupport();
	
	    var numThreads = options && options.numThreads;
	    var batchSize = options && options.batchSize;
	
	    if (isNaN(numThreads)) {
	        numThreads = os.cpus().length;
	    }
	
	    if (isNaN(batchSize)) {
	        batchSize = 2500;
	    }
	
	    var totalDocs = this.docs.length;
	    var threadPool = Threads.createPool(numThreads);
	    var docFeatures = {};
	    var finished = 0;
	    var self = this;
	
	    var abort = false;
	    var onError = function(err) {
	        if (!err || abort) return;
	        abort = true;
	        threadPool.destroy(true);
	        self.events.emit('doneTrainingError', err);
	    };
	
	    // Init pool; send the features array and the parsing function
	    var str = JSON.stringify(this.features);
	    threadPool.all.eval('var FEATURES = ' + str + ';', onError);
	    threadPool.all.eval(docsToFeatures, onError);
	
	    // Convert docs to observation objects
	    var obsDocs = [];
	    for (var i = this.lastAdded; i < totalDocs; i++) {
	        var observation = this.docs[i].text;
	        if (typeof observation === 'string')
	            observation = this.stemmer.tokenizeAndStem(observation);
	        obsDocs.push({
	            index: i,
	            observation: observation
	        });
	    }
	
	    // Split the docs in batches
	    var obsBatches = [];
	    var i = 0;
	    while (true) {
	        var batch = obsDocs.slice(i * batchSize, (i+1) * batchSize);
	        if (!batch || !batch.length) break;
	        obsBatches.push(batch);
	        i++;
	    }
	    obsDocs = null;
	    self.events.emit('startedTraining', {
	        docs: totalDocs,
	        batches: obsBatches.length
	    });
	
	    // Called when a batch completes processing
	    var onFeaturesResult = function(docs) {
	        self.events.emit('processedBatch', {
	            size: docs.length,
	            docs: totalDocs,
	            batches: obsBatches.length,
	            index: finished
	        });
	
	        for (var j = 0; j < docs.length; j++) {
	            docFeatures[docs[j].index] = docs[j].features;
	        }
	    };
	
	    // Called when all batches finish processing
	    var onFinished = function() {
	        threadPool.destroy(true);
	        abort = true;
	
	        for (var j = self.lastAdded; j < totalDocs; j++) {
	            self.classifier.addExample(docFeatures[j], self.docs[j].label);
	            self.events.emit('trainedWithDocument', {
	                index: j,
	                total: totalDocs,
	                doc: self.docs[j]
	            });
	            self.lastAdded++;
	        }
	
	        self.events.emit('doneTraining', true);
	        self.classifier.train();
	    };
	
	    // Called to send the next batch to be processed
	    var batchIndex = 0;
	    var sendNext = function() {
	        if (abort) return;
	        if (batchIndex >= obsBatches.length) {
	            return;
	        }
	
	        sendBatch(JSON.stringify(obsBatches[batchIndex]));
	        batchIndex++;
	    };
	
	    // Called to send a batch of docs to the threads
	    var sendBatch = function(batchJson) {
	        if (abort) return;
	        threadPool.any.eval('docsToFeatures(' + batchJson + ');', function(err, docs) {
	            if (err) {
	                return onError(err);
	            }
	
	            finished++;
	
	            if (docs) {
	                docs = JSON.parse(docs);
	                setTimeout(onFeaturesResult.bind(null, docs));
	            }
	
	            if (finished >= obsBatches.length) {
	                setTimeout(onFinished);
	            }
	
	            setTimeout(sendNext);
	        });
	    };
	
	    // Start processing
	    for (var i = 0; i < numThreads; i++) {
	        sendNext();
	    }
	}
	
	function retrain() {
	  this.classifier = new (this.classifier.constructor)();
	  this.lastAdded = 0;
	  this.train();
	}
	
	function retrainParallel(numThreads, callback) {
	  this.classifier = new (this.classifier.constructor)();
	  this.lastAdded = 0;
	  this.trainParallel(numThreads, callback);
	}
	
	function getClassifications(observation) {
	    return this.classifier.getClassifications(this.textToFeatures(observation));
	}
	
	function classify(observation) {
	    return this.classifier.classify(this.textToFeatures(observation));
	}
	
	function restore(classifier, stemmer) {
	    classifier.stemmer = stemmer || PorterStemmer;
	    classifier.events = new events.EventEmitter();
	    return classifier;
	}
	
	function save(filename, callback) {
	    var data = JSON.stringify(this);
	    var fs = __webpack_require__(37);
	    var classifier = this;
	    fs.writeFile(filename, data, 'utf8', function(err) {
	        if(callback) {
	            callback(err, err ? null : classifier);
	        }
	    });
	}
	
	function load(filename, callback) {
	    var fs = __webpack_require__(37);
	
	    fs.readFile(filename, 'utf8', function(err, data) {
	        var classifier;
	
	        if(!err) {
	            classifier = JSON.parse(data);
	        }
	
	        if(callback)
	            callback(err, classifier);
	    });
	}
	
	Classifier.prototype.addDocument = addDocument;
	Classifier.prototype.removeDocument = removeDocument;
	Classifier.prototype.train = train;
	Classifier.prototype.trainParallel = trainParallel;
	Classifier.prototype.trainParallelBatches = trainParallelBatches;
	Classifier.prototype.retrain = retrain;
	Classifier.prototype.retrainParallel = retrainParallel;
	Classifier.prototype.classify = classify;
	Classifier.prototype.textToFeatures = textToFeatures;
	Classifier.prototype.save = save;
	Classifier.prototype.getClassifications = getClassifications;
	Classifier.restore = restore;
	Classifier.load = load;
	
	module.exports = Classifier;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * Normalize Japanese inputs and expose function to perform several conversions.
	 *
	 * Note: The space character is treated like a roman character as it usually
	 *   has the same width as them in Japanese texts.
	 *
	 * \@todo Replace characters range from ㈠ to ㉃, ㊀ to ㊰ and ㇰ to ㇿ.
	 * \@todo Lazy initializations of conversionTables and converters.
	 * \@todo Would fixHalfwidthKana be useful?
	 *
	 * Descriptions of functions exposed:
	 * normalizeJapanese 「全角」英字・数字を「半角」、「半角」記・カタカナを「全角」に変換
	 * converters.fullwidthToHalfwidth.alphabet    「全角」英字を「半角」に変換
	 * converters.halfwidthToFullwidth.alphabet    「半角」英字を「全角」に変換
	 * converters.fullwidthToHalfwidth.numbers     「全角」数字を「半角」に変換
	 * converters.halfwidthToFullwidth.numbers     「半角」数字を「全角」に変換 「全角」スペースを「半角」
	 * converters.fullwidthToHalfwidth.punctuation 「全角」記号を「半角」に変換 「半角」スペースを「全角」
	 * converters.halfwidthToFullwidth.punctuation 「半角」記号を「全角」に変換
	 * converters.fullwidthToHalfwidth.katakana    「全角カタカナ」を「半角カタカナ」に変換
	 * converters.halfwidthToFullwidth.katakana    「半角カタカナ」を「全角カタカナ」に変換
	 * converters.hiraganaToKatakana               「カタカナ」を「ひらがな」に変換
	 * converters.katakanaToHiragana               「ひらがな」を「カタカナ」に変換
	 */
	
	var flip = __webpack_require__(98).flip;
	var merge = __webpack_require__(98).merge;
	var replacer = __webpack_require__(98).replacer;
	
	// From http://fernweh.jp/b/mb_convert_kana_js/
	var conversionTables = {
	  fullwidthToHalfwidth: {
	    alphabet: {
	      'ａ': 'a',
	      'ｂ': 'b',
	      'ｃ': 'c',
	      'ｄ': 'd',
	      'ｅ': 'e',
	      'ｆ': 'f',
	      'ｇ': 'g',
	      'ｈ': 'h',
	      'ｉ': 'i',
	      'ｊ': 'j',
	      'ｋ': 'k',
	      'ｌ': 'l',
	      'ｍ': 'm',
	      'ｎ': 'n',
	      'ｏ': 'o',
	      'ｐ': 'p',
	      'ｑ': 'q',
	      'ｒ': 'r',
	      'ｓ': 's',
	      'ｔ': 't',
	      'ｕ': 'u',
	      'ｖ': 'v',
	      'ｗ': 'w',
	      'ｘ': 'x',
	      'ｙ': 'y',
	      'ｚ': 'z',
	      'Ａ': 'A',
	      'Ｂ': 'B',
	      'Ｃ': 'C',
	      'Ｄ': 'D',
	      'Ｅ': 'E',
	      'Ｆ': 'F',
	      'Ｇ': 'G',
	      'Ｈ': 'H',
	      'Ｉ': 'I',
	      'Ｊ': 'J',
	      'Ｋ': 'K',
	      'Ｌ': 'L',
	      'Ｍ': 'M',
	      'Ｎ': 'N',
	      'Ｏ': 'O',
	      'Ｐ': 'P',
	      'Ｑ': 'Q',
	      'Ｒ': 'R',
	      'Ｓ': 'S',
	      'Ｔ': 'T',
	      'Ｕ': 'U',
	      'Ｖ': 'V',
	      'Ｗ': 'W',
	      'Ｘ': 'X',
	      'Ｙ': 'Y',
	      'Ｚ': 'Z',
	      '　': ' ' // Fullwidth space
	    },
	
	    numbers: {
	      '０': '0',
	      '１': '1',
	      '２': '2',
	      '３': '3',
	      '４': '4',
	      '５': '5',
	      '６': '6',
	      '７': '7',
	      '８': '8',
	      '９': '9'
	    },
	
	    symbol: {
	      '＿': '_',
	      '－': '-',
	      '，': ',',
	      '；': ';',
	      '：': ':',
	      '！': '!',
	      '？': '?',
	      '．': '.',
	      '（': '(',
	      '）': ')',
	      '［': '[',
	      '］': ']',
	      '｛': '{',
	      '｝': '}',
	      '＠': '@',
	      '＊': '*',
	      '＼': '\\',
	      '／': '/',
	      '＆': '&',
	      '＃': '#',
	      '％': '%',
	      '｀': '`',
	      '＾': '^',
	      '＋': '+',
	      '＜': '<',
	      '＝': '=',
	      '＞': '>',
	      '｜': '|',
	      // Never converted: '～': '~',
	      '≪': '«',
	      '≫': '»',
	      '─': '-',
	      '＄': '$',
	      '＂': '"'
	    },
	
	    purePunctuation: {
	      '、': '､',
	      '。': '｡',
	      '・': '･',
	      '「': '｢',
	      '」': '｣'
	    },
	
	    punctuation: {},
	
	    katakana: {
	      '゛': 'ﾞ',
	      '゜': 'ﾟ',
	      'ー': 'ｰ',
	
	      'ヴ': 'ｳﾞ',
	      'ガ': 'ｶﾞ',
	      'ギ': 'ｷﾞ',
	      'グ': 'ｸﾞ',
	      'ゲ': 'ｹﾞ',
	      'ゴ': 'ｺﾞ',
	      'ザ': 'ｻﾞ',
	      'ジ': 'ｼﾞ',
	      'ズ': 'ｽﾞ',
	      'ゼ': 'ｾﾞ',
	      'ゾ': 'ｿﾞ',
	      'ダ': 'ﾀﾞ',
	      'ヂ': 'ﾁﾞ',
	      'ヅ': 'ﾂﾞ',
	      'デ': 'ﾃﾞ',
	      'ド': 'ﾄﾞ',
	      'バ': 'ﾊﾞ',
	      'パ': 'ﾊﾟ',
	      'ビ': 'ﾋﾞ',
	      'ピ': 'ﾋﾟ',
	      'ブ': 'ﾌﾞ',
	      'プ': 'ﾌﾟ',
	      'ベ': 'ﾍﾞ',
	      'ペ': 'ﾍﾟ',
	      'ボ': 'ﾎﾞ',
	      'ポ': 'ﾎﾟ',
	
	      'ァ': 'ｧ',
	      'ア': 'ｱ',
	      'ィ': 'ｨ',
	      'イ': 'ｲ',
	      'ゥ': 'ｩ',
	      'ウ': 'ｳ',
	      'ェ': 'ｪ',
	      'エ': 'ｴ',
	      'ォ': 'ｫ',
	      'オ': 'ｵ',
	      'カ': 'ｶ',
	      'キ': 'ｷ',
	      'ク': 'ｸ',
	      'ケ': 'ｹ',
	      'コ': 'ｺ',
	      'サ': 'ｻ',
	      'シ': 'ｼ',
	      'ス': 'ｽ',
	      'セ': 'ｾ',
	      'ソ': 'ｿ',
	      'タ': 'ﾀ',
	      'チ': 'ﾁ',
	      'ッ': 'ｯ',
	      'ツ': 'ﾂ',
	      'テ': 'ﾃ',
	      'ト': 'ﾄ',
	      'ナ': 'ﾅ',
	      'ニ': 'ﾆ',
	      'ヌ': 'ﾇ',
	      'ネ': 'ﾈ',
	      'ノ': 'ﾉ',
	      'ハ': 'ﾊ',
	      'ヒ': 'ﾋ',
	      'フ': 'ﾌ',
	      'ヘ': 'ﾍ',
	      'ホ': 'ﾎ',
	      'マ': 'ﾏ',
	      'ミ': 'ﾐ',
	      'ム': 'ﾑ',
	      'メ': 'ﾒ',
	      'モ': 'ﾓ',
	      'ャ': 'ｬ',
	      'ヤ': 'ﾔ',
	      'ュ': 'ｭ',
	      'ユ': 'ﾕ',
	      'ョ': 'ｮ',
	      'ヨ': 'ﾖ',
	      'ラ': 'ﾗ',
	      'リ': 'ﾘ',
	      'ル': 'ﾙ',
	      'レ': 'ﾚ',
	      'ロ': 'ﾛ',
	      'ワ': 'ﾜ',
	      'ヲ': 'ｦ',
	      'ン': 'ﾝ'
	    }
	  },
	
	  halfwidthToFullwidth: {}
	};
	
	var fixFullwidthKana = {
	  'ゝ゛': 'ゞ',
	  'ヽ゛': 'ヾ',
	
	  'う゛': 'ゔ',
	  'か゛': 'が',
	  'き゛': 'ぎ',
	  'く゛': 'ぐ',
	  'け゛': 'げ',
	  'こ゛': 'ご',
	  'さ゛': 'ざ',
	  'し゛': 'じ',
	  'す゛': 'ず',
	  'せ゛': 'ぜ',
	  'そ゛': 'ぞ',
	  'た゛': 'だ',
	  'ち゛': 'ぢ',
	  'つ゛': 'づ',
	  'て゛': 'で',
	  'と゛': 'ど',
	  'は゛': 'ば',
	  'は゜': 'ぱ',
	  'ひ゛': 'び',
	  'ひ゜': 'ぴ',
	  'ふ゛': 'ぶ',
	  'ふ゜': 'ぷ',
	  'へ゛': 'べ',
	  'へ゜': 'ぺ',
	  'ほ゛': 'ぼ',
	  'ほ゜': 'ぽ',
	  'っな': 'んな',
	  'っに': 'んに',
	  'っぬ': 'んぬ',
	  'っね': 'んね',
	  'っの': 'んの',
	
	  'ウ゛': 'ヴ',
	  'カ゛': 'ガ',
	  'キ゛': 'ギ',
	  'ク゛': 'グ',
	  'ケ゛': 'ゲ',
	  'コ゛': 'ゴ',
	  'サ゛': 'ザ',
	  'シ゛': 'ジ',
	  'ス゛': 'ズ',
	  'セ゛': 'ゼ',
	  'ソ゛': 'ゾ',
	  'タ゛': 'ダ',
	  'チ゛': 'ヂ',
	  'ツ゛': 'ヅ',
	  'テ゛': 'デ',
	  'ト゛': 'ド',
	  'ハ゛': 'バ',
	  'ハ゜': 'パ',
	  'ヒ゛': 'ビ',
	  'ヒ゜': 'ピ',
	  'フ゛': 'ブ',
	  'フ゜': 'プ',
	  'ヘ゛': 'ベ',
	  'ヘ゜': 'ペ',
	  'ホ゛': 'ボ',
	  'ホ゜': 'ポ',
	  'ッナ': 'ンナ',
	  'ッニ': 'ンニ',
	  'ッヌ': 'ンヌ',
	  'ッネ': 'ンネ',
	  'ッノ': 'ンノ'
	};
	
	var fixCompositeSymbolsTable = {
	  '㋀': '1月',
	  '㋁': '2月',
	  '㋂': '3月',
	  '㋃': '4月',
	  '㋄': '5月',
	  '㋅': '6月',
	  '㋆': '7月',
	  '㋇': '8月',
	  '㋈': '9月',
	  '㋉': '10月',
	  '㋊': '11月',
	  '㋋': '12月',
	
	  '㏠': '1日',
	  '㏡': '2日',
	  '㏢': '3日',
	  '㏣': '4日',
	  '㏤': '5日',
	  '㏥': '6日',
	  '㏦': '7日',
	  '㏧': '8日',
	  '㏨': '9日',
	  '㏩': '10日',
	  '㏪': '11日',
	  '㏫': '12日',
	  '㏬': '13日',
	  '㏭': '14日',
	  '㏮': '15日',
	  '㏯': '16日',
	  '㏰': '17日',
	  '㏱': '18日',
	  '㏲': '19日',
	  '㏳': '20日',
	  '㏴': '21日',
	  '㏵': '22日',
	  '㏶': '23日',
	  '㏷': '24日',
	  '㏸': '25日',
	  '㏹': '26日',
	  '㏺': '27日',
	  '㏻': '28日',
	  '㏼': '29日',
	  '㏽': '30日',
	  '㏾': '31日',
	
	  '㍘': '0点',
	  '㍙': '1点',
	  '㍚': '2点',
	  '㍛': '3点',
	  '㍜': '4点',
	  '㍝': '5点',
	  '㍞': '6点',
	  '㍟': '7点',
	  '㍠': '8点',
	  '㍡': '9点',
	  '㍢': '10点',
	  '㍣': '11点',
	  '㍤': '12点',
	  '㍥': '13点',
	  '㍦': '14点',
	  '㍧': '15点',
	  '㍨': '16点',
	  '㍩': '17点',
	  '㍪': '18点',
	  '㍫': '19点',
	  '㍬': '20点',
	  '㍭': '21点',
	  '㍮': '22点',
	  '㍯': '23点',
	  '㍰': '24点',
	
	  '㍻': '平成',
	  '㍼': '昭和',
	  '㍽': '大正',
	  '㍾': '明治',
	  '㍿': '株式会社',
	
	  '㌀': 'アパート',
	  '㌁': 'アルファ',
	  '㌂': 'アンペア',
	  '㌃': 'アール',
	  '㌄': 'イニング',
	  '㌅': 'インチ',
	  '㌆': 'ウオン',
	  '㌇': 'エスクード',
	  '㌈': 'エーカー',
	  '㌉': 'オンス',
	  '㌊': 'オーム',
	  '㌋': 'カイリ', //海里
	  '㌌': 'カラット',
	  '㌍': 'カロリー',
	  '㌎': 'ガロン',
	  '㌏': 'ガンマ',
	  '㌐': 'ギガ',
	  '㌑': 'ギニー',
	  '㌒': 'キュリー',
	  '㌓': 'ギルダー',
	  '㌔': 'キロ',
	  '㌕': 'キログラム',
	  '㌖': 'キロメートル',
	  '㌗': 'キロワット',
	  '㌘': 'グラム',
	  '㌙': 'グラムトン',
	  '㌚': 'クルゼイロ',
	  '㌛': 'クローネ',
	  '㌜': 'ケース',
	  '㌝': 'コルナ',
	  '㌞': 'コーポ',
	  '㌟': 'サイクル',
	  '㌠': 'サンチーム',
	  '㌡': 'シリング',
	  '㌢': 'センチ',
	  '㌣': 'セント',
	  '㌤': 'ダース',
	  '㌥': 'デシ',
	  '㌦': 'ドル',
	  '㌧': 'トン',
	  '㌨': 'ナノ',
	  '㌩': 'ノット',
	  '㌪': 'ハイツ',
	  '㌫': 'パーセント',
	  '㌬': 'パーツ',
	  '㌭': 'バーレル',
	  '㌮': 'ピアストル',
	  '㌯': 'ピクル',
	  '㌰': 'ピコ',
	  '㌱': 'ビル',
	  '㌲': 'ファラッド',
	  '㌳': 'フィート',
	  '㌴': 'ブッシェル',
	  '㌵': 'フラン',
	  '㌶': 'ヘクタール',
	  '㌷': 'ペソ',
	  '㌸': 'ペニヒ',
	  '㌹': 'ヘルツ',
	  '㌺': 'ペンス',
	  '㌻': 'ページ',
	  '㌼': 'ベータ',
	  '㌽': 'ポイント',
	  '㌾': 'ボルト',
	  '㌿': 'ホン',
	  '㍀': 'ポンド',
	  '㍁': 'ホール',
	  '㍂': 'ホーン',
	  '㍃': 'マイクロ',
	  '㍄': 'マイル',
	  '㍅': 'マッハ',
	  '㍆': 'マルク',
	  '㍇': 'マンション',
	  '㍈': 'ミクロン',
	  '㍉': 'ミリ',
	  '㍊': 'ミリバール',
	  '㍋': 'メガ',
	  '㍌': 'メガトン',
	  '㍍': 'メートル',
	  '㍎': 'ヤード',
	  '㍏': 'ヤール',
	  '㍐': 'ユアン',
	  '㍑': 'リットル',
	  '㍒': 'リラ',
	  '㍓': 'ルピー',
	  '㍔': 'ルーブル',
	  '㍕': 'レム',
	  '㍖': 'レントゲン',
	  '㍗': 'ワット'
	};
	
	// punctuation is pure_punctuation
	conversionTables.fullwidthToHalfwidth.punctuation = merge(
	    conversionTables.fullwidthToHalfwidth.symbol,
	    conversionTables.fullwidthToHalfwidth.purePunctuation
	)
	
	// Fill in the conversion tables with the flipped tables.
	conversionTables.halfwidthToFullwidth.alphabet = flip(conversionTables.fullwidthToHalfwidth.alphabet);
	conversionTables.halfwidthToFullwidth.numbers = flip(conversionTables.fullwidthToHalfwidth.numbers);
	conversionTables.halfwidthToFullwidth.symbol = flip(conversionTables.fullwidthToHalfwidth.symbol);
	conversionTables.halfwidthToFullwidth.purePunctuation = flip(conversionTables.fullwidthToHalfwidth.purePunctuation);
	conversionTables.halfwidthToFullwidth.punctuation = flip(conversionTables.fullwidthToHalfwidth.punctuation);
	conversionTables.halfwidthToFullwidth.katakana = flip(conversionTables.fullwidthToHalfwidth.katakana);
	
	// Build the normalization table.
	conversionTables.normalize = merge(
	    conversionTables.fullwidthToHalfwidth.alphabet,
	    conversionTables.fullwidthToHalfwidth.numbers,
	    conversionTables.fullwidthToHalfwidth.symbol,
	    conversionTables.halfwidthToFullwidth.purePunctuation,
	    conversionTables.halfwidthToFullwidth.katakana
	    );
	
	var converters = {
	  fullwidthToHalfwidth: {
	    alphabet: replacer(conversionTables.fullwidthToHalfwidth.alphabet),
	    numbers: replacer(conversionTables.fullwidthToHalfwidth.numbers),
	    symbol: replacer(conversionTables.fullwidthToHalfwidth.symbol),
	    purePunctuation: replacer(conversionTables.fullwidthToHalfwidth.purePunctuation),
	    punctuation: replacer(conversionTables.fullwidthToHalfwidth.punctuation),
	    katakana: replacer(conversionTables.fullwidthToHalfwidth.katakana)
	  },
	
	  halfwidthToFullwidth: {
	    alphabet: replacer(conversionTables.halfwidthToFullwidth.alphabet),
	    numbers: replacer(conversionTables.halfwidthToFullwidth.numbers),
	    symbol: replacer(conversionTables.halfwidthToFullwidth.symbol),
	    purePunctuation: replacer(conversionTables.halfwidthToFullwidth.purePunctuation),
	    punctuation: replacer(conversionTables.halfwidthToFullwidth.punctuation),
	    katakana: replacer(conversionTables.halfwidthToFullwidth.katakana)
	  },
	
	  fixFullwidthKana: replacer(fixFullwidthKana),
	  normalize: replacer(conversionTables.normalize)
	};
	
	var fixCompositeSymbols = replacer(fixCompositeSymbolsTable);
	
	
	/**
	 * Convert hiragana to fullwidth katakana.
	 * According to http://jsperf.com/converting-japanese, these implementations are
	 * faster than using lookup tables.
	 *
	 * @param {string} str A string.
	 * @return {string} A string not containing hiragana.
	 */
	converters.hiraganaToKatakana = function(str) {
	  str = converters.halfwidthToFullwidth.katakana(str);
	  str = converters.fixFullwidthKana(str);
	
	  str = str.replace(/ゝ/g, 'ヽ');
	  str = str.replace(/ゞ/g, 'ヾ');
	  //str = str.replace(/?/g, '𛀀'); // Letter archaic E
	
	  str = str.replace(/[ぁ-ゖ]/g, function(str) {
	    return String.fromCharCode(str.charCodeAt(0) + 96);
	  });
	
	  return str;
	};
	
	
	/**
	 * Convert katakana to hiragana.
	 *
	 * @param {string} str A string.
	 * @return {string} A string not containing katakana.
	 */
	converters.katakanaToHiragana = function(str) {
	  str = converters.halfwidthToFullwidth.katakana(str);
	  str = converters.fixFullwidthKana(str);
	
	  str = str.replace(/ヽ/g, 'ゝ');
	  str = str.replace(/ヾ/g, 'ゞ');
	  //str = str.replace(/?/g, '𛀁'); // Letter archaic E
	
	  str = str.replace(/[ァ-ヶ]/g, function(str) {
	    return String.fromCharCode(str.charCodeAt(0) - 96);
	  });
	
	  return str;
	};
	
	
	/**
	 * Fix kana and apply the following processes;
	 * * Replace repeat characters
	 * * Alphabet to halfwidth
	 * * Numbers to halfwidth
	 * * Punctuation to fullwidth
	 * * Katakana to fullwidth
	 * * Fix fullwidth kana
	 * * Replace composite symbols
	 *
	 * @param {string} str
	 * @return {string}
	 */
	var normalize_ja = function(str) {
	  // Replace repeat characters.
	  str = str
	    .replace(/(..)々々/g, '$1$1')
	    .replace(/(.)々/g, '$1$1');
	
	  str = converters.normalize(str);
	  str = converters.fixFullwidthKana(str);
	
	  // Replace composite symbols.
	  str = fixCompositeSymbols(str);
	
	  return str;
	};
	
	exports.normalize_ja = normalize_ja;
	exports.converters = converters;


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(380);
	
	// denote groups of consecutive consonants with a C and consecutive vowels
	// with a V.
	function categorizeGroups(token) {
	    return token.replace(/[^aeiouy]+y/g, 'CV').replace(/[aeiou]+/g, 'V').replace(/[^V]+/g, 'C');
	}
	
	// denote single consonants with a C and single vowels with a V
	function categorizeChars(token) {
	    return token.replace(/[^aeiouy]y/g, 'CV').replace(/[aeiou]/g, 'V').replace(/[^V]/g, 'C');
	}
	
	// calculate the "measure" M of a word. M is the count of VC sequences dropping
	// an initial C if it exists and a trailing V if it exists.
	function measure(token) {
	    if(!token)
	    	return -1;
	
	    return categorizeGroups(token).replace(/^C/, '').replace(/V$/, '').length / 2;
	}
	
	// determine if a token end with a double consonant i.e. happ
	function endsWithDoublCons(token) {
	    return token.match(/([^aeiou])\1$/);
	}
	
	// replace a pattern in a word. if a replacement occurs an optional callback
	// can be called to post-process the result. if no match is made NULL is
	// returned.
	function attemptReplace(token, pattern, replacement, callback) {
	    var result = null;
	    
	    if((typeof pattern == 'string') && token.substr(0 - pattern.length) == pattern)
	        result = token.replace(new RegExp(pattern + '$'), replacement);
	    else if((pattern instanceof RegExp) && token.match(pattern))
	        result = token.replace(pattern, replacement);
	        
	    if(result && callback)
	        return callback(result);
	    else
	        return result;
	}
	
	// attempt to replace a list of patterns/replacements on a token for a minimum
	// measure M.
	function attemptReplacePatterns(token, replacements, measureThreshold) {
	    var replacement = token;
	
	    for(var i = 0; i < replacements.length; i++) {   
	    	if(measureThreshold == null || measure(attemptReplace(token, replacements[i][0], replacements[i][1])) > measureThreshold) {
	    	    replacement = attemptReplace(replacement, replacements[i][0], replacements[i][2]) || replacement;
	        }
	    }
	    
	    return replacement;
	}
	
	// replace a list of patterns/replacements on a word. if no match is made return
	// the original token.
	function replacePatterns(token, replacements, measureThreshold) {
	    return attemptReplacePatterns(token, replacements, measureThreshold) || token;
	}
	
	// TODO: this should replace all of the messy replacement stuff above
	function replaceRegex(token, regex, includeParts, minimumMeasure) {
	    var parts;
	    var result = '';
	
	    if(regex.test(token)) {
	        parts = regex.exec(token);
	
	        includeParts.forEach(function(i) {
	            result += parts[i];
	        });
	    }
	
	    if(measure(result) > minimumMeasure) {
	        return result;
	    }
	
	    return null;
	}
	
	// step 1a as defined for the porter stemmer algorithm. 
	function step1a(token) {    
	    if(token.match(/(ss|i)es$/)) {
	        return token.replace(/(ss|i)es$/, '$1');
	    }
	
	    if(token.substr(-1) == 's' && token.substr(-2, 1) != 's' && token.length > 2) {
	        return token.replace(/s?$/, '');
	    }
	
	    return token;
	}
	
	// step 1b as defined for the porter stemmer algorithm. 
	function step1b(token) {   
	    if(token.substr(-3) == 'eed') {
	        if(measure(token.substr(0, token.length - 3)) > 0)
	            return token.replace(/eed$/, 'ee');
	    } else {
	        var result = attemptReplace(token, /(ed|ing)$/, '', function(token) {
	            if(categorizeGroups(token).indexOf('V') >= 0) {
	                result = attemptReplacePatterns(token, [['at', '', 'ate'],  ['bl', '', 'ble'], ['iz', '', 'ize']]);
	
	                if(result != token) {
	        		    return result;
	        		} else {
	        		  if(endsWithDoublCons(token) && token.match(/[^lsz]$/)) {
	        			 return token.replace(/([^aeiou])\1$/, '$1');
	                    }
	
	        		  if(measure(token) == 1 && categorizeChars(token).substr(-3) == 'CVC' && token.match(/[^wxy]$/)) {
	        			 return token + 'e';
	                    }
	        		}                
	
	        		return token;
	    	    }
	    	    
	    	    return null;
	    	});
	    	
	    	if(result) {
	    	    return result;
	        }
	    }
	
	    return token;   
	}
	
	// step 1c as defined for the porter stemmer algorithm. 
	function step1c(token) {
	    var categorizedGroups = categorizeGroups(token);
	
	    if(token.substr(-1) == 'y' && categorizedGroups.substr(0, categorizedGroups.length - 1).indexOf('V') > -1) {
	        return token.replace(/y$/, 'i');
	    }
	
	    return token;
	}
	
	// step 2 as defined for the porter stemmer algorithm. 
	function step2(token) {
	    token = replacePatterns(token, [['ational', '', 'ate'], ['tional', '', 'tion'], ['enci', '', 'ence'], ['anci', '', 'ance'],
	        ['izer', '', 'ize'], ['abli', '', 'able'], ['bli', '', 'ble'], ['alli', '', 'al'], ['entli', '', 'ent'], ['eli', '', 'e'],
	        ['ousli', '', 'ous'], ['ization', '', 'ize'], ['ation', '', 'ate'], ['ator', '', 'ate'],['alism', '', 'al'],
	        ['iveness', '', 'ive'], ['fulness', '', 'ful'], ['ousness', '', 'ous'], ['aliti', '', 'al'],
	        ['iviti', '', 'ive'], ['biliti', '', 'ble'], ['logi', '', 'log']], 0);
	
	    return token;
	}
	
	// step 3 as defined for the porter stemmer algorithm. 
	function step3(token) {
	    return replacePatterns(token, [['icate', '', 'ic'], ['ative', '', ''], ['alize', '', 'al'],
					   ['iciti', '', 'ic'], ['ical', '', 'ic'], ['ful', '', ''], ['ness', '', '']], 0);
	}
	
	// step 4 as defined for the porter stemmer algorithm. 
	function step4(token) {
	    return replaceRegex(token, /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, [1], 1) || 
	        replaceRegex(token, /^(.+?)(s|t)(ion)$/, [1, 2], 1) ||
	        token; 
	}
	
	// step 5a as defined for the porter stemmer algorithm. 
	function step5a(token) {
	    var m = measure(token.replace(/e$/, ''));
	
	
	
	    if(m > 1 || (m == 1 && !(categorizeChars(token).substr(-4, 3) == 'CVC' && token.match(/[^wxy].$/)))) {
	        token = token.replace(/e$/, '');
	    }
	
	    return token;
	}
	
	// step 5b as defined for the porter stemmer algorithm. 
	function step5b(token) {
	    if(measure(token) > 1) {
	       return token.replace(/ll$/, 'l'); 
	    }
	    
	    return token;
	}
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	
	// perform full stemming algorithm on a single word
	PorterStemmer.stem = function(token) {
	    if(token.length < 3) return token;
	    return step5b(step5a(step4(step3(step2(step1c(step1b(step1a(token.toLowerCase())))))))).toString();
	};
	
	//exports for tests
	PorterStemmer.categorizeGroups = categorizeGroups;
	PorterStemmer.measure = measure;
	PorterStemmer.step1a = step1a;
	PorterStemmer.step1b = step1b;
	PorterStemmer.step1c = step1c;
	PorterStemmer.step2 = step2;
	PorterStemmer.step3 = step3;
	PorterStemmer.step4 = step4;
	PorterStemmer.step5a = step5a;
	PorterStemmer.step5b = step5b;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(144);
	var Tokenizer = __webpack_require__(218);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.addStopWord = function(stopWord) {
	        stopwords.words.push(stopWord);
	    };
	
	    stemmer.addStopWords = function(moreStopWords) {
	        stopwords.words = stopwords.words.concat(moreStopWords);
	    };
	
	    stemmer.removeStopWord = function(stopWord) {
	        this.removeStopWords([stopWord])
	    };
	
	    stemmer.removeStopWords = function(moreStopWords) {
	        moreStopWords.forEach(function(stopWord){
	            var idx = stopwords.words.indexOf(stopWord);
	            if (idx >= 0) {
	                stopwords.words.splice(idx, 1);
	            }
	        });
	
	    };
	
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	        var lowercaseText = text.toLowerCase();
	        var tokens = new Tokenizer().tokenize(lowercaseText);
	
	        if (keepStops) {
	            tokens.forEach(function(token) {
	                stemmedTokens.push(stemmer.stem(token));
	            });
	        }
	
	        else {
	            tokens.forEach(function(token) {
	                if (stopwords.words.indexOf(token) == -1)
	                    stemmedTokens.push(stemmer.stem(token));
	            });
	        }
	
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Ismaël Héry
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(862);
	var Tokenizer = __webpack_require__(384);
	
	module.exports = function() {
	   var stemmer = this;
	
	   stemmer.stem = function(token) {
	      return token;
	   };
	
	   stemmer.tokenizeAndStem = function(text, keepStops) {
	      var stemmedTokens = [];
	
	      new Tokenizer().tokenize(text).forEach(function(token) {
	         if (keepStops || stopwords.words.indexOf(token) == -1) {
	            var resultToken = token.toLowerCase();
	            if (resultToken.match(/[a-zâàëéêèïîôûùç0-9]/gi)) {
	               resultToken = stemmer.stem(resultToken);
	            }
	            stemmedTokens.push(resultToken);
	         }
	      });
	
	      return stemmedTokens;
	   };
	
	   stemmer.attach = function() {
	      String.prototype.stem = function() {
	         return stemmer.stem(this);
	      };
	
	      String.prototype.tokenizeAndStem = function(keepStops) {
	         return stemmer.tokenizeAndStem(this, keepStops);
	      };
	   };
	}


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel,David Przybilla
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/[^a-zA-Zá-úÁ-ÚñÑüÜ]+/));
	};


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	Farsi Aggressive Tokenizer by Fardin Koochaki <me@fardinak.com>
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.clearEmptyString = function(array) {
		return array.filter(function(a) {
			return a != '';
		});
	};
	
	AggressiveTokenizer.prototype.clearText = function(text) {
		return text.replace(new RegExp('\.\:\+\-\=\(\)\"\'\!\?\،\,\؛\;', 'g'), ' ');
	};
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    text = this.clearText(text);
	    return this.clearEmptyString(text.split(/\s+/));
	};


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/[^a-z0-9äâàéèëêïîöôùüûœç]+/i));
	};


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel,David Przybilla
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/\W+/));
	};


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Kristoffer Brabrand
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    normalizer = __webpack_require__(826),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    text = normalizer.remove_diacritics(text);
	
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/[^A-Za-z0-9_æøåÆØÅäÄöÖüÜ]+/));
	};


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2013, Paweł Łaskarzewski
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);
	};
	
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.withoutEmpty = function(array) {
		return array.filter(function(a) {return a;});
	};
	
	AggressiveTokenizer.prototype.clearText = function(text) {
		return text.replace(/[^a-zążśźęćńół0-9]/gi, ' ').replace(/[\s\n]+/g, ' ').trim();
	};
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.withoutEmpty(this.clearText(text).split(' '));
	};


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel,David Przybilla
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.withoutEmpty = function(array) {
		return array.filter(function(a) {return a;});
	};
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.withoutEmpty(this.trim(text.split(/[^a-zA-Zà-úÀ-Ú]/)));
	};


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);    
	};
	
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.withoutEmpty = function(array) {
		return array.filter(function(a) {return a;});
	};
	
	AggressiveTokenizer.prototype.clearText = function(text) {
		return text.replace(/[^a-zа-яё0-9]/gi, ' ').replace(/[\s\n]+/g, ' ').trim();
	};
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.withoutEmpty(this.clearText(text).split(' '));
	};


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	// Original copyright:
	/*
	 Copyright (c) 2008, Taku Kudo
	
	 All rights reserved.
	
	 Redistribution and use in source and binary forms, with or without
	 modification, are permitted provided that the following conditions are met:
	
	 * Redistributions of source code must retain the above copyright notice,
	 this list of conditions and the following disclaimer.
	 * Redistributions in binary form must reproduce the above copyright
	 notice, this list of conditions and the following disclaimer in the
	 documentation and/or other materials provided with the distribution.
	 * Neither the name of the <ORGANIZATION> nor the names of its
	 contributors may be used to endorse or promote products derived from this
	 software without specific prior written permission.
	
	 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
	 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
	 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
	 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	// This version:
	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	// TinySegmenter 0.1 -- Super compact Japanese tokenizer in Javascript
	// (c) 2008 Taku Kudo <taku@chasen.org>
	// TinySegmenter is freely distributable under the terms of a new BSD licence.
	// For details, see http://chasen.org/~taku/software/TinySegmenter/LICENCE.txt
	
	var Tokenizer = __webpack_require__(22),
	    normalize = __webpack_require__(378).normalize_ja,
	    util = __webpack_require__(12);
	
	
	
	/**
	 * @constructor
	 */
	var TokenizerJa = function() {
	  this.chartype_ = [
	    [/[〇一二三四五六七八九十百千万億兆]/, 'M'],
	    [/[一-鿌〆]/, 'H'],
	    [/[ぁ-ゟ]/, 'I'],
	    [/[゠-ヿ]/, 'K'],
	    [/[a-zA-Z]/, 'A'],
	    [/[0-9]/, 'N']
	  ];
	
	  this.BIAS__ = -332;
	  this.BC1__ = {'HH': 6, 'II': 2461, 'KH': 406, 'OH': -1378};
	  this.BC2__ = {'AA': -3267, 'AI': 2744, 'AN': -878, 'HH': -4070, 'HM': -1711, 'HN': 4012, 'HO': 3761, 'IA': 1327, 'IH': -1184, 'II': -1332, 'IK': 1721, 'IO': 5492, 'KI': 3831, 'KK': -8741, 'MH': -3132, 'MK': 3334, 'OO': -2920};
	  this.BC3__ = {'HH': 996, 'HI': 626, 'HK': -721, 'HN': -1307, 'HO': -836, 'IH': -301, 'KK': 2762, 'MK': 1079, 'MM': 4034, 'OA': -1652, 'OH': 266};
	  this.BP1__ = {'BB': 295, 'OB': 304, 'OO': -125, 'UB': 352};
	  this.BP2__ = {'BO': 60, 'OO': -1762};
	  this.BQ1__ = {'BHH': 1150, 'BHM': 1521, 'BII': -1158, 'BIM': 886, 'BMH': 1208, 'BNH': 449, 'BOH': -91, 'BOO': -2597, 'OHI': 451, 'OIH': -296, 'OKA': 1851, 'OKH': -1020, 'OKK': 904, 'OOO': 2965};
	  this.BQ2__ = {'BHH': 118, 'BHI': -1159, 'BHM': 466, 'BIH': -919, 'BKK': -1720, 'BKO': 864, 'OHH': -1139, 'OHM': -181, 'OIH': 153, 'UHI': -1146};
	  this.BQ3__ = {'BHH': -792, 'BHI': 2664, 'BII': -299, 'BKI': 419, 'BMH': 937, 'BMM': 8335, 'BNN': 998, 'BOH': 775, 'OHH': 2174, 'OHM': 439, 'OII': 280, 'OKH': 1798, 'OKI': -793, 'OKO': -2242, 'OMH': -2402, 'OOO': 11699};
	  this.BQ4__ = {'BHH': -3895, 'BIH': 3761, 'BII': -4654, 'BIK': 1348, 'BKK': -1806, 'BMI': -3385, 'BOO': -12396, 'OAH': 926, 'OHH': 266, 'OHK': -2036, 'ONN': -973};
	  this.BW1__ = {'，と': 660, '，同': 727, 'B1あ': 1404, 'B1同': 542, '、と': 660, '、同': 727, '｣と': 1682, 'あっ': 1505, 'いう': 1743, 'いっ': -2055, 'いる': 672, 'うし': -4817, 'うん': 665, 'から': 3472, 'がら': 600, 'こう': -790, 'こと': 2083, 'こん': -1262, 'さら': -4143, 'さん': 4573, 'した': 2641, 'して': 1104, 'すで': -3399, 'そこ': 1977, 'それ': -871, 'たち': 1122, 'ため': 601, 'った': 3463, 'つい': -802, 'てい': 805, 'てき': 1249, 'でき': 1127, 'です': 3445, 'では': 844, 'とい': -4915, 'とみ': 1922, 'どこ': 3887, 'ない': 5713, 'なっ': 3015, 'など': 7379, 'なん': -1113, 'にし': 2468, 'には': 1498, 'にも': 1671, 'に対': -912, 'の一': -501, 'の中': 741, 'ませ': 2448, 'まで': 1711, 'まま': 2600, 'まる': -2155, 'やむ': -1947, 'よっ': -2565, 'れた': 2369, 'れで': -913, 'をし': 1860, 'を見': 731, '亡く': -1886, '京都': 2558, '取り': -2784, '大き': -2604, '大阪': 1497, '平方': -2314, '引き': -1336, '日本': -195, '本当': -2423, '毎日': -2113, '目指': -724};
	  this.BW2__ = {'11': -669, '．．': -11822, '――': -5730, '−−': -13175, 'いう': -1609, 'うか': 2490, 'かし': -1350, 'かも': -602, 'から': -7194, 'かれ': 4612, 'がい': 853, 'がら': -3198, 'きた': 1941, 'くな': -1597, 'こと': -8392, 'この': -4193, 'させ': 4533, 'され': 13168, 'さん': -3977, 'しい': -1819, 'しか': -545, 'した': 5078, 'して': 972, 'しな': 939, 'その': -3744, 'たい': -1253, 'たた': -662, 'ただ': -3857, 'たち': -786, 'たと': 1224, 'たは': -939, 'った': 4589, 'って': 1647, 'っと': -2094, 'てい': 6144, 'てき': 3640, 'てく': 2551, 'ては': -3110, 'ても': -3065, 'でい': 2666, 'でき': -1528, 'でし': -3828, 'です': -4761, 'でも': -4203, 'とい': 1890, 'とこ': -1746, 'とと': -2279, 'との': 720, 'とみ': 5168, 'とも': -3941, 'ない': -2488, 'なが': -1313, 'など': -6509, 'なの': 2614, 'なん': 3099, 'にお': -1615, 'にし': 2748, 'にな': 2454, 'によ': -7236, 'に対': -14943, 'に従': -4688, 'に関': -11388, 'のか': 2093, 'ので': -7059, 'のに': -6041, 'のの': -6125, 'はい': 1073, 'はが': -1033, 'はず': -2532, 'ばれ': 1813, 'まし': -1316, 'まで': -6621, 'まれ': 5409, 'めて': -3153, 'もい': 2230, 'もの': -10713, 'らか': -944, 'らし': -1611, 'らに': -1897, 'りし': 651, 'りま': 1620, 'れた': 4270, 'れて': 849, 'れば': 4114, 'ろう': 6067, 'われ': 7901, 'を通': -11877, 'んだ': 728, 'んな': -4115, '一人': 602, '一方': -1375, '一日': 970, '一部': -1051, '上が': -4479, '会社': -1116, '出て': 2163, '分の': -7758, '同党': 970, '同日': -913, '大阪': -2471, '委員': -1250, '少な': -1050, '年度': -8669, '年間': -1626, '府県': -2363, '手権': -1982, '新聞': -4066, '日新': -722, '日本': -7068, '日米': 3372, '曜日': -601, '朝鮮': -2355, '本人': -2697, '東京': -1543, '然と': -1384, '社会': -1276, '立て': -990, '第に': -1612, '米国': -4268};
	  this.BW3__ = {'あた': -2194, 'あり': 719, 'ある': 3846, 'い．': -1185, 'い。': -1185, 'いい': 5308, 'いえ': 2079, 'いく': 3029, 'いた': 2056, 'いっ': 1883, 'いる': 5600, 'いわ': 1527, 'うち': 1117, 'うと': 4798, 'えと': 1454, 'か．': 2857, 'か。': 2857, 'かけ': -743, 'かっ': -4098, 'かに': -669, 'から': 6520, 'かり': -2670, 'が，': 1816, 'が、': 1816, 'がき': -4855, 'がけ': -1127, 'がっ': -913, 'がら': -4977, 'がり': -2064, 'きた': 1645, 'けど': 1374, 'こと': 7397, 'この': 1542, 'ころ': -2757, 'さい': -714, 'さを': 976, 'し，': 1557, 'し、': 1557, 'しい': -3714, 'した': 3562, 'して': 1449, 'しな': 2608, 'しま': 1200, 'す．': -1310, 'す。': -1310, 'する': 6521, 'ず，': 3426, 'ず、': 3426, 'ずに': 841, 'そう': 428, 'た．': 8875, 'た。': 8875, 'たい': -594, 'たの': 812, 'たり': -1183, 'たる': -853, 'だ．': 4098, 'だ。': 4098, 'だっ': 1004, 'った': -4748, 'って': 300, 'てい': 6240, 'てお': 855, 'ても': 302, 'です': 1437, 'でに': -1482, 'では': 2295, 'とう': -1387, 'とし': 2266, 'との': 541, 'とも': -3543, 'どう': 4664, 'ない': 1796, 'なく': -903, 'など': 2135, 'に，': -1021, 'に、': -1021, 'にし': 1771, 'にな': 1906, 'には': 2644, 'の，': -724, 'の、': -724, 'の子': -1000, 'は，': 1337, 'は、': 1337, 'べき': 2181, 'まし': 1113, 'ます': 6943, 'まっ': -1549, 'まで': 6154, 'まれ': -793, 'らし': 1479, 'られ': 6820, 'るる': 3818, 'れ，': 854, 'れ、': 854, 'れた': 1850, 'れて': 1375, 'れば': -3246, 'れる': 1091, 'われ': -605, 'んだ': 606, 'んで': 798, 'カ月': 990, '会議': 860, '入り': 1232, '大会': 2217, '始め': 1681, '市': 965, '新聞': -5055, '日，': 974, '日、': 974, '社会': 2024};
	  this.TC1__ = {'AAA': 1093, 'HHH': 1029, 'HHM': 580, 'HII': 998, 'HOH': -390, 'HOM': -331, 'IHI': 1169, 'IOH': -142, 'IOI': -1015, 'IOM': 467, 'MMH': 187, 'OOI': -1832};
	  this.TC2__ = {'HHO': 2088, 'HII': -1023, 'HMM': -1154, 'IHI': -1965, 'KKH': 703, 'OII': -2649};
	  this.TC3__ = {'AAA': -294, 'HHH': 346, 'HHI': -341, 'HII': -1088, 'HIK': 731, 'HOH': -1486, 'IHH': 128, 'IHI': -3041, 'IHO': -1935, 'IIH': -825, 'IIM': -1035, 'IOI': -542, 'KHH': -1216, 'KKA': 491, 'KKH': -1217, 'KOK': -1009, 'MHH': -2694, 'MHM': -457, 'MHO': 123, 'MMH': -471, 'NNH': -1689, 'NNO': 662, 'OHO': -3393};
	  this.TC4__ = {'HHH': -203, 'HHI': 1344, 'HHK': 365, 'HHM': -122, 'HHN': 182, 'HHO': 669, 'HIH': 804, 'HII': 679, 'HOH': 446, 'IHH': 695, 'IHO': -2324, 'IIH': 321, 'III': 1497, 'IIO': 656, 'IOO': 54, 'KAK': 4845, 'KKA': 3386, 'KKK': 3065, 'MHH': -405, 'MHI': 201, 'MMH': -241, 'MMM': 661, 'MOM': 841};
	  this.TQ1__ = {'BHHH': -227, 'BHHI': 316, 'BHIH': -132, 'BIHH': 60, 'BIII': 1595, 'BNHH': -744, 'BOHH': 225, 'BOOO': -908, 'OAKK': 482, 'OHHH': 281, 'OHIH': 249, 'OIHI': 200, 'OIIH': -68};
	  this.TQ2__ = {'BIHH': -1401, 'BIII': -1033, 'BKAK': -543, 'BOOO': -5591};
	  this.TQ3__ = {'BHHH': 478, 'BHHM': -1073, 'BHIH': 222, 'BHII': -504, 'BIIH': -116, 'BIII': -105, 'BMHI': -863, 'BMHM': -464, 'BOMH': 620, 'OHHH': 346, 'OHHI': 1729, 'OHII': 997, 'OHMH': 481, 'OIHH': 623, 'OIIH': 1344, 'OKAK': 2792, 'OKHH': 587, 'OKKA': 679, 'OOHH': 110, 'OOII': -685};
	  this.TQ4__ = {'BHHH': -721, 'BHHM': -3604, 'BHII': -966, 'BIIH': -607, 'BIII': -2181, 'OAAA': -2763, 'OAKK': 180, 'OHHH': -294, 'OHHI': 2446, 'OHHO': 480, 'OHIH': -1573, 'OIHH': 1935, 'OIHI': -493, 'OIIH': 626, 'OIII': -4007, 'OKAK': -8156};
	  this.TW1__ = {'につい': -4681, '東京都': 2026};
	  this.TW2__ = {'ある程': -2049, 'いった': -1256, 'ころが': -2434, 'しょう': 3873, 'その後': -4430, 'だって': -1049, 'ていた': 1833, 'として': -4657, 'ともに': -4517, 'もので': 1882, '一気に': -792, '初めて': -1512, '同時に': -8097, '大きな': -1255, '対して': -2721, '社会党': -3216};
	  this.TW3__ = {'いただ': -1734, 'してい': 1314, 'として': -4314, 'につい': -5483, 'にとっ': -5989, 'に当た': -6247, 'ので，': -727, 'ので、': -727, 'のもの': -600, 'れから': -3752, '十二月': -2287};
	  this.TW4__ = {'いう．': 8576, 'いう。': 8576, 'からな': -2348, 'してい': 2958, 'たが，': 1516, 'たが、': 1516, 'ている': 1538, 'という': 1349, 'ました': 5543, 'ません': 1097, 'ようと': -4258, 'よると': 5865};
	  this.UC1__ = {'A': 484, 'K': 93, 'M': 645, 'O': -505};
	  this.UC2__ = {'A': 819, 'H': 1059, 'I': 409, 'M': 3987, 'N': 5775, 'O': 646};
	  this.UC3__ = {'A': -1370, 'I': 2311};
	  this.UC4__ = {'A': -2643, 'H': 1809, 'I': -1032, 'K': -3450, 'M': 3565, 'N': 3876, 'O': 6646};
	  this.UC5__ = {'H': 313, 'I': -1238, 'K': -799, 'M': 539, 'O': -831};
	  this.UC6__ = {'H': -506, 'I': -253, 'K': 87, 'M': 247, 'O': -387};
	  this.UP1__ = {'O': -214};
	  this.UP2__ = {'B': 69, 'O': 935};
	  this.UP3__ = {'B': 189};
	  this.UQ1__ = {'BH': 21, 'BI': -12, 'BK': -99, 'BN': 142, 'BO': -56, 'OH': -95, 'OI': 477, 'OK': 410, 'OO': -2422};
	  this.UQ2__ = {'BH': 216, 'BI': 113, 'OK': 1759};
	  this.UQ3__ = {'BA': -479, 'BH': 42, 'BI': 1913, 'BK': -7198, 'BM': 3160, 'BN': 6427, 'BO': 14761, 'OI': -827, 'ON': -3212};
	  this.UW1__ = {'，': 156, '、': 156, '｢': -463, 'あ': -941, 'う': -127, 'が': -553, 'き': 121, 'こ': 505, 'で': -201, 'と': -547, 'ど': -123, 'に': -789, 'の': -185, 'は': -847, 'も': -466, 'や': -470, 'よ': 182, 'ら': -292, 'り': 208, 'れ': 169, 'を': -446, 'ん': -137, '・': -135, '主': -402, '京': -268, '区': -912, '午': 871, '国': -460, '大': 561, '委': 729, '市': -411, '日': -141, '理': 361, '生': -408, '県': -386, '都': -718};
	  this.UW2__ = {'，': -829, '、': -829, '〇': 892, '｢': -645, '｣': 3145, 'あ': -538, 'い': 505, 'う': 134, 'お': -502, 'か': 1454, 'が': -856, 'く': -412, 'こ': 1141, 'さ': 878, 'ざ': 540, 'し': 1529, 'す': -675, 'せ': 300, 'そ': -1011, 'た': 188, 'だ': 1837, 'つ': -949, 'て': -291, 'で': -268, 'と': -981, 'ど': 1273, 'な': 1063, 'に': -1764, 'の': 130, 'は': -409, 'ひ': -1273, 'べ': 1261, 'ま': 600, 'も': -1263, 'や': -402, 'よ': 1639, 'り': -579, 'る': -694, 'れ': 571, 'を': -2516, 'ん': 2095, 'ア': -587, 'カ': 306, 'キ': 568, 'ッ': 831, '三': -758, '不': -2150, '世': -302, '中': -968, '主': -861, '事': 492, '人': -123, '会': 978, '保': 362, '入': 548, '初': -3025, '副': -1566, '北': -3414, '区': -422, '大': -1769, '天': -865, '太': -483, '子': -1519, '学': 760, '実': 1023, '小': -2009, '市': -813, '年': -1060, '強': 1067, '手': -1519, '揺': -1033, '政': 1522, '文': -1355, '新': -1682, '日': -1815, '明': -1462, '最': -630, '朝': -1843, '本': -1650, '東': -931, '果': -665, '次': -2378, '民': -180, '気': -1740, '理': 752, '発': 529, '目': -1584, '相': -242, '県': -1165, '立': -763, '第': 810, '米': 509, '自': -1353, '行': 838, '西': -744, '見': -3874, '調': 1010, '議': 1198, '込': 3041, '開': 1758, '間': -1257};
	  this.UW3__ = {'1': -800, '，': 4889, '−': -1723, '、': 4889, '々': -2311, '〇': 5827, '｣': 2670, '〓': -3573, 'あ': -2696, 'い': 1006, 'う': 2342, 'え': 1983, 'お': -4864, 'か': -1163, 'が': 3271, 'く': 1004, 'け': 388, 'げ': 401, 'こ': -3552, 'ご': -3116, 'さ': -1058, 'し': -395, 'す': 584, 'せ': 3685, 'そ': -5228, 'た': 842, 'ち': -521, 'っ': -1444, 'つ': -1081, 'て': 6167, 'で': 2318, 'と': 1691, 'ど': -899, 'な': -2788, 'に': 2745, 'の': 4056, 'は': 4555, 'ひ': -2171, 'ふ': -1798, 'へ': 1199, 'ほ': -5516, 'ま': -4384, 'み': -120, 'め': 1205, 'も': 2323, 'や': -788, 'よ': -202, 'ら': 727, 'り': 649, 'る': 5905, 'れ': 2773, 'わ': -1207, 'を': 6620, 'ん': -518, 'ア': 551, 'グ': 1319, 'ス': 874, 'ッ': -1350, 'ト': 521, 'ム': 1109, 'ル': 1591, 'ロ': 2201, 'ン': 278, '・': -3794, '一': -1619, '下': -1759, '世': -2087, '両': 3815, '中': 653, '主': -758, '予': -1193, '二': 974, '人': 2742, '今': 792, '他': 1889, '以': -1368, '低': 811, '何': 4265, '作': -361, '保': -2439, '元': 4858, '党': 3593, '全': 1574, '公': -3030, '六': 755, '共': -1880, '円': 5807, '再': 3095, '分': 457, '初': 2475, '別': 1129, '前': 2286, '副': 4437, '力': 365, '動': -949, '務': -1872, '化': 1327, '北': -1038, '区': 4646, '千': -2309, '午': -783, '協': -1006, '口': 483, '右': 1233, '各': 3588, '合': -241, '同': 3906, '和': -837, '員': 4513, '国': 642, '型': 1389, '場': 1219, '外': -241, '妻': 2016, '学': -1356, '安': -423, '実': -1008, '家': 1078, '小': -513, '少': -3102, '州': 1155, '市': 3197, '平': -1804, '年': 2416, '広': -1030, '府': 1605, '度': 1452, '建': -2352, '当': -3885, '得': 1905, '思': -1291, '性': 1822, '戸': -488, '指': -3973, '政': -2013, '教': -1479, '数': 3222, '文': -1489, '新': 1764, '日': 2099, '旧': 5792, '昨': -661, '時': -1248, '曜': -951, '最': -937, '月': 4125, '期': 360, '李': 3094, '村': 364, '東': -805, '核': 5156, '森': 2438, '業': 484, '氏': 2613, '民': -1694, '決': -1073, '法': 1868, '海': -495, '無': 979, '物': 461, '特': -3850, '生': -273, '用': 914, '町': 1215, '的': 7313, '直': -1835, '省': 792, '県': 6293, '知': -1528, '私': 4231, '税': 401, '立': -960, '第': 1201, '米': 7767, '系': 3066, '約': 3663, '級': 1384, '統': -4229, '総': 1163, '線': 1255, '者': 6457, '能': 725, '自': -2869, '英': 785, '見': 1044, '調': -562, '財': -733, '費': 1777, '車': 1835, '軍': 1375, '込': -1504, '通': -1136, '選': -681, '郎': 1026, '郡': 4404, '部': 1200, '金': 2163, '長': 421, '開': -1432, '間': 1302, '関': -1282, '雨': 2009, '電': -1045, '非': 2066, '駅': 1620};
	  this.UW4__ = {'，': 3930, '．': 3508, '―': -4841, '、': 3930, '。': 3508, '〇': 4999, '｢': 1895, '｣': 3798, '〓': -5156, 'あ': 4752, 'い': -3435, 'う': -640, 'え': -2514, 'お': 2405, 'か': 530, 'が': 6006, 'き': -4482, 'ぎ': -3821, 'く': -3788, 'け': -4376, 'げ': -4734, 'こ': 2255, 'ご': 1979, 'さ': 2864, 'し': -843, 'じ': -2506, 'す': -731, 'ず': 1251, 'せ': 181, 'そ': 4091, 'た': 5034, 'だ': 5408, 'ち': -3654, 'っ': -5882, 'つ': -1659, 'て': 3994, 'で': 7410, 'と': 4547, 'な': 5433, 'に': 6499, 'ぬ': 1853, 'ね': 1413, 'の': 7396, 'は': 8578, 'ば': 1940, 'ひ': 4249, 'び': -4134, 'ふ': 1345, 'へ': 6665, 'べ': -744, 'ほ': 1464, 'ま': 1051, 'み': -2082, 'む': -882, 'め': -5046, 'も': 4169, 'ゃ': -2666, 'や': 2795, 'ょ': -1544, 'よ': 3351, 'ら': -2922, 'り': -9726, 'る': -14896, 'れ': -2613, 'ろ': -4570, 'わ': -1783, 'を': 13150, 'ん': -2352, 'カ': 2145, 'コ': 1789, 'セ': 1287, 'ッ': -724, 'ト': -403, 'メ': -1635, 'ラ': -881, 'リ': -541, 'ル': -856, 'ン': -3637, '・': -4371, 'ー': -11870, '一': -2069, '中': 2210, '予': 782, '事': -190, '井': -1768, '人': 1036, '以': 544, '会': 950, '体': -1286, '作': 530, '側': 4292, '先': 601, '党': -2006, '共': -1212, '内': 584, '円': 788, '初': 1347, '前': 1623, '副': 3879, '力': -302, '動': -740, '務': -2715, '化': 776, '区': 4517, '協': 1013, '参': 1555, '合': -1834, '和': -681, '員': -910, '器': -851, '回': 1500, '国': -619, '園': -1200, '地': 866, '場': -1410, '塁': -2094, '士': -1413, '多': 1067, '大': 571, '子': -4802, '学': -1397, '定': -1057, '寺': -809, '小': 1910, '屋': -1328, '山': -1500, '島': -2056, '川': -2667, '市': 2771, '年': 374, '庁': -4556, '後': 456, '性': 553, '感': 916, '所': -1566, '支': 856, '改': 787, '政': 2182, '教': 704, '文': 522, '方': -856, '日': 1798, '時': 1829, '最': 845, '月': -9066, '木': -485, '来': -442, '校': -360, '業': -1043, '氏': 5388, '民': -2716, '気': -910, '沢': -939, '済': -543, '物': -735, '率': 672, '球': -1267, '生': -1286, '産': -1101, '田': -2900, '町': 1826, '的': 2586, '目': 922, '省': -3485, '県': 2997, '空': -867, '立': -2112, '第': 788, '米': 2937, '系': 786, '約': 2171, '経': 1146, '統': -1169, '総': 940, '線': -994, '署': 749, '者': 2145, '能': -730, '般': -852, '行': -792, '規': 792, '警': -1184, '議': -244, '谷': -1000, '賞': 730, '車': -1481, '軍': 1158, '輪': -1433, '込': -3370, '近': 929, '道': -1291, '選': 2596, '郎': -4866, '都': 1192, '野': -1100, '銀': -2213, '長': 357, '間': -2344, '院': -2297, '際': -2604, '電': -878, '領': -1659, '題': -792, '館': -1984, '首': 1749, '高': 2120};
	  this.UW5__ = {'1': -514, '，': 465, '．': -299, 'E2': -32768, '］': -2762, '、': 465, '。': -299, '｢': 363, 'あ': 1655, 'い': 331, 'う': -503, 'え': 1199, 'お': 527, 'か': 647, 'が': -421, 'き': 1624, 'ぎ': 1971, 'く': 312, 'げ': -983, 'さ': -1537, 'し': -1371, 'す': -852, 'だ': -1186, 'ち': 1093, 'っ': 52, 'つ': 921, 'て': -18, 'で': -850, 'と': -127, 'ど': 1682, 'な': -787, 'に': -1224, 'の': -635, 'は': -578, 'べ': 1001, 'み': 502, 'め': 865, 'ゃ': 3350, 'ょ': 854, 'り': -208, 'る': 429, 'れ': 504, 'わ': 419, 'を': -1264, 'ん': 327, 'イ': 241, 'ル': 451, 'ン': -343, '中': -871, '京': 722, '会': -1153, '党': -654, '務': 3519, '区': -901, '告': 848, '員': 2104, '大': -1296, '学': -548, '定': 1785, '嵐': -1304, '市': -2991, '席': 921, '年': 1763, '思': 872, '所': -814, '挙': 1618, '新': -1682, '日': 218, '月': -4353, '査': 932, '格': 1356, '機': -1508, '氏': -1347, '田': 240, '町': -3912, '的': -3149, '相': 1319, '省': -1052, '県': -4003, '研': -997, '社': -278, '空': -813, '統': 1955, '者': -2233, '表': 663, '語': -1073, '議': 1219, '選': -1018, '郎': -368, '長': 786, '間': 1191, '題': 2368, '館': -689};
	  this.UW6__ = {'1': -270, '，': 227, '．': 808, 'E1': 306, '、': 227, '。': 808, 'あ': -307, 'う': 189, 'か': 241, 'が': -73, 'く': -121, 'こ': -200, 'じ': 1782, 'す': 383, 'た': -428, 'っ': 573, 'て': -1014, 'で': 101, 'と': -105, 'な': -253, 'に': -149, 'の': -417, 'は': -236, 'も': -206, 'り': 187, 'る': -135, 'を': 195, 'ル': -673, 'ン': -496, '一': -277, '中': 201, '件': -800, '会': 624, '前': 302, '区': 1792, '員': -1212, '委': 798, '学': -960, '市': 887, '広': -695, '後': 535, '業': -697, '相': 753, '社': -507, '福': 974, '空': -822, '者': 1811, '連': 463, '郎': 1082};
	
	  return this;
	};
	
	util.inherits(TokenizerJa, Tokenizer);
	
	
	/**
	 * @param {string} str
	 * @return {string}
	 * @private
	 */
	TokenizerJa.prototype.ctype_ = function(str) {
	  for (var i = 0, length = this.chartype_.length; i < length; i++) {
	    if (str.match(this.chartype_[i][0])) {
	      return this.chartype_[i][1];
	    }
	  }
	  return 'O';
	};
	
	
	/**
	 * @param {string} v
	 * @return {number}
	 * @private
	 */
	TokenizerJa.prototype.ts_ = function(v) {
	  if (v) { return v; }
	  return 0;
	};
	
	
	/**
	 * Remove punctuations signs from tokens.
	 *
	 * @param {Array.<string>} tokens An array of tokens.
	 * @return {Array.<string>} An array of tokens.
	 * @private
	 */
	TokenizerJa.prototype.removePuncTokens = function(tokens) {
	  return tokens
	      .map(function(token) {
	        return token.replace(/[＿－・，、；：！？．。（）［］｛｝｢｣＠＊＼／＆＃％｀＾＋＜＝＞｜～≪≫─＄＂_\-･,､;:!?.｡()[\]{}「」@*\/&#%`^+<=>|~«»$"\s]+/g, '');
	      })
	      .filter(function(token) {
	        return token != '';
	      });
	};
	
	
	/**
	 * @param {string} text
	 * @return {Array.<string>}
	 */
	TokenizerJa.prototype.tokenize = function(text) {
	  if (text == null || text == undefined || text == '') {
	    return [];
	  }
	  text = normalize(text);
	  var result = [];
	  var seg = ['B3', 'B2', 'B1'];
	  var ctype = ['O', 'O', 'O'];
	  var o = text.split('');
	  var i;
	  var length;
	  for (i = 0, length = o.length; i < length; ++i) {
	    seg.push(o[i]);
	    ctype.push(this.ctype_(o[i]));
	  }
	  seg.push('E1');
	  seg.push('E2');
	  seg.push('E3');
	  ctype.push('O');
	  ctype.push('O');
	  ctype.push('O');
	  var word = seg[3];
	  var p1 = 'U';
	  var p2 = 'U';
	  var p3 = 'U';
	  for (i = 4, length = seg.length - 3; i < length; ++i) {
	    var score = this.BIAS__;
	    var w1 = seg[i - 3];
	    var w2 = seg[i - 2];
	    var w3 = seg[i - 1];
	    var w4 = seg[i];
	    var w5 = seg[i + 1];
	    var w6 = seg[i + 2];
	    var c1 = ctype[i - 3];
	    var c2 = ctype[i - 2];
	    var c3 = ctype[i - 1];
	    var c4 = ctype[i];
	    var c5 = ctype[i + 1];
	    var c6 = ctype[i + 2];
	    score += this.ts_(this.UP1__[p1]);
	    score += this.ts_(this.UP2__[p2]);
	    score += this.ts_(this.UP3__[p3]);
	    score += this.ts_(this.BP1__[p1 + p2]);
	    score += this.ts_(this.BP2__[p2 + p3]);
	    score += this.ts_(this.UW1__[w1]);
	    score += this.ts_(this.UW2__[w2]);
	    score += this.ts_(this.UW3__[w3]);
	    score += this.ts_(this.UW4__[w4]);
	    score += this.ts_(this.UW5__[w5]);
	    score += this.ts_(this.UW6__[w6]);
	    score += this.ts_(this.BW1__[w2 + w3]);
	    score += this.ts_(this.BW2__[w3 + w4]);
	    score += this.ts_(this.BW3__[w4 + w5]);
	    score += this.ts_(this.TW1__[w1 + w2 + w3]);
	    score += this.ts_(this.TW2__[w2 + w3 + w4]);
	    score += this.ts_(this.TW3__[w3 + w4 + w5]);
	    score += this.ts_(this.TW4__[w4 + w5 + w6]);
	    score += this.ts_(this.UC1__[c1]);
	    score += this.ts_(this.UC2__[c2]);
	    score += this.ts_(this.UC3__[c3]);
	    score += this.ts_(this.UC4__[c4]);
	    score += this.ts_(this.UC5__[c5]);
	    score += this.ts_(this.UC6__[c6]);
	    score += this.ts_(this.BC1__[c2 + c3]);
	    score += this.ts_(this.BC2__[c3 + c4]);
	    score += this.ts_(this.BC3__[c4 + c5]);
	    score += this.ts_(this.TC1__[c1 + c2 + c3]);
	    score += this.ts_(this.TC2__[c2 + c3 + c4]);
	    score += this.ts_(this.TC3__[c3 + c4 + c5]);
	    score += this.ts_(this.TC4__[c4 + c5 + c6]);
	    //score += this.ts_(this.TC5__[c4 + c5 + c6]);
	    score += this.ts_(this.UQ1__[p1 + c1]);
	    score += this.ts_(this.UQ2__[p2 + c2]);
	    score += this.ts_(this.UQ3__[p3 + c3]);
	    score += this.ts_(this.BQ1__[p2 + c2 + c3]);
	    score += this.ts_(this.BQ2__[p2 + c3 + c4]);
	    score += this.ts_(this.BQ3__[p3 + c2 + c3]);
	    score += this.ts_(this.BQ4__[p3 + c3 + c4]);
	    score += this.ts_(this.TQ1__[p2 + c1 + c2 + c3]);
	    score += this.ts_(this.TQ2__[p2 + c2 + c3 + c4]);
	    score += this.ts_(this.TQ3__[p3 + c1 + c2 + c3]);
	    score += this.ts_(this.TQ4__[p3 + c2 + c3 + c4]);
	    var p = 'O';
	    if (score > 0) {
	      result.push(word);
	      word = '';
	      p = 'B';
	    }
	    p1 = p2;
	    p2 = p3;
	    p3 = p;
	    word += seg[i];
	  }
	  result.push(word);
	
	  result = this.removePuncTokens(result);
	
	  return result;
	};
	
	module.exports = TokenizerJa;


/***/ }),
/* 391 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2014 Ken Koch
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	/** 
	 * The basis of the TRIE structure.
	 **/
	function Trie(caseSensitive) {
		this.dictionary = {};
		this.$ = false;
	
		if(typeof caseSensitive === "undefined") {
			caseSensitive = true;
		}
	
		this.cs = caseSensitive;
	}
	
	/**
	 * Add a single string to the TRIE, returns true if the word was already in the 
	 * trie.
	 **/
	Trie.prototype.addString = function(string) {
		if(this.cs === false) {
			string = string.toLowerCase();
		}
	
		// If the string has only one letter, mark this as a word.
		if(string.length === 0) {
			var wasWord = this.$;
			this.$ = true;
			return wasWord;
		}
	
		// Make sure theres a Trie node in our dictionary
		var next = this.dictionary[string[0]];
	
		if(!next) {
			this.dictionary[string[0]] = new Trie(this.cs);
			next = this.dictionary[string[0]];
		}
	
		// Continue adding the string
		return next.addString(string.substring(1));
	};
	
	/**
	 * Add multiple strings to the TRIE
	 **/
	Trie.prototype.addStrings = function(list) {
		for(var i in list) {
			this.addString(list[i]);
		}
	};
	
	/**
	 * A function to search the TRIE and return an array of
	 * words which have same prefix <prefix>
	 * for example if we had the following words in our database:
	 * a, ab, bc, cd, abc, abd
	 * and we search the string: a
	 * we will get :
	 * [a, ab, abc, abd]
	 **/
	Trie.prototype.keysWithPrefix = function(prefix) {
	    if(this.caseSensitive === false) {
	        prefix = prefix.toLowerCase();
	    }
	
	    function isEmpty (object) {
	        for (var key in object) if (object.hasOwnProperty(key)) return false;
	        return true;
	    }
	
	    function get (node, word) {
	        if(!node) return null;
	        if(word.length == 0) return node;
	        return get(node.dictionary[word[0]], word.substring(1));
	    }
	
	    function recurse ( node, stringAgg, resultsAgg) {
	        if (!node) return;
	
	        // Check if this is a word
	        if (node.$) {
	            resultsAgg.push(stringAgg);
	        }
	
	        if (isEmpty(node.dictionary)) {
	            return ;
	        }
	
	        for (var c in node.dictionary) {
	            recurse (node.dictionary[c],stringAgg + c, resultsAgg);
	        }
	    }
	
	    var results = [];
	    recurse (get(this, prefix), prefix, results);
	    return results;
	};
	
	/** 
	 * A function to search the given string and return true if it lands
	 * on on a word. Essentially testing if the word exists in the database.
	 **/
	Trie.prototype.contains = function(string) {
		if(this.cs === false) {
			string = string.toLowerCase();
		}
	
		if(string.length === 0) {
			return this.$;
		}
	
		// Otherwise, we need to continue searching
		var firstLetter = string[0];
		var next = this.dictionary[firstLetter];		
	
		// If we don't have a node, this isn't a word
		if(!next) {
			return false;
		}
	
		// Otherwise continue the search at the next node
		return next.contains(string.substring(1));
	}
	
	/**
	 * A function to search the TRIE and return an array of words which were encountered along the way.
	 * This will only return words with full prefix matches.
	 * for example if we had the following words in our database:
	 * a, ab, bc, cd, abc
	 * and we searched the string: abcd
	 * we would get only:
	 * [a, ab, abc]
	 **/
	Trie.prototype.findMatchesOnPath = function(search) {
		if(this.cs === false) {
			search = search.toLowerCase();
		}
	
		function recurse(node, search, stringAgg, resultsAgg) {
			// Check if this is a word.
			if(node.$) {
				resultsAgg.push(stringAgg);
			}
	
			// Check if the have completed the seearch
			if(search.length === 0) {
				return resultsAgg;
			}
	
			// Otherwise, continue searching
			var next = node.dictionary[search[0]];
			if(!next) {
				return resultsAgg;
			}
			return recurse(next, search.substring(1), stringAgg + search[0], resultsAgg);
		};
	
		return recurse(this, search, "", []);
	};
	
	/**
	 * Returns the longest match and the remaining part that could not be matched.
	 * inspired by [NLTK containers.trie.find_prefix](http://nltk.googlecode.com/svn-/trunk/doc/api/nltk.containers.Trie-class.html).
	 **/
	Trie.prototype.findPrefix = function(search) {
		if(this.cs === false) {
			search = search.toLowerCase();
		}
		
		function recurse(node, search, stringAgg, lastWord) {
			// Check if this is a word
			if(node.$) {
				lastWord = stringAgg;
			}
	
			// Check if we have no more to search
			if(search.length === 0) {
				return [lastWord, search];
			}
	
			// Continue searching
			var next = node.dictionary[search[0]];
			if(!next) {
				return [lastWord, search];
			}
			return recurse(next, search.substring(1), stringAgg + search[0], lastWord);
		};
	
		return recurse(this, search, "", null);
	};
	
	/**
	 * Computes the number of actual nodes from this node to the end.
	 * Note: This involves traversing the entire structure and may not be
	 * good for frequent use.
	 **/
	Trie.prototype.getSize = function() { 
		var total = 1;
		for(var c in this.dictionary) {
			total += this.dictionary[c].getSize();
		}
		return total;
	};
	
	/**
	 * EXPORT THE TRIE
	 **/
	module.exports = Trie;


/***/ }),
/* 392 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2014, Lee Wenzhu
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	'use strict';
	
	/**
	 * a topo sort for a digraph
	 * @param {Digraph}
	 */
	var Topological = function(g) {
	    this.isDag = true;
	    this.sorted = topoSort(uniqueVertexs(g.edges()), g.edges());
	};
	
	Topological.prototype.isDAG = function() {
	    return this.isDag;
	};
	
	/**
	 * get ordered vertexs of digraph
	 */
	Topological.prototype.order = function() {
	    return this.sorted.slice();
	};
	
	/**
	 * @param {Array} all vertex in digraph
	 * @param {Object} all edges in the digraph
	 */
	function topoSort(vertexs, edges) {
	    var sorted = [];
	    var cursor = vertexs.length,
	        visited = {},
	        i = cursor;
	    while (i--) {
	        if (!visited[i]) visit(vertexs[i], i, []);
	    }
	
	    return sorted.reverse();
	
	    function visit(vertex, i, predecessors) {
	        if(predecessors.indexOf(vertex) >= 0) {
	            throw new Error('Cyclic dependency:' + JSON.stringify(vertex));
	        }
	
	        if(visited[i]) return;
	        visited[i] = true;
	
	        var outgoing = edges.filter(function(edge) {
	            return edge.to() === vertex;
	        });
	
	        var preds = [];
	        if(outgoing.length > 0) {
	            preds = predecessors.concat(vertex);
	        }
	        var from;
	        outgoing.forEach(function(edge) {
	            from = edge.from();
	            visit(from, vertexs.indexOf(from), preds);
	        });
	
	        sorted[--cursor] = vertex;
	    };
	};
	
	
	function uniqueVertexs(edges) {
	    var vertexs = [];
	    var from, to;
	    edges.forEach(function(edge) {
	        from = edge.from();
	        to = edge.to();
	        if (vertexs.indexOf(from) < 0) vertexs.push(from);
	        if (vertexs.indexOf(to) < 0) vertexs.push(to);
	    });
	    return vertexs;
	};
	
	module.exports = Topological;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var  fs = __webpack_require__(37),
	  path = __webpack_require__(394),
	  util = __webpack_require__(12);
	
	
	function appendLineChar(fd, pos, buffPos, buff, callback) {
	  if(buffPos >= buff.length) {
	    var newBuff = new Buffer(buff.length * 2);
	    buff.copy(newBuff, 0, 0, buff.length);
	    buff = newBuff;
	  }
	
	  fs.read(fd, buff, buffPos, 1, pos, function(err, count) {
	    if(err)
	      console.log(err);
	    else {
	      if(buff[buffPos] == 10 || buffPos == buff.length)
	        callback(buff.slice(0, buffPos).toString('UTF-8'));
	      else {
	        appendLineChar(fd, pos + 1, buffPos + 1, buff, callback);
	      }
	    }
	  });
	}
	
	function open(callback) {
	  var filePath = this.filePath;
	
	  fs.open(filePath, 'r', null, function(err, fd) {
	    if (err) {
	        console.log('Unable to open %s', filePath);
	        return;
	    }
	    callback(err, fd, function() {fs.close(fd)});
	  });
	}
	
	var WordNetFile = function(dataDir, fileName) {
	  this.dataDir = dataDir;
	  this.fileName = fileName;
	  this.filePath = __webpack_require__(394).join(this.dataDir, this.fileName);
	};
	
	WordNetFile.prototype.open = open;
	WordNetFile.appendLineChar = appendLineChar;
	
	module.exports = WordNetFile;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// resolves . and .. elements in a path array with directory names there
	// must be no slashes, empty elements, or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = parts.length - 1; i >= 0; i--) {
	    var last = parts[i];
	    if (last === '.') {
	      parts.splice(i, 1);
	    } else if (last === '..') {
	      parts.splice(i, 1);
	      up++;
	    } else if (up) {
	      parts.splice(i, 1);
	      up--;
	    }
	  }
	
	  // if the path is allowed to go above the root, restore leading ..s
	  if (allowAboveRoot) {
	    for (; up--; up) {
	      parts.unshift('..');
	    }
	  }
	
	  return parts;
	}
	
	// Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.
	var splitPathRe =
	    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	var splitPath = function(filename) {
	  return splitPathRe.exec(filename).slice(1);
	};
	
	// path.resolve([from ...], to)
	// posix version
	exports.resolve = function() {
	  var resolvedPath = '',
	      resolvedAbsolute = false;
	
	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = (i >= 0) ? arguments[i] : process.cwd();
	
	    // Skip empty and invalid entries
	    if (typeof path !== 'string') {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }
	
	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path.charAt(0) === '/';
	  }
	
	  // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)
	
	  // Normalize the path
	  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
	    return !!p;
	  }), !resolvedAbsolute).join('/');
	
	  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
	};
	
	// path.normalize(path)
	// posix version
	exports.normalize = function(path) {
	  var isAbsolute = exports.isAbsolute(path),
	      trailingSlash = substr(path, -1) === '/';
	
	  // Normalize the path
	  path = normalizeArray(filter(path.split('/'), function(p) {
	    return !!p;
	  }), !isAbsolute).join('/');
	
	  if (!path && !isAbsolute) {
	    path = '.';
	  }
	  if (path && trailingSlash) {
	    path += '/';
	  }
	
	  return (isAbsolute ? '/' : '') + path;
	};
	
	// posix version
	exports.isAbsolute = function(path) {
	  return path.charAt(0) === '/';
	};
	
	// posix version
	exports.join = function() {
	  var paths = Array.prototype.slice.call(arguments, 0);
	  return exports.normalize(filter(paths, function(p, index) {
	    if (typeof p !== 'string') {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    return p;
	  }).join('/'));
	};
	
	
	// path.relative(from, to)
	// posix version
	exports.relative = function(from, to) {
	  from = exports.resolve(from).substr(1);
	  to = exports.resolve(to).substr(1);
	
	  function trim(arr) {
	    var start = 0;
	    for (; start < arr.length; start++) {
	      if (arr[start] !== '') break;
	    }
	
	    var end = arr.length - 1;
	    for (; end >= 0; end--) {
	      if (arr[end] !== '') break;
	    }
	
	    if (start > end) return [];
	    return arr.slice(start, end - start + 1);
	  }
	
	  var fromParts = trim(from.split('/'));
	  var toParts = trim(to.split('/'));
	
	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }
	
	  var outputParts = [];
	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }
	
	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	
	  return outputParts.join('/');
	};
	
	exports.sep = '/';
	exports.delimiter = ':';
	
	exports.dirname = function(path) {
	  var result = splitPath(path),
	      root = result[0],
	      dir = result[1];
	
	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }
	
	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }
	
	  return root + dir;
	};
	
	
	exports.basename = function(path, ext) {
	  var f = splitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};
	
	
	exports.extname = function(path) {
	  return splitPath(path)[3];
	};
	
	function filter (xs, f) {
	    if (xs.filter) return xs.filter(f);
	    var res = [];
	    for (var i = 0; i < xs.length; i++) {
	        if (f(xs[i], i, xs)) res.push(xs[i]);
	    }
	    return res;
	}
	
	// String.prototype.substr - negative index don't work in IE8
	var substr = 'ab'.substr(-1) === 'b'
	    ? function (str, start, len) { return str.substr(start, len) }
	    : function (str, start, len) {
	        if (start < 0) start = str.length + start;
	        return str.substr(start, len);
	    }
	;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 395 */
/***/ (function(module, exports) {

	Prism.languages.clike = {
		'comment': [
			{
				pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
				lookbehind: true
			},
			{
				pattern: /(^|[^\\:])\/\/.*/,
				lookbehind: true
			}
		],
		'string': {
			pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
		'class-name': {
			pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
			lookbehind: true,
			inside: {
				punctuation: /[.\\]/
			}
		},
		'keyword': /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
		'boolean': /\b(?:true|false)\b/,
		'function': /[a-z0-9_]+(?=\()/i,
		'number': /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,
		'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
		'punctuation': /[{}[\];(),.:]/
	};


/***/ }),
/* 396 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {var _self = (typeof window !== 'undefined')
		? window   // if in browser
		: (
			(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
			? self // if in worker
			: {}   // if in node js
		);
	
	/**
	 * Prism: Lightweight, robust, elegant syntax highlighting
	 * MIT license http://www.opensource.org/licenses/mit-license.php/
	 * @author Lea Verou http://lea.verou.me
	 */
	
	var Prism = (function(){
	
	// Private helper vars
	var lang = /\blang(?:uage)?-(\w+)\b/i;
	var uniqueId = 0;
	
	var _ = _self.Prism = {
		manual: _self.Prism && _self.Prism.manual,
		disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,
		util: {
			encode: function (tokens) {
				if (tokens instanceof Token) {
					return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
				} else if (_.util.type(tokens) === 'Array') {
					return tokens.map(_.util.encode);
				} else {
					return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
				}
			},
	
			type: function (o) {
				return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
			},
	
			objId: function (obj) {
				if (!obj['__id']) {
					Object.defineProperty(obj, '__id', { value: ++uniqueId });
				}
				return obj['__id'];
			},
	
			// Deep clone a language definition (e.g. to extend it)
			clone: function (o) {
				var type = _.util.type(o);
	
				switch (type) {
					case 'Object':
						var clone = {};
	
						for (var key in o) {
							if (o.hasOwnProperty(key)) {
								clone[key] = _.util.clone(o[key]);
							}
						}
	
						return clone;
	
					case 'Array':
						return o.map(function(v) { return _.util.clone(v); });
				}
	
				return o;
			}
		},
	
		languages: {
			extend: function (id, redef) {
				var lang = _.util.clone(_.languages[id]);
	
				for (var key in redef) {
					lang[key] = redef[key];
				}
	
				return lang;
			},
	
			/**
			 * Insert a token before another token in a language literal
			 * As this needs to recreate the object (we cannot actually insert before keys in object literals),
			 * we cannot just provide an object, we need anobject and a key.
			 * @param inside The key (or language id) of the parent
			 * @param before The key to insert before. If not provided, the function appends instead.
			 * @param insert Object with the key/value pairs to insert
			 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
			 */
			insertBefore: function (inside, before, insert, root) {
				root = root || _.languages;
				var grammar = root[inside];
	
				if (arguments.length == 2) {
					insert = arguments[1];
	
					for (var newToken in insert) {
						if (insert.hasOwnProperty(newToken)) {
							grammar[newToken] = insert[newToken];
						}
					}
	
					return grammar;
				}
	
				var ret = {};
	
				for (var token in grammar) {
	
					if (grammar.hasOwnProperty(token)) {
	
						if (token == before) {
	
							for (var newToken in insert) {
	
								if (insert.hasOwnProperty(newToken)) {
									ret[newToken] = insert[newToken];
								}
							}
						}
	
						ret[token] = grammar[token];
					}
				}
	
				// Update references in other language definitions
				_.languages.DFS(_.languages, function(key, value) {
					if (value === root[inside] && key != inside) {
						this[key] = ret;
					}
				});
	
				return root[inside] = ret;
			},
	
			// Traverse a language definition with Depth First Search
			DFS: function(o, callback, type, visited) {
				visited = visited || {};
				for (var i in o) {
					if (o.hasOwnProperty(i)) {
						callback.call(o, i, o[i], type || i);
	
						if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {
							visited[_.util.objId(o[i])] = true;
							_.languages.DFS(o[i], callback, null, visited);
						}
						else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {
							visited[_.util.objId(o[i])] = true;
							_.languages.DFS(o[i], callback, i, visited);
						}
					}
				}
			}
		},
		plugins: {},
	
		highlightAll: function(async, callback) {
			var env = {
				callback: callback,
				selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
			};
	
			_.hooks.run("before-highlightall", env);
	
			var elements = env.elements || document.querySelectorAll(env.selector);
	
			for (var i=0, element; element = elements[i++];) {
				_.highlightElement(element, async === true, env.callback);
			}
		},
	
		highlightElement: function(element, async, callback) {
			// Find language
			var language, grammar, parent = element;
	
			while (parent && !lang.test(parent.className)) {
				parent = parent.parentNode;
			}
	
			if (parent) {
				language = (parent.className.match(lang) || [,''])[1].toLowerCase();
				grammar = _.languages[language];
			}
	
			// Set language on the element, if not present
			element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
	
			if (element.parentNode) {
				// Set language on the parent, for styling
				parent = element.parentNode;
	
				if (/pre/i.test(parent.nodeName)) {
					parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
				}
			}
	
			var code = element.textContent;
	
			var env = {
				element: element,
				language: language,
				grammar: grammar,
				code: code
			};
	
			_.hooks.run('before-sanity-check', env);
	
			if (!env.code || !env.grammar) {
				if (env.code) {
					_.hooks.run('before-highlight', env);
					env.element.textContent = env.code;
					_.hooks.run('after-highlight', env);
				}
				_.hooks.run('complete', env);
				return;
			}
	
			_.hooks.run('before-highlight', env);
	
			if (async && _self.Worker) {
				var worker = new Worker(_.filename);
	
				worker.onmessage = function(evt) {
					env.highlightedCode = evt.data;
	
					_.hooks.run('before-insert', env);
	
					env.element.innerHTML = env.highlightedCode;
	
					callback && callback.call(env.element);
					_.hooks.run('after-highlight', env);
					_.hooks.run('complete', env);
				};
	
				worker.postMessage(JSON.stringify({
					language: env.language,
					code: env.code,
					immediateClose: true
				}));
			}
			else {
				env.highlightedCode = _.highlight(env.code, env.grammar, env.language);
	
				_.hooks.run('before-insert', env);
	
				env.element.innerHTML = env.highlightedCode;
	
				callback && callback.call(element);
	
				_.hooks.run('after-highlight', env);
				_.hooks.run('complete', env);
			}
		},
	
		highlight: function (text, grammar, language) {
			var tokens = _.tokenize(text, grammar);
			return Token.stringify(_.util.encode(tokens), language);
		},
	
		matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {
			var Token = _.Token;
	
			for (var token in grammar) {
				if(!grammar.hasOwnProperty(token) || !grammar[token]) {
					continue;
				}
	
				if (token == target) {
					return;
				}
	
				var patterns = grammar[token];
				patterns = (_.util.type(patterns) === "Array") ? patterns : [patterns];
	
				for (var j = 0; j < patterns.length; ++j) {
					var pattern = patterns[j],
						inside = pattern.inside,
						lookbehind = !!pattern.lookbehind,
						greedy = !!pattern.greedy,
						lookbehindLength = 0,
						alias = pattern.alias;
	
					if (greedy && !pattern.pattern.global) {
						// Without the global flag, lastIndex won't work
						var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
						pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
					}
	
					pattern = pattern.pattern || pattern;
	
					// Don’t cache length as it changes during the loop
					for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {
	
						var str = strarr[i];
	
						if (strarr.length > text.length) {
							// Something went terribly wrong, ABORT, ABORT!
							return;
						}
	
						if (str instanceof Token) {
							continue;
						}
	
						pattern.lastIndex = 0;
	
						var match = pattern.exec(str),
						    delNum = 1;
	
						// Greedy patterns can override/remove up to two previously matched tokens
						if (!match && greedy && i != strarr.length - 1) {
							pattern.lastIndex = pos;
							match = pattern.exec(text);
							if (!match) {
								break;
							}
	
							var from = match.index + (lookbehind ? match[1].length : 0),
							    to = match.index + match[0].length,
							    k = i,
							    p = pos;
	
							for (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {
								p += strarr[k].length;
								// Move the index i to the element in strarr that is closest to from
								if (from >= p) {
									++i;
									pos = p;
								}
							}
	
							/*
							 * If strarr[i] is a Token, then the match starts inside another Token, which is invalid
							 * If strarr[k - 1] is greedy we are in conflict with another greedy pattern
							 */
							if (strarr[i] instanceof Token || strarr[k - 1].greedy) {
								continue;
							}
	
							// Number of tokens to delete and replace with the new match
							delNum = k - i;
							str = text.slice(pos, p);
							match.index -= pos;
						}
	
						if (!match) {
							if (oneshot) {
								break;
							}
	
							continue;
						}
	
						if(lookbehind) {
							lookbehindLength = match[1].length;
						}
	
						var from = match.index + lookbehindLength,
						    match = match[0].slice(lookbehindLength),
						    to = from + match.length,
						    before = str.slice(0, from),
						    after = str.slice(to);
	
						var args = [i, delNum];
	
						if (before) {
							++i;
							pos += before.length;
							args.push(before);
						}
	
						var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);
	
						args.push(wrapped);
	
						if (after) {
							args.push(after);
						}
	
						Array.prototype.splice.apply(strarr, args);
	
						if (delNum != 1)
							_.matchGrammar(text, strarr, grammar, i, pos, true, token);
	
						if (oneshot)
							break;
					}
				}
			}
		},
	
		tokenize: function(text, grammar, language) {
			var strarr = [text];
	
			var rest = grammar.rest;
	
			if (rest) {
				for (var token in rest) {
					grammar[token] = rest[token];
				}
	
				delete grammar.rest;
			}
	
			_.matchGrammar(text, strarr, grammar, 0, 0, false);
	
			return strarr;
		},
	
		hooks: {
			all: {},
	
			add: function (name, callback) {
				var hooks = _.hooks.all;
	
				hooks[name] = hooks[name] || [];
	
				hooks[name].push(callback);
			},
	
			run: function (name, env) {
				var callbacks = _.hooks.all[name];
	
				if (!callbacks || !callbacks.length) {
					return;
				}
	
				for (var i=0, callback; callback = callbacks[i++];) {
					callback(env);
				}
			}
		}
	};
	
	var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
		this.type = type;
		this.content = content;
		this.alias = alias;
		// Copy of the full string this token was created from
		this.length = (matchedStr || "").length|0;
		this.greedy = !!greedy;
	};
	
	Token.stringify = function(o, language, parent) {
		if (typeof o == 'string') {
			return o;
		}
	
		if (_.util.type(o) === 'Array') {
			return o.map(function(element) {
				return Token.stringify(element, language, o);
			}).join('');
		}
	
		var env = {
			type: o.type,
			content: Token.stringify(o.content, language, parent),
			tag: 'span',
			classes: ['token', o.type],
			attributes: {},
			language: language,
			parent: parent
		};
	
		if (o.alias) {
			var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];
			Array.prototype.push.apply(env.classes, aliases);
		}
	
		_.hooks.run('wrap', env);
	
		var attributes = Object.keys(env.attributes).map(function(name) {
			return name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
		}).join(' ');
	
		return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';
	
	};
	
	if (!_self.document) {
		if (!_self.addEventListener) {
			// in Node.js
			return _self.Prism;
		}
	
		if (!_.disableWorkerMessageHandler) {
			// In worker
			_self.addEventListener('message', function (evt) {
				var message = JSON.parse(evt.data),
					lang = message.language,
					code = message.code,
					immediateClose = message.immediateClose;
	
				_self.postMessage(_.highlight(code, _.languages[lang], lang));
				if (immediateClose) {
					_self.close();
				}
			}, false);
		}
	
		return _self.Prism;
	}
	
	//Get current script and highlight
	var script = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();
	
	if (script) {
		_.filename = script.src;
	
		if (!_.manual && !script.hasAttribute('data-manual')) {
			if(document.readyState !== "loading") {
				if (window.requestAnimationFrame) {
					window.requestAnimationFrame(_.highlightAll);
				} else {
					window.setTimeout(_.highlightAll, 16);
				}
			}
			else {
				document.addEventListener('DOMContentLoaded', _.highlightAll);
			}
		}
	}
	
	return _self.Prism;
	
	})();
	
	if (typeof module !== 'undefined' && module.exports) {
		module.exports = Prism;
	}
	
	// hack for components to work correctly in node.js
	if (typeof global !== 'undefined') {
		global.Prism = Prism;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 397 */
/***/ (function(module, exports) {

	Prism.languages.javascript = Prism.languages.extend('clike', {
		'keyword': /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
		'number': /\b-?(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\d*\.?\d+(?:[Ee][+-]?\d+)?|NaN|Infinity)\b/,
		// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
		'function': /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\s*\()/i,
		'operator': /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/
	});
	
	Prism.languages.insertBefore('javascript', 'keyword', {
		'regex': {
			pattern: /(^|[^/])\/(?!\/)(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,
			lookbehind: true,
			greedy: true
		},
		// This must be declared before keyword because we use "function" inside the look-forward
		'function-variable': {
			pattern: /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)|[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)\s*=>))/i,
			alias: 'function'
		}
	});
	
	Prism.languages.insertBefore('javascript', 'string', {
		'template-string': {
			pattern: /`(?:\\[\s\S]|[^\\`])*`/,
			greedy: true,
			inside: {
				'interpolation': {
					pattern: /\$\{[^}]+\}/,
					inside: {
						'interpolation-punctuation': {
							pattern: /^\$\{|\}$/,
							alias: 'punctuation'
						},
						rest: Prism.languages.javascript
					}
				},
				'string': /[\s\S]+/
			}
		}
	});
	
	if (Prism.languages.markup) {
		Prism.languages.insertBefore('markup', 'tag', {
			'script': {
				pattern: /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,
				lookbehind: true,
				inside: Prism.languages.javascript,
				alias: 'language-javascript'
			}
		});
	}
	
	Prism.languages.js = Prism.languages.javascript;


/***/ }),
/* 398 */
/***/ (function(module, exports) {

	(function(Prism) {
	
	var javascript = Prism.util.clone(Prism.languages.javascript);
	
	Prism.languages.jsx = Prism.languages.extend('markup', javascript);
	Prism.languages.jsx.tag.pattern= /<\/?[\w.:-]+\s*(?:\s+(?:[\w\.:-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+|(?:\{[^}]*\})))?|\{\.{3}\w+\}))*\s*\/?>/i;
	
	Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i;
	
	Prism.languages.insertBefore('inside', 'attr-name', {
		'spread': {
			pattern: /\{\.{3}\w+\}/,
			inside: {
				'punctuation': /[{}]|\.{3}/,
				'attr-value': /\w+/
			}
		}
	}, Prism.languages.jsx.tag);
	
	var jsxExpression = Prism.util.clone(Prism.languages.jsx);
	
	delete jsxExpression.punctuation;
	
	jsxExpression = Prism.languages.insertBefore('jsx', 'operator', {
	  'punctuation': /=(?={)|[{}[\];(),.:]/
	}, { jsx: jsxExpression });
	
	Prism.languages.insertBefore('inside', 'attr-value',{
		'script': {
			// Allow for one level of nesting
			pattern: /=(\{(?:\{[^}]*\}|[^}])+\})/i,
			inside: jsxExpression,
			'alias': 'language-javascript'
		}
	}, Prism.languages.jsx.tag);
	
	}(Prism));


/***/ }),
/* 399 */
/***/ (function(module, exports) {

	Prism.languages.markup = {
		'comment': /<!--[\s\S]*?-->/,
		'prolog': /<\?[\s\S]+?\?>/,
		'doctype': /<!DOCTYPE[\s\S]+?>/i,
		'cdata': /<!\[CDATA\[[\s\S]*?]]>/i,
		'tag': {
			pattern: /<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,
			inside: {
				'tag': {
					pattern: /^<\/?[^\s>\/]+/i,
					inside: {
						'punctuation': /^<\/?/,
						'namespace': /^[^\s>\/:]+:/
					}
				},
				'attr-value': {
					pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,
					inside: {
						'punctuation': [
							/^=/,
							{
								pattern: /(^|[^\\])["']/,
								lookbehind: true
							}
						]
					}
				},
				'punctuation': /\/?>/,
				'attr-name': {
					pattern: /[^\s>\/]+/,
					inside: {
						'namespace': /^[^\s>\/:]+:/
					}
				}
	
			}
		},
		'entity': /&#?[\da-z]{1,8};/i
	};
	
	Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =
		Prism.languages.markup['entity'];
	
	// Plugin to make entity title show the real entity, idea by Roman Komarov
	Prism.hooks.add('wrap', function(env) {
	
		if (env.type === 'entity') {
			env.attributes['title'] = env.content.replace(/&amp;/, '&');
		}
	});
	
	Prism.languages.xml = Prism.languages.markup;
	Prism.languages.html = Prism.languages.markup;
	Prism.languages.mathml = Prism.languages.markup;
	Prism.languages.svg = Prism.languages.markup;


/***/ }),
/* 400 */,
/* 401 */,
/* 402 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createAsyncContext;
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function createAsyncContext() {
	  var idPointer = 0;
	  var registry = {};
	  return {
	    getNextId: function getNextId() {
	      idPointer += 1;
	      return idPointer;
	    },
	    resolved: function resolved(id) {
	      registry[id] = true;
	    },
	    getState: function getState() {
	      return {
	        resolved: Object.keys(registry).reduce(function (acc, cur) {
	          return Object.assign(acc, _defineProperty({}, cur, true));
	        }, {})
	      };
	    }
	  };
	}

/***/ }),
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _cn = __webpack_require__(152);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	var _prism = __webpack_require__(994);
	
	var _prism2 = _interopRequireDefault(_prism);
	
	var _normalizeCode = __webpack_require__(992);
	
	var _normalizeCode2 = _interopRequireDefault(_normalizeCode);
	
	var _normalizeHtml = __webpack_require__(993);
	
	var _normalizeHtml2 = _interopRequireDefault(_normalizeHtml);
	
	var _htmlToPlain = __webpack_require__(991);
	
	var _htmlToPlain2 = _interopRequireDefault(_htmlToPlain);
	
	var _selectionRange3 = __webpack_require__(997);
	
	var _selectionRange4 = _interopRequireDefault(_selectionRange3);
	
	var _getIndent = __webpack_require__(990);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Editor = function (_Component) {
	  _inherits(Editor, _Component);
	
	  function Editor() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Editor);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.undoStack = [], _this.undoOffset = 0, _this.undoTimestamp = 0, _this.state = {
	      html: ''
	    }, _this.onRef = function (node) {
	      _this.ref = node;
	    }, _this.getPlain = function () {
	      if (_this._innerHTML === _this.ref.innerHTML) {
	        return _this._plain;
	      }
	
	      var plain = (0, _htmlToPlain2.default)((0, _normalizeHtml2.default)(_this.ref.innerHTML));
	
	      _this._plain = plain;
	      _this._innerHTML = _this.ref.innerHTML;
	
	      return _this._plain;
	    }, _this.recordChange = function (plain, selection) {
	      if (plain === _this.undoStack[_this.undoStack.length - 1]) {
	        return;
	      }
	
	      if (_this.undoOffset > 0) {
	        _this.undoStack = _this.undoStack.slice(0, -_this.undoOffset);
	        _this.undoOffset = 0;
	      }
	
	      var timestamp = Date.now();
	      var record = { plain: plain, selection: selection };
	
	      // Overwrite last record if threshold is not crossed
	      if (timestamp - _this.undoTimestamp < 3000) {
	        _this.undoStack[_this.undoStack.length - 1] = record;
	      } else {
	        _this.undoStack.push(record);
	
	        if (_this.undoStack.length > 50) {
	          _this.undoStack.shift();
	        }
	      }
	
	      _this.undoTimestamp = timestamp;
	    }, _this.updateContent = function (plain) {
	      _this.setState({ html: (0, _prism2.default)(plain, _this.props.language) });
	
	      if (_this.props.onChange) {
	        _this.props.onChange(plain);
	      }
	    }, _this.restoreStackState = function (offset) {
	      var _this$undoStack = _this.undoStack[_this.undoStack.length - 1 - offset],
	          plain = _this$undoStack.plain,
	          selection = _this$undoStack.selection;
	
	
	      _this.selection = selection;
	      _this.undoOffset = offset;
	      _this.updateContent(plain);
	    }, _this.undo = function () {
	      var offset = _this.undoOffset + 1;
	      if (offset >= _this.undoStack.length) {
	        return;
	      }
	
	      _this.restoreStackState(offset);
	    }, _this.redo = function () {
	      var offset = _this.undoOffset - 1;
	      if (offset < 0) {
	        return;
	      }
	
	      _this.restoreStackState(offset);
	    }, _this.onKeyDown = function (evt) {
	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(evt);
	      }
	
	      if (evt.keyCode === 9 && !_this.props.ignoreTabKey) {
	        // Tab Key
	        document.execCommand('insertHTML', false, '  ');
	        evt.preventDefault();
	      } else if (evt.keyCode === 8) {
	        // Backspace Key
	        var _selectionRange = (0, _selectionRange4.default)(_this.ref),
	            cursorPos = _selectionRange.start,
	            cursorEndPos = _selectionRange.end;
	
	        if (cursorPos !== cursorEndPos) {
	          return; // Bail on selections
	        }
	
	        var deindent = (0, _getIndent.getDeindentLevel)(_this.getPlain(), cursorPos);
	        if (deindent <= 0) {
	          return; // Bail when deindent level defaults to 0
	        }
	
	        // Delete chars `deindent` times
	        for (var i = 0; i < deindent; i++) {
	          document.execCommand('delete', false);
	        }
	
	        evt.preventDefault();
	      } else if (evt.keyCode === 13) {
	        // Enter Key
	        var _selectionRange2 = (0, _selectionRange4.default)(_this.ref),
	            _cursorPos = _selectionRange2.start;
	
	        var indentation = (0, _getIndent.getIndent)(_this.getPlain(), _cursorPos);
	        document.execCommand('insertHTML', false, '\n' + indentation);
	        evt.preventDefault();
	      } else if (
	      // Undo / Redo
	      evt.keyCode === 90 && evt.metaKey !== evt.ctrlKey && !evt.altKey) {
	        if (evt.shiftKey) {
	          _this.redo();
	        } else {
	          _this.undo();
	        }
	
	        evt.preventDefault();
	      }
	    }, _this.onKeyUp = function (evt) {
	      if (_this.props.onKeyUp) {
	        _this.props.onKeyUp(evt);
	      }
	      if (evt.keyCode === 91 || // left cmd
	      evt.keyCode === 93 || // right cmd
	      evt.ctrlKey || evt.metaKey) {
	        return;
	      }
	
	      // Enter key
	      if (evt.keyCode === 13) {
	        _this.undoTimestamp = 0;
	      }
	
	      _this.selection = (0, _selectionRange4.default)(_this.ref);
	
	      if (evt.keyCode !== 37 && // left
	      evt.keyCode !== 38 && // up
	      evt.keyCode !== 39 && // right
	      evt.keyCode !== 40 // down
	      ) {
	          var plain = _this.getPlain();
	
	          _this.recordChange(plain, _this.selection);
	          _this.updateContent(plain);
	        } else {
	        _this.undoTimestamp = 0;
	      }
	    }, _this.onClick = function (evt) {
	      if (_this.props.onClick) {
	        _this.props.onClick(evt);
	      }
	      _this.undoTimestamp = 0; // Reset timestamp
	      _this.selection = (0, _selectionRange4.default)(_this.ref);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Editor.prototype.componentWillMount = function componentWillMount() {
	    var html = (0, _prism2.default)((0, _normalizeCode2.default)(this.props.code), this.props.language);
	    this.setState({ html: html });
	  };
	
	  Editor.prototype.componentDidMount = function componentDidMount() {
	    this.recordChange(this.getPlain());
	    this.undoTimestamp = 0; // Reset timestamp
	  };
	
	  Editor.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref) {
	    var code = _ref.code,
	        language = _ref.language;
	
	    if (code !== this.props.code || language !== this.props.language) {
	      var html = (0, _prism2.default)((0, _normalizeCode2.default)(code), language);
	      this.setState({ html: html });
	    }
	  };
	
	  Editor.prototype.componentDidUpdate = function componentDidUpdate() {
	    var selection = this.selection;
	
	    if (selection) {
	      (0, _selectionRange4.default)(this.ref, selection);
	    }
	  };
	
	  Editor.prototype.render = function render() {
	    var _props = this.props,
	        contentEditable = _props.contentEditable,
	        className = _props.className,
	        style = _props.style,
	        code = _props.code,
	        ignoreTabKey = _props.ignoreTabKey,
	        language = _props.language,
	        rest = _objectWithoutProperties(_props, ['contentEditable', 'className', 'style', 'code', 'ignoreTabKey', 'language']);
	
	    var html = this.state.html;
	
	
	    return _react2.default.createElement('pre', _extends({}, rest, {
	      ref: this.onRef,
	      className: (0, _cn2.default)('prism-code', className),
	      style: style,
	      spellCheck: 'false',
	      contentEditable: contentEditable,
	      onKeyDown: contentEditable ? this.onKeyDown : undefined,
	      onKeyUp: contentEditable ? this.onKeyUp : undefined,
	      onClick: contentEditable ? this.onClick : undefined,
	      dangerouslySetInnerHTML: { __html: html }
	    }));
	  };
	
	  return Editor;
	}(_react.Component);
	
	Editor.defaultProps = {
	  contentEditable: true,
	  language: 'jsx'
	};
	exports.default = Editor;
	module.exports = exports['default'];

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.withLive = exports.LivePreview = exports.LiveError = exports.LiveEditor = exports.LiveProvider = exports.Editor = undefined;
	
	var _transpile = __webpack_require__(427);
	
	Object.keys(_transpile).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _transpile[key];
	    }
	  });
	});
	
	var _Editor = __webpack_require__(425);
	
	var _Editor2 = _interopRequireDefault(_Editor);
	
	var _LiveProvider = __webpack_require__(103);
	
	var _LiveProvider2 = _interopRequireDefault(_LiveProvider);
	
	var _LiveEditor = __webpack_require__(985);
	
	var _LiveEditor2 = _interopRequireDefault(_LiveEditor);
	
	var _LiveError = __webpack_require__(986);
	
	var _LiveError2 = _interopRequireDefault(_LiveError);
	
	var _LivePreview = __webpack_require__(987);
	
	var _LivePreview2 = _interopRequireDefault(_LivePreview);
	
	var _withLive = __webpack_require__(989);
	
	var _withLive2 = _interopRequireDefault(_withLive);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Editor = _Editor2.default;
	exports.LiveProvider = _LiveProvider2.default;
	exports.LiveEditor = _LiveEditor2.default;
	exports.LiveError = _LiveError2.default;
	exports.LivePreview = _LivePreview2.default;
	exports.withLive = _withLive2.default;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.renderElementAsync = exports.generateElement = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _transform = __webpack_require__(428);
	
	var _transform2 = _interopRequireDefault(_transform);
	
	var _errorBoundary = __webpack_require__(995);
	
	var _errorBoundary2 = _interopRequireDefault(_errorBoundary);
	
	var _evalCode = __webpack_require__(996);
	
	var _evalCode2 = _interopRequireDefault(_evalCode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var generateElement = exports.generateElement = function generateElement(_ref, errorCallback) {
	  var _ref$code = _ref.code,
	      code = _ref$code === undefined ? '' : _ref$code,
	      _ref$scope = _ref.scope,
	      scope = _ref$scope === undefined ? {} : _ref$scope;
	
	  // NOTE: Workaround for classes, since buble doesn't allow `return` without a function
	  var transformed = (0, _transform2.default)(code).trim().replace(/^var \w+ =/, '').replace(/;$/, '');
	
	  return (0, _errorBoundary2.default)((0, _evalCode2.default)('return (' + transformed + ')', scope), errorCallback);
	};
	
	var renderElementAsync = exports.renderElementAsync = function renderElementAsync(_ref2, resultCallback, errorCallback) {
	  var _ref2$code = _ref2.code,
	      code = _ref2$code === undefined ? '' : _ref2$code,
	      _ref2$scope = _ref2.scope,
	      scope = _ref2$scope === undefined ? {} : _ref2$scope;
	
	  var render = function render(element) {
	    resultCallback((0, _errorBoundary2.default)(element, errorCallback));
	  };
	
	  if (!/render\s*\(/.test(code)) {
	    return errorCallback(new SyntaxError('No-Inline evaluations must call `render`.'));
	  }
	
	  (0, _evalCode2.default)((0, _transform2.default)(code), _extends({}, scope, { render: render }));
	};

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports._poly = undefined;
	
	var _buble = __webpack_require__(525);
	
	var _assign = __webpack_require__(527);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _poly = exports._poly = { assign: _assign2.default };
	
	var opts = {
	  objectAssign: '_poly.assign',
	  transforms: {
	    dangerousForOf: true,
	    dangerousTaggedTemplateString: true
	  }
	};
	
	exports.default = function (code) {
	  return (0, _buble.transform)(code, opts).code;
	};

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = connectAdvanced;
	
	var _hoistNonReactStatics = __webpack_require__(185);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _Subscription = __webpack_require__(1005);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _PropTypes = __webpack_require__(431);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };
	
	  return selector;
	}
	
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);
	
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
	
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));
	
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	
	    var displayName = getDisplayName(wrappedComponentName);
	
	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
	
	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));
	
	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }
	
	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;
	
	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;
	
	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };
	
	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };
	
	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;
	
	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));
	
	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };
	
	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);
	
	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };
	
	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };
	
	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        var _this2 = this;
	
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();
	
	          // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	          var oldListeners = [];
	
	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	          this.initSubscription();
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = __webpack_require__(432);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}
	
	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}
	
	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };
	
	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);
	
	      return props;
	    };
	
	    return proxy;
	  };
	}

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
	  trySubscribe: _propTypes2.default.func.isRequired,
	  tryUnsubscribe: _propTypes2.default.func.isRequired,
	  notifyNestedSubs: _propTypes2.default.func.isRequired,
	  isSubscribed: _propTypes2.default.func.isRequired
	});
	
	var storeShape = exports.storeShape = _propTypes2.default.shape({
	  subscribe: _propTypes2.default.func.isRequired,
	  dispatch: _propTypes2.default.func.isRequired,
	  getState: _propTypes2.default.func.isRequired
	});

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(237);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ }),
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	/*<replacement>*/
	
	var processNextTick = __webpack_require__(145);
	/*</replacement>*/
	
	module.exports = Readable;
	
	/*<replacement>*/
	var isArray = __webpack_require__(186);
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	/*<replacement>*/
	var EE = __webpack_require__(179).EventEmitter;
	
	var EElistenerCount = function (emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream = __webpack_require__(445);
	/*</replacement>*/
	
	// TODO(bmeurer): Change this back to const once hole checks are
	// properly optimized away early in Ignition+TurboFan.
	/*<replacement>*/
	var Buffer = __webpack_require__(244).Buffer;
	var OurUint8Array = global.Uint8Array || function () {};
	function _uint8ArrayToBuffer(chunk) {
	  return Buffer.from(chunk);
	}
	function _isUint8Array(obj) {
	  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
	}
	/*</replacement>*/
	
	/*<replacement>*/
	var util = __webpack_require__(89);
	util.inherits = __webpack_require__(90);
	/*</replacement>*/
	
	/*<replacement>*/
	var debugUtil = __webpack_require__(1136);
	var debug = void 0;
	if (debugUtil && debugUtil.debuglog) {
	  debug = debugUtil.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/
	
	var BufferList = __webpack_require__(1043);
	var destroyImpl = __webpack_require__(444);
	var StringDecoder;
	
	util.inherits(Readable, Stream);
	
	var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
	
	function prependListener(emitter, event, fn) {
	  // Sadly this is not cacheable as some libraries bundle their own
	  // event emitter implementation with them.
	  if (typeof emitter.prependListener === 'function') {
	    return emitter.prependListener(event, fn);
	  } else {
	    // This is a hack to make sure that our error handler is attached before any
	    // userland ones.  NEVER DO THIS. This is here only because this code needs
	    // to continue to work with older versions of Node.js that do not include
	    // the prependListener() method. The goal is to eventually remove this hack.
	    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
	  }
	}
	
	function ReadableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(79);
	
	  options = options || {};
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = Math.floor(this.highWaterMark);
	
	  // A linked list is used to store data chunks instead of an array because the
	  // linked list can remove elements from the beginning faster than
	  // array.shift()
	  this.buffer = new BufferList();
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // a flag to be able to tell if the event 'readable'/'data' is emitted
	  // immediately, or on a later tick.  We set this to true at first, because
	  // any actions that shouldn't happen until "later" should generally also
	  // not happen before the first read call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	  this.resumeScheduled = false;
	
	  // has it been destroyed
	  this.destroyed = false;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder) StringDecoder = __webpack_require__(479).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  Duplex = Duplex || __webpack_require__(79);
	
	  if (!(this instanceof Readable)) return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  if (options) {
	    if (typeof options.read === 'function') this._read = options.read;
	
	    if (typeof options.destroy === 'function') this._destroy = options.destroy;
	  }
	
	  Stream.call(this);
	}
	
	Object.defineProperty(Readable.prototype, 'destroyed', {
	  get: function () {
	    if (this._readableState === undefined) {
	      return false;
	    }
	    return this._readableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (!this._readableState) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._readableState.destroyed = value;
	  }
	});
	
	Readable.prototype.destroy = destroyImpl.destroy;
	Readable.prototype._undestroy = destroyImpl.undestroy;
	Readable.prototype._destroy = function (err, cb) {
	  this.push(null);
	  cb(err);
	};
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function (chunk, encoding) {
	  var state = this._readableState;
	  var skipChunkCheck;
	
	  if (!state.objectMode) {
	    if (typeof chunk === 'string') {
	      encoding = encoding || state.defaultEncoding;
	      if (encoding !== state.encoding) {
	        chunk = Buffer.from(chunk, encoding);
	        encoding = '';
	      }
	      skipChunkCheck = true;
	    }
	  } else {
	    skipChunkCheck = true;
	  }
	
	  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function (chunk) {
	  return readableAddChunk(this, chunk, null, true, false);
	};
	
	function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
	  var state = stream._readableState;
	  if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else {
	    var er;
	    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
	    if (er) {
	      stream.emit('error', er);
	    } else if (state.objectMode || chunk && chunk.length > 0) {
	      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
	        chunk = _uint8ArrayToBuffer(chunk);
	      }
	
	      if (addToFront) {
	        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
	      } else if (state.ended) {
	        stream.emit('error', new Error('stream.push() after EOF'));
	      } else {
	        state.reading = false;
	        if (state.decoder && !encoding) {
	          chunk = state.decoder.write(chunk);
	          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
	        } else {
	          addChunk(stream, state, chunk, false);
	        }
	      }
	    } else if (!addToFront) {
	      state.reading = false;
	    }
	  }
	
	  return needMoreData(state);
	}
	
	function addChunk(stream, state, chunk, addToFront) {
	  if (state.flowing && state.length === 0 && !state.sync) {
	    stream.emit('data', chunk);
	    stream.read(0);
	  } else {
	    // update the buffer info.
	    state.length += state.objectMode ? 1 : chunk.length;
	    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
	
	    if (state.needReadable) emitReadable(stream);
	  }
	  maybeReadMore(stream, state);
	}
	
	function chunkInvalid(state, chunk) {
	  var er;
	  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
	}
	
	Readable.prototype.isPaused = function () {
	  return this._readableState.flowing === false;
	};
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function (enc) {
	  if (!StringDecoder) StringDecoder = __webpack_require__(479).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};
	
	// Don't raise the hwm > 8MB
	var MAX_HWM = 0x800000;
	function computeNewHighWaterMark(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2 to prevent increasing hwm excessively in
	    // tiny amounts
	    n--;
	    n |= n >>> 1;
	    n |= n >>> 2;
	    n |= n >>> 4;
	    n |= n >>> 8;
	    n |= n >>> 16;
	    n++;
	  }
	  return n;
	}
	
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function howMuchToRead(n, state) {
	  if (n <= 0 || state.length === 0 && state.ended) return 0;
	  if (state.objectMode) return 1;
	  if (n !== n) {
	    // Only flow one buffer at a time
	    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
	  }
	  // If we're asking for more than the current hwm, then raise the hwm.
	  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
	  if (n <= state.length) return n;
	  // Don't have enough
	  if (!state.ended) {
	    state.needReadable = true;
	    return 0;
	  }
	  return state.length;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function (n) {
	  debug('read', n);
	  n = parseInt(n, 10);
	  var state = this._readableState;
	  var nOrig = n;
	
	  if (n !== 0) state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0) endReadable(this);
	    return null;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  } else if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0) state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	    // If _read pushed data synchronously, then `reading` will be false,
	    // and we need to re-evaluate how much data we can return to the user.
	    if (!state.reading) n = howMuchToRead(nOrig, state);
	  }
	
	  var ret;
	  if (n > 0) ret = fromList(n, state);else ret = null;
	
	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  } else {
	    state.length -= n;
	  }
	
	  if (state.length === 0) {
	    // If we have nothing in the buffer, then we want to know
	    // as soon as we *do* get something into the buffer.
	    if (!state.ended) state.needReadable = true;
	
	    // If we tried to read() past the EOF, then emit end on the next tick.
	    if (nOrig !== n && state.ended) endReadable(this);
	  }
	
	  if (ret !== null) this.emit('data', ret);
	
	  return ret;
	};
	
	function onEofChunk(stream, state) {
	  if (state.ended) return;
	  if (state.decoder) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
	  }
	}
	
	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    processNextTick(maybeReadMore_, stream, state);
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;else len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function (n) {
	  this.emit('error', new Error('_read() is not implemented'));
	};
	
	Readable.prototype.pipe = function (dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
	
	  var endFn = doEnd ? onend : unpipe;
	  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable, unpipeInfo) {
	    debug('onunpipe');
	    if (readable === src) {
	      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
	        unpipeInfo.hasUnpiped = true;
	        cleanup();
	      }
	    }
	  }
	
	  function onend() {
	    debug('onend');
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  var cleanedUp = false;
	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', unpipe);
	    src.removeListener('data', ondata);
	
	    cleanedUp = true;
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
	  }
	
	  // If the user pushes more data while we're writing to dest then we'll end up
	  // in ondata again. However, we only want to increase awaitDrain once because
	  // dest will only emit one 'drain' event for the multiple writes.
	  // => Introduce a guard on increasing awaitDrain.
	  var increasedAwaitDrain = false;
	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    increasedAwaitDrain = false;
	    var ret = dest.write(chunk);
	    if (false === ret && !increasedAwaitDrain) {
	      // If the user unpiped during `dest.write()`, it is possible
	      // to get stuck in a permanently paused state if that write
	      // also returned false.
	      // => Check whether `dest` is still a piping destination.
	      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
	        debug('false write response, pause', src._readableState.awaitDrain);
	        src._readableState.awaitDrain++;
	        increasedAwaitDrain = true;
	      }
	      src.pause();
	    }
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
	  }
	
	  // Make sure our error handler is attached before userland ones.
	  prependListener(dest, 'error', onerror);
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function () {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain) state.awaitDrain--;
	    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}
	
	Readable.prototype.unpipe = function (dest) {
	  var state = this._readableState;
	  var unpipeInfo = { hasUnpiped: false };
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0) return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes) return this;
	
	    if (!dest) dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest) dest.emit('unpipe', this, unpipeInfo);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++) {
	      dests[i].emit('unpipe', this, unpipeInfo);
	    }return this;
	  }
	
	  // try to find the right one.
	  var index = indexOf(state.pipes, dest);
	  if (index === -1) return this;
	
	  state.pipes.splice(index, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1) state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this, unpipeInfo);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function (ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  if (ev === 'data') {
	    // Start flowing on next tick if stream isn't explicitly paused
	    if (this._readableState.flowing !== false) this.resume();
	  } else if (ev === 'readable') {
	    var state = this._readableState;
	    if (!state.endEmitted && !state.readableListening) {
	      state.readableListening = state.needReadable = true;
	      state.emittedReadable = false;
	      if (!state.reading) {
	        processNextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	}
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function () {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }
	  return this;
	};
	
	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    processNextTick(resume_, stream, state);
	  }
	}
	
	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }
	
	  state.resumeScheduled = false;
	  state.awaitDrain = 0;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading) stream.read(0);
	}
	
	Readable.prototype.pause = function () {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};
	
	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  while (state.flowing && stream.read() !== null) {}
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function (stream) {
	  var state = this._readableState;
	  var paused = false;
	
	  var self = this;
	  stream.on('end', function () {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length) self.push(chunk);
	    }
	
	    self.push(null);
	  });
	
	  stream.on('data', function (chunk) {
	    debug('wrapped data');
	    if (state.decoder) chunk = state.decoder.write(chunk);
	
	    // don't skip over falsy values in objectMode
	    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
	
	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function (method) {
	        return function () {
	          return stream[method].apply(stream, arguments);
	        };
	      }(i);
	    }
	  }
	
	  // proxy certain important events.
	  for (var n = 0; n < kProxyEvents.length; n++) {
	    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
	  }
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function (n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return self;
	};
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromList(n, state) {
	  // nothing buffered
	  if (state.length === 0) return null;
	
	  var ret;
	  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
	    // read it all, truncate the list
	    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
	    state.buffer.clear();
	  } else {
	    // read part of list
	    ret = fromListPartial(n, state.buffer, state.decoder);
	  }
	
	  return ret;
	}
	
	// Extracts only enough buffered data to satisfy the amount requested.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromListPartial(n, list, hasStrings) {
	  var ret;
	  if (n < list.head.data.length) {
	    // slice is the same for buffers and strings
	    ret = list.head.data.slice(0, n);
	    list.head.data = list.head.data.slice(n);
	  } else if (n === list.head.data.length) {
	    // first chunk is a perfect match
	    ret = list.shift();
	  } else {
	    // result spans more than one buffer
	    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
	  }
	  return ret;
	}
	
	// Copies a specified amount of characters from the list of buffered data
	// chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBufferString(n, list) {
	  var p = list.head;
	  var c = 1;
	  var ret = p.data;
	  n -= ret.length;
	  while (p = p.next) {
	    var str = p.data;
	    var nb = n > str.length ? str.length : n;
	    if (nb === str.length) ret += str;else ret += str.slice(0, n);
	    n -= nb;
	    if (n === 0) {
	      if (nb === str.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = str.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	// Copies a specified amount of bytes from the list of buffered data chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBuffer(n, list) {
	  var ret = Buffer.allocUnsafe(n);
	  var p = list.head;
	  var c = 1;
	  p.data.copy(ret);
	  n -= p.data.length;
	  while (p = p.next) {
	    var buf = p.data;
	    var nb = n > buf.length ? buf.length : n;
	    buf.copy(ret, ret.length - n, 0, nb);
	    n -= nb;
	    if (n === 0) {
	      if (nb === buf.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = buf.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
	
	  if (!state.endEmitted) {
	    state.ended = true;
	    processNextTick(endReadableNT, state, stream);
	  }
	}
	
	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	function indexOf(xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(38)))

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	'use strict';
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(79);
	
	/*<replacement>*/
	var util = __webpack_require__(89);
	util.inherits = __webpack_require__(90);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	function TransformState(stream) {
	  this.afterTransform = function (er, data) {
	    return afterTransform(stream, er, data);
	  };
	
	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	  this.writeencoding = null;
	}
	
	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb) {
	    return stream.emit('error', new Error('write callback called multiple times'));
	  }
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  cb(er);
	
	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	
	function Transform(options) {
	  if (!(this instanceof Transform)) return new Transform(options);
	
	  Duplex.call(this, options);
	
	  this._transformState = new TransformState(this);
	
	  var stream = this;
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  if (options) {
	    if (typeof options.transform === 'function') this._transform = options.transform;
	
	    if (typeof options.flush === 'function') this._flush = options.flush;
	  }
	
	  // When the writable side finishes, then flush out anything remaining.
	  this.once('prefinish', function () {
	    if (typeof this._flush === 'function') this._flush(function (er, data) {
	      done(stream, er, data);
	    });else done(stream);
	  });
	}
	
	Transform.prototype.push = function (chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function (chunk, encoding, cb) {
	  throw new Error('_transform() is not implemented');
	};
	
	Transform.prototype._write = function (chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function (n) {
	  var ts = this._transformState;
	
	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	Transform.prototype._destroy = function (err, cb) {
	  var _this = this;
	
	  Duplex.prototype._destroy.call(this, err, function (err2) {
	    cb(err2);
	    _this.emit('close');
	  });
	};
	
	function done(stream, er, data) {
	  if (er) return stream.emit('error', er);
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;
	
	  if (ws.length) throw new Error('Calling transform done when ws.length != 0');
	
	  if (ts.transforming) throw new Error('Calling transform done when still transforming');
	
	  return stream.push(null);
	}

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, encoding, cb), and it'll handle all
	// the drain event emission and buffering.
	
	'use strict';
	
	/*<replacement>*/
	
	var processNextTick = __webpack_require__(145);
	/*</replacement>*/
	
	module.exports = Writable;
	
	/* <replacement> */
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}
	
	// It seems a linked list but it is not
	// there will be only 2 of these for each stream
	function CorkedRequest(state) {
	  var _this = this;
	
	  this.next = null;
	  this.entry = null;
	  this.finish = function () {
	    onCorkedFinish(_this, state);
	  };
	}
	/* </replacement> */
	
	/*<replacement>*/
	var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	/*<replacement>*/
	var util = __webpack_require__(89);
	util.inherits = __webpack_require__(90);
	/*</replacement>*/
	
	/*<replacement>*/
	var internalUtil = {
	  deprecate: __webpack_require__(1111)
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream = __webpack_require__(445);
	/*</replacement>*/
	
	/*<replacement>*/
	var Buffer = __webpack_require__(244).Buffer;
	var OurUint8Array = global.Uint8Array || function () {};
	function _uint8ArrayToBuffer(chunk) {
	  return Buffer.from(chunk);
	}
	function _isUint8Array(obj) {
	  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
	}
	/*</replacement>*/
	
	var destroyImpl = __webpack_require__(444);
	
	util.inherits(Writable, Stream);
	
	function nop() {}
	
	function WritableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(79);
	
	  options = options || {};
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = Math.floor(this.highWaterMark);
	
	  // if _final has been called
	  this.finalCalled = false;
	
	  // drain event flag.
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // has it been destroyed
	  this.destroyed = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function (er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null;
	
	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;
	
	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	
	  // count buffered requests
	  this.bufferedRequestCount = 0;
	
	  // allocate the first CorkedRequest, there is always
	  // one allocated and free to use, and we maintain at most two
	  this.corkedRequestsFree = new CorkedRequest(this);
	}
	
	WritableState.prototype.getBuffer = function getBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];
	  while (current) {
	    out.push(current);
	    current = current.next;
	  }
	  return out;
	};
	
	(function () {
	  try {
	    Object.defineProperty(WritableState.prototype, 'buffer', {
	      get: internalUtil.deprecate(function () {
	        return this.getBuffer();
	      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
	    });
	  } catch (_) {}
	})();
	
	// Test _writableState for inheritance to account for Duplex streams,
	// whose prototype chain only points to Readable.
	var realHasInstance;
	if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
	  realHasInstance = Function.prototype[Symbol.hasInstance];
	  Object.defineProperty(Writable, Symbol.hasInstance, {
	    value: function (object) {
	      if (realHasInstance.call(this, object)) return true;
	
	      return object && object._writableState instanceof WritableState;
	    }
	  });
	} else {
	  realHasInstance = function (object) {
	    return object instanceof this;
	  };
	}
	
	function Writable(options) {
	  Duplex = Duplex || __webpack_require__(79);
	
	  // Writable ctor is applied to Duplexes, too.
	  // `realHasInstance` is necessary because using plain `instanceof`
	  // would return false, as no `_writableState` property is attached.
	
	  // Trying to use the custom `instanceof` for Writable here will also break the
	  // Node.js LazyTransform implementation, which has a non-trivial getter for
	  // `_writableState` that would lead to infinite recursion.
	  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
	    return new Writable(options);
	  }
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  if (options) {
	    if (typeof options.write === 'function') this._write = options.write;
	
	    if (typeof options.writev === 'function') this._writev = options.writev;
	
	    if (typeof options.destroy === 'function') this._destroy = options.destroy;
	
	    if (typeof options.final === 'function') this._final = options.final;
	  }
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function () {
	  this.emit('error', new Error('Cannot pipe, not readable'));
	};
	
	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  processNextTick(cb, er);
	}
	
	// Checks that a user-supplied chunk is valid, especially for the particular
	// mode the stream is in. Currently this means that `null` is never accepted
	// and undefined/non-string values are only allowed in object mode.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  var er = false;
	
	  if (chunk === null) {
	    er = new TypeError('May not write null values to stream');
	  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  if (er) {
	    stream.emit('error', er);
	    processNextTick(cb, er);
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function (chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	  var isBuf = _isUint8Array(chunk) && !state.objectMode;
	
	  if (isBuf && !Buffer.isBuffer(chunk)) {
	    chunk = _uint8ArrayToBuffer(chunk);
	  }
	
	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
	
	  if (typeof cb !== 'function') cb = nop;
	
	  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
	  }
	
	  return ret;
	};
	
	Writable.prototype.cork = function () {
	  var state = this._writableState;
	
	  state.corked++;
	};
	
	Writable.prototype.uncork = function () {
	  var state = this._writableState;
	
	  if (state.corked) {
	    state.corked--;
	
	    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
	  }
	};
	
	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	  return this;
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
	    chunk = Buffer.from(chunk, encoding);
	  }
	  return chunk;
	}
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
	  if (!isBuf) {
	    var newChunk = decodeChunk(state, chunk, encoding);
	    if (chunk !== newChunk) {
	      isBuf = true;
	      encoding = 'buffer';
	      chunk = newChunk;
	    }
	  }
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret) state.needDrain = true;
	
	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = {
	      chunk: chunk,
	      encoding: encoding,
	      isBuf: isBuf,
	      callback: cb,
	      next: null
	    };
	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }
	    state.bufferedRequestCount += 1;
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }
	
	  return ret;
	}
	
	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	
	  if (sync) {
	    // defer the callback if we are being called synchronously
	    // to avoid piling up things on the stack
	    processNextTick(cb, er);
	    // this can emit finish, and it will always happen
	    // after error
	    processNextTick(finishMaybe, stream, state);
	    stream._writableState.errorEmitted = true;
	    stream.emit('error', er);
	  } else {
	    // the caller expect this to happen before if
	    // it is async
	    cb(er);
	    stream._writableState.errorEmitted = true;
	    stream.emit('error', er);
	    // this can emit finish, but finish must
	    // always follow error
	    finishMaybe(stream, state);
	  }
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er) onwriteError(stream, state, sync, er, cb);else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);
	
	    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }
	
	    if (sync) {
	      /*<replacement>*/
	      asyncWrite(afterWrite, stream, state, finished, cb);
	      /*</replacement>*/
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished) onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;
	
	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var l = state.bufferedRequestCount;
	    var buffer = new Array(l);
	    var holder = state.corkedRequestsFree;
	    holder.entry = entry;
	
	    var count = 0;
	    var allBuffers = true;
	    while (entry) {
	      buffer[count] = entry;
	      if (!entry.isBuf) allBuffers = false;
	      entry = entry.next;
	      count += 1;
	    }
	    buffer.allBuffers = allBuffers;
	
	    doWrite(stream, state, true, state.length, buffer, '', holder.finish);
	
	    // doWrite is almost always async, defer these to save a bit of time
	    // as the hot path ends with doWrite
	    state.pendingcb++;
	    state.lastBufferedRequest = null;
	    if (holder.next) {
	      state.corkedRequestsFree = holder.next;
	      holder.next = null;
	    } else {
	      state.corkedRequestsFree = new CorkedRequest(state);
	    }
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next;
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        break;
	      }
	    }
	
	    if (entry === null) state.lastBufferedRequest = null;
	  }
	
	  state.bufferedRequestCount = 0;
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}
	
	Writable.prototype._write = function (chunk, encoding, cb) {
	  cb(new Error('_write() is not implemented'));
	};
	
	Writable.prototype._writev = null;
	
	Writable.prototype.end = function (chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);
	
	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished) endWritable(this, state, cb);
	};
	
	function needFinish(state) {
	  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
	}
	function callFinal(stream, state) {
	  stream._final(function (err) {
	    state.pendingcb--;
	    if (err) {
	      stream.emit('error', err);
	    }
	    state.prefinished = true;
	    stream.emit('prefinish');
	    finishMaybe(stream, state);
	  });
	}
	function prefinish(stream, state) {
	  if (!state.prefinished && !state.finalCalled) {
	    if (typeof stream._final === 'function') {
	      state.pendingcb++;
	      state.finalCalled = true;
	      processNextTick(callFinal, stream, state);
	    } else {
	      state.prefinished = true;
	      stream.emit('prefinish');
	    }
	  }
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(state);
	  if (need) {
	    prefinish(stream, state);
	    if (state.pendingcb === 0) {
	      state.finished = true;
	      stream.emit('finish');
	    }
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
	  }
	  state.ended = true;
	  stream.writable = false;
	}
	
	function onCorkedFinish(corkReq, state, err) {
	  var entry = corkReq.entry;
	  corkReq.entry = null;
	  while (entry) {
	    var cb = entry.callback;
	    state.pendingcb--;
	    cb(err);
	    entry = entry.next;
	  }
	  if (state.corkedRequestsFree) {
	    state.corkedRequestsFree.next = corkReq;
	  } else {
	    state.corkedRequestsFree = corkReq;
	  }
	}
	
	Object.defineProperty(Writable.prototype, 'destroyed', {
	  get: function () {
	    if (this._writableState === undefined) {
	      return false;
	    }
	    return this._writableState.destroyed;
	  },
	  set: function (value) {
	    // we ignore the value if the stream
	    // has not been initialized yet
	    if (!this._writableState) {
	      return;
	    }
	
	    // backward compatibility, the user is explicitly
	    // managing destroyed
	    this._writableState.destroyed = value;
	  }
	});
	
	Writable.prototype.destroy = destroyImpl.destroy;
	Writable.prototype._undestroy = destroyImpl.undestroy;
	Writable.prototype._destroy = function (err, cb) {
	  this.end();
	  cb(err);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(482).setImmediate, (function() { return this; }())))

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/*<replacement>*/
	
	var processNextTick = __webpack_require__(145);
	/*</replacement>*/
	
	// undocumented cb() API, needed for core, not for public API
	function destroy(err, cb) {
	  var _this = this;
	
	  var readableDestroyed = this._readableState && this._readableState.destroyed;
	  var writableDestroyed = this._writableState && this._writableState.destroyed;
	
	  if (readableDestroyed || writableDestroyed) {
	    if (cb) {
	      cb(err);
	    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
	      processNextTick(emitErrorNT, this, err);
	    }
	    return;
	  }
	
	  // we set destroyed to true before firing error callbacks in order
	  // to make it re-entrance safe in case destroy() is called within callbacks
	
	  if (this._readableState) {
	    this._readableState.destroyed = true;
	  }
	
	  // if this is a duplex stream mark the writable part as destroyed as well
	  if (this._writableState) {
	    this._writableState.destroyed = true;
	  }
	
	  this._destroy(err || null, function (err) {
	    if (!cb && err) {
	      processNextTick(emitErrorNT, _this, err);
	      if (_this._writableState) {
	        _this._writableState.errorEmitted = true;
	      }
	    } else if (cb) {
	      cb(err);
	    }
	  });
	}
	
	function undestroy() {
	  if (this._readableState) {
	    this._readableState.destroyed = false;
	    this._readableState.reading = false;
	    this._readableState.ended = false;
	    this._readableState.endEmitted = false;
	  }
	
	  if (this._writableState) {
	    this._writableState.destroyed = false;
	    this._writableState.ended = false;
	    this._writableState.ending = false;
	    this._writableState.finished = false;
	    this._writableState.errorEmitted = false;
	  }
	}
	
	function emitErrorNT(self, err) {
	  self.emit('error', err);
	}
	
	module.exports = {
	  destroy: destroy,
	  undestroy: undestroy
	};

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(179).EventEmitter;


/***/ }),
/* 446 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// based on https://github.com/lodash/lodash/blob/4.17.2/lodash.js#L14100
	// eslint-disable-next-line max-len
	var wordPattern = /[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:(?:1ST|2ND|3RD|(?![123])\dTH)\b)|\d*(?:(?:1st|2nd|3rd|(?![123])\dth)\b)|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g;
	var namespacer = '/';
	
	function camelCase(string) {
	  return string.match(wordPattern).reduce(function (camelCased, word, index) {
	    return camelCased + (index === 0 ? word.toLowerCase() : word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());
	  }, '');
	}
	
	exports.default = function (type) {
	  return type.split(namespacer).map(camelCase).join(namespacer);
	};

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ACTION_TYPE_DELIMITER = undefined;
	exports.default = combineActions;
	
	var _isString = __webpack_require__(138);
	
	var _isString2 = _interopRequireDefault(_isString);
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isEmpty = __webpack_require__(211);
	
	var _isEmpty2 = _interopRequireDefault(_isEmpty);
	
	var _toString = __webpack_require__(368);
	
	var _toString2 = _interopRequireDefault(_toString);
	
	var _isSymbol = __webpack_require__(62);
	
	var _isSymbol2 = _interopRequireDefault(_isSymbol);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ACTION_TYPE_DELIMITER = exports.ACTION_TYPE_DELIMITER = '||';
	
	function isValidActionType(type) {
	  return (0, _isString2.default)(type) || (0, _isFunction2.default)(type) || (0, _isSymbol2.default)(type);
	}
	
	function isValidActionTypes(types) {
	  if ((0, _isEmpty2.default)(types)) {
	    return false;
	  }
	  return types.every(isValidActionType);
	}
	
	function combineActions() {
	  for (var _len = arguments.length, actionsTypes = Array(_len), _key = 0; _key < _len; _key++) {
	    actionsTypes[_key] = arguments[_key];
	  }
	
	  (0, _invariant2.default)(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');
	  var combinedActionType = actionsTypes.map(_toString2.default).join(ACTION_TYPE_DELIMITER);
	  return { toString: function toString() {
	      return combinedActionType;
	    } };
	}

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createAction;
	
	var _identity = __webpack_require__(44);
	
	var _identity2 = _interopRequireDefault(_identity);
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isNull = __webpack_require__(789);
	
	var _isNull2 = _interopRequireDefault(_isNull);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createAction(type) {
	  var payloadCreator = arguments.length <= 1 || arguments[1] === undefined ? _identity2.default : arguments[1];
	  var metaCreator = arguments[2];
	
	  (0, _invariant2.default)((0, _isFunction2.default)(payloadCreator) || (0, _isNull2.default)(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');
	
	  var finalPayloadCreator = (0, _isNull2.default)(payloadCreator) || payloadCreator === _identity2.default ? _identity2.default : function (head) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    return head instanceof Error ? head : payloadCreator.apply(undefined, [head].concat(args));
	  };
	
	  var hasMeta = (0, _isFunction2.default)(metaCreator);
	  var typeString = type.toString();
	
	  var actionCreator = function actionCreator() {
	    var payload = finalPayloadCreator.apply(undefined, arguments);
	    var action = { type: type };
	
	    if (payload instanceof Error) {
	      action.error = true;
	    }
	
	    if (payload !== undefined) {
	      action.payload = payload;
	    }
	
	    if (hasMeta) {
	      action.meta = metaCreator.apply(undefined, arguments);
	    }
	
	    return action;
	  };
	
	  actionCreator.toString = function () {
	    return typeString;
	  };
	
	  return actionCreator;
	}

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.unflattenActionCreators = exports.flattenReducerMap = exports.flattenActionMap = undefined;
	
	var _camelCase = __webpack_require__(446);
	
	var _camelCase2 = _interopRequireDefault(_camelCase);
	
	var _ownKeys = __webpack_require__(242);
	
	var _ownKeys2 = _interopRequireDefault(_ownKeys);
	
	var _hasGeneratorInterface = __webpack_require__(1049);
	
	var _hasGeneratorInterface2 = _interopRequireDefault(_hasGeneratorInterface);
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultNamespace = '/';
	
	var flattenWhenNode = function flattenWhenNode(predicate) {
	  return function flatten(map) {
	    var namespace = arguments.length <= 1 || arguments[1] === undefined ? defaultNamespace : arguments[1];
	    var partialFlatMap = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	    var partialFlatActionType = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];
	
	    function connectNamespace(type) {
	      return partialFlatActionType ? '' + partialFlatActionType + namespace + type : type;
	    }
	
	    (0, _ownKeys2.default)(map).forEach(function (type) {
	      var nextNamespace = connectNamespace(type);
	      var mapValue = map[type];
	
	      if (!predicate(mapValue)) {
	        partialFlatMap[nextNamespace] = map[type];
	      } else {
	        flatten(map[type], namespace, partialFlatMap, nextNamespace);
	      }
	    });
	
	    return partialFlatMap;
	  };
	};
	
	var flattenActionMap = flattenWhenNode(_isPlainObject2.default);
	var flattenReducerMap = flattenWhenNode(function (node) {
	  return (0, _isPlainObject2.default)(node) && !(0, _hasGeneratorInterface2.default)(node);
	});
	
	function unflattenActionCreators(flatActionCreators) {
	  var namespace = arguments.length <= 1 || arguments[1] === undefined ? defaultNamespace : arguments[1];
	
	  function unflatten(flatActionType) {
	    var partialNestedActionCreators = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	    var partialFlatActionTypePath = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];
	
	    var nextNamespace = (0, _camelCase2.default)(partialFlatActionTypePath.shift());
	    if (partialFlatActionTypePath.length) {
	      if (!partialNestedActionCreators[nextNamespace]) {
	        partialNestedActionCreators[nextNamespace] = {};
	      }
	      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);
	    } else {
	      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];
	    }
	  }
	
	  var nestedActionCreators = {};
	  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {
	    return unflatten(type, nestedActionCreators, type.split(namespace));
	  });
	  return nestedActionCreators;
	}
	
	exports.flattenActionMap = flattenActionMap;
	exports.flattenReducerMap = flattenReducerMap;
	exports.unflattenActionCreators = unflattenActionCreators;

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	exports.default = handleAction;
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _identity = __webpack_require__(44);
	
	var _identity2 = _interopRequireDefault(_identity);
	
	var _isNil = __webpack_require__(359);
	
	var _isNil2 = _interopRequireDefault(_isNil);
	
	var _isUndefined = __webpack_require__(213);
	
	var _isUndefined2 = _interopRequireDefault(_isUndefined);
	
	var _includes = __webpack_require__(210);
	
	var _includes2 = _interopRequireDefault(_includes);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _combineActions = __webpack_require__(447);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function handleAction(type) {
	  var reducer = arguments.length <= 1 || arguments[1] === undefined ? _identity2.default : arguments[1];
	  var defaultState = arguments[2];
	
	  var types = type.toString().split(_combineActions.ACTION_TYPE_DELIMITER);
	  (0, _invariant2.default)(!(0, _isUndefined2.default)(defaultState), 'defaultState for reducer handling ' + types.join(', ') + ' should be defined');
	  (0, _invariant2.default)((0, _isFunction2.default)(reducer) || (0, _isPlainObject2.default)(reducer), 'Expected reducer to be a function or object with next and throw reducers');
	
	  var _ref = (0, _isFunction2.default)(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {
	    return (0, _isNil2.default)(aReducer) ? _identity2.default : aReducer;
	  });
	
	  var _ref2 = _slicedToArray(_ref, 2);
	
	  var nextReducer = _ref2[0];
	  var throwReducer = _ref2[1];
	
	
	  return function () {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];
	    var action = arguments[1];
	    var actionType = action.type;
	
	    if (!actionType || !(0, _includes2.default)(types, actionType.toString())) {
	      return state;
	    }
	
	    return (action.error === true ? throwReducer : nextReducer)(state, action);
	  };
	}

/***/ }),
/* 451 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(1098);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	
	  /**
	   * Creates a Redux store that holds the state tree.
	   * The only way to change the data in the store is to call `dispatch()` on it.
	   *
	   * There should only be a single store in your app. To specify how different
	   * parts of the state tree respond to actions, you may combine several reducers
	   * into a single reducer function by using `combineReducers`.
	   *
	   * @param {Function} reducer A function that returns the next state tree, given
	   * the current state tree and the action to handle.
	   *
	   * @param {any} [preloadedState] The initial state. You may optionally specify it
	   * to hydrate the state from the server in universal apps, or to restore a
	   * previously serialized user session.
	   * If you use `combineReducers` to produce the root reducer function, this must be
	   * an object with the same shape as `combineReducers` keys.
	   *
	   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	   * to enhance the store with third-party capabilities such as middleware,
	   * time travel, persistence, etc. The only store enhancer that ships with Redux
	   * is `applyMiddleware()`.
	   *
	   * @returns {Store} A Redux store that lets you read the state, dispatch actions
	   * and subscribe to changes.
	   */
	};function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ }),
/* 453 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledBlockQuote = /*#__PURE__*/(0, _reactEmotion2.default)('blockquote')(function (props) {
	  return props.styles;
	});
	
	var BlockQuote = function (_Component) {
	  (0, _inherits3.default)(BlockQuote, _Component);
	
	  function BlockQuote() {
	    (0, _classCallCheck3.default)(this, BlockQuote);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  BlockQuote.prototype.render = function render() {
	    var styles = [this.context.styles.components.blockquote, _base.getStyles.call(this), this.context.typeface || {}, this.props.style];
	    return (0, _jsx3.default)(StyledBlockQuote, {
	      className: this.props.className,
	      styles: styles
	    }, void 0, this.props.children);
	  };
	
	  return BlockQuote;
	}(_react.Component);
	
	exports.default = BlockQuote;
	
	
	BlockQuote.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _objectWithoutProperties2 = __webpack_require__(157);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	__webpack_require__(1094);
	
	var _reactLive = __webpack_require__(426);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledWrapper = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	  return props.styles;
	});
	var StyledEditor = /*#__PURE__*/(0, _reactEmotion2.default)(function (_ref) {
	  var _ = _ref.syntaxStyles,
	      __ = _ref.prismTheme,
	      rest = (0, _objectWithoutProperties3.default)(_ref, ['syntaxStyles', 'prismTheme']);
	  return _react2.default.createElement(_reactLive.Editor, rest);
	})('&&{', function (props) {
	  return props.syntaxStyles;
	}, '}', function (props) {
	  return props.prismTheme;
	});
	
	var CodePane = function (_Component) {
	  (0, _inherits3.default)(CodePane, _Component);
	
	  function CodePane() {
	    (0, _classCallCheck3.default)(this, CodePane);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  CodePane.prototype.handleEditorEvent = function handleEditorEvent(evt) {
	    evt.stopPropagation();
	  };
	
	  CodePane.prototype.render = function render() {
	    var useDarkTheme = this.props.theme === 'dark';
	
	    var wrapperStyles = [this.context.styles.components.codePane, _base.getStyles.call(this), this.props.style];
	
	    return (0, _jsx3.default)(StyledWrapper, {
	      className: this.props.className,
	      styles: wrapperStyles
	    }, void 0, (0, _jsx3.default)(StyledEditor, {
	      className: 'language-prism',
	      code: this.props.source,
	      language: this.props.lang,
	      contentEditable: this.props.contentEditable,
	      syntaxStyles: this.context.styles.components.syntax,
	      prismTheme: this.context.styles.prism[useDarkTheme ? 'dark' : 'light'],
	      onKeyDown: this.handleEditorEvent,
	      onKeyUp: this.handleEditorEvent,
	      onClick: this.handleEditorEvent
	    }));
	  };
	
	  return CodePane;
	}(_react.Component);
	
	exports.default = CodePane;
	
	
	CodePane.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};
	
	CodePane.defaultProps = {
	  theme: 'dark',
	  className: '',
	  contentEditable: false,
	  lang: 'markup',
	  source: ''
	};

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var format = function format(str) {
	  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
	};
	
	var StyledCode = /*#__PURE__*/(0, _reactEmotion2.default)('code')(function (props) {
	  return props.styles;
	});
	
	var Code = function (_Component) {
	  (0, _inherits3.default)(Code, _Component);
	
	  function Code() {
	    (0, _classCallCheck3.default)(this, Code);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Code.prototype.createMarkup = function createMarkup() {
	    return {
	      __html: format(this.props.children)
	    };
	  };
	
	  Code.prototype.render = function render() {
	    var styles = [this.context.styles.components.code, _base.getStyles.call(this), this.props.style];
	    return (0, _jsx3.default)(StyledCode, {
	      className: this.props.className,
	      styles: styles,
	      dangerouslySetInnerHTML: this.createMarkup()
	    });
	  };
	
	  return Code;
	}(_react.Component);
	
	exports.default = Code;
	
	
	Code.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Button = /*#__PURE__*/(0, _reactEmotion2.default)('button')('display:inline-block;appearance:none;background:none;border:none;outline:0;color:inherit;padding:0;cursor:pointer;> svg{height:1.5em;width:1.5em;}');
	
	var _ref = (0, _jsx3.default)('svg', {
	  viewBox: '0 0 24 24'
	}, void 0, (0, _jsx3.default)('path', {
	  d: 'M0 0h24v24H0z',
	  fill: 'none'
	}), (0, _jsx3.default)('path', {
	  d: 'M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z',
	  fill: 'currentColor'
	}));
	
	var FullscreenButton = function FullscreenButton(props) {
	  return _react2.default.createElement(
	    Button,
	    props,
	    _ref
	  );
	};
	
	exports.default = FullscreenButton;

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _extends4 = __webpack_require__(48);
	
	var _extends5 = _interopRequireDefault(_extends4);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledHeader = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (_ref) {
	  var height = _ref.height,
	      styles = _ref.styles;
	  return [styles.context, styles.base, {
	    display: 'block',
	    width: '100%',
	    height: height
	  }];
	});
	
	var dynamicHeaderFitStyles = function dynamicHeaderFitStyles(_ref2) {
	  var scale = _ref2.scale,
	      lineHeight = _ref2.lineHeight,
	      styles = _ref2.styles;
	  return [{
	    fontSize: 16,
	    display: 'block',
	    margin: '0',
	    padding: '0',
	    lineHeight: lineHeight,
	    transform: 'scale(' + scale + ')',
	    transformOrigin: 'center top'
	  }, styles.typeface, styles.user];
	};
	
	var dynamicStyledFitHeaders = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].reduce(function (memo, tag) {
	  var _extends2;
	
	  return (0, _extends5.default)({}, memo, (_extends2 = {}, _extends2[tag] = /*#__PURE__*/ /*#__PURE__*/(0, _reactEmotion2.default)(tag)(dynamicHeaderFitStyles), _extends2));
	}, {});
	
	var dynamicHeaderStyles = function dynamicHeaderStyles(_ref3) {
	  var lineHeight = _ref3.lineHeight,
	      styles = _ref3.styles;
	  return [styles.context, styles.base, { lineHeight: lineHeight }, styles.typeface, styles.user];
	};
	
	var dynamicStyledHeaders = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].reduce(function (memo, tag) {
	  var _extends3;
	
	  return (0, _extends5.default)({}, memo, (_extends3 = {}, _extends3[tag] = /*#__PURE__*/ /*#__PURE__*/(0, _reactEmotion2.default)(tag)(dynamicHeaderStyles), _extends3));
	}, {});
	
	var Heading = function (_Component) {
	  (0, _inherits3.default)(Heading, _Component);
	
	  function Heading() {
	    (0, _classCallCheck3.default)(this, Heading);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this));
	
	    _this.resize = _this.resize.bind(_this);
	    _this.state = {
	      scale: 1,
	      height: 16
	    };
	    return _this;
	  }
	
	  Heading.prototype.componentDidMount = function componentDidMount() {
	    this.resize();
	    window.addEventListener('load', this.resize);
	    window.addEventListener('resize', this.resize);
	  };
	
	  Heading.prototype.componentWillReceiveProps = function componentWillReceiveProps() {
	    this.resize();
	  };
	
	  Heading.prototype.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('load', this.resize);
	    window.removeEventListener('resize', this.resize);
	  };
	
	  Heading.prototype.resize = function resize() {
	    if (this.props.fit) {
	      var text = this.textRef;
	      var container = this.containerRef;
	      text.style.display = 'inline-block';
	      var scale = container.offsetWidth / text.offsetWidth;
	      var height = text.offsetHeight * scale || 0;
	      text.style.display = 'block';
	      this.setState({
	        scale: scale,
	        height: height
	      });
	    }
	  };
	
	  Heading.prototype.render = function render() {
	    var _this2 = this;
	
	    var _props = this.props,
	        size = _props.size,
	        lineHeight = _props.lineHeight,
	        fit = _props.fit,
	        style = _props.style,
	        children = _props.children;
	
	    var Tag = 'h' + size;
	    var typefaceStyle = this.context.typeface || {};
	
	    if (fit) {
	      return (0, _jsx3.default)(StyledHeader, {
	        className: this.props.className,
	        innerRef: function innerRef(c) {
	          _this2.containerRef = c;
	        },
	        height: this.state.height,
	        styles: {
	          context: this.context.styles.components.heading['h' + size],
	          base: _base.getStyles.call(this)
	        }
	      }, void 0, (0, _react.createElement)(dynamicStyledFitHeaders[Tag], {
	        innerRef: function innerRef(t) {
	          _this2.textRef = t;
	        },
	        scale: this.state.scale,
	        lineHeight: lineHeight,
	        styles: {
	          user: style,
	          typeface: typefaceStyle
	        }
	      }, children));
	    }
	
	    return (0, _react.createElement)(dynamicStyledHeaders[Tag], {
	      className: this.props.className,
	      lineHeight: lineHeight,
	      styles: {
	        context: this.context.styles.components.heading['h' + size],
	        base: _base.getStyles.call(this),
	        user: style,
	        typeface: typefaceStyle
	      }
	    }, children);
	  };
	
	  return Heading;
	}(_react.Component);
	
	exports.default = Heading;
	
	
	Heading.defaultProps = {
	  size: 1,
	  lineHeight: 1
	};
	
	Heading.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledImg = /*#__PURE__*/(0, _reactEmotion2.default)('img')(function (_ref) {
	  var styles = _ref.styles;
	  return [styles.context, styles.base, {
	    maxWidth: '100%',
	    maxHeight: '100%'
	  }, styles.props, styles.user];
	});
	
	var Image = function (_Component) {
	  (0, _inherits3.default)(Image, _Component);
	
	  function Image() {
	    (0, _classCallCheck3.default)(this, Image);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Image.prototype.render = function render() {
	    var styles = {
	      context: this.context.styles.components.image,
	      base: _base.getStyles.call(this),
	      props: {
	        width: this.props.width,
	        height: this.props.height,
	        display: this.props.display
	      },
	      user: this.props.style
	    };
	    return (0, _jsx3.default)(StyledImg, {
	      className: this.props.className,
	      src: this.props.src,
	      alt: this.props.alt,
	      styles: styles
	    });
	  };
	
	  return Image;
	}(_react.Component);
	
	exports.default = Image;
	
	
	Image.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledLink = /*#__PURE__*/(0, _reactEmotion2.default)('a')(function (props) {
	  return props.styles;
	});
	
	var Link = function (_Component) {
	  (0, _inherits3.default)(Link, _Component);
	
	  function Link() {
	    (0, _classCallCheck3.default)(this, Link);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Link.prototype.render = function render() {
	    var typefaceStyle = this.context.typeface || {};
	    return (0, _jsx3.default)(StyledLink, {
	      className: this.props.className,
	      href: this.props.href,
	      target: this.props.target,
	      styles: [this.context.styles.components.link, _base.getStyles.call(this), typefaceStyle, this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return Link;
	}(_react.Component);
	
	exports.default = Link;
	
	
	Link.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledListItem = /*#__PURE__*/(0, _reactEmotion2.default)('li')(function (props) {
	  return props.styles;
	});
	
	var ListItem = function (_Component) {
	  (0, _inherits3.default)(ListItem, _Component);
	
	  function ListItem() {
	    (0, _classCallCheck3.default)(this, ListItem);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  ListItem.prototype.render = function render() {
	    var typefaceStyle = this.context.typeface || {};
	    return (0, _jsx3.default)(StyledListItem, {
	      className: this.props.className,
	      styles: [this.context.styles.components.listItem, _base.getStyles.call(this), typefaceStyle, this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return ListItem;
	}(_react.Component);
	
	exports.default = ListItem;
	
	
	ListItem.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledOrderedList = /*#__PURE__*/(0, _reactEmotion2.default)('ol')(function (props) {
	  return props.styles;
	});
	var StyledList = /*#__PURE__*/(0, _reactEmotion2.default)('ul')(function (props) {
	  return props.styles;
	});
	
	var List = function (_Component) {
	  (0, _inherits3.default)(List, _Component);
	
	  function List() {
	    (0, _classCallCheck3.default)(this, List);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  List.prototype.render = function render() {
	    return this.props.ordered ? (0, _jsx3.default)(StyledOrderedList, {
	      reversed: this.props.reversed,
	      start: this.props.start,
	      type: this.props.type,
	      className: this.props.className,
	      styles: [this.context.styles.components.list, _base.getStyles.call(this), this.props.style]
	    }, void 0, this.props.children) : (0, _jsx3.default)(StyledList, {
	      className: this.props.className,
	      styles: [this.context.styles.components.list, _base.getStyles.call(this), this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return List;
	}(_react.Component);
	
	exports.default = List;
	
	
	List.defaultProps = {
	  ordered: false,
	  reversed: false,
	  start: 1,
	  type: '1'
	};
	
	List.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _objectWithoutProperties2 = __webpack_require__(157);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _magicWrapper = __webpack_require__(1070);
	
	var _magicWrapper2 = _interopRequireDefault(_magicWrapper);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Magic = function (_Component) {
	  (0, _inherits3.default)(Magic, _Component);
	
	  function Magic() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Magic);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.subscription = null, _this.routerCallback = function (callback) {
	      setTimeout(function () {
	        return callback();
	      }, 490);
	    }, _this.exitSubscriber = function (subscription) {
	      _this.exitSubscription = subscription;
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Magic.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	    return this.props.magicIndex !== nextProps.magicIndex;
	  };
	
	  Magic.prototype.componentWillLeave = function componentWillLeave(callback) {
	    this.exitSubscription();
	    this.routerCallback(callback);
	  };
	
	  Magic.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        transition = _props.transition,
	        transitionDuration = _props.transitionDuration,
	        props = (0, _objectWithoutProperties3.default)(_props, ['children', 'transition', 'transitionDuration']); // eslint-disable-line no-unused-vars
	
	    return (0, _jsx3.default)(_magicWrapper2.default, {
	      magicIndex: this.props.magicIndex,
	      exitSubscription: this.exitSubscriber,
	      presenter: props.presenter
	    }, void 0, (0, _react.cloneElement)(this.props.children[this.props.magicIndex], props) || null);
	  };
	
	  return Magic;
	}(_react.Component);
	
	exports.default = Magic;
	
	
	Magic.defaultProps = {
	  magicIndex: 0
	};

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _marksy = __webpack_require__(802);
	
	var _marksy2 = _interopRequireDefault(_marksy);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _blockQuote = __webpack_require__(454);
	
	var _blockQuote2 = _interopRequireDefault(_blockQuote);
	
	var _codePane = __webpack_require__(455);
	
	var _codePane2 = _interopRequireDefault(_codePane);
	
	var _code = __webpack_require__(456);
	
	var _code2 = _interopRequireDefault(_code);
	
	var _heading = __webpack_require__(458);
	
	var _heading2 = _interopRequireDefault(_heading);
	
	var _image = __webpack_require__(459);
	
	var _image2 = _interopRequireDefault(_image);
	
	var _link = __webpack_require__(460);
	
	var _link2 = _interopRequireDefault(_link);
	
	var _list = __webpack_require__(462);
	
	var _list2 = _interopRequireDefault(_list);
	
	var _listItem = __webpack_require__(461);
	
	var _listItem2 = _interopRequireDefault(_listItem);
	
	var _quote = __webpack_require__(465);
	
	var _quote2 = _interopRequireDefault(_quote);
	
	var _s = __webpack_require__(466);
	
	var _s2 = _interopRequireDefault(_s);
	
	var _text = __webpack_require__(474);
	
	var _text2 = _interopRequireDefault(_text);
	
	var _table = __webpack_require__(473);
	
	var _table2 = _interopRequireDefault(_table);
	
	var _tableHeader = __webpack_require__(470);
	
	var _tableHeader2 = _interopRequireDefault(_tableHeader);
	
	var _tableRow = __webpack_require__(472);
	
	var _tableRow2 = _interopRequireDefault(_tableRow);
	
	var _tableHeaderItem = __webpack_require__(469);
	
	var _tableHeaderItem2 = _interopRequireDefault(_tableHeaderItem);
	
	var _tableBody = __webpack_require__(468);
	
	var _tableBody2 = _interopRequireDefault(_tableBody);
	
	var _tableItem = __webpack_require__(471);
	
	var _tableItem2 = _interopRequireDefault(_tableItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Container = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	  return props.styles;
	});
	
	var _Heading = function _Heading(size) {
	  var component = function component(_ref) {
	    var children = _ref.children;
	    return (0, _jsx3.default)(_heading2.default, {
	      size: size
	    }, void 0, children);
	  };
	
	  return component;
	};
	
	var _S = function _S(type) {
	  var component = function component(_ref2) {
	    var children = _ref2.children;
	    return (0, _jsx3.default)(_s2.default, {
	      type: type
	    }, void 0, children);
	  };
	
	  return component;
	};
	
	var _CombineBlockQuote = function _CombineBlockQuote(_ref3) {
	  var children = _ref3.children;
	  return (0, _jsx3.default)(_blockQuote2.default, {}, void 0, (0, _jsx3.default)(_quote2.default, {}, void 0, children));
	};
	
	
	var compile = (0, _marksy2.default)({
	  createElement: _react.createElement,
	  elements: {
	    a: _link2.default,
	    blockquote: _CombineBlockQuote,
	    code: _codePane2.default,
	    del: _S('strikethrough'),
	    em: _S('italic'),
	    h1: _Heading(1),
	    h2: _Heading(2),
	    h3: _Heading(3),
	    h4: _Heading(4),
	    h5: _Heading(5),
	    h6: _Heading(6),
	    img: _image2.default,
	    codespan: _code2.default,
	    li: _listItem2.default,
	    p: _text2.default,
	    strong: _S('bold'),
	    ul: _list2.default,
	    table: _table2.default,
	    thead: _tableHeader2.default,
	    th: _tableHeaderItem2.default,
	    tbody: _tableBody2.default,
	    tr: _tableRow2.default,
	    td: _tableItem2.default
	  }
	});
	
	var Markdown = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Markdown, _Component);
	
	  function Markdown() {
	    (0, _classCallCheck3.default)(this, Markdown);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Markdown.prototype.render = function render() {
	    var _props = this.props,
	        style = _props.style,
	        children = _props.children,
	        source = _props.source;
	
	    var styleComputed = [_base.getStyles.call(this), style];
	
	    if (source) {
	      return (0, _jsx3.default)(Container, {
	        styles: styleComputed
	      }, void 0, compile(source).tree);
	    }
	    return (0, _jsx3.default)(Container, {
	      styles: styleComputed
	    }, void 0, compile(children).tree);
	  };
	
	  return Markdown;
	}(_react.Component), _class.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	}, _class.defaultProps = {
	  style: {}
	}, _temp);
	exports.default = Markdown;

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledQuote = /*#__PURE__*/(0, _reactEmotion2.default)('span')(function (props) {
	  return props.styles;
	});
	
	var Quote = function (_Component) {
	  (0, _inherits3.default)(Quote, _Component);
	
	  function Quote() {
	    (0, _classCallCheck3.default)(this, Quote);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Quote.prototype.render = function render() {
	    var typefaceStyle = this.context.typeface || {};
	    return (0, _jsx3.default)(StyledQuote, {
	      className: this.props.className,
	      styles: [this.context.styles.components.quote, _base.getStyles.call(this), typefaceStyle, this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return Quote;
	}(_react.Component);
	
	exports.default = Quote;
	
	
	Quote.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var textDecoration = function textDecoration(type) {
	  if (type.indexOf('strikethrough') !== -1) {
	    return 'line-through';
	  } else if (type.indexOf('underline') !== -1) {
	    return 'underline';
	  }
	  return 'none';
	};
	
	var StyledS = /*#__PURE__*/(0, _reactEmotion2.default)('span')(function (_ref) {
	  var type = _ref.type,
	      styles = _ref.styles;
	  return [{
	    textDecoration: textDecoration(type),
	    fontWeight: type.indexOf('bold') !== -1 ? 'bold' : 'normal',
	    fontStyle: type.indexOf('italic') !== -1 ? 'italic' : 'normal'
	  }, styles.context, styles.base, styles.user];
	});
	
	var S = function (_Component) {
	  (0, _inherits3.default)(S, _Component);
	
	  function S() {
	    (0, _classCallCheck3.default)(this, S);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  S.prototype.render = function render() {
	    var _props = this.props,
	        type = _props.type,
	        style = _props.style,
	        children = _props.children;
	
	    return (0, _jsx3.default)(StyledS, {
	      className: this.props.className,
	      type: type,
	      styles: {
	        context: this.context.styles.components.s[type],
	        base: _base.getStyles.call(this),
	        user: style
	      }
	    }, void 0, children);
	  };
	
	  return S;
	}(_react.Component);
	
	exports.default = S;
	
	
	S.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isUndefined = __webpack_require__(213);
	
	var _isUndefined2 = _interopRequireDefault(_isUndefined);
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _base = __webpack_require__(16);
	
	var _actions = __webpack_require__(245);
	
	var _stepCounter = __webpack_require__(1095);
	
	var _stepCounter2 = _interopRequireDefault(_stepCounter);
	
	var _slideComponents = __webpack_require__(1078);
	
	var _victoryCore = __webpack_require__(491);
	
	var _findIndex = __webpack_require__(208);
	
	var _findIndex2 = _interopRequireDefault(_findIndex);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* eslint-disable no-invalid-this, max-statements */
	var Slide = function (_React$PureComponent) {
	  (0, _inherits3.default)(Slide, _React$PureComponent);
	
	  function Slide() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Slide);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.state = {
	      contentScale: 1,
	      reverse: false,
	      transitioning: true,
	      z: 1,
	      zoom: 1
	    }, _this.routerCallback = function (callback) {
	      var _this$props = _this.props,
	          transition = _this$props.transition,
	          transitionDuration = _this$props.transitionDuration;
	
	      if (transition.length > 0) {
	        setTimeout(function () {
	          return callback();
	        }, transitionDuration);
	      } else {
	        callback();
	      }
	    }, _this.stepCounter = (0, _stepCounter2.default)(), _this.setZoom = function () {
	      var mobile = window.matchMedia('(max-width: 628px)').matches;
	      var content = _this.contentRef;
	      if (content) {
	        var zoom = _this.props.viewerScaleMode ? 1 : content.offsetWidth / _this.context.contentWidth;
	
	        var contentScaleY = content.parentNode.offsetHeight / _this.context.contentHeight;
	        var contentScaleX = _this.props.viewerScaleMode ? content.parentNode.offsetWidth / _this.context.contentWidth : content.parentNode.offsetWidth / _this.context.contentHeight;
	        var minScale = Math.min(contentScaleY, contentScaleX);
	
	        var contentScale = minScale < 1 ? minScale : 1;
	        if (mobile && _this.props.viewerScaleMode !== true) {
	          contentScale = 1;
	        }
	        _this.setState({
	          zoom: zoom > 0.6 ? zoom : 0.6,
	          contentScale: contentScale
	        });
	      }
	    }, _this.transitionDirection = function () {
	      var _this$props2 = _this.props,
	          slideIndex = _this$props2.slideIndex,
	          lastSlideIndex = _this$props2.lastSlideIndex;
	
	      var routeSlideIndex = _this.getRouteSlideIndex();
	      return _this.state.reverse ? slideIndex > routeSlideIndex : slideIndex > lastSlideIndex;
	    }, _this.getTransitionKeys = function () {
	      var _this2 = _this,
	          _this2$props = _this2.props,
	          _this2$props$transiti = _this2$props.transition,
	          transition = _this2$props$transiti === undefined ? [] : _this2$props$transiti,
	          _this2$props$transiti2 = _this2$props.transitionIn,
	          transitionIn = _this2$props$transiti2 === undefined ? [] : _this2$props$transiti2,
	          _this2$props$transiti3 = _this2$props.transitionOut,
	          transitionOut = _this2$props$transiti3 === undefined ? [] : _this2$props$transiti3,
	          reverse = _this2.state.reverse;
	
	      if (reverse && transitionOut.length > 0) {
	        return transitionOut;
	      } else if (transitionIn.length > 0) {
	        return transitionIn;
	      }
	      return transition;
	    }, _this.getTransitionStyles = function () {
	      var _this$state = _this.state,
	          transitioning = _this$state.transitioning,
	          z = _this$state.z;
	
	      var transition = _this.getTransitionKeys();
	      var styles = { zIndex: z };
	      var transformValue = '';
	
	      if (transition.indexOf('fade') !== -1) {
	        styles = (0, _extends3.default)({}, styles, { opacity: transitioning ? 0 : 1 });
	      }
	
	      if (transition.indexOf('zoom') !== -1) {
	        transformValue += ' scale(' + (transitioning ? 0.1 : 1.0) + ')';
	      }
	
	      if (transition.indexOf('slide') !== -1) {
	        var offset = _this.transitionDirection() ? 100 : -100;
	        transformValue += ' translate3d(' + (transitioning ? offset : 0) + '%, 0, 0)';
	      } else {
	        transformValue += ' translate3d(0px, 0px, 0px)';
	      }
	
	      if (transition.indexOf('spin') !== -1) {
	        var angle = _this.transitionDirection() ? 90 : -90;
	        transformValue += ' rotateY(' + (transitioning ? angle : 0) + 'deg)';
	      }
	
	      var functionStyles = transition.reduce(function (memo, current) {
	        if ((0, _isFunction2.default)(current)) {
	          return (0, _extends3.default)({}, memo, current(transitioning, _this.transitionDirection()));
	        }
	        return memo;
	      }, {});
	
	      return (0, _extends3.default)({}, styles, { transform: transformValue }, functionStyles);
	    }, _this.getRouteSlideIndex = function () {
	      var slideReference = _this.props.slideReference;
	
	      var _this$context$store$g = _this.context.store.getState(),
	          route = _this$context$store$g.route;
	
	      var slide = route.slide;
	
	      var slideIndex = (0, _findIndex2.default)(slideReference, function (reference) {
	        return slide === String(reference.id);
	      });
	      return Math.max(0, slideIndex);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Slide.prototype.getChildContext = function getChildContext() {
	    return {
	      stepCounter: {
	        setFragments: this.stepCounter.setFragments
	      },
	      slideHash: this.props.hash
	    };
	  };
	
	  Slide.prototype.componentDidMount = function componentDidMount() {
	    var _this3 = this;
	
	    this.setZoom();
	    var slide = this.slideRef;
	    var frags = slide.querySelectorAll('.fragment');
	    var currentOrder = 0;
	    if (frags && frags.length && !this.context.overview) {
	      Array.prototype.slice.call(frags, 0).sort(function (lhs, rhs) {
	        return parseInt(lhs.dataset.order, 10) - parseInt(rhs.dataset.order, 10);
	      }).forEach(function (frag) {
	        frag.dataset.fid = currentOrder;
	        if (_this3.props.dispatch) {
	          _this3.props.dispatch((0, _actions.addFragment)({
	            className: frag.className || '',
	            slide: _this3.props.hash,
	            id: _this3.props.slideIndex + '-' + currentOrder,
	            visible: _this3.props.lastSlideIndex > _this3.props.slideIndex
	          }));
	        }
	        currentOrder += 1;
	      });
	    }
	    window.addEventListener('load', this.setZoom);
	    window.addEventListener('resize', this.setZoom);
	
	    if ((0, _isFunction2.default)(this.props.onActive)) {
	      this.props.onActive(this.props.slideIndex);
	    }
	  };
	
	  Slide.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _stepCounter$getSteps = this.stepCounter.getSteps(),
	        steps = _stepCounter$getSteps.steps,
	        slideIndex = _stepCounter$getSteps.slideIndex;
	
	    if (this.props.getAppearStep) {
	      if (slideIndex === this.props.slideIndex) {
	        this.props.getAppearStep(steps);
	      }
	    }
	  };
	
	  Slide.prototype.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('load', this.setZoom);
	    window.removeEventListener('resize', this.setZoom);
	  };
	
	  Slide.prototype.componentWillEnter = function componentWillEnter(callback) {
	    this.setState({ transitioning: false, reverse: false, z: 1 });
	    this.routerCallback(callback);
	  };
	
	  Slide.prototype.componentWillAppear = function componentWillAppear(callback) {
	    this.setState({ transitioning: false, reverse: false, z: 1 });
	    this.routerCallback(callback);
	  };
	
	  Slide.prototype.componentWillLeave = function componentWillLeave(callback) {
	    this.setState({ transitioning: true, reverse: true, z: '' });
	    this.routerCallback(callback);
	  };
	
	  Slide.prototype.render = function render() {
	    var _this4 = this;
	
	    var _props = this.props,
	        presenterStyle = _props.presenterStyle,
	        children = _props.children,
	        transitionDuration = _props.transitionDuration;
	
	
	    if (!this.props.viewerScaleMode) {
	      document.documentElement.style.fontSize = 16 * this.state.zoom + 'px';
	    }
	
	    var contentClass = (0, _isUndefined2.default)(this.props.className) ? '' : this.props.className;
	
	    return (0, _jsx3.default)(_victoryCore.VictoryAnimation, {
	      data: this.getTransitionStyles(),
	      duration: transitionDuration,
	      easing: 'quadInOut'
	    }, void 0, function (animatedStyles) {
	      return (0, _jsx3.default)(_slideComponents.SlideContainer, {
	        className: 'spectacle-slide',
	        innerRef: function innerRef(s) {
	          _this4.slideRef = s;
	        },
	        exportMode: _this4.props.export,
	        printMode: _this4.props.print,
	        background: _this4.context.styles.global.body.background,
	        styles: {
	          base: _base.getStyles.call(_this4),
	          presenter: presenterStyle
	        },
	        style: (0, _extends3.default)({}, animatedStyles)
	      }, void 0, (0, _jsx3.default)(_slideComponents.SlideContentWrapper, {
	        align: _this4.props.align,
	        overviewMode: _this4.context.overview
	      }, void 0, (0, _jsx3.default)(_slideComponents.SlideContent, {
	        innerRef: function innerRef(c) {
	          _this4.contentRef = c;
	        },
	        className: contentClass + ' spectacle-content',
	        overviewMode: _this4.context.overview,
	        width: _this4.context.contentWidth,
	        height: _this4.context.contentHeight,
	        scale: _this4.state.contentScale,
	        zoom: _this4.state.zoom,
	        margin: _this4.props.margin,
	        styles: { context: _this4.context.styles.components.content }
	      }, void 0, children)));
	    });
	  };
	
	  return Slide;
	}(_react2.default.PureComponent);
	
	Slide.defaultProps = {
	  align: 'center center',
	  presenterStyle: {},
	  style: {},
	  viewerScaleMode: false
	};
	
	Slide.contextTypes = {
	  styles: _propTypes2.default.object,
	  contentWidth: _propTypes2.default.number,
	  contentHeight: _propTypes2.default.number,
	  export: _propTypes2.default.bool,
	  print: _propTypes2.default.object,
	  overview: _propTypes2.default.bool,
	  store: _propTypes2.default.object
	};
	
	Slide.childContextTypes = {
	  slideHash: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  stepCounter: _propTypes2.default.shape({
	    setFragments: _propTypes2.default.func
	  })
	};
	
	exports.default = Slide;

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	exports.default = TableBody;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function TableBody(_ref) {
	  var children = _ref.children;
	
	  return (0, _jsx3.default)('tbody', {}, void 0, children);
	}
	
	TableBody.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledTableHeaderItem = /*#__PURE__*/(0, _reactEmotion2.default)('td')(function (props) {
	  return props.styles;
	});
	
	var TableHeaderItem = function (_Component) {
	  (0, _inherits3.default)(TableHeaderItem, _Component);
	
	  function TableHeaderItem() {
	    (0, _classCallCheck3.default)(this, TableHeaderItem);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  TableHeaderItem.prototype.render = function render() {
	    var typefaceStyle = this.context.typeface || {};
	    return (0, _jsx3.default)(StyledTableHeaderItem, {
	      className: this.props.className,
	      style: [this.context.styles.components.tableHeaderItem, _base.getStyles.call(this), typefaceStyle, this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return TableHeaderItem;
	}(_react.Component);
	
	exports.default = TableHeaderItem;
	
	
	TableHeaderItem.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	exports.default = TableHeader;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function TableHeader(_ref) {
	  var children = _ref.children;
	
	  return (0, _jsx3.default)('thead', {}, void 0, children);
	}
	
	TableHeader.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledTableItem = /*#__PURE__*/(0, _reactEmotion2.default)('td')(function (props) {
	  return props.styles;
	});
	
	var TableItem = function (_Component) {
	  (0, _inherits3.default)(TableItem, _Component);
	
	  function TableItem() {
	    (0, _classCallCheck3.default)(this, TableItem);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  TableItem.prototype.render = function render() {
	    var typefaceStyle = this.context.typeface || {};
	    return (0, _jsx3.default)(StyledTableItem, {
	      className: this.props.className,
	      style: [this.context.styles.components.tableItem, _base.getStyles.call(this), typefaceStyle, this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return TableItem;
	}(_react.Component);
	
	exports.default = TableItem;
	
	
	TableItem.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledTableRow = /*#__PURE__*/(0, _reactEmotion2.default)('tr')(function (props) {
	  return props.styles;
	});
	
	var TableRow = function (_Component) {
	  (0, _inherits3.default)(TableRow, _Component);
	
	  function TableRow() {
	    (0, _classCallCheck3.default)(this, TableRow);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  TableRow.prototype.render = function render() {
	    return (0, _jsx3.default)(StyledTableRow, {
	      className: this.props.className,
	      style: [this.context.styles.components.tableRow, _base.getStyles.call(this), this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return TableRow;
	}(_react.Component);
	
	exports.default = TableRow;
	
	
	TableRow.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledTable = /*#__PURE__*/(0, _reactEmotion2.default)('table')(function (props) {
	  return props.styles;
	});
	
	var Table = function (_Component) {
	  (0, _inherits3.default)(Table, _Component);
	
	  function Table() {
	    (0, _classCallCheck3.default)(this, Table);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Table.prototype.render = function render() {
	    return (0, _jsx3.default)(StyledTable, {
	      className: this.props.className,
	      styles: [this.context.styles.components.table, _base.getStyles.call(this), this.props.style]
	    }, void 0, this.props.children);
	  };
	
	  return Table;
	}(_react.Component);
	
	exports.default = Table;
	
	
	Table.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FitText = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (_ref) {
	  var height = _ref.height,
	      styles = _ref.styles;
	  return [styles.context, styles.base, {
	    display: 'block',
	    width: '100%',
	    height: height
	  }];
	});
	
	var FitTextContent = /*#__PURE__*/(0, _reactEmotion2.default)('span')(function (_ref2) {
	  var lineHeight = _ref2.lineHeight,
	      scale = _ref2.scale,
	      styles = _ref2.styles;
	  return [{
	    fontSize: 16,
	    display: 'block',
	    margin: '0',
	    padding: '0',
	    lineHeight: lineHeight,
	    transform: 'scale(' + scale + ')',
	    transformOrigin: 'center top'
	  }, styles.typeface, styles.user];
	});
	
	var UnfitText = /*#__PURE__*/(0, _reactEmotion2.default)('p')(function (_ref3) {
	  var lineHeight = _ref3.lineHeight,
	      styles = _ref3.styles;
	  return [styles.context, styles.base, { lineHeight: lineHeight }, styles.typeface, styles.user];
	});
	
	var Text = function (_Component) {
	  (0, _inherits3.default)(Text, _Component);
	
	  function Text() {
	    (0, _classCallCheck3.default)(this, Text);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this));
	
	    _this.resize = _this.resize.bind(_this);
	    _this.state = {
	      scale: 1,
	      height: 16
	    };
	    return _this;
	  }
	
	  Text.prototype.componentDidMount = function componentDidMount() {
	    this.resize();
	    window.addEventListener('load', this.resize);
	    window.addEventListener('resize', this.resize);
	  };
	
	  Text.prototype.componentWillReceiveProps = function componentWillReceiveProps() {
	    this.resize();
	  };
	
	  Text.prototype.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('load', this.resize);
	    window.removeEventListener('resize', this.resize);
	  };
	
	  Text.prototype.resize = function resize() {
	    if (this.props.fit) {
	      var text = this.textRef;
	      var container = this.containerRef;
	      text.style.display = 'inline-block';
	      var scale = container.offsetWidth / text.offsetWidth;
	      var height = text.offsetHeight * scale || 0;
	      text.style.display = 'block';
	      this.setState({
	        scale: scale,
	        height: height
	      });
	    }
	  };
	
	  Text.prototype.render = function render() {
	    var _this2 = this;
	
	    var _props = this.props,
	        lineHeight = _props.lineHeight,
	        fit = _props.fit,
	        style = _props.style,
	        children = _props.children;
	
	    var typefaceStyle = this.context.typeface || {};
	    return fit ? (0, _jsx3.default)(FitText, {
	      className: this.props.className,
	      innerRef: function innerRef(c) {
	        _this2.containerRef = c;
	      },
	      height: this.state.height,
	      styles: {
	        context: this.context.styles.components.text,
	        base: _base.getStyles.call(this)
	      }
	    }, void 0, (0, _jsx3.default)(FitTextContent, {
	      innerRef: function innerRef(t) {
	        _this2.textRef = t;
	      },
	      lineHeight: lineHeight,
	      scale: this.state.scale,
	      styles: { user: style, typeface: typefaceStyle }
	    }, void 0, children)) : (0, _jsx3.default)(UnfitText, {
	      className: this.props.className,
	      styles: {
	        context: this.context.styles.components.text,
	        base: _base.getStyles.call(this),
	        typeface: typefaceStyle,
	        user: style
	      }
	    }, void 0, children);
	  };
	
	  return Text;
	}(_react.Component);
	
	exports.default = Text;
	
	
	Text.defaultProps = {
	  lineHeight: 1
	};
	
	Text.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactTypography = __webpack_require__(1029);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Typeface = function (_Component) {
	  (0, _inherits3.default)(Typeface, _Component);
	
	  function Typeface() {
	    (0, _classCallCheck3.default)(this, Typeface);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Typeface.prototype.getChildContext = function getChildContext() {
	    return {
	      typeface: {
	        fontFamily: this.props.googleFont || this.props.font || '',
	        fontWeight: this.props.weight,
	        fontStyle: this.props.italic ? 'italic' : 'normal'
	      }
	    };
	  };
	
	  Typeface.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        googleFont = _props.googleFont,
	        _props$weight = _props.weight,
	        weight = _props$weight === undefined ? 400 : _props$weight,
	        _props$italic = _props.italic,
	        italic = _props$italic === undefined ? false : _props$italic,
	        styles = _props.styles;
	
	    if (typeof googleFont !== 'undefined' && googleFont.length > 0) {
	      var styleSuffix = italic ? 'i' : '';
	      var config = {
	        title: '' + googleFont,
	        options: {
	          googleFonts: [{
	            name: googleFont,
	            styles: styles || ['' + weight + styleSuffix]
	          }]
	        }
	      };
	      return (0, _jsx3.default)('div', {}, void 0, (0, _jsx3.default)(_reactTypography.GoogleFont, {
	        typography: config
	      }), children);
	    } else {
	      return (0, _jsx3.default)('div', {}, void 0, children);
	    }
	  };
	
	  return Typeface;
	}(_react.Component);
	
	Typeface.childContextTypes = {
	  typeface: _propTypes2.default.object
	};
	
	exports.default = Typeface;

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactEmotion = __webpack_require__(8);
	
	/*
	Name: Duotone Dark
	Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)
	Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)
	Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)
	
	Spectacle NOTE: This syntax theme was modified to work with react-live and emotion
	*/
	
	exports.default = /*#__PURE__*/(0, _reactEmotion.css)('background:#2a2734;color:#9a86fd;& .token.comment,& .token.prolog,& .token.doctype,& .token.cdata{color:#6c6783;}& .token.punctuation{color:#6c6783;}& .token.namespace{opacity:.7;}& .token.tag,& .token.operator,& .token.number{color:#e09142;}& .token.property,& .token.function{color:#9a86fd;}& .token.tag-id,& .token.selector,& .token.atrule-id{color:#eeebff;}& .token.attr-name{color:#c4b9fe;}& .token.boolean,& .token.string,& .token.entity,& .token.url,& .language-css .token.string,& .language-scss .token.string,& .style .token.string,& .token.attr-value,& .token.keyword,& .token.control,& .token.directive,& .token.unit,& .token.statement,& .token.regex,& .token.atrule{color:#ffcc99;}& .token.placeholder,& .token.variable{color:#ffcc99;}& .token.deleted{text-decoration:line-through;}& .token.inserted{border-bottom:1px dotted #eeebff;text-decoration:none;}& .token.italic{font-style:italic;}& .token.important,& .token.bold{font-weight:bold;}& .token.important{color:#c4b9fe;}& .token.entity{cursor:help;}');

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactEmotion = __webpack_require__(8);
	
	/*
	Name: Duotone Light
	Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)
	Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-morning-light.css)
	Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)
	
	Spectacle NOTE: This syntax theme was modified to work with react-live and emotion
	*/
	
	exports.default = /*#__PURE__*/(0, _reactEmotion.css)('background:#faf8f5;color:#728fcb;& .token.comment,& .token.prolog,& .token.doctype,& .token.cdata{color:#b6ad9a;}& .token.punctuation{color:#b6ad9a;}& .token.namespace{opacity:.7;}& .token.tag,& .token.operator,& .token.number{color:#063289;}& .token.property,& .token.function{color:#b29762;}& .token.tag-id,& .token.selector,& .token.atrule-id{color:#2d2006;}& .token.attr-name{color:#896724;}& .token.boolean,& .token.string,& .token.entity,& .token.url,& .style .token.string,& .token.attr-value,& .token.keyword,& .token.control,& .token.directive,& .token.unit,& .token.statement,& .token.regex,& .token.atrule{color:#728fcb;}& .token.placeholder,& .token.variable{color:#93abdc;}& .token.deleted{text-decoration:line-through;}& .token.inserted{border-bottom:1px dotted #2d2006;text-decoration:none;}& .token.italic{font-style:italic;}& .token.important,& .token.bold{font-weight:bold;}& .token.important{color:#896724;}& .token.entity{cursor:help;}');

/***/ }),
/* 478 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var requestFullscreen = exports.requestFullscreen = function requestFullscreen(element) {
	  var request = element.requestFullscreen || element.webkitRequestFullscreen || element.mozRequestFullScreen || element.mozRequestFullScreen;
	
	  if (typeof request === 'function') {
	    request.call(element);
	  }
	};
	
	var exitFullscreen = exports.exitFullscreen = function exitFullscreen() {
	  var exit = document.exitFullscreen || document.msExitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;
	
	  if (typeof exit === 'function') {
	    exit.call(document);
	  }
	};
	
	var getFullscreenElement = exports.getFullscreenElement = function getFullscreenElement() {
	  return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;
	};

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var Buffer = __webpack_require__(41).Buffer;
	
	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }
	
	
	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}
	
	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }
	
	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};
	
	
	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;
	
	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;
	
	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }
	
	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);
	
	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
	
	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;
	
	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }
	
	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);
	
	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }
	
	  charStr += buffer.toString(this.encoding, 0, end);
	
	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }
	
	  // or just emit the charStr
	  return charStr;
	};
	
	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;
	
	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];
	
	    // See http://en.wikipedia.org/wiki/UTF-8#Description
	
	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }
	
	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }
	
	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};
	
	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);
	
	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }
	
	  return res;
	};
	
	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}
	
	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}
	
	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {// Copyright (c) 2011, Chris Umbel
	
	exports.Vector = __webpack_require__(107);
	global.$V = exports.Vector.create;
	exports.Matrix = __webpack_require__(154);
	global.$M = exports.Matrix.create;
	exports.Line = __webpack_require__(248);
	global.$L = exports.Line.create;
	exports.Plane = __webpack_require__(481);
	global.$P = exports.Plane.create;
	exports.Line.Segment = __webpack_require__(1097);
	exports.Sylvester = __webpack_require__(106);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	// Plane class - depends on Vector. Some methods require Matrix and Line.
	var Vector = __webpack_require__(107);
	var Matrix = __webpack_require__(154);
	var Line = __webpack_require__(248);
	
	var Sylvester = __webpack_require__(106);
	
	function Plane() {}
	Plane.prototype = {
	
	  // Returns true iff the plane occupies the same space as the argument
	  eql: function(plane) {
	    return (this.contains(plane.anchor) && this.isParallelTo(plane));
	  },
	
	  // Returns a copy of the plane
	  dup: function() {
	    return Plane.create(this.anchor, this.normal);
	  },
	
	  // Returns the result of translating the plane by the given vector
	  translate: function(vector) {
	    var V = vector.elements || vector;
	    return Plane.create([
	      this.anchor.elements[0] + V[0],
	      this.anchor.elements[1] + V[1],
	      this.anchor.elements[2] + (V[2] || 0)
	    ], this.normal);
	  },
	
	  // Returns true iff the plane is parallel to the argument. Will return true
	  // if the planes are equal, or if you give a line and it lies in the plane.
	  isParallelTo: function(obj) {
	    var theta;
	    if (obj.normal) {
	      // obj is a plane
	      theta = this.normal.angleFrom(obj.normal);
	      return (Math.abs(theta) <= Sylvester.precision || Math.abs(Math.PI - theta) <= Sylvester.precision);
	    } else if (obj.direction) {
	      // obj is a line
	      return this.normal.isPerpendicularTo(obj.direction);
	    }
	    return null;
	  },
	
	  // Returns true iff the receiver is perpendicular to the argument
	  isPerpendicularTo: function(plane) {
	    var theta = this.normal.angleFrom(plane.normal);
	    return (Math.abs(Math.PI/2 - theta) <= Sylvester.precision);
	  },
	
	  // Returns the plane's distance from the given object (point, line or plane)
	  distanceFrom: function(obj) {
	    if (this.intersects(obj) || this.contains(obj)) { return 0; }
	    if (obj.anchor) {
	      // obj is a plane or line
	      var A = this.anchor.elements, B = obj.anchor.elements, N = this.normal.elements;
	      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);
	    } else {
	      // obj is a point
	      var P = obj.elements || obj;
	      var A = this.anchor.elements, N = this.normal.elements;
	      return Math.abs((A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2]);
	    }
	  },
	
	  // Returns true iff the plane contains the given point or line
	  contains: function(obj) {
	    if (obj.normal) { return null; }
	    if (obj.direction) {
	      return (this.contains(obj.anchor) && this.contains(obj.anchor.add(obj.direction)));
	    } else {
	      var P = obj.elements || obj;
	      var A = this.anchor.elements, N = this.normal.elements;
	      var diff = Math.abs(N[0]*(A[0] - P[0]) + N[1]*(A[1] - P[1]) + N[2]*(A[2] - (P[2] || 0)));
	      return (diff <= Sylvester.precision);
	    }
	  },
	
	  // Returns true iff the plane has a unique point/line of intersection with the argument
	  intersects: function(obj) {
	    if (typeof(obj.direction) == 'undefined' && typeof(obj.normal) == 'undefined') { return null; }
	    return !this.isParallelTo(obj);
	  },
	
	  // Returns the unique intersection with the argument, if one exists. The result
	  // will be a vector if a line is supplied, and a line if a plane is supplied.
	  intersectionWith: function(obj) {
	    if (!this.intersects(obj)) { return null; }
	    if (obj.direction) {
	      // obj is a line
	      var A = obj.anchor.elements, D = obj.direction.elements,
	          P = this.anchor.elements, N = this.normal.elements;
	      var multiplier = (N[0]*(P[0]-A[0]) + N[1]*(P[1]-A[1]) + N[2]*(P[2]-A[2])) / (N[0]*D[0] + N[1]*D[1] + N[2]*D[2]);
	      return Vector.create([A[0] + D[0]*multiplier, A[1] + D[1]*multiplier, A[2] + D[2]*multiplier]);
	    } else if (obj.normal) {
	      // obj is a plane
	      var direction = this.normal.cross(obj.normal).toUnitVector();
	      // To find an anchor point, we find one co-ordinate that has a value
	      // of zero somewhere on the intersection, and remember which one we picked
	      var N = this.normal.elements, A = this.anchor.elements,
	          O = obj.normal.elements, B = obj.anchor.elements;
	      var solver = Matrix.Zero(2,2), i = 0;
	      while (solver.isSingular()) {
	        i++;
	        solver = Matrix.create([
	          [ N[i%3], N[(i+1)%3] ],
	          [ O[i%3], O[(i+1)%3]  ]
	        ]);
	      }
	      // Then we solve the simultaneous equations in the remaining dimensions
	      var inverse = solver.inverse().elements;
	      var x = N[0]*A[0] + N[1]*A[1] + N[2]*A[2];
	      var y = O[0]*B[0] + O[1]*B[1] + O[2]*B[2];
	      var intersection = [
	        inverse[0][0] * x + inverse[0][1] * y,
	        inverse[1][0] * x + inverse[1][1] * y
	      ];
	      var anchor = [];
	      for (var j = 1; j <= 3; j++) {
	        // This formula picks the right element from intersection by
	        // cycling depending on which element we set to zero above
	        anchor.push((i == j) ? 0 : intersection[(j + (5 - i)%3)%3]);
	      }
	      return Line.create(anchor, direction);
	    }
	  },
	
	  // Returns the point in the plane closest to the given point
	  pointClosestTo: function(point) {
	    var P = point.elements || point;
	    var A = this.anchor.elements, N = this.normal.elements;
	    var dot = (A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2];
	    return Vector.create([P[0] + N[0] * dot, P[1] + N[1] * dot, (P[2] || 0) + N[2] * dot]);
	  },
	
	  // Returns a copy of the plane, rotated by t radians about the given line
	  // See notes on Line#rotate.
	  rotate: function(t, line) {
	    var R = t.determinant ? t.elements : Matrix.Rotation(t, line.direction).elements;
	    var C = line.pointClosestTo(this.anchor).elements;
	    var A = this.anchor.elements, N = this.normal.elements;
	    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];
	    var x = A1 - C1, y = A2 - C2, z = A3 - C3;
	    return Plane.create([
	      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,
	      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,
	      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z
	    ], [
	      R[0][0] * N[0] + R[0][1] * N[1] + R[0][2] * N[2],
	      R[1][0] * N[0] + R[1][1] * N[1] + R[1][2] * N[2],
	      R[2][0] * N[0] + R[2][1] * N[1] + R[2][2] * N[2]
	    ]);
	  },
	
	  // Returns the reflection of the plane in the given point, line or plane.
	  reflectionIn: function(obj) {
	    if (obj.normal) {
	      // obj is a plane
	      var A = this.anchor.elements, N = this.normal.elements;
	      var A1 = A[0], A2 = A[1], A3 = A[2], N1 = N[0], N2 = N[1], N3 = N[2];
	      var newA = this.anchor.reflectionIn(obj).elements;
	      // Add the plane's normal to its anchor, then mirror that in the other plane
	      var AN1 = A1 + N1, AN2 = A2 + N2, AN3 = A3 + N3;
	      var Q = obj.pointClosestTo([AN1, AN2, AN3]).elements;
	      var newN = [Q[0] + (Q[0] - AN1) - newA[0], Q[1] + (Q[1] - AN2) - newA[1], Q[2] + (Q[2] - AN3) - newA[2]];
	      return Plane.create(newA, newN);
	    } else if (obj.direction) {
	      // obj is a line
	      return this.rotate(Math.PI, obj);
	    } else {
	      // obj is a point
	      var P = obj.elements || obj;
	      return Plane.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.normal);
	    }
	  },
	
	  // Sets the anchor point and normal to the plane. If three arguments are specified,
	  // the normal is calculated by assuming the three points should lie in the same plane.
	  // If only two are sepcified, the second is taken to be the normal. Normal vector is
	  // normalised before storage.
	  setVectors: function(anchor, v1, v2) {
	    anchor = Vector.create(anchor);
	    anchor = anchor.to3D(); if (anchor === null) { return null; }
	    v1 = Vector.create(v1);
	    v1 = v1.to3D(); if (v1 === null) { return null; }
	    if (typeof(v2) == 'undefined') {
	      v2 = null;
	    } else {
	      v2 = Vector.create(v2);
	      v2 = v2.to3D(); if (v2 === null) { return null; }
	    }
	    var A1 = anchor.elements[0], A2 = anchor.elements[1], A3 = anchor.elements[2];
	    var v11 = v1.elements[0], v12 = v1.elements[1], v13 = v1.elements[2];
	    var normal, mod;
	    if (v2 !== null) {
	      var v21 = v2.elements[0], v22 = v2.elements[1], v23 = v2.elements[2];
	      normal = Vector.create([
	        (v12 - A2) * (v23 - A3) - (v13 - A3) * (v22 - A2),
	        (v13 - A3) * (v21 - A1) - (v11 - A1) * (v23 - A3),
	        (v11 - A1) * (v22 - A2) - (v12 - A2) * (v21 - A1)
	      ]);
	      mod = normal.modulus();
	      if (mod === 0) { return null; }
	      normal = Vector.create([normal.elements[0] / mod, normal.elements[1] / mod, normal.elements[2] / mod]);
	    } else {
	      mod = Math.sqrt(v11*v11 + v12*v12 + v13*v13);
	      if (mod === 0) { return null; }
	      normal = Vector.create([v1.elements[0] / mod, v1.elements[1] / mod, v1.elements[2] / mod]);
	    }
	    this.anchor = anchor;
	    this.normal = normal;
	    return this;
	  }
	};
	
	// Constructor function
	Plane.create = function(anchor, v1, v2) {
	  var P = new Plane();
	  return P.setVectors(anchor, v1, v2);
	};
	
	// X-Y-Z planes
	Plane.XY = Plane.create(Vector.Zero(3), Vector.k);
	Plane.YZ = Plane.create(Vector.Zero(3), Vector.i);
	Plane.ZX = Plane.create(Vector.Zero(3), Vector.j);
	Plane.YX = Plane.XY; Plane.ZY = Plane.YZ; Plane.XZ = Plane.ZX;
	
	// Returns the plane containing the given points (can be arrays as
	// well as vectors). If the points are not coplanar, returns null.
	Plane.fromPoints = function(points) {
	  var np = points.length, list = [], i, P, n, N, A, B, C, D, theta, prevN, totalN = Vector.Zero(3);
	  for (i = 0; i < np; i++) {
	    P = Vector.create(points[i]).to3D();
	    if (P === null) { return null; }
	    list.push(P);
	    n = list.length;
	    if (n > 2) {
	      // Compute plane normal for the latest three points
	      A = list[n-1].elements; B = list[n-2].elements; C = list[n-3].elements;
	      N = Vector.create([
	        (A[1] - B[1]) * (C[2] - B[2]) - (A[2] - B[2]) * (C[1] - B[1]),
	        (A[2] - B[2]) * (C[0] - B[0]) - (A[0] - B[0]) * (C[2] - B[2]),
	        (A[0] - B[0]) * (C[1] - B[1]) - (A[1] - B[1]) * (C[0] - B[0])
	      ]).toUnitVector();
	      if (n > 3) {
	        // If the latest normal is not (anti)parallel to the previous one, we've strayed off the plane.
	        // This might be a slightly long-winded way of doing things, but we need the sum of all the normals
	        // to find which way the plane normal should point so that the points form an anticlockwise list.
	        theta = N.angleFrom(prevN);
	        if (theta !== null) {
	          if (!(Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision)) { return null; }
	        }
	      }
	      totalN = totalN.add(N);
	      prevN = N;
	    }
	  }
	  // We need to add in the normals at the start and end points, which the above misses out
	  A = list[1].elements; B = list[0].elements; C = list[n-1].elements; D = list[n-2].elements;
	  totalN = totalN.add(Vector.create([
	    (A[1] - B[1]) * (C[2] - B[2]) - (A[2] - B[2]) * (C[1] - B[1]),
	    (A[2] - B[2]) * (C[0] - B[0]) - (A[0] - B[0]) * (C[2] - B[2]),
	    (A[0] - B[0]) * (C[1] - B[1]) - (A[1] - B[1]) * (C[0] - B[0])
	  ]).toUnitVector()).add(Vector.create([
	    (B[1] - C[1]) * (D[2] - C[2]) - (B[2] - C[2]) * (D[1] - C[1]),
	    (B[2] - C[2]) * (D[0] - C[0]) - (B[0] - C[0]) * (D[2] - C[2]),
	    (B[0] - C[0]) * (D[1] - C[1]) - (B[1] - C[1]) * (D[0] - C[0])
	  ]).toUnitVector());
	  return Plane.create(list[0], totalN);
	};
	
	module.exports = Plane;


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = Function.prototype.apply;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// setimmediate attaches itself to the global object
	__webpack_require__(1055);
	exports.setImmediate = setImmediate;
	exports.clearImmediate = clearImmediate;


/***/ }),
/* 483 */
/***/ (function(module, exports) {

	'use exports'
	
	//make sure properties are in hyphenated form
	
	module.exports = {
	    'animation'    : 1,
	    'column-count' : 1,
	    'columns'      : 1,
	    'font-weight'  : 1,
	    'opacity'      : 1,
	    'order  '      : 1,
	    'z-index'      : 1,
	    'zoom'         : 1,
	    'flex'         : 1,
	    'box-flex'     : 1,
	    'transform'    : 1,
	    'perspective'  : 1,
	    'box-pack'     : 1,
	    'box-align'    : 1,
	    'colspan'      : 1,
	    'rowspan'      : 1
	}

/***/ }),
/* 484 */
/***/ (function(module, exports) {

	'use strict'
	
	var objectHasOwn = Object.prototype.hasOwnProperty
	
	module.exports = function(object, propertyName){
	    return objectHasOwn.call(object, propertyName)
	}

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var toUpperFirst = __webpack_require__(489)
	
	var re         = /^(Moz|Webkit|Khtml|O|ms|Icab)(?=[A-Z])/
	
	var docStyle   = typeof document == 'undefined'?
	                    {}:
	                    document.documentElement.style
	
	var prefixInfo = (function(){
	
	    var prefix = (function(){
	
	            for (var prop in docStyle) {
	                if( re.test(prop) ) {
	                    // test is faster than match, so it's better to perform
	                    // that on the lot and match only when necessary
	                    return  prop.match(re)[0]
	                }
	            }
	
	            // Nothing found so far? Webkit does not enumerate over the CSS properties of the style object.
	            // However (prop in style) returns the correct value, so we'll have to test for
	            // the precence of a specific property
	            if ('WebkitOpacity' in docStyle){
	                return 'Webkit'
	            }
	
	            if ('KhtmlOpacity' in docStyle) {
	                return 'Khtml'
	            }
	
	            return ''
	        })(),
	
	    lower = prefix.toLowerCase()
	
	    return {
	        style       : prefix,
	        css       : '-' + lower + '-',
	        dom       : ({
	            Webkit: 'WebKit',
	            ms    : 'MS',
	            o     : 'WebKit'
	        })[prefix] || toUpperFirst(prefix)
	    }
	
	})()
	
	module.exports = prefixInfo

/***/ }),
/* 486 */
/***/ (function(module, exports) {

	module.exports = {
	    'border-radius'              : 1,
	    'border-top-left-radius'     : 1,
	    'border-top-right-radius'    : 1,
	    'border-bottom-left-radius'  : 1,
	    'border-bottom-right-radius' : 1,
	    'box-shadow'                 : 1,
	    'order'                      : 1,
	    'flex'                       : function(name, prefix){
	        return [prefix + 'box-flex']
	    },
	    'box-flex'                   : 1,
	    'box-align'                  : 1,
	    'animation'                  : 1,
	    'animation-duration'         : 1,
	    'animation-name'             : 1,
	    'transition'                 : 1,
	    'transition-duration'        : 1,
	    'transform'                  : 1,
	    'transform-style'            : 1,
	    'transform-origin'           : 1,
	    'backface-visibility'        : 1,
	    'perspective'                : 1,
	    'box-pack'                   : 1
	}

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var toCamelFn = function(str, letter){
	       return letter ? letter.toUpperCase(): ''
	   }
	
	var hyphenRe = __webpack_require__(1106)
	
	module.exports = function(str){
	   return str?
	          str.replace(hyphenRe, toCamelFn):
	          ''
	}

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var separate = __webpack_require__(1107)
	
	module.exports = function(name){
	   return separate(name).toLowerCase()
	}

/***/ }),
/* 489 */
/***/ (function(module, exports) {

	'use strict'
	
	module.exports = function(value){
	    return value.length?
	                value.charAt(0).toUpperCase() + value.substring(1):
	                value
	}

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var prefixInfo  = __webpack_require__(485)
	var cssPrefixFn = __webpack_require__(1102)
	
	var HYPHENATE   = __webpack_require__(488)
	var CAMELIZE   = __webpack_require__(487)
	var HAS_OWN     = __webpack_require__(484)
	var IS_OBJECT   = __webpack_require__(1104)
	var IS_FUNCTION = __webpack_require__(1103)
	
	var applyPrefix = function(target, property, value, normalizeFn){
	    cssPrefixFn(property).forEach(function(p){
	        target[normalizeFn? normalizeFn(p): p] = value
	    })
	}
	
	var toObject = function(str){
	    str = (str || '').split(';')
	
	    var result = {}
	
	    str.forEach(function(item){
	        var split = item.split(':')
	
	        if (split.length == 2){
	            result[split[0].trim()] = split[1].trim()
	        }
	    })
	
	    return result
	}
	
	var CONFIG = {
	    cssUnitless: __webpack_require__(483)
	}
	
	/**
	 * @ignore
	 * @method toStyleObject
	 *
	 * @param  {Object} styles The object to convert to a style object.
	 * @param  {Object} [config]
	 * @param  {Boolean} [config.addUnits=true] True if you want to add units when numerical values are encountered.
	 * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.
	 * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed
	 * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'
	 * @param  {String}  config.normalizeName A function that normalizes a name to a valid css property name
	 * @param  {String}  config.scope
	 *
	 * @return {Object} The object, normalized with css style names
	 */
	var TO_STYLE_OBJECT = function(styles, config, prepend, result){
	
	    if (typeof styles == 'string'){
	        styles = toObject(styles)
	    }
	
	    config = config || CONFIG
	
	    config.cssUnitless = config.cssUnitless || CONFIG.cssUnitless
	
	    result = result || {}
	
	    var scope    = config.scope || {},
	
	        //configs
	        addUnits = config.addUnits != null?
	                            config.addUnits:
	                            scope && scope.addUnits != null?
	                                scope.addUnits:
	                                true,
	
	        cssUnitless      = (config.cssUnitless != null?
	                                config.cssUnitless:
	                                scope?
	                                    scope.cssUnitless:
	                                    null) || {},
	        cssUnit          = (config.cssUnit || scope? scope.cssUnit: null) || 'px',
	        prefixProperties = (config.prefixProperties || (scope? scope.prefixProperties: null)) || {},
	
	        camelize    = config.camelize,
	        normalizeFn = camelize? CAMELIZE: HYPHENATE
	
	    // Object.keys(cssUnitless).forEach(function(key){
	    //     cssUnitless[normalizeFn(key)] = 1
	    // })
	
	    var processed,
	        styleName,
	
	        propName,
	        propValue,
	        propCssUnit,
	        propType,
	        propIsNumber,
	
	        fnPropValue,
	        prefix
	
	    for (propName in styles) if (HAS_OWN(styles, propName)) {
	
	        propValue = styles[ propName ]
	
	        //the hyphenated style name (css property name)
	        styleName = HYPHENATE(prepend? prepend + propName: propName)
	
	        processed = false
	        prefix    = false
	
	        if (IS_FUNCTION(propValue)) {
	
	            //a function can either return a css value
	            //or an object with { value, prefix, name }
	            fnPropValue = propValue.call(scope || styles, propValue, propName, styleName, styles)
	
	            if (IS_OBJECT(fnPropValue) && fnPropValue.value != null){
	
	                propValue = fnPropValue.value
	                prefix    = fnPropValue.prefix
	                styleName = fnPropValue.name?
	                                HYPHENATE(fnPropValue.name):
	                                styleName
	
	            } else {
	                propValue = fnPropValue
	            }
	        }
	
	        propType     = typeof propValue
	        propIsNumber = propType == 'number' || (propType == 'string' && propValue != '' && propValue * 1 == propValue)
	
	        if (propValue == null || styleName == null || styleName === ''){
	            continue
	        }
	
	        if (propIsNumber || propType == 'string'){
	           processed = true
	        }
	
	        if (!processed && propValue.value != null && propValue.prefix){
	           processed = true
	           prefix    = propValue.prefix
	           propValue = propValue.value
	        }
	
	        // hyphenStyleName = camelize? HYPHENATE(styleName): styleName
	
	        if (processed){
	
	            prefix = prefix || !!prefixProperties[styleName]
	
	            if (propIsNumber){
	                propValue = addUnits && !(styleName in cssUnitless) ?
	                                propValue + cssUnit:
	                                propValue + ''//change it to a string, so that jquery does not append px or other units
	            }
	
	            //special border treatment
	            if (
	                    (
	                     styleName == 'border' ||
	                    (!styleName.indexOf('border')
	                        &&
	                        !~styleName.indexOf('radius')
	                        &&
	                        !~styleName.indexOf('width'))
	                    ) &&
	                    propIsNumber
	                ){
	
	                styleName = styleName + '-width'
	            }
	
	            //special border radius treatment
	            if (!styleName.indexOf('border-radius-')){
	                styleName.replace(/border(-radius)(-(.*))/, function(str, radius, theRest){
	                    var positions = {
	                        '-top'    : ['-top-left',      '-top-right' ],
	                        '-left'   : ['-top-left',    '-bottom-left' ],
	                        '-right'  : ['-top-right',   '-bottom-right'],
	                        '-bottom' : ['-bottom-left', '-bottom-right']
	                    }
	
	                    if (theRest in positions){
	                        styleName = []
	
	                        positions[theRest].forEach(function(pos){
	                            styleName.push('border' + pos + radius)
	                        })
	                    } else {
	                        styleName = 'border'+ theRest + radius
	                    }
	
	                })
	
	                if (Array.isArray(styleName)){
	                    styleName.forEach(function(styleName){
	                        if (prefix){
	                            applyPrefix(result, styleName, propValue, normalizeFn)
	                        } else {
	                            result[normalizeFn(styleName)] = propValue
	                        }
	                    })
	
	                    continue
	                }
	            }
	
	            if (prefix){
	                applyPrefix(result, styleName, propValue, normalizeFn)
	            } else {
	                result[normalizeFn(styleName)] = propValue
	            }
	
	        } else {
	            //the propValue must be an object, so go down the hierarchy
	            TO_STYLE_OBJECT(propValue, config, styleName + '-', result)
	        }
	    }
	
	    return result
	}
	
	module.exports = TO_STYLE_OBJECT

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _victoryAnimation=__webpack_require__(492);Object.defineProperty(exports,"VictoryAnimation",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryAnimation).default;}});var _victoryContainer=__webpack_require__(493);Object.defineProperty(exports,"VictoryContainer",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryContainer).
	default;}});var _victoryLabel=__webpack_require__(249);Object.defineProperty(exports,"VictoryLabel",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryLabel).
	default;}});var _victoryTransition=__webpack_require__(498);Object.defineProperty(exports,"VictoryTransition",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryTransition).
	default;}});var _victorySharedEvents=__webpack_require__(1127);Object.defineProperty(exports,"VictorySharedEvents",{enumerable:true,get:function get(){return _interopRequireDefault(_victorySharedEvents).
	default;}});var _victoryClipContainer=__webpack_require__(1116);Object.defineProperty(exports,"VictoryClipContainer",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryClipContainer).
	default;}});var _victoryTheme=__webpack_require__(251);Object.defineProperty(exports,"VictoryTheme",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryTheme).
	default;}});var _victoryLegend=__webpack_require__(1117);Object.defineProperty(exports,"VictoryLegend",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryLegend).
	default;}});var _victoryTooltip=__webpack_require__(1130);Object.defineProperty(exports,"VictoryTooltip",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryTooltip).
	default;}});var _victoryPortal=__webpack_require__(250);Object.defineProperty(exports,"VictoryPortal",{enumerable:true,get:function get(){return _interopRequireDefault(_victoryPortal).
	default;}});var _portal=__webpack_require__(494);Object.defineProperty(exports,"Portal",{enumerable:true,get:function get(){return _interopRequireDefault(_portal).
	default;}});var _area=__webpack_require__(1118);Object.defineProperty(exports,"Area",{enumerable:true,get:function get(){return _interopRequireDefault(_area).
	default;}});var _bar=__webpack_require__(1119);Object.defineProperty(exports,"Bar",{enumerable:true,get:function get(){return _interopRequireDefault(_bar).
	default;}});var _candle=__webpack_require__(1120);Object.defineProperty(exports,"Candle",{enumerable:true,get:function get(){return _interopRequireDefault(_candle).
	default;}});var _clipPath=__webpack_require__(495);Object.defineProperty(exports,"ClipPath",{enumerable:true,get:function get(){return _interopRequireDefault(_clipPath).
	default;}});var _curve=__webpack_require__(1121);Object.defineProperty(exports,"Curve",{enumerable:true,get:function get(){return _interopRequireDefault(_curve).
	default;}});var _errorBar=__webpack_require__(1122);Object.defineProperty(exports,"ErrorBar",{enumerable:true,get:function get(){return _interopRequireDefault(_errorBar).
	default;}});var _line=__webpack_require__(1123);Object.defineProperty(exports,"Line",{enumerable:true,get:function get(){return _interopRequireDefault(_line).
	default;}});var _point=__webpack_require__(497);Object.defineProperty(exports,"Point",{enumerable:true,get:function get(){return _interopRequireDefault(_point).
	default;}});var _slice=__webpack_require__(1125);Object.defineProperty(exports,"Slice",{enumerable:true,get:function get(){return _interopRequireDefault(_slice).
	default;}});var _voronoi=__webpack_require__(1126);Object.defineProperty(exports,"Voronoi",{enumerable:true,get:function get(){return _interopRequireDefault(_voronoi).
	default;}});var _flyout=__webpack_require__(496);Object.defineProperty(exports,"Flyout",{enumerable:true,get:function get(){return _interopRequireDefault(_flyout).
	default;}});var _addEvents=__webpack_require__(1131);Object.defineProperty(exports,"addEvents",{enumerable:true,get:function get(){return _interopRequireDefault(_addEvents).
	default;}});var _collection=__webpack_require__(17);Object.defineProperty(exports,"Collection",{enumerable:true,get:function get(){return _interopRequireDefault(_collection).
	default;}});var _data=__webpack_require__(252);Object.defineProperty(exports,"Data",{enumerable:true,get:function get(){return _interopRequireDefault(_data).
	default;}});var _defaultTransitions=__webpack_require__(1132);Object.defineProperty(exports,"DefaultTransitions",{enumerable:true,get:function get(){return _interopRequireDefault(_defaultTransitions).
	default;}});var _domain=__webpack_require__(1133);Object.defineProperty(exports,"Domain",{enumerable:true,get:function get(){return _interopRequireDefault(_domain).
	default;}});var _events=__webpack_require__(253);Object.defineProperty(exports,"Events",{enumerable:true,get:function get(){return _interopRequireDefault(_events).
	default;}});var _helpers=__webpack_require__(14);Object.defineProperty(exports,"Helpers",{enumerable:true,get:function get(){return _interopRequireDefault(_helpers).
	default;}});var _log=__webpack_require__(155);Object.defineProperty(exports,"Log",{enumerable:true,get:function get(){return _interopRequireDefault(_log).
	default;}});var _propTypes=__webpack_require__(64);Object.defineProperty(exports,"PropTypes",{enumerable:true,get:function get(){return _interopRequireDefault(_propTypes).
	default;}});var _scale=__webpack_require__(254);Object.defineProperty(exports,"Scale",{enumerable:true,get:function get(){return _interopRequireDefault(_scale).
	default;}});var _selection=__webpack_require__(1134);Object.defineProperty(exports,"Selection",{enumerable:true,get:function get(){return _interopRequireDefault(_selection).
	default;}});var _style=__webpack_require__(255);Object.defineProperty(exports,"Style",{enumerable:true,get:function get(){return _interopRequireDefault(_style).
	default;}});var _textsize=__webpack_require__(256);Object.defineProperty(exports,"TextSize",{enumerable:true,get:function get(){return _interopRequireDefault(_textsize).
	default;}});var _timer=__webpack_require__(108);Object.defineProperty(exports,"Timer",{enumerable:true,get:function get(){return _interopRequireDefault(_timer).
	default;}});var _transitions=__webpack_require__(499);Object.defineProperty(exports,"Transitions",{enumerable:true,get:function get(){return _interopRequireDefault(_transitions).
	default;}});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _d3Ease=__webpack_require__(610);var d3Ease=_interopRequireWildcard(_d3Ease);
	var _util=__webpack_require__(1115);
	var _timer=__webpack_require__(108);var _timer2=_interopRequireDefault(_timer);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	VictoryAnimation=function(_React$Component){_inherits(VictoryAnimation,_React$Component);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function VictoryAnimation(props){_classCallCheck(this,VictoryAnimation);var _this=_possibleConstructorReturn(this,(VictoryAnimation.__proto__||Object.getPrototypeOf(VictoryAnimation)).call(this,
	props));
	
	_this.state={
	data:Array.isArray(_this.props.data)?
	_this.props.data[0]:_this.props.data,
	animationInfo:{
	progress:0,
	animating:false}};
	
	
	_this.interpolator=null;
	_this.queue=Array.isArray(_this.props.data)?
	_this.props.data.slice(1):[];
	
	_this.ease=d3Ease[_this.toNewName(_this.props.easing)];
	
	
	
	
	_this.functionToBeRunEachFrame=_this.functionToBeRunEachFrame.bind(_this);
	_this.getTimer=_this.getTimer.bind(_this);return _this;
	}_createClass(VictoryAnimation,[{key:"componentDidMount",value:function componentDidMount()
	
	{
	
	if(this.queue.length){
	this.traverseQueue();
	}
	}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(
	
	
	nextProps){
	
	this.getTimer().unsubscribe(this.loopID);
	
	
	if(!Array.isArray(nextProps.data)){
	
	
	this.queue.length=0;
	this.queue.push(nextProps.data);
	
	}else{var _queue;
	
	(_queue=this.queue).push.apply(_queue,_toConsumableArray(nextProps.data));
	}
	
	this.traverseQueue();
	}},{key:"componentWillUnmount",value:function componentWillUnmount()
	
	{
	if(this.loopID){
	this.getTimer().unsubscribe(this.loopID);
	}else{
	this.getTimer().stop();
	}
	}},{key:"getTimer",value:function getTimer()
	
	{
	if(this.context.getTimer){
	return this.context.getTimer();
	}
	if(!this.timer){
	this.timer=new _timer2.default();
	}
	return this.timer;
	}},{key:"toNewName",value:function toNewName(
	
	ease){
	
	var capitalize=function capitalize(s){return s&&s[0].toUpperCase()+s.slice(1);};
	return"ease"+capitalize(ease);
	}},{key:"traverseQueue",value:function traverseQueue()
	
	
	{var _this2=this;
	if(this.queue.length){
	
	var data=this.queue[0];
	
	this.interpolator=(0,_util.victoryInterpolator)(this.state.data,data);
	
	if(this.props.delay){
	setTimeout(function(){
	_this2.loopID=_this2.getTimer().subscribe(
	_this2.functionToBeRunEachFrame,_this2.props.duration);
	
	},this.props.delay);
	}else{
	this.loopID=this.getTimer().subscribe(
	this.functionToBeRunEachFrame,this.props.duration);
	
	}
	}else if(this.props.onEnd){
	this.props.onEnd();
	}
	}},{key:"functionToBeRunEachFrame",value:function functionToBeRunEachFrame(
	
	elapsed,duration){
	
	
	
	
	duration=duration!==undefined?duration:this.props.duration;
	var step=duration?elapsed/duration:1;
	if(step>=1){
	this.setState({
	data:this.interpolator(1),
	animationInfo:{
	progress:1,
	animating:false}});
	
	
	if(this.loopID){
	this.getTimer().unsubscribe(this.loopID);
	}
	this.queue.shift();
	this.traverseQueue();
	return;
	}
	
	
	
	
	
	this.setState({
	data:this.interpolator(this.ease(step)),
	animationInfo:{
	progress:step,
	animating:step<1}});
	
	
	}},{key:"render",value:function render()
	
	{
	return this.props.children(this.state.data,this.state.animationInfo);
	}}]);return VictoryAnimation;}(_react2.default.Component);VictoryAnimation.displayName="VictoryAnimation";VictoryAnimation.propTypes={children:_propTypes2.default.func,data:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.array]),delay:_propTypes2.default.number,duration:_propTypes2.default.number,easing:_propTypes2.default.oneOf(["back","backIn","backOut","backInOut","bounce","bounceIn","bounceOut","bounceInOut","circle","circleIn","circleOut","circleInOut","linear","linearIn","linearOut","linearInOut","cubic","cubicIn","cubicOut","cubicInOut","elastic","elasticIn","elasticOut","elasticInOut","exp","expIn","expOut","expInOut","poly","polyIn","polyOut","polyInOut","quad","quadIn","quadOut","quadInOut","sin","sinIn","sinOut","sinInOut"]),onEnd:_propTypes2.default.func};VictoryAnimation.defaultProps={data:{},delay:0,duration:1000,easing:"quadInOut"};VictoryAnimation.contextTypes={getTimer:_propTypes2.default.func};exports.default=VictoryAnimation;

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _omit2=__webpack_require__(215);var _omit3=_interopRequireDefault(_omit2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-container/victory-container.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	
	var _portal=__webpack_require__(494);var _portal2=_interopRequireDefault(_portal);
	var _timer=__webpack_require__(108);var _timer2=_interopRequireDefault(_timer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	VictoryContainer=function(_React$Component){_inherits(VictoryContainer,_React$Component);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function VictoryContainer(props){_classCallCheck(this,VictoryContainer);var _this=_possibleConstructorReturn(this,(VictoryContainer.__proto__||Object.getPrototypeOf(VictoryContainer)).call(this,
	props));
	_this.getTimer=_this.getTimer.bind(_this);return _this;
	}_createClass(VictoryContainer,[{key:"getChildContext",value:function getChildContext()
	
	{
	return{
	portalUpdate:this.portalUpdate,
	portalRegister:this.portalRegister,
	portalDeregister:this.portalDeregister,
	getTimer:this.getTimer};
	
	}},{key:"componentWillMount",value:function componentWillMount()
	
	{var _this2=this;
	this.savePortalRef=function(portal){
	_this2.portalRef=portal;
	return portal;
	};
	this.portalUpdate=function(key,el){return _this2.portalRef.portalUpdate(key,el);};
	this.portalRegister=function(){return _this2.portalRef.portalRegister();};
	this.portalDeregister=function(key){return _this2.portalRef.portalDeregister(key);};
	}},{key:"componentWillUnmount",value:function componentWillUnmount()
	
	{
	if(!this.context.getTimer){
	this.getTimer().stop();
	}
	}},{key:"getTimer",value:function getTimer()
	
	{
	if(this.context.getTimer){
	return this.context.getTimer();
	}
	if(!this.timer){
	this.timer=new _timer2.default();
	}
	return this.timer;
	}},{key:"getChildren",value:function getChildren(
	
	
	props){
	return props.children;
	}},{key:"renderContainer",value:function renderContainer(
	
	
	props,svgProps,style){var
	title=props.title,desc=props.desc,portalComponent=props.portalComponent,className=props.className;
	var children=this.getChildren(props);
	var parentProps=(0,_defaults3.default)({style:style,className:className},svgProps);
	return(
	_react2.default.createElement("svg",_extends({},parentProps,{overflow:"visible",__source:{fileName:_jsxFileName,lineNumber:94}}),
	_react2.default.createElement("svg",_extends({},parentProps,{__source:{fileName:_jsxFileName,lineNumber:95}}),
	children),
	
	title?_react2.default.createElement("title",{id:"title",__source:{fileName:_jsxFileName,lineNumber:98}},title):null,
	desc?_react2.default.createElement("desc",{id:"desc",__source:{fileName:_jsxFileName,lineNumber:99}},desc):null,
	_react2.default.cloneElement(portalComponent,{ref:this.savePortalRef})));
	
	
	}},{key:"render",value:function render()
	
	{var _props=
	this.props,width=_props.width,height=_props.height,responsive=_props.responsive,events=_props.events;
	var style=responsive?this.props.style:(0,_omit3.default)(this.props.style,["height","width"]);
	var svgProps=(0,_assign3.default)(
	{
	width:width,height:height,"aria-labelledby":"title desc",role:"img",
	viewBox:responsive?"0 0 "+width+" "+height:undefined},
	
	events);
	
	return this.renderContainer(this.props,svgProps,style);
	}}]);return VictoryContainer;}(_react2.default.Component);VictoryContainer.displayName="VictoryContainer";VictoryContainer.role="container";VictoryContainer.propTypes={children:_propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node),_propTypes2.default.node]),className:_propTypes2.default.string,desc:_propTypes2.default.string,events:_propTypes2.default.object,height:_propTypes2.default.number,portalComponent:_propTypes2.default.element,responsive:_propTypes2.default.bool,style:_propTypes2.default.object,theme:_propTypes2.default.object,title:_propTypes2.default.string,width:_propTypes2.default.number};VictoryContainer.defaultProps={portalComponent:_react2.default.createElement(_portal2.default,{__source:{fileName:_jsxFileName,lineNumber:28}}),responsive:true};VictoryContainer.contextTypes={getTimer:_propTypes2.default.func};VictoryContainer.childContextTypes={portalUpdate:_propTypes2.default.func,portalRegister:_propTypes2.default.func,portalDeregister:_propTypes2.default.func,getTimer:_propTypes2.default.func};exports.default=VictoryContainer;

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="src/victory-portal/portal.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Portal=function(_React$Component){_inherits(Portal,_React$Component);
	
	
	
	
	
	
	
	
	
	
	function Portal(props){_classCallCheck(this,Portal);var _this=_possibleConstructorReturn(this,(Portal.__proto__||Object.getPrototypeOf(Portal)).call(this,
	props));
	_this.map={};
	_this.index=1;
	_this.portalUpdate=_this.portalUpdate.bind(_this);
	_this.portalRegister=_this.portalRegister.bind(_this);
	_this.portalDeregister=_this.portalDeregister.bind(_this);return _this;
	}_createClass(Portal,[{key:"portalRegister",value:function portalRegister()
	
	{
	return++this.index;
	}},{key:"portalUpdate",value:function portalUpdate(
	
	key,element){
	this.map[key]=element;
	this.forceUpdate();
	}},{key:"portalDeregister",value:function portalDeregister(
	
	key){
	delete this.map[key];
	}},{key:"render",value:function render()
	
	
	{var _this2=this;
	return _react2.default.cloneElement(
	this.props.groupComponent,
	{},
	Object.keys(this.map).map(function(key){
	var el=_this2.map[key];
	return el?_react2.default.cloneElement(el,{key:key}):el;
	}));
	
	}}]);return Portal;}(_react2.default.Component);Portal.displayName="Portal";Portal.propTypes={groupComponent:_propTypes2.default.element};Portal.defaultProps={groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:12}})};exports.default=Portal;

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="src/victory-primitives/clip-path.js";var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	ClipPath=function(_React$Component){_inherits(ClipPath,_React$Component);function ClipPath(){_classCallCheck(this,ClipPath);return _possibleConstructorReturn(this,(ClipPath.__proto__||Object.getPrototypeOf(ClipPath)).apply(this,arguments));}_createClass(ClipPath,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
	_extends(this,this.calculateAttributes(this.props));
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){
	var calculatedAttributes=this.calculateAttributes(nextProps);var _props=
	this.props,className=_props.className,clipId=_props.clipId,clipWidth=_props.clipWidth,translateX=_props.translateX,translateY=_props.translateY;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[clipId,nextProps.clipId],
	[clipWidth,nextProps.clipWidth],
	[translateX,nextProps.translateX],
	[translateY,nextProps.translateY],
	[this.x,calculatedAttributes.x],
	[this.y,calculatedAttributes.y],
	[this.height,calculatedAttributes.height],
	[this.width,calculatedAttributes.width]]))
	{
	_extends(this,calculatedAttributes);
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var _props$clipWidth=
	props.clipWidth,clipWidth=_props$clipWidth===undefined?0:_props$clipWidth,_props$clipHeight=props.clipHeight,clipHeight=_props$clipHeight===undefined?0:_props$clipHeight,_props$translateX=props.translateX,translateX=_props$translateX===undefined?0:_props$translateX,_props$translateY=props.translateY,translateY=_props$translateY===undefined?0:_props$translateY;
	var clipPadding=_helpers2.default.getPadding({padding:props.clipPadding});
	
	return{
	x:translateX-clipPadding.left,
	y:translateY-clipPadding.top,
	width:Math.max(clipWidth+clipPadding.left+clipPadding.right,0),
	height:Math.max(clipHeight+clipPadding.top+clipPadding.bottom,0)};
	
	}},{key:"renderClipPath",value:function renderClipPath(
	
	
	props,id){
	return(
	_react2.default.createElement("defs",{__source:{fileName:_jsxFileName,lineNumber:65}},
	_react2.default.createElement("clipPath",{id:id,__source:{fileName:_jsxFileName,lineNumber:66}},
	_react2.default.createElement("rect",_extends({},props,{__source:{fileName:_jsxFileName,lineNumber:67}})))));
	
	
	
	}},{key:"render",value:function render()
	
	{var _props2=
	this.props,clipId=_props2.clipId,className=_props2.className;
	var clipProps={className:className,x:this.x,y:this.y,width:this.width,height:this.height};
	return this.renderClipPath(clipProps,clipId);
	}}]);return ClipPath;}(_react2.default.Component);ClipPath.propTypes={className:_propTypes2.default.string,clipHeight:_propTypes4.default.nonNegative,clipId:_propTypes2.default.number,clipPadding:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.shape({top:_propTypes2.default.number,bottom:_propTypes2.default.number,left:_propTypes2.default.number,right:_propTypes2.default.number})]),clipWidth:_propTypes4.default.nonNegative,translateX:_propTypes2.default.number,translateY:_propTypes2.default.number};exports.default=ClipPath;

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/flyout.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Flyout=function(_React$Component){_inherits(Flyout,_React$Component);function Flyout(){_classCallCheck(this,Flyout);return _possibleConstructorReturn(this,(Flyout.__proto__||Object.getPrototypeOf(Flyout)).apply(this,arguments));}_createClass(Flyout,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,path=_calculateAttributes.path;
	this.style=style;
	this.path=path;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,path=_calculateAttributes2.path;var _props=
	
	
	
	this.props,className=_props.className,cornerRadius=_props.cornerRadius,datum=_props.datum,dx=_props.dx,dy=_props.dy,height=_props.height,width=_props.width,orientation=_props.orientation,pointerLength=_props.pointerLength,pointerWidth=_props.pointerWidth,x=_props.x,y=_props.y;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[cornerRadius,nextProps.cornerRadius],
	[dx,nextProps.dx],
	[dy,nextProps.dy],
	[x,nextProps.x],
	[y,nextProps.y],
	[height,nextProps.height],
	[width,nextProps.width],
	[orientation,nextProps.orientation],
	[pointerLength,nextProps.pointerLength],
	[pointerWidth,nextProps.pointerWidth],
	[path,this.path],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	this.path=path;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	datum=props.datum,active=props.active,style=props.style;
	return{
	style:_helpers2.default.evaluateStyle(style,datum,active),
	path:this.getFlyoutPath(props)};
	
	}},{key:"getVerticalPath",value:function getVerticalPath(
	
	
	props){var
	pointerLength=props.pointerLength,pointerWidth=props.pointerWidth,cornerRadius=props.cornerRadius,orientation=props.orientation,width=props.width,height=props.height;
	var sign=orientation==="top"?1:-1;
	var x=props.x+(props.dx||0);
	var y=props.y-sign*(props.dy||0);
	var pointerEdge=y-sign*pointerLength;
	var oppositeEdge=y-sign*pointerLength-sign*height;
	var rightEdge=x+width/2;
	var leftEdge=x-width/2;
	var direction=orientation==="top"?"0 0 0":"0 0 1";
	var arc=Math.round(cornerRadius)+" "+Math.round(cornerRadius)+" "+direction;
	return"M "+Math.round(x-pointerWidth/2)+", "+Math.round(pointerEdge)+"\n      L "+
	Math.round(x)+", "+Math.round(y)+"\n      L "+
	Math.round(x+pointerWidth/2)+", "+Math.round(pointerEdge)+"\n      L "+
	Math.round(rightEdge-cornerRadius)+", "+Math.round(pointerEdge)+"\n      A "+
	arc+" "+Math.round(rightEdge)+", "+Math.round(pointerEdge-sign*cornerRadius)+"\n      L "+
	Math.round(rightEdge)+", "+Math.round(oppositeEdge+sign*cornerRadius)+"\n      A "+
	arc+" "+Math.round(rightEdge-cornerRadius)+", "+Math.round(oppositeEdge)+"\n      L "+
	Math.round(leftEdge+cornerRadius)+", "+Math.round(oppositeEdge)+"\n      A "+
	arc+" "+Math.round(leftEdge)+", "+Math.round(oppositeEdge+sign*cornerRadius)+"\n      L "+
	Math.round(leftEdge)+", "+Math.round(pointerEdge-sign*cornerRadius)+"\n      A "+
	arc+" "+Math.round(leftEdge+cornerRadius)+", "+Math.round(pointerEdge)+"\n      z";
	
	}},{key:"getHorizontalPath",value:function getHorizontalPath(
	
	props){var
	pointerLength=props.pointerLength,pointerWidth=props.pointerWidth,cornerRadius=props.cornerRadius,orientation=props.orientation,width=props.width,height=props.height;
	var sign=orientation==="right"?1:-1;
	var x=props.x+sign*(props.dx||0);
	var y=props.y-(props.dy||0);
	var pointerEdge=x+sign*pointerLength;
	var oppositeEdge=x+sign*pointerLength+sign*width;
	var bottomEdge=y+height/2;
	var topEdge=y-height/2;
	var direction=orientation==="right"?"0 0 0":"0 0 1";
	var arc=Math.round(cornerRadius)+" "+Math.round(cornerRadius)+" "+direction;
	return"M "+Math.round(pointerEdge)+", "+Math.round(y-pointerWidth/2)+"\n      L "+
	Math.round(x)+", "+Math.round(y)+"\n      L "+
	Math.round(pointerEdge)+", "+Math.round(y+pointerWidth/2)+"\n      L "+
	Math.round(pointerEdge)+", "+Math.round(bottomEdge-cornerRadius)+"\n      A "+
	arc+" "+Math.round(pointerEdge+sign*cornerRadius)+", "+Math.round(bottomEdge)+"\n      L "+(
	oppositeEdge-sign*cornerRadius)+", "+bottomEdge+"\n      A "+
	arc+" "+Math.round(oppositeEdge)+", "+Math.round(bottomEdge-cornerRadius)+"\n      L "+
	oppositeEdge+", "+(topEdge+cornerRadius)+"\n      A "+
	arc+" "+Math.round(oppositeEdge-sign*cornerRadius)+", "+Math.round(topEdge)+"\n      L "+
	Math.round(pointerEdge+sign*cornerRadius)+", "+Math.round(topEdge)+"\n      A "+
	arc+" "+Math.round(pointerEdge)+", "+Math.round(topEdge+cornerRadius)+"\n      z";
	
	}},{key:"getFlyoutPath",value:function getFlyoutPath(
	
	props){
	var orientation=props.orientation||"top";
	return orientation==="left"||orientation==="right"?
	this.getHorizontalPath(props):this.getVerticalPath(props);
	}},{key:"renderFlyout",value:function renderFlyout(
	
	
	path,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return(
	_react2.default.createElement("path",_extends({
	className:className,
	d:path,
	style:style,
	shapeRendering:shapeRendering||"auto",
	role:role||"presentation"},
	events,{__source:{fileName:_jsxFileName,lineNumber:129}})));
	
	
	}},{key:"render",value:function render()
	
	{
	return this.renderFlyout(this.path,this.style,this.props.events);
	}}]);return Flyout;}(_react2.default.Component);Flyout.propTypes=_extends({},_commonProps2.default,{cornerRadius:_propTypes2.default.number,datum:_propTypes2.default.object,dx:_propTypes2.default.number,dy:_propTypes2.default.number,height:_propTypes2.default.number,orientation:_propTypes2.default.oneOf(["top","bottom","left","right"]),pointerLength:_propTypes2.default.number,pointerWidth:_propTypes2.default.number,width:_propTypes2.default.number,x:_propTypes2.default.number,y:_propTypes2.default.number});exports.default=Flyout;

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/point.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _pathHelpers=__webpack_require__(1124);var _pathHelpers2=_interopRequireDefault(_pathHelpers);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Point=function(_React$Component){_inherits(Point,_React$Component);function Point(){_classCallCheck(this,Point);return _possibleConstructorReturn(this,(Point.__proto__||Object.getPrototypeOf(Point)).apply(this,arguments));}_createClass(Point,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,path=_calculateAttributes.path;
	this.style=style;
	this.path=path;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,path=_calculateAttributes2.path;var _props=
	this.props,className=_props.className,datum=_props.datum,x=_props.x,y=_props.y,size=_props.size,symbol=_props.symbol;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[x,nextProps.x],
	[y,nextProps.y],
	[size,nextProps.size],
	[symbol,nextProps.symbol],
	[path,this.path],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	this.path=path;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	style=props.style,datum=props.datum,active=props.active;
	return{
	style:_helpers2.default.evaluateStyle(style,datum,active),
	path:this.getPath(props)};
	
	}},{key:"getPath",value:function getPath(
	
	props){var
	datum=props.datum,active=props.active,x=props.x,y=props.y;
	var pathFunctions={
	circle:_pathHelpers2.default.circle,
	square:_pathHelpers2.default.square,
	diamond:_pathHelpers2.default.diamond,
	triangleDown:_pathHelpers2.default.triangleDown,
	triangleUp:_pathHelpers2.default.triangleUp,
	plus:_pathHelpers2.default.plus,
	star:_pathHelpers2.default.star};
	
	var symbol=_helpers2.default.evaluateProp(props.symbol,datum,active);
	var size=_helpers2.default.evaluateProp(props.size,datum,active);
	return pathFunctions[symbol].call(null,x,y,size);
	}},{key:"renderPoint",value:function renderPoint(
	
	
	path,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return(
	_react2.default.createElement("path",_extends({},
	events,{
	d:path,
	className:className,
	role:role||"presentation",
	shapeRendering:shapeRendering||"auto",
	style:style,__source:{fileName:_jsxFileName,lineNumber:80}})));
	
	
	}},{key:"render",value:function render()
	
	{
	return this.renderPoint(this.path,this.style,this.props.events);
	}}]);return Point;}(_react2.default.Component);Point.propTypes=_extends({},_commonProps2.default,{datum:_propTypes2.default.object,size:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.func]),symbol:_propTypes2.default.oneOfType([_propTypes2.default.oneOf(["circle","diamond","plus","square","star","triangleDown","triangleUp"]),_propTypes2.default.func]),x:_propTypes2.default.number,y:_propTypes2.default.number});exports.default=Point;

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _pick2=__webpack_require__(363);var _pick3=_interopRequireDefault(_pick2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-transition/victory-transition.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _victoryAnimation=__webpack_require__(492);var _victoryAnimation2=_interopRequireDefault(_victoryAnimation);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _timer=__webpack_require__(108);var _timer2=_interopRequireDefault(_timer);
	var _transitions=__webpack_require__(499);var _transitions2=_interopRequireDefault(_transitions);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	
	VictoryTransition=function(_React$Component){_inherits(VictoryTransition,_React$Component);
	
	
	
	
	
	
	
	
	function VictoryTransition(props){_classCallCheck(this,VictoryTransition);var _this=_possibleConstructorReturn(this,(VictoryTransition.__proto__||Object.getPrototypeOf(VictoryTransition)).call(this,
	props));
	_this.state={
	nodesShouldLoad:false,
	nodesDoneLoad:false};
	
	var child=_this.props.children;
	_this.continuous=child.type&&child.type.continuous===true;
	_this.getTransitionState=_this.getTransitionState.bind(_this);
	_this.getTimer=_this.getTimer.bind(_this);return _this;
	}_createClass(VictoryTransition,[{key:"componentDidMount",value:function componentDidMount()
	
	{
	this.setState({nodesShouldLoad:true});
	}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(
	
	nextProps){var _this2=this;
	this.getTimer().bypassAnimation();
	this.setState(
	this.getTransitionState(this.props,nextProps),function(){return _this2.getTimer().resumeAnimation();});
	
	}},{key:"componentWillUnmount",value:function componentWillUnmount()
	
	{
	this.getTimer().stop();
	}},{key:"getTimer",value:function getTimer()
	
	{
	if(this.context.getTimer){
	return this.context.getTimer();
	}
	if(!this.timer){
	this.timer=new _timer2.default();
	}
	return this.timer;
	}},{key:"getTransitionState",value:function getTransitionState(
	
	props,nextProps){var
	animate=props.animate;
	if(!animate){
	return{};
	}else if(animate.parentState){
	var state=animate.parentState;
	var oldProps=state.nodesWillExit?props:null;
	return{oldProps:oldProps,nextProps:nextProps};
	}else{
	var oldChildren=_react2.default.Children.toArray(props.children);
	var nextChildren=_react2.default.Children.toArray(nextProps.children);var _Transitions$getIniti=
	
	
	
	
	
	_transitions2.default.getInitialTransitionState(oldChildren,nextChildren),nodesWillExit=_Transitions$getIniti.nodesWillExit,nodesWillEnter=_Transitions$getIniti.nodesWillEnter,childrenTransitions=_Transitions$getIniti.childrenTransitions,nodesShouldEnter=_Transitions$getIniti.nodesShouldEnter;
	return{
	nodesWillExit:nodesWillExit,
	nodesWillEnter:nodesWillEnter,
	childrenTransitions:childrenTransitions,
	nodesShouldEnter:nodesShouldEnter,
	oldProps:nodesWillExit?props:null,
	nextProps:nextProps};
	
	}
	}},{key:"getDomainFromChildren",value:function getDomainFromChildren(
	
	props,axis){
	var getChildDomains=function getChildDomains(children){
	return children.reduce(function(memo,child){
	if(child.type&&(0,_isFunction3.default)(child.type.getDomain)){
	var childDomain=child.props&&child.type.getDomain(child.props,axis);
	return childDomain?memo.concat(childDomain):memo;
	}else if(child.props&&child.props.children){
	return memo.concat(getChildDomains(_react2.default.Children.toArray(child.props.children)));
	}
	return memo;
	},[]);
	};
	
	var child=_react2.default.Children.toArray(props.children)[0];
	var childProps=child.props||{};
	var domain=Array.isArray(childProps.domain)?
	childProps.domain:childProps.domain&&childProps.domain[axis];
	if(!childProps.children&&domain){
	return domain;
	}else{
	var childDomains=getChildDomains([child]);
	return childDomains.length===0?
	[0,1]:[_collection2.default.getMinValue(childDomains),_collection2.default.getMaxValue(childDomains)];
	}
	}},{key:"pickProps",value:function pickProps()
	
	{
	if(!this.state){
	return this.props;
	}
	return this.state.nodesWillExit?this.state.oldProps||this.props:this.props;
	}},{key:"pickDomainProps",value:function pickDomainProps(
	
	props){
	var parentState=props.animate&&props.animate.parentState;
	if(parentState&&parentState.nodesWillExit){
	return this.continous||parentState.continuous?
	parentState.nextProps||this.state.nextProps||props:props;
	}
	return this.continuous&&this.state.nodesWillExit?this.state.nextProps||props:props;
	}},{key:"getClipWidth",value:function getClipWidth(
	
	props,child){
	var getDefaultClipWidth=function getDefaultClipWidth(){
	var range=_helpers2.default.getRange(child.props,"x");
	return range?Math.abs(range[1]-range[0]):props.width;
	};
	var clipWidth=this.transitionProps?this.transitionProps.clipWidth:undefined;
	return clipWidth!==undefined?clipWidth:getDefaultClipWidth();
	}},{key:"render",value:function render()
	
	{var _this3=this;
	var props=this.pickProps();
	var getTransitionProps=this.props.animate&&this.props.animate.getTransitions?
	this.props.animate.getTransitions:
	_transitions2.default.getTransitionPropsFactory(
	props,
	this.state,
	function(newState){return _this3.setState(newState);});
	
	var child=_react2.default.Children.toArray(props.children)[0];
	var transitionProps=getTransitionProps(child);
	this.transitionProps=transitionProps;
	var domain={
	x:this.getDomainFromChildren(this.pickDomainProps(props),"x"),
	y:this.getDomainFromChildren(props,"y")};
	
	var clipWidth=this.getClipWidth(props,child);
	var combinedProps=(0,_defaults3.default)({domain:domain,clipWidth:clipWidth},transitionProps,child.props);
	var animationWhitelist=props.animationWhitelist||[];
	var whitelist=animationWhitelist.concat(["clipWidth"]);
	var propsToAnimate=whitelist.length?(0,_pick3.default)(combinedProps,whitelist):combinedProps;
	return(
	_react2.default.createElement(_victoryAnimation2.default,_extends({},combinedProps.animate,{data:propsToAnimate,__source:{fileName:_jsxFileName,lineNumber:157}}),
	function(newProps){
	if(child.props.groupComponent){
	var groupComponent=_this3.continuous?
	_react2.default.cloneElement(
	child.props.groupComponent,
	{clipWidth:newProps.clipWidth||0}):
	
	child.props.groupComponent;
	return _react2.default.cloneElement(
	child,(0,_defaults3.default)({animate:null,groupComponent:groupComponent},newProps,combinedProps));
	
	}
	return _react2.default.cloneElement(
	child,(0,_defaults3.default)({animate:null},newProps,combinedProps));
	
	}));
	
	
	}}]);return VictoryTransition;}(_react2.default.Component);VictoryTransition.displayName="VictoryTransition";VictoryTransition.propTypes={animate:_propTypes2.default.object,animationWhitelist:_propTypes2.default.array,children:_propTypes2.default.node};exports.default=VictoryTransition;

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _identity2=__webpack_require__(44);var _identity3=_interopRequireDefault(_identity2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);
	
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	
	function getDatumKey(datum,idx){
	return(datum.key||idx).toString();
	}
	
	function getKeyedData(data){
	return data.reduce(function(keyedData,datum,idx){
	var key=getDatumKey(datum,idx);
	keyedData[key]=datum;
	return keyedData;
	},{});
	}
	
	function getKeyedDataDifference(a,b){
	var hasDifference=false;
	var difference=Object.keys(a).reduce(function(_difference,key){
	if(!(key in b)){
	hasDifference=true;
	_difference[key]=true;
	}
	return _difference;
	},{});
	return hasDifference&&difference;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function getNodeTransitions(oldData,nextData){
	var oldDataKeyed=oldData&&getKeyedData(oldData);
	var nextDataKeyed=nextData&&getKeyedData(nextData);
	
	return{
	entering:oldDataKeyed&&getKeyedDataDifference(nextDataKeyed,oldDataKeyed),
	exiting:nextDataKeyed&&getKeyedDataDifference(oldDataKeyed,nextDataKeyed)};
	
	}
	
	function getChildData(child){
	if(child.type&&child.type.getData){
	return child.type.getData(child.props);
	}
	return child.props&&child.props.data||false;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function getInitialTransitionState(oldChildren,nextChildren){
	var nodesWillExit=false;
	var nodesWillEnter=false;
	
	var getTransition=function getTransition(oldChild,newChild){
	if(!newChild||oldChild.type!==newChild.type){
	return{};
	}var _ref=
	
	
	getNodeTransitions(getChildData(oldChild),getChildData(newChild))||{},entering=_ref.entering,exiting=_ref.exiting;
	
	nodesWillExit=nodesWillExit||!!exiting;
	nodesWillEnter=nodesWillEnter||!!entering;
	
	return{entering:entering||false,exiting:exiting||false};
	};
	
	var getTransitionsFromChildren=function getTransitionsFromChildren(old,next){
	return old.map(function(child,idx){
	if(child&&child.props&&child.props.children){
	return getTransitionsFromChildren(
	_react2.default.Children.toArray(old[idx].props.children),
	_react2.default.Children.toArray(next[idx].props.children));
	
	}
	
	return getTransition(child,next[idx]);
	});
	};
	
	var childrenTransitions=getTransitionsFromChildren(
	_react2.default.Children.toArray(oldChildren),
	_react2.default.Children.toArray(nextChildren));
	
	return{
	nodesWillExit:nodesWillExit,
	nodesWillEnter:nodesWillEnter,
	childrenTransitions:childrenTransitions,
	
	
	
	
	
	nodesShouldEnter:false};
	
	}
	
	function getInitialChildProps(animate,data){
	var after=animate.onEnter&&animate.onEnter.after?animate.onEnter.after:_identity3.default;
	return{
	data:data.map(function(datum){return(0,_assign3.default)({},datum,after(datum));})};
	
	}
	
	function getChildBeforeLoad(animate,child,data,cb){
	animate=(0,_assign3.default)({},animate,{onEnd:cb});
	if(animate&&animate.onLoad&&!animate.onLoad.duration){
	return{animate:animate,data:data};
	}
	var before=animate.onLoad&&animate.onLoad.before?animate.onLoad.before:_identity3.default;
	
	data=data.map(function(datum){
	return(0,_assign3.default)({},datum,before(datum));
	});
	
	return{animate:animate,data:data,clipWidth:0};
	}
	
	function getChildOnLoad(animate,data,cb){
	animate=(0,_assign3.default)({},animate,{onEnd:cb});
	if(animate&&animate.onLoad&&!animate.onLoad.duration){
	return{animate:animate,data:data};
	}
	var after=animate.onLoad&&animate.onLoad.after?animate.onLoad.after:_identity3.default;
	
	data=data.map(function(datum){
	return(0,_assign3.default)({},datum,after(datum));
	});
	
	return{animate:animate,data:data};
	}
	
	function getChildPropsOnExit(animate,child,data,exitingNodes,cb){
	
	
	var onExit=animate&&animate.onExit;
	animate=(0,_assign3.default)({},animate,onExit);
	
	if(exitingNodes){
	
	
	animate.onEnd=cb;
	var before=animate.onExit&&animate.onExit.before?animate.onExit.before:_identity3.default;
	
	data=data.map(function(datum,idx){
	var key=(datum.key||idx).toString();
	return exitingNodes[key]?(0,_assign3.default)({},datum,before(datum)):datum;
	});
	}
	
	return{animate:animate,data:data};
	}
	
	function getChildPropsBeforeEnter(animate,child,data,enteringNodes,cb){
	if(enteringNodes){
	
	
	animate=(0,_assign3.default)({},animate,{onEnd:cb});
	var before=animate.onEnter&&animate.onEnter.before?animate.onEnter.before:_identity3.default;
	
	
	
	data=data.map(function(datum,idx){
	var key=(datum.key||idx).toString();
	return enteringNodes[key]?(0,_assign3.default)({},datum,before(datum)):datum;
	});
	}
	
	return{animate:animate,data:data};
	}
	
	function getChildPropsOnEnter(animate,data,enteringNodes,cb){
	
	
	var onEnter=animate&&animate.onEnter;
	animate=(0,_assign3.default)({},animate,onEnter);
	
	if(enteringNodes){
	
	
	
	animate.onEnd=cb;
	var after=animate.onEnter&&animate.onEnter.after?animate.onEnter.after:_identity3.default;
	data=data.map(function(datum,idx){
	var key=getDatumKey(datum,idx);
	return enteringNodes[key]?(0,_assign3.default)({},datum,after(datum)):datum;
	});
	}
	return{animate:animate,data:data};
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function getTransitionPropsFactory(props,state,setState){
	var nodesWillExit=state&&state.nodesWillExit;
	var nodesWillEnter=state&&state.nodesWillEnter;
	var nodesShouldEnter=state&&state.nodesShouldEnter;
	var nodesShouldLoad=state&&state.nodesShouldLoad;
	var nodesDoneLoad=state&&state.nodesDoneLoad;
	var childrenTransitions=state&&state.childrenTransitions||[];
	var transitionDurations={
	enter:props.animate&&props.animate.onEnter&&props.animate.onEnter.duration,
	exit:props.animate&&props.animate.onExit&&props.animate.onExit.duration,
	load:props.animate&&props.animate.onLoad&&props.animate.onLoad.duration,
	move:props.animate&&props.animate.duration};
	
	
	var onLoad=function onLoad(child,data,animate){
	if(nodesShouldLoad){
	return getChildOnLoad(animate,data,function(){
	setState({nodesShouldLoad:false,nodesDoneLoad:true});
	});
	}
	
	return getChildBeforeLoad(animate,child,data,function(){
	setState({nodesDoneLoad:true});
	});
	};
	
	var onExit=function onExit(nodes,child,data,animate){
	return getChildPropsOnExit(animate,child,data,nodes,function(){
	setState({nodesWillExit:false});
	});
	};
	
	var onEnter=function onEnter(nodes,child,data,animate){
	if(nodesShouldEnter){
	return getChildPropsOnEnter(animate,data,nodes,function(){
	setState({nodesWillEnter:false});
	});
	}
	
	return getChildPropsBeforeEnter(animate,child,data,nodes,function(){
	setState({nodesShouldEnter:true});
	});
	};
	
	var getChildTransitionDuration=function getChildTransitionDuration(child,type){
	var animate=child.props.animate;
	var defaultTransitions=child.type&&child.type.defaultTransitions;
	if(defaultTransitions){
	var animationDuration=animate[type]&&animate[type].duration;
	return animationDuration!==undefined?
	animationDuration:defaultTransitions[type]&&defaultTransitions[type].duration;
	}
	
	return{};
	};
	
	return function getTransitionProps(child,index){
	var data=getChildData(child)||[];
	var animate=(0,_defaults3.default)({},props.animate,child.props.animate);
	
	animate.onExit=(0,_defaults3.default)(
	{},animate.onExit,child.type.defaultTransitions&&child.type.defaultTransitions.onExit);
	
	animate.onEnter=(0,_defaults3.default)(
	{},animate.onEnter,child.type.defaultTransitions&&child.type.defaultTransitions.onEnter);
	
	animate.onLoad=(0,_defaults3.default)(
	{},animate.onLoad,child.type.defaultTransitions&&child.type.defaultTransitions.onLoad);
	
	
	var childTransitions=childrenTransitions[index]||childrenTransitions[0];
	if(!nodesDoneLoad){
	
	var load=transitionDurations.load!==undefined?
	transitionDurations.load:getChildTransitionDuration(child,"onLoad");
	var animation={duration:load};
	return onLoad(child,data,(0,_assign3.default)({},animate,animation));
	}else if(nodesWillExit){
	var exitingNodes=childTransitions&&childTransitions.exiting;
	var exit=transitionDurations.exit!==undefined?
	transitionDurations.exit:getChildTransitionDuration(child,"onExit");
	
	var _animation=exitingNodes?{duration:exit}:{delay:exit};
	return onExit(exitingNodes,child,data,(0,_assign3.default)({},animate,_animation));
	}else if(nodesWillEnter){
	var enteringNodes=childTransitions&&childTransitions.entering;
	var enter=transitionDurations.enter!==undefined?
	transitionDurations.enter:getChildTransitionDuration(child,"onEnter");
	var move=transitionDurations.move!==undefined?
	transitionDurations.move:child.props.animate&&child.props.animate.duration;
	var _animation2={duration:nodesShouldEnter&&enteringNodes?enter:move};
	return onEnter(enteringNodes,child,data,(0,_assign3.default)({},animate,_animation2));
	}else if(!state&&animate&&animate.onExit){
	
	
	
	
	
	
	
	
	
	return getInitialChildProps(animate,data);
	}
	return{animate:animate,data:data};
	};
	}exports.default=
	
	{
	getInitialTransitionState:getInitialTransitionState,
	getTransitionPropsFactory:getTransitionPropsFactory};

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var util = __webpack_require__(12),
	Classifier = __webpack_require__(257);
	
	var BayesClassifier = function(smoothing) {
	    Classifier.call(this);
	    this.classFeatures = {};
	    this.classTotals = {};
	    this.totalExamples = 1; // start at one to smooth
	    this.smoothing = smoothing === undefined ? 1.0 : smoothing;
	};
	
	util.inherits(BayesClassifier, Classifier);
	
	function addExample(observation, label) {
	    if(!this.classFeatures[label]) {
	        this.classFeatures[label] = {};
	        this.classTotals[label] = 1; // give an extra for smoothing
	    }
	
	    if(observation instanceof Array) {
	        var i = observation.length;
	        this.totalExamples++;
	        this.classTotals[label]++;
	
	        while(i--) {
	            if(observation[i]) {
	                if(this.classFeatures[label][i]) {
	                    this.classFeatures[label][i]++;
	                } else {
	                    // give an extra for smoothing
	                    this.classFeatures[label][i] = 1 + this.smoothing;
	                }
	            }
	        }
	    } else {
	        // sparse observation
	        for(var key in observation){
	            value = observation[key];
	
	            if(this.classFeatures[label][value]) {
	               this.classFeatures[label][value]++;
	            } else {
	                // give an extra for smoothing
	               this.classFeatures[label][value] = 1 + this.smoothing;
	            }
	        }
	    }
	}
	
	function train() {
	
	}
	
	function probabilityOfClass(observation, label) {
	    var prob = 0;
	
	    if(observation instanceof Array){
	        var i = observation.length;
	
	        while(i--) {
	            if(observation[i]) {
	                var count = this.classFeatures[label][i] || this.smoothing;
	                // numbers are tiny, add logs rather than take product
	                prob += Math.log(count / this.classTotals[label]);
	            }
	        }
	    } else {
	        // sparse observation
	        for(var key in observation){
	            var count = this.classFeatures[label][observation[key]] || this.smoothing;
	            // numbers are tiny, add logs rather than take product
	            prob += Math.log(count / this.classTotals[label]);
	        }
	    }
	
	    // p(C) * unlogging the above calculation P(X|C)
	    prob = (this.classTotals[label] / this.totalExamples) * Math.exp(prob);
	
	    return prob;
	}
	
	function getClassifications(observation) {
	    var classifier = this;
	    var labels = [];
	
	    for(var className in this.classFeatures) {
	        labels.push({label: className,
	        value: classifier.probabilityOfClass(observation, className)});
	    }
	
	    return labels.sort(function(x, y) {
	        return y.value - x.value;
	    });
	}
	
	function restore(classifier) {
	     classifier = Classifier.restore(classifier);
	     classifier.__proto__ = BayesClassifier.prototype;
	
	     return classifier;
	}
	
	BayesClassifier.prototype.addExample = addExample;
	BayesClassifier.prototype.train = train;
	BayesClassifier.prototype.getClassifications = getClassifications;
	BayesClassifier.prototype.probabilityOfClass = probabilityOfClass;
	
	BayesClassifier.restore = restore;
	
	module.exports = BayesClassifier;

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var util = __webpack_require__(12),
	     Classifier = __webpack_require__(257);
	
	var sylvester = __webpack_require__(480),
	Matrix = sylvester.Matrix,
	Vector = sylvester.Vector;
	
	function sigmoid(z) {
	    return 1 / (1 + Math.exp(0 - z));
	}
	
	function hypothesis(theta, Observations) {
	    return Observations.x(theta).map(sigmoid);
	}
	
	function cost(theta, Examples, classifications) {
	    var hypothesisResult = hypothesis(theta, Examples);
	
	    var ones = Vector.One(Examples.rows());
	    var cost_1 = Vector.Zero(Examples.rows()).subtract(classifications).elementMultiply(hypothesisResult.log());
	    var cost_0 = ones.subtract(classifications).elementMultiply(ones.subtract(hypothesisResult).log());
	
	    return (1 / Examples.rows()) * cost_1.subtract(cost_0).sum();
	}
	
	function descendGradient(theta, Examples, classifications) {
	    var maxIt = 500 * Examples.rows();
	    var last;
	    var current;
	    var learningRate = 3;
	    var learningRateFound = false;
	
	    Examples = Matrix.One(Examples.rows(), 1).augment(Examples);
	    theta = theta.augment([0]);
	
	    while(!learningRateFound) {
	        var i = 0;
	        last = null;
	
	        while(true) {
	            var hypothesisResult = hypothesis(theta, Examples);
	            theta = theta.subtract(Examples.transpose().x(
	            hypothesisResult.subtract(classifications)).x(1 / Examples.rows()).x(learningRate));
	            current = cost(theta, Examples, classifications);
	
	            i++;
	
	            if(last) {
	            if(current < last)
	                learningRateFound = true;
	            else
	                break;
	
	            if(last - current < 0.0001)
	                break;
	            }
	
	            if(i >= maxIt) {
	                throw 'unable to find minimum';
	            }
	
	            last = current;
	        }
	
	        learningRate /= 3;
	    }
	
	    return theta.chomp(1);
	}
	
	var LogisticRegressionClassifier = function() {
	    Classifier.call(this);
	    this.examples = {};
	    this.features = [];
	    this.featurePositions = {};
	    this.maxFeaturePosition = 0;
	    this.classifications = [];
	    this.exampleCount = 0;
	};
	
	util.inherits(LogisticRegressionClassifier, Classifier);
	
	function createClassifications() {
	    var classifications = [];
	
	    for(var i = 0; i < this.exampleCount; i++) {
	        var classification = [];
	
	        for(var _ in this.examples) {
	            classification.push(0);
	        }
	
	       classifications.push(classification);
	    }
	
	    return classifications;
	}
	
	function computeThetas(Examples, Classifications) {
	    this.theta = [];
	
	    // each class will have it's own theta.
	    var zero = function() { return 0; };
	    for(var i = 1; i <= this.classifications.length; i++) {
	        var theta = Examples.row(1).map(zero);
	        this.theta.push(descendGradient(theta, Examples, Classifications.column(i)));
	    }
	}
	
	function train() {
	    var examples = [];
	    var classifications = this.createClassifications();
	    var d = 0, c = 0;
	
	    for(var classification in this.examples) {
	        for(var i = 0; i < this.examples[classification].length; i++) {
	            var doc = this.examples[classification][i];
	            var example = doc;
	
	            examples.push(example);
	            classifications[d][c] = 1;
	            d++;
	        }
	
	        c++;
	    }
	
	    this.computeThetas($M(examples), $M(classifications));
	}
	
	function addExample(data, classification) {
	    if(!this.examples[classification]) {
		this.examples[classification] = [];
		this.classifications.push(classification);
	    }
	
	    this.examples[classification].push(data);
	    this.exampleCount++;
	}
	
	function getClassifications(observation) {
	    observation = $V(observation);
	    var classifications = [];
	
	    for(var i = 0; i < this.theta.length; i++) {
	        classifications.push({label: this.classifications[i], value: sigmoid(observation.dot(this.theta[i])) });
	    }
	
	    return classifications.sort(function(x, y) {
	        return y.value - x.value;
	    });
	}
	
	function restore(classifier) {
	    classifier = Classifier.restore(classifier);
	    classifier.__proto__ = LogisticRegressionClassifier.prototype;
	
	    return classifier;
	}
	
	LogisticRegressionClassifier.prototype.addExample = addExample;
	LogisticRegressionClassifier.prototype.restore = restore;
	LogisticRegressionClassifier.prototype.train = train;
	LogisticRegressionClassifier.prototype.createClassifications = createClassifications;
	LogisticRegressionClassifier.prototype.computeThetas = computeThetas;
	LogisticRegressionClassifier.prototype.getClassifications = getClassifications;
	
	LogisticRegressionClassifier.restore = restore;
	
	module.exports = LogisticRegressionClassifier;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Sylvester = __webpack_require__(480),
	Matrix = Sylvester.Matrix,
	Vector = Sylvester.Vector;
	
	function KMeans(Observations) {
	    if(!Observations.elements)
	    Observations = $M(Observations);
	
	    this.Observations = Observations;
	}
	
	// create an initial centroid matrix with initial values between
	// 0 and the max of feature data X.
	function createCentroids(k) {
	    var Centroid = [];
	    var maxes = this.Observations.maxColumns();
	    //console.log(maxes);
	
	    for(var i = 1; i <= k; i++) {
	        var centroid = [];
	        for(var j = 1; j <= this.Observations.cols(); j++) {
	            centroid.push(Math.random() * maxes.e(j));
	        }
	
	        Centroid.push(centroid);
	    }
	
	    //console.log(centroid)
	
	    return $M(Centroid);
	}
	
	// get the euclidian distance between the feature data X and
	// a given centroid matrix C.
	function distanceFrom(Centroids) {
	    var distances = [];
	
	    for(var i = 1; i <= this.Observations.rows(); i++) {
	        var distance = [];
	
	        for(var j = 1; j <= Centroids.rows(); j++) {
	            distance.push(this.Observations.row(i).distanceFrom(Centroids.row(j)));
	        }
	
	        distances.push(distance);
	    }
	
	    return $M(distances);
	}
	
	// categorize the feature data X into k clusters. return a vector
	// containing the results.
	function cluster(k) {
	    var Centroids = this.createCentroids(k);
	    var LastDistances = Matrix.Zero(this.Observations.rows(), this.Observations.cols());
	    var Distances = this.distanceFrom(Centroids);
	    var Groups;
	
	    while(!(LastDistances.eql(Distances))) {
	    Groups = Distances.minColumnIndexes();
	    LastDistances = Distances;
	
	    var newCentroids = [];
	
	    for(var i = 1; i <= Centroids.rows(); i++) {
	        var centroid = [];
	
	        for(var j = 1; j <= Centroids.cols(); j++) {
	        var sum = 0;
	        var count = 0;
	
	        for(var l = 1; l <= this.Observations.rows(); l++) {
	            if(Groups.e(l) == i) {
	            count++;
	            sum += this.Observations.e(l, j);
	            }
	        }
	
	        centroid.push(sum / count);
	        }
	
	        newCentroids.push(centroid);
	    }
	
	    Centroids = $M(newCentroids);
	    Distances = this.distanceFrom(Centroids);
	    }
	
	    return Groups;
	}
	
	KMeans.prototype.createCentroids = createCentroids;
	KMeans.prototype.distanceFrom = distanceFrom;
	KMeans.prototype.cluster = cluster;
	
	module.exports = KMeans;


/***/ }),
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", { value: true });
	const react_async_component_1 = __webpack_require__(916);
	exports.default = react_async_component_1.asyncComponent({
	    resolve: () => Promise.resolve().then(() => __webpack_require__(512)),
	    serverMode: "defer"
	});

/***/ }),
/* 511 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = `
	  There was a time when I thought a great deal about the axolotls.
	  I went to see them in the aquarium at the Jardin des Plantes and stayed for hours watching them, observing their immobility, their faint movements.
	  Now I am an axolotl.

	  I got to them by chance one spring morning when Paris was spreading its peacock tail after a wintry Lent.
	  I was heading down tbe boulevard Port-Royal, then I took Saint-Marcel and L’Hôpital and saw green among all that grey and remembered the lions.
	  I was friend of the lions and panthers, but had never gone into the dark, humid building that was the aquarium.
	  I left my bike against tbe gratings and went to look at the tulips.
	  The lions were sad and ugly and my panther was asleep.
	  I decided on the aquarium, looked obliquely at banal fish until, unexpectedly, I hit it off with the axolotls.
	  I stayed watching them for an hour and left, unable to think of anything else.

	  In the library at Sainte-Geneviève, I consulted a dictionary and learned that axolotls are the larval stage (provided with gills) of a species of salamander of the genus Ambystoma.
	  That they were Mexican I knew already by looking at them and their little pink Aztec faces and the placard at the top of the tank.
	  I read that specimens of them had been found in Africa capable of living on dry land during the periods of drought, and continuing their life under water when the rainy season came.
	  I found their Spanish name, ajolote, and the mention that they were edible, and that their oil was used (no longer used, it said ) like cod-liver oil.

	  I didn’t care to look up any of the specialized works, but the next day I went back to the Jardin des Plantes.
	  I began to go every morning, morning and aftemoon some days.
	  The aquarium guard smiled perplexedly taking my ticket.
	  I would lean up against the iron bar in front of the tanks and set to watching them.
	  There’s nothing strange in this, because after the first minute I knew that we were linked, that something infinitely lost and distant kept pulling us together.
	  It had been enough to detain me that first morning in front of the sheet of glass where some bubbles rose through the water.
	  The axolotls huddled on the wretched narrow (only I can know how narrow and wretched) floor of moss and stone in the tank.
	  There were nine specimens, and the majority pressed their heads against the glass, looking with their eyes of gold at whoever came near them.
	  Disconcerted, almost ashamed, I felt it a lewdness to be peering at these silent and immobile figures heaped at the bottom of the tank.
	  Mentally I isolated one, situated on the right and somewhat apart from the others, to study it better.
	  I saw a rosy little body, translucent (I thought of those Chinese figurines of milky glass), looking like a small lizard about six inches long, ending in a fish’s tail of extraordinary delicacy, the most sensitive part of our body.
	  Along the back ran a transparent fin which joined with the tail, but what obsessed me was the feet, of the slenderest nicety, ending in tiny fingers with minutely human nails.
	  And then I discovered its eyes, its face.
	  Inexpressive features, with no other trait save the eyes, two orifices, like brooches, wholly of transparent gold, lacking any life but looking, letting themselves be penetrated by my look, which seemed to travel past the golden level and lose itself in a diaphanous interior mystery.
	  A very slender black halo ringed the eye and etched it onto the pink flesh, onto the rosy stone of the head, vaguely triangular, but with curved and triangular sides which gave it a total likeness to a statuette corroded by time.
	  The mouth was masked by the triangular plane of the face, its considerable size would be guessed only in profile; in front a delicate crevice barely slit the lifeless stone.
	  On both sides of the head where the ears should have been, there grew three tiny sprigs, red as coral, a vegetal outgrowth, the gills, I suppose.
	  And they were the only thing quick about it; every ten or fifteen seconds the sprigs pricked up stiffly and again subsided.
	  Once in a while a foot would barely move, I saw the diminutive toes poise mildly on the moss.
	  It’s that we don’t enjoy moving a lot, and the tank is so cramped—we barely move in any direction and we’re hitting one of the others with our tail or our head—difficulties arise, fights, tiredness.
	  The time feels like it’s less if we stay quietly.

	  It was their quietness that made me lean toward them fascinated the first time I saw the axolotls.
	  Obscurely I seemed to understand their secret will, to abolish space and time with an indifferent immobility.
	  I knew better later; the gill contraction, the tentative reckoning of the delicate feet on the stones, the abrupt swimming (some of them swim with a simple undulation of the body) proved to me that they were capable of escaping that mineral lethargy in which they spent whole hours.
	  Above all else, their eyes obsessed me.
	  In the standing tanks on either side of them, different fishes showed me the simple stupidity of their handsome eyes so similar to our own.
	  The eyes of the axolotls spoke to me of the presence of a different life, of another way of seeing.
	  Glueing my face to the glass (the guard would cough fussily once in a while), I tried to see better those diminutive golden points, that entrance to the infinitely slow and remote world of these rosy creatures.
	  It was useless to tap with one finger on the glass directly in front of their faces; they never gave the least reaction.
	  The golden eyes continued burning with their soft, terrible light; they continued looking at me from an unfathomable depth which made me dizzy.

	  And nevertheless they were close.
	  I knew it before this, before being an axolotl.
	  I learned it the day I came near them for the first time.
	  The anthropomorphic features of a monkey reveal the reverse of what most people believe, the distance that is traveled from them to us.
	  The absolute lack of similarity between axolotls and human beings proved to me that my recognition was valid, that I was not propping myself up with easy analogies.
	  Only the little hands … But an eft, the common newt, has such hands also, and we are not at all alike.
	  I think it was the axolotls’ heads, that triangular pink shape with the tiny eyes of gold.
	  That looked and knew.
	  That laid the claim.
	  They were not animals.

	  It would seem easy, almost obvious, to fall into mythology.
	  I began seeing in the axolotls a metamorphosis which did not succeed in revoking a mysterious humanity.
	  I imagined them aware, slaves of their bodies, condemned infinitely to the silence of the abyss, to a hopeless meditation.
	  Their blind gaze, the diminutive gold disc without expression and nonetheless terribly shining, went through me like a message:
	  “Save us, save us.”
	  I caught myself mumbling words of advice, conveying childish hopes.
	  They continued to look at me, immobile; from time to time the rosy branches of the gills stiffened.
	  In that instant I felt a muted pain; perhaps they were seeing me, attracting my strength to penetrate into the impenetrable thing of their lives.
	  They were not human beings, but I had found in no animal such a profound relation with myself.
	  The axolotls were like witnesses of something, and at times like horrible judges.
	  I felt ignoble in front of them; there was such a terrifying purity in those transparent eyes.
	  They were larvas, but larva means disguise and also phantom.
	  Behind those Aztec faces, without expression but of an implacable cruelty, what semblance was awaiting its hour?

	  I was afraid of them.
	  I think that had it not been for feeling the proximity of other visitors and the guard, I would not have been bold enough to remain alone with them.
	  “You eat them alive with your eyes, hey,” the guard said, laughing; he likely thought I was a little cracked.
	  What he didn’t notice was that it was they devouring me slowly with their eyes, in a cannibalism of gold.
	  At any distance from the aquarium, I had only to think of them, it was as though I were being affected from a distance.
	  It got to the point that I was going every day, and at night I thought of them immobile in the darkness, slowly putting a hand out which immediately encountered another.
	  Perhaps their eyes could see in the dead of night, and for them the day continued indefinitely.
	  The eyes of axolotls have no lids.

	  I know now that there was nothing strange, that that had to occur.
	  Leaning over in front of the tank each morning, the recognition was greater.
	  They were suffering, every fiber of my body reached toward that stifled pain, that stiff torment at the bottom of the tank.
	  They were lying in wait for something, a remote dominion destroyed, an age of liberty when the world had been that of the axolotls.
	  Not possible that such a terrible expression which was attaining the overthrow of that forced blankness on their stone faces should carry any message other than one of pain, proof of that eternal sentence, of that liquid hell they were undergoing.
	  Hopelessly, I wanted to prove to myself that my own sensibility was projecting a nonexistent consciousness upon the axolotls.
	  They and I knew.
	  So there was nothing strange in what happened.
	  My face was pressed against the glass of the aquarium, my eyes were attempting once more to penetrate the mystery of those eyes of gold without iris, without pupil.
	  I saw from very close up the face of an axolotl immobile next to the glass.
	  No transition and no surprise, I saw my face against the glass, I saw it on the outside of the tank, I saw it on the other side of the glass. Then my face drew back and I understood.

	  Only one thing was strange: to go on thinking as usual, to know.
	  To realize that was, for the first moment, like the horror of a man buried alive awaking to his fate.
	  Outside, my face came close to the glass again, I saw my mouth, the lips compressed with the effort of understanding the axolotls.
	  I was an axolotl and now I knew instantly that no understanding was possible.
	  He was outside the aquarium, his thinking was a thinking outside the tank.
	  Recognizlng him, being him himself, I was an axolotl and in my world.
	  The horror began—I learned in the same moment —of believing myself prisoner in the body of an axolotl, metamorphosed into him with my human mind intact, buried alive in an axolotl, condemned to move lucidly among unconscious creatures.
	  But that stopped when a foot just grazed my face, when I moved just a little to one side and saw an axolotl next to me who was looking at me, and understood that he knew also, no communication possible, but very clearly.
	  Or I was also in him, or all of us were thinking humanlike, incapable of expression, limited to the golden splendor of our eyes looking at the face of the man pressed against the aquarium.

	  He returned many times, but he comes less often now.
	  Weeks pass without his showing up.
	  I saw him yesterday, he looked at me for a long time and left briskly.
	  It seemed to me that he was not so much interested in us any more, that he was coming out of habit.
	  Since the only thing I do is think, I could think about him a lot.
	  It occurs to me that at the beginning we continued to communicate, that he felt more than ever one with the mystery which was claiming him.
	  But the bridges were broken between him and me, because what was his obsession is now an axolotl, alien to his human life.
	  I think that at the beginning I was capable of returning to him in a certain way—ah, only in a certain way—and of keeping awake his desire to know us better.
	  I am an axolotl for good now, and if I think like a man it’s only because every axolotl thinks like a man inside his rosy stone semblance.
	  I believe that all this succeeded in communicating something to him in those first days, when I was still he.
	  And in this final solitude to which he no longer comes, I console myself by thinking that perhaps he is going to write a story about us, that, believing he’s making up a story, he’s going to write all this about axolotls.
	  `;

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", { value: true });
	const React = __webpack_require__(1);
	const spectacle_1 = __webpack_require__(1082);
	const default_1 = __webpack_require__(247);
	const classifier_1 = __webpack_require__(516);
	const axolotl_1 = __webpack_require__(511);
	const theme = default_1.default({
	    primary: "#e3dce8"
	}, {
	    primary: "Helvetica",
	    secondary: {
	        googleFont: true,
	        name: "Droid Serif",
	        styles: ["400", "700i"]
	    }
	});
	exports.default = () => React.createElement(spectacle_1.Deck, { progress: "bar", theme: theme }, React.createElement(spectacle_1.Slide, null, React.createElement(spectacle_1.Text, null, "Cortazar's Axolotl")), axolotl_1.default.split("\n").map(passage => passage.trim()).filter(passage => passage !== "").map((passage, index) => React.createElement(spectacle_1.Slide, { key: index, bgColor: classifier_1.colorFromText(passage) }, React.createElement(spectacle_1.Text, null, passage))));

/***/ }),
/* 513 */,
/* 514 */,
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", { value: true });
	const React = __webpack_require__(1);
	const async_slides_1 = __webpack_require__(510);
	exports.default = () => React.createElement(async_slides_1.default, null);

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", { value: true });
	const natural_1 = __webpack_require__(817);
	const animalBase = [255, 192, 203];
	const manBase = [173, 216, 230];
	function pickHex(color1, color2, weight) {
	    const w1 = weight;
	    const w2 = 1 - w1;
	    const rgb = [Math.round(color1[0] * w1 + color2[0] * w2), Math.round(color1[1] * w1 + color2[1] * w2), Math.round(color1[2] * w1 + color2[2] * w2)];
	    return rgb;
	}
	const classifier = new natural_1.BayesClassifier();
	classifier.addDocument("They were not animals", "lightblue");
	classifier.addDocument("He returned many times", "pink");
	classifier.addDocument("I could think about him a lot", "pink");
	classifier.addDocument("I am an axolotl", "pink");
	classifier.addDocument("being an axolotl", "pink");
	classifier.addDocument("alien to his human life", "pink");
	classifier.addDocument("Save us", "pink");
	classifier.train();
	exports.colorFromText = passage => `rgb(${pickHex(manBase, animalBase, classifier.getClassifications(passage)[0].value).join(",")})`;

/***/ }),
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */
/***/ (function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}
	
	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return (b64.length * 3 / 4) - placeHoldersCount(b64)
	}
	
	function toByteArray (b64) {
	  var i, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)
	
	  arr = new Arr((len * 3 / 4) - placeHolders)
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len
	
	  var L = 0
	
	  for (i = 0; i < l; i += 4) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }
	
	  parts.push(output)
	
	  return parts.join('')
	}


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, Buffer) {(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.buble = global.buble || {})));
	}(this, function (exports) { 'use strict';
	
	  var __commonjs_global = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this;
	  function __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports, __commonjs_global), module.exports; }
	
	  var acorn = __commonjs(function (module, exports, global) {
	  (function (global, factory) {
	    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	     true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) :
	    (factory((global.acorn = global.acorn || {})));
	  }(__commonjs_global, function (exports) { 'use strict';
	
	    // Reserved word lists for various dialects of the language
	
	    var reservedWords = {
	      3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
	      5: "class enum extends super const export import",
	      6: "enum",
	      7: "enum",
	      strict: "implements interface let package private protected public static yield",
	      strictBind: "eval arguments"
	    }
	
	    // And the keywords
	
	    var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this"
	
	    var keywords = {
	      5: ecma5AndLessKeywords,
	      6: ecma5AndLessKeywords + " const class extends export import super"
	    }
	
	    // ## Character categories
	
	    // Big ugly regular expressions that match characters in the
	    // whitespace, identifier, and identifier-start categories. These
	    // are only applied when a character is found to actually have a
	    // code point above 128.
	    // Generated by `bin/generate-identifier-regex.js`.
	
	    var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fd5\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ae\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc"
	    var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d4-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c03\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d01-\u0d03\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf8\u1cf9\u1dc0-\u1df5\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f"
	
	    var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]")
	    var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]")
	
	    nonASCIIidentifierStartChars = nonASCIIidentifierChars = null
	
	    // These are a run-length and offset encoded representation of the
	    // >0xffff code points that are a valid part of identifiers. The
	    // offset starts at 0x10000, and each pair of numbers represents an
	    // offset to the next range, and then a size of the range. They were
	    // generated by bin/generate-identifier-regex.js
	    var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541]
	    var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239]
	
	    // This has a complexity linear to the value of the code. The
	    // assumption is that looking up astral identifier characters is
	    // rare.
	    function isInAstralSet(code, set) {
	      var pos = 0x10000
	      for (var i = 0; i < set.length; i += 2) {
	        pos += set[i]
	        if (pos > code) return false
	        pos += set[i + 1]
	        if (pos >= code) return true
	      }
	    }
	
	    // Test whether a given character code starts an identifier.
	
	    function isIdentifierStart(code, astral) {
	      if (code < 65) return code === 36
	      if (code < 91) return true
	      if (code < 97) return code === 95
	      if (code < 123) return true
	      if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
	      if (astral === false) return false
	      return isInAstralSet(code, astralIdentifierStartCodes)
	    }
	
	    // Test whether a given character is part of an identifier.
	
	    function isIdentifierChar(code, astral) {
	      if (code < 48) return code === 36
	      if (code < 58) return true
	      if (code < 65) return false
	      if (code < 91) return true
	      if (code < 97) return code === 95
	      if (code < 123) return true
	      if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
	      if (astral === false) return false
	      return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
	    }
	
	    // ## Token types
	
	    // The assignment of fine-grained, information-carrying type objects
	    // allows the tokenizer to store the information it has about a
	    // token in a way that is very cheap for the parser to look up.
	
	    // All token type variables start with an underscore, to make them
	    // easy to recognize.
	
	    // The `beforeExpr` property is used to disambiguate between regular
	    // expressions and divisions. It is set on all token types that can
	    // be followed by an expression (thus, a slash after them would be a
	    // regular expression).
	    //
	    // The `startsExpr` property is used to check if the token ends a
	    // `yield` expression. It is set on all token types that either can
	    // directly start an expression (like a quotation mark) or can
	    // continue an expression (like the body of a string).
	    //
	    // `isLoop` marks a keyword as starting a loop, which is important
	    // to know when parsing a label, in order to allow or disallow
	    // continue jumps to that label.
	
	    var TokenType = function TokenType(label, conf) {
	      if ( conf === void 0 ) conf = {};
	
	      this.label = label
	      this.keyword = conf.keyword
	      this.beforeExpr = !!conf.beforeExpr
	      this.startsExpr = !!conf.startsExpr
	      this.isLoop = !!conf.isLoop
	      this.isAssign = !!conf.isAssign
	      this.prefix = !!conf.prefix
	      this.postfix = !!conf.postfix
	      this.binop = conf.binop || null
	      this.updateContext = null
	    };
	
	    function binop(name, prec) {
	      return new TokenType(name, {beforeExpr: true, binop: prec})
	    }
	    var beforeExpr = {beforeExpr: true};
	    var startsExpr = {startsExpr: true};
	    // Map keyword names to token types.
	
	    var keywordTypes = {}
	
	    // Succinct definitions of keyword token types
	    function kw(name, options) {
	      if ( options === void 0 ) options = {};
	
	      options.keyword = name
	      return keywordTypes[name] = new TokenType(name, options)
	    }
	
	    var tt = {
	      num: new TokenType("num", startsExpr),
	      regexp: new TokenType("regexp", startsExpr),
	      string: new TokenType("string", startsExpr),
	      name: new TokenType("name", startsExpr),
	      eof: new TokenType("eof"),
	
	      // Punctuation token types.
	      bracketL: new TokenType("[", {beforeExpr: true, startsExpr: true}),
	      bracketR: new TokenType("]"),
	      braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),
	      braceR: new TokenType("}"),
	      parenL: new TokenType("(", {beforeExpr: true, startsExpr: true}),
	      parenR: new TokenType(")"),
	      comma: new TokenType(",", beforeExpr),
	      semi: new TokenType(";", beforeExpr),
	      colon: new TokenType(":", beforeExpr),
	      dot: new TokenType("."),
	      question: new TokenType("?", beforeExpr),
	      arrow: new TokenType("=>", beforeExpr),
	      template: new TokenType("template"),
	      ellipsis: new TokenType("...", beforeExpr),
	      backQuote: new TokenType("`", startsExpr),
	      dollarBraceL: new TokenType("${", {beforeExpr: true, startsExpr: true}),
	
	      // Operators. These carry several kinds of properties to help the
	      // parser use them properly (the presence of these properties is
	      // what categorizes them as operators).
	      //
	      // `binop`, when present, specifies that this operator is a binary
	      // operator, and will refer to its precedence.
	      //
	      // `prefix` and `postfix` mark the operator as a prefix or postfix
	      // unary operator.
	      //
	      // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
	      // binary operators with a very low precedence, that should result
	      // in AssignmentExpression nodes.
	
	      eq: new TokenType("=", {beforeExpr: true, isAssign: true}),
	      assign: new TokenType("_=", {beforeExpr: true, isAssign: true}),
	      incDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true}),
	      prefix: new TokenType("prefix", {beforeExpr: true, prefix: true, startsExpr: true}),
	      logicalOR: binop("||", 1),
	      logicalAND: binop("&&", 2),
	      bitwiseOR: binop("|", 3),
	      bitwiseXOR: binop("^", 4),
	      bitwiseAND: binop("&", 5),
	      equality: binop("==/!=", 6),
	      relational: binop("</>", 7),
	      bitShift: binop("<</>>", 8),
	      plusMin: new TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
	      modulo: binop("%", 10),
	      star: binop("*", 10),
	      slash: binop("/", 10),
	      starstar: new TokenType("**", {beforeExpr: true}),
	
	      // Keyword token types.
	      _break: kw("break"),
	      _case: kw("case", beforeExpr),
	      _catch: kw("catch"),
	      _continue: kw("continue"),
	      _debugger: kw("debugger"),
	      _default: kw("default", beforeExpr),
	      _do: kw("do", {isLoop: true, beforeExpr: true}),
	      _else: kw("else", beforeExpr),
	      _finally: kw("finally"),
	      _for: kw("for", {isLoop: true}),
	      _function: kw("function", startsExpr),
	      _if: kw("if"),
	      _return: kw("return", beforeExpr),
	      _switch: kw("switch"),
	      _throw: kw("throw", beforeExpr),
	      _try: kw("try"),
	      _var: kw("var"),
	      _const: kw("const"),
	      _while: kw("while", {isLoop: true}),
	      _with: kw("with"),
	      _new: kw("new", {beforeExpr: true, startsExpr: true}),
	      _this: kw("this", startsExpr),
	      _super: kw("super", startsExpr),
	      _class: kw("class"),
	      _extends: kw("extends", beforeExpr),
	      _export: kw("export"),
	      _import: kw("import"),
	      _null: kw("null", startsExpr),
	      _true: kw("true", startsExpr),
	      _false: kw("false", startsExpr),
	      _in: kw("in", {beforeExpr: true, binop: 7}),
	      _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
	      _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
	      _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
	      _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
	    }
	
	    // Matches a whole line break (where CRLF is considered a single
	    // line break). Used to count lines.
	
	    var lineBreak = /\r\n?|\n|\u2028|\u2029/
	    var lineBreakG = new RegExp(lineBreak.source, "g")
	
	    function isNewLine(code) {
	      return code === 10 || code === 13 || code === 0x2028 || code == 0x2029
	    }
	
	    var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/
	
	    var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g
	
	    function isArray(obj) {
	      return Object.prototype.toString.call(obj) === "[object Array]"
	    }
	
	    // Checks if an object has a property.
	
	    function has(obj, propName) {
	      return Object.prototype.hasOwnProperty.call(obj, propName)
	    }
	
	    // These are used when `options.locations` is on, for the
	    // `startLoc` and `endLoc` properties.
	
	    var Position = function Position(line, col) {
	      this.line = line
	      this.column = col
	    };
	
	    Position.prototype.offset = function offset (n) {
	      return new Position(this.line, this.column + n)
	    };
	
	    var SourceLocation = function SourceLocation(p, start, end) {
	      this.start = start
	      this.end = end
	      if (p.sourceFile !== null) this.source = p.sourceFile
	    };
	
	    // The `getLineInfo` function is mostly useful when the
	    // `locations` option is off (for performance reasons) and you
	    // want to find the line/column position for a given character
	    // offset. `input` should be the code string that the offset refers
	    // into.
	
	    function getLineInfo(input, offset) {
	      for (var line = 1, cur = 0;;) {
	        lineBreakG.lastIndex = cur
	        var match = lineBreakG.exec(input)
	        if (match && match.index < offset) {
	          ++line
	          cur = match.index + match[0].length
	        } else {
	          return new Position(line, offset - cur)
	        }
	      }
	    }
	
	    // A second optional argument can be given to further configure
	    // the parser process. These options are recognized:
	
	    var defaultOptions = {
	      // `ecmaVersion` indicates the ECMAScript version to parse. Must
	      // be either 3, or 5, or 6. This influences support for strict
	      // mode, the set of reserved words, support for getters and
	      // setters and other features. The default is 6.
	      ecmaVersion: 6,
	      // Source type ("script" or "module") for different semantics
	      sourceType: "script",
	      // `onInsertedSemicolon` can be a callback that will be called
	      // when a semicolon is automatically inserted. It will be passed
	      // th position of the comma as an offset, and if `locations` is
	      // enabled, it is given the location as a `{line, column}` object
	      // as second argument.
	      onInsertedSemicolon: null,
	      // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
	      // trailing commas.
	      onTrailingComma: null,
	      // By default, reserved words are only enforced if ecmaVersion >= 5.
	      // Set `allowReserved` to a boolean value to explicitly turn this on
	      // an off. When this option has the value "never", reserved words
	      // and keywords can also not be used as property names.
	      allowReserved: null,
	      // When enabled, a return at the top level is not considered an
	      // error.
	      allowReturnOutsideFunction: false,
	      // When enabled, import/export statements are not constrained to
	      // appearing at the top of the program.
	      allowImportExportEverywhere: false,
	      // When enabled, hashbang directive in the beginning of file
	      // is allowed and treated as a line comment.
	      allowHashBang: false,
	      // When `locations` is on, `loc` properties holding objects with
	      // `start` and `end` properties in `{line, column}` form (with
	      // line being 1-based and column 0-based) will be attached to the
	      // nodes.
	      locations: false,
	      // A function can be passed as `onToken` option, which will
	      // cause Acorn to call that function with object in the same
	      // format as tokens returned from `tokenizer().getToken()`. Note
	      // that you are not allowed to call the parser from the
	      // callback—that will corrupt its internal state.
	      onToken: null,
	      // A function can be passed as `onComment` option, which will
	      // cause Acorn to call that function with `(block, text, start,
	      // end)` parameters whenever a comment is skipped. `block` is a
	      // boolean indicating whether this is a block (`/* */`) comment,
	      // `text` is the content of the comment, and `start` and `end` are
	      // character offsets that denote the start and end of the comment.
	      // When the `locations` option is on, two more parameters are
	      // passed, the full `{line, column}` locations of the start and
	      // end of the comments. Note that you are not allowed to call the
	      // parser from the callback—that will corrupt its internal state.
	      onComment: null,
	      // Nodes have their start and end characters offsets recorded in
	      // `start` and `end` properties (directly on the node, rather than
	      // the `loc` object, which holds line/column data. To also add a
	      // [semi-standardized][range] `range` property holding a `[start,
	      // end]` array with the same numbers, set the `ranges` option to
	      // `true`.
	      //
	      // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
	      ranges: false,
	      // It is possible to parse multiple files into a single AST by
	      // passing the tree produced by parsing the first file as
	      // `program` option in subsequent parses. This will add the
	      // toplevel forms of the parsed file to the `Program` (top) node
	      // of an existing parse tree.
	      program: null,
	      // When `locations` is on, you can pass this to record the source
	      // file in every node's `loc` object.
	      sourceFile: null,
	      // This value, if given, is stored in every node, whether
	      // `locations` is on or off.
	      directSourceFile: null,
	      // When enabled, parenthesized expressions are represented by
	      // (non-standard) ParenthesizedExpression nodes
	      preserveParens: false,
	      plugins: {}
	    }
	
	    // Interpret and default an options object
	
	    function getOptions(opts) {
	      var options = {}
	      for (var opt in defaultOptions)
	        options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]
	      if (options.allowReserved == null)
	        options.allowReserved = options.ecmaVersion < 5
	
	      if (isArray(options.onToken)) {
	        var tokens = options.onToken
	        options.onToken = function (token) { return tokens.push(token); }
	      }
	      if (isArray(options.onComment))
	        options.onComment = pushComment(options, options.onComment)
	
	      return options
	    }
	
	    function pushComment(options, array) {
	      return function (block, text, start, end, startLoc, endLoc) {
	        var comment = {
	          type: block ? 'Block' : 'Line',
	          value: text,
	          start: start,
	          end: end
	        }
	        if (options.locations)
	          comment.loc = new SourceLocation(this, startLoc, endLoc)
	        if (options.ranges)
	          comment.range = [start, end]
	        array.push(comment)
	      }
	    }
	
	    // Registered plugins
	    var plugins = {}
	
	    function keywordRegexp(words) {
	      return new RegExp("^(" + words.replace(/ /g, "|") + ")$")
	    }
	
	    var Parser = function Parser(options, input, startPos) {
	      this.options = options = getOptions(options)
	      this.sourceFile = options.sourceFile
	      this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5])
	      var reserved = options.allowReserved ? "" :
	          reservedWords[options.ecmaVersion] + (options.sourceType == "module" ? " await" : "")
	      this.reservedWords = keywordRegexp(reserved)
	      var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict
	      this.reservedWordsStrict = keywordRegexp(reservedStrict)
	      this.reservedWordsStrictBind = keywordRegexp(reservedStrict + " " + reservedWords.strictBind)
	      this.input = String(input)
	
	      // Used to signal to callers of `readWord1` whether the word
	      // contained any escape sequences. This is needed because words with
	      // escape sequences must not be interpreted as keywords.
	      this.containsEsc = false
	
	      // Load plugins
	      this.loadPlugins(options.plugins)
	
	      // Set up token state
	
	      // The current position of the tokenizer in the input.
	      if (startPos) {
	        this.pos = startPos
	        this.lineStart = Math.max(0, this.input.lastIndexOf("\n", startPos))
	        this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length
	      } else {
	        this.pos = this.lineStart = 0
	        this.curLine = 1
	      }
	
	      // Properties of the current token:
	      // Its type
	      this.type = tt.eof
	      // For tokens that include more information than their type, the value
	      this.value = null
	      // Its start and end offset
	      this.start = this.end = this.pos
	      // And, if locations are used, the {line, column} object
	      // corresponding to those offsets
	      this.startLoc = this.endLoc = this.curPosition()
	
	      // Position information for the previous token
	      this.lastTokEndLoc = this.lastTokStartLoc = null
	      this.lastTokStart = this.lastTokEnd = this.pos
	
	      // The context stack is used to superficially track syntactic
	      // context to predict whether a regular expression is allowed in a
	      // given position.
	      this.context = this.initialContext()
	      this.exprAllowed = true
	
	      // Figure out if it's a module code.
	      this.strict = this.inModule = options.sourceType === "module"
	
	      // Used to signify the start of a potential arrow function
	      this.potentialArrowAt = -1
	
	      // Flags to track whether we are in a function, a generator.
	      this.inFunction = this.inGenerator = false
	      // Labels in scope.
	      this.labels = []
	
	      // If enabled, skip leading hashbang line.
	      if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === '#!')
	        this.skipLineComment(2)
	    };
	
	    // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them
	    Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };
	    Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };
	
	    Parser.prototype.extend = function extend (name, f) {
	      this[name] = f(this[name])
	    };
	
	    Parser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {
	        var this$1 = this;
	
	      for (var name in pluginConfigs) {
	        var plugin = plugins[name]
	        if (!plugin) throw new Error("Plugin '" + name + "' not found")
	        plugin(this$1, pluginConfigs[name])
	      }
	    };
	
	    Parser.prototype.parse = function parse () {
	      var node = this.options.program || this.startNode()
	      this.nextToken()
	      return this.parseTopLevel(node)
	    };
	
	    var pp = Parser.prototype
	
	    // ## Parser utilities
	
	    // Test whether a statement node is the string literal `"use strict"`.
	
	    pp.isUseStrict = function(stmt) {
	      return this.options.ecmaVersion >= 5 && stmt.type === "ExpressionStatement" &&
	        stmt.expression.type === "Literal" &&
	        stmt.expression.raw.slice(1, -1) === "use strict"
	    }
	
	    // Predicate that tests whether the next token is of the given
	    // type, and if yes, consumes it as a side effect.
	
	    pp.eat = function(type) {
	      if (this.type === type) {
	        this.next()
	        return true
	      } else {
	        return false
	      }
	    }
	
	    // Tests whether parsed token is a contextual keyword.
	
	    pp.isContextual = function(name) {
	      return this.type === tt.name && this.value === name
	    }
	
	    // Consumes contextual keyword if possible.
	
	    pp.eatContextual = function(name) {
	      return this.value === name && this.eat(tt.name)
	    }
	
	    // Asserts that following token is given contextual keyword.
	
	    pp.expectContextual = function(name) {
	      if (!this.eatContextual(name)) this.unexpected()
	    }
	
	    // Test whether a semicolon can be inserted at the current position.
	
	    pp.canInsertSemicolon = function() {
	      return this.type === tt.eof ||
	        this.type === tt.braceR ||
	        lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
	    }
	
	    pp.insertSemicolon = function() {
	      if (this.canInsertSemicolon()) {
	        if (this.options.onInsertedSemicolon)
	          this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc)
	        return true
	      }
	    }
	
	    // Consume a semicolon, or, failing that, see if we are allowed to
	    // pretend that there is a semicolon at this position.
	
	    pp.semicolon = function() {
	      if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected()
	    }
	
	    pp.afterTrailingComma = function(tokType) {
	      if (this.type == tokType) {
	        if (this.options.onTrailingComma)
	          this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc)
	        this.next()
	        return true
	      }
	    }
	
	    // Expect a token of a given type. If found, consume it, otherwise,
	    // raise an unexpected token error.
	
	    pp.expect = function(type) {
	      this.eat(type) || this.unexpected()
	    }
	
	    // Raise an unexpected token error.
	
	    pp.unexpected = function(pos) {
	      this.raise(pos != null ? pos : this.start, "Unexpected token")
	    }
	
	    var DestructuringErrors = function DestructuringErrors() {
	      this.shorthandAssign = 0
	      this.trailingComma = 0
	    };
	
	    pp.checkPatternErrors = function(refDestructuringErrors, andThrow) {
	      var trailing = refDestructuringErrors && refDestructuringErrors.trailingComma
	      if (!andThrow) return !!trailing
	      if (trailing) this.raise(trailing, "Comma is not permitted after the rest element")
	    }
	
	    pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
	      var pos = refDestructuringErrors && refDestructuringErrors.shorthandAssign
	      if (!andThrow) return !!pos
	      if (pos) this.raise(pos, "Shorthand property assignments are valid only in destructuring patterns")
	    }
	
	    var pp$1 = Parser.prototype
	
	    // ### Statement parsing
	
	    // Parse a program. Initializes the parser, reads any number of
	    // statements, and wraps them in a Program node.  Optionally takes a
	    // `program` argument.  If present, the statements will be appended
	    // to its body instead of creating a new node.
	
	    pp$1.parseTopLevel = function(node) {
	      var this$1 = this;
	
	      var first = true
	      if (!node.body) node.body = []
	      while (this.type !== tt.eof) {
	        var stmt = this$1.parseStatement(true, true)
	        node.body.push(stmt)
	        if (first) {
	          if (this$1.isUseStrict(stmt)) this$1.setStrict(true)
	          first = false
	        }
	      }
	      this.next()
	      if (this.options.ecmaVersion >= 6) {
	        node.sourceType = this.options.sourceType
	      }
	      return this.finishNode(node, "Program")
	    }
	
	    var loopLabel = {kind: "loop"};
	    var switchLabel = {kind: "switch"};
	    pp$1.isLet = function() {
	      if (this.type !== tt.name || this.options.ecmaVersion < 6 || this.value != "let") return false
	      skipWhiteSpace.lastIndex = this.pos
	      var skip = skipWhiteSpace.exec(this.input)
	      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next)
	      if (nextCh === 91 || nextCh == 123) return true // '{' and '['
	      if (isIdentifierStart(nextCh, true)) {
	        for (var pos = next + 1; isIdentifierChar(this.input.charCodeAt(pos), true); ++pos) {}
	        var ident = this.input.slice(next, pos)
	        if (!this.isKeyword(ident)) return true
	      }
	      return false
	    }
	
	    // Parse a single statement.
	    //
	    // If expecting a statement and finding a slash operator, parse a
	    // regular expression literal. This is to handle cases like
	    // `if (foo) /blah/.exec(foo)`, where looking at the previous token
	    // does not help.
	
	    pp$1.parseStatement = function(declaration, topLevel) {
	      var starttype = this.type, node = this.startNode(), kind
	
	      if (this.isLet()) {
	        starttype = tt._var
	        kind = "let"
	      }
	
	      // Most types of statements are recognized by the keyword they
	      // start with. Many are trivial to parse, some require a bit of
	      // complexity.
	
	      switch (starttype) {
	      case tt._break: case tt._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
	      case tt._debugger: return this.parseDebuggerStatement(node)
	      case tt._do: return this.parseDoStatement(node)
	      case tt._for: return this.parseForStatement(node)
	      case tt._function:
	        if (!declaration && this.options.ecmaVersion >= 6) this.unexpected()
	        return this.parseFunctionStatement(node)
	      case tt._class:
	        if (!declaration) this.unexpected()
	        return this.parseClass(node, true)
	      case tt._if: return this.parseIfStatement(node)
	      case tt._return: return this.parseReturnStatement(node)
	      case tt._switch: return this.parseSwitchStatement(node)
	      case tt._throw: return this.parseThrowStatement(node)
	      case tt._try: return this.parseTryStatement(node)
	      case tt._const: case tt._var:
	        kind = kind || this.value
	        if (!declaration && kind != "var") this.unexpected()
	        return this.parseVarStatement(node, kind)
	      case tt._while: return this.parseWhileStatement(node)
	      case tt._with: return this.parseWithStatement(node)
	      case tt.braceL: return this.parseBlock()
	      case tt.semi: return this.parseEmptyStatement(node)
	      case tt._export:
	      case tt._import:
	        if (!this.options.allowImportExportEverywhere) {
	          if (!topLevel)
	            this.raise(this.start, "'import' and 'export' may only appear at the top level")
	          if (!this.inModule)
	            this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")
	        }
	        return starttype === tt._import ? this.parseImport(node) : this.parseExport(node)
	
	        // If the statement does not start with a statement keyword or a
	        // brace, it's an ExpressionStatement or LabeledStatement. We
	        // simply start parsing an expression, and afterwards, if the
	        // next token is a colon and the expression was a simple
	        // Identifier node, we switch to interpreting it as a label.
	      default:
	        var maybeName = this.value, expr = this.parseExpression()
	        if (starttype === tt.name && expr.type === "Identifier" && this.eat(tt.colon))
	          return this.parseLabeledStatement(node, maybeName, expr)
	        else return this.parseExpressionStatement(node, expr)
	      }
	    }
	
	    pp$1.parseBreakContinueStatement = function(node, keyword) {
	      var this$1 = this;
	
	      var isBreak = keyword == "break"
	      this.next()
	      if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null
	      else if (this.type !== tt.name) this.unexpected()
	      else {
	        node.label = this.parseIdent()
	        this.semicolon()
	      }
	
	      // Verify that there is an actual destination to break or
	      // continue to.
	      for (var i = 0; i < this.labels.length; ++i) {
	        var lab = this$1.labels[i]
	        if (node.label == null || lab.name === node.label.name) {
	          if (lab.kind != null && (isBreak || lab.kind === "loop")) break
	          if (node.label && isBreak) break
	        }
	      }
	      if (i === this.labels.length) this.raise(node.start, "Unsyntactic " + keyword)
	      return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
	    }
	
	    pp$1.parseDebuggerStatement = function(node) {
	      this.next()
	      this.semicolon()
	      return this.finishNode(node, "DebuggerStatement")
	    }
	
	    pp$1.parseDoStatement = function(node) {
	      this.next()
	      this.labels.push(loopLabel)
	      node.body = this.parseStatement(false)
	      this.labels.pop()
	      this.expect(tt._while)
	      node.test = this.parseParenExpression()
	      if (this.options.ecmaVersion >= 6)
	        this.eat(tt.semi)
	      else
	        this.semicolon()
	      return this.finishNode(node, "DoWhileStatement")
	    }
	
	    // Disambiguating between a `for` and a `for`/`in` or `for`/`of`
	    // loop is non-trivial. Basically, we have to parse the init `var`
	    // statement or expression, disallowing the `in` operator (see
	    // the second parameter to `parseExpression`), and then check
	    // whether the next token is `in` or `of`. When there is no init
	    // part (semicolon immediately after the opening parenthesis), it
	    // is a regular `for` loop.
	
	    pp$1.parseForStatement = function(node) {
	      this.next()
	      this.labels.push(loopLabel)
	      this.expect(tt.parenL)
	      if (this.type === tt.semi) return this.parseFor(node, null)
	      var isLet = this.isLet()
	      if (this.type === tt._var || this.type === tt._const || isLet) {
	        var init$1 = this.startNode(), kind = isLet ? "let" : this.value
	        this.next()
	        this.parseVar(init$1, true, kind)
	        this.finishNode(init$1, "VariableDeclaration")
	        if ((this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1 &&
	            !(kind !== "var" && init$1.declarations[0].init))
	          return this.parseForIn(node, init$1)
	        return this.parseFor(node, init$1)
	      }
	      var refDestructuringErrors = new DestructuringErrors
	      var init = this.parseExpression(true, refDestructuringErrors)
	      if (this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
	        this.checkPatternErrors(refDestructuringErrors, true)
	        this.toAssignable(init)
	        this.checkLVal(init)
	        return this.parseForIn(node, init)
	      } else {
	        this.checkExpressionErrors(refDestructuringErrors, true)
	      }
	      return this.parseFor(node, init)
	    }
	
	    pp$1.parseFunctionStatement = function(node) {
	      this.next()
	      return this.parseFunction(node, true)
	    }
	
	    pp$1.parseIfStatement = function(node) {
	      this.next()
	      node.test = this.parseParenExpression()
	      node.consequent = this.parseStatement(false)
	      node.alternate = this.eat(tt._else) ? this.parseStatement(false) : null
	      return this.finishNode(node, "IfStatement")
	    }
	
	    pp$1.parseReturnStatement = function(node) {
	      if (!this.inFunction && !this.options.allowReturnOutsideFunction)
	        this.raise(this.start, "'return' outside of function")
	      this.next()
	
	      // In `return` (and `break`/`continue`), the keywords with
	      // optional arguments, we eagerly look for a semicolon or the
	      // possibility to insert one.
	
	      if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null
	      else { node.argument = this.parseExpression(); this.semicolon() }
	      return this.finishNode(node, "ReturnStatement")
	    }
	
	    pp$1.parseSwitchStatement = function(node) {
	      var this$1 = this;
	
	      this.next()
	      node.discriminant = this.parseParenExpression()
	      node.cases = []
	      this.expect(tt.braceL)
	      this.labels.push(switchLabel)
	
	      // Statements under must be grouped (by label) in SwitchCase
	      // nodes. `cur` is used to keep the node that we are currently
	      // adding statements to.
	
	      for (var cur, sawDefault = false; this.type != tt.braceR;) {
	        if (this$1.type === tt._case || this$1.type === tt._default) {
	          var isCase = this$1.type === tt._case
	          if (cur) this$1.finishNode(cur, "SwitchCase")
	          node.cases.push(cur = this$1.startNode())
	          cur.consequent = []
	          this$1.next()
	          if (isCase) {
	            cur.test = this$1.parseExpression()
	          } else {
	            if (sawDefault) this$1.raiseRecoverable(this$1.lastTokStart, "Multiple default clauses")
	            sawDefault = true
	            cur.test = null
	          }
	          this$1.expect(tt.colon)
	        } else {
	          if (!cur) this$1.unexpected()
	          cur.consequent.push(this$1.parseStatement(true))
	        }
	      }
	      if (cur) this.finishNode(cur, "SwitchCase")
	      this.next() // Closing brace
	      this.labels.pop()
	      return this.finishNode(node, "SwitchStatement")
	    }
	
	    pp$1.parseThrowStatement = function(node) {
	      this.next()
	      if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
	        this.raise(this.lastTokEnd, "Illegal newline after throw")
	      node.argument = this.parseExpression()
	      this.semicolon()
	      return this.finishNode(node, "ThrowStatement")
	    }
	
	    // Reused empty array added for node fields that are always empty.
	
	    var empty = []
	
	    pp$1.parseTryStatement = function(node) {
	      this.next()
	      node.block = this.parseBlock()
	      node.handler = null
	      if (this.type === tt._catch) {
	        var clause = this.startNode()
	        this.next()
	        this.expect(tt.parenL)
	        clause.param = this.parseBindingAtom()
	        this.checkLVal(clause.param, true)
	        this.expect(tt.parenR)
	        clause.body = this.parseBlock()
	        node.handler = this.finishNode(clause, "CatchClause")
	      }
	      node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null
	      if (!node.handler && !node.finalizer)
	        this.raise(node.start, "Missing catch or finally clause")
	      return this.finishNode(node, "TryStatement")
	    }
	
	    pp$1.parseVarStatement = function(node, kind) {
	      this.next()
	      this.parseVar(node, false, kind)
	      this.semicolon()
	      return this.finishNode(node, "VariableDeclaration")
	    }
	
	    pp$1.parseWhileStatement = function(node) {
	      this.next()
	      node.test = this.parseParenExpression()
	      this.labels.push(loopLabel)
	      node.body = this.parseStatement(false)
	      this.labels.pop()
	      return this.finishNode(node, "WhileStatement")
	    }
	
	    pp$1.parseWithStatement = function(node) {
	      if (this.strict) this.raise(this.start, "'with' in strict mode")
	      this.next()
	      node.object = this.parseParenExpression()
	      node.body = this.parseStatement(false)
	      return this.finishNode(node, "WithStatement")
	    }
	
	    pp$1.parseEmptyStatement = function(node) {
	      this.next()
	      return this.finishNode(node, "EmptyStatement")
	    }
	
	    pp$1.parseLabeledStatement = function(node, maybeName, expr) {
	      var this$1 = this;
	
	      for (var i = 0; i < this.labels.length; ++i)
	        if (this$1.labels[i].name === maybeName) this$1.raise(expr.start, "Label '" + maybeName + "' is already declared")
	      var kind = this.type.isLoop ? "loop" : this.type === tt._switch ? "switch" : null
	      for (var i$1 = this.labels.length - 1; i$1 >= 0; i$1--) {
	        var label = this$1.labels[i$1]
	        if (label.statementStart == node.start) {
	          label.statementStart = this$1.start
	          label.kind = kind
	        } else break
	      }
	      this.labels.push({name: maybeName, kind: kind, statementStart: this.start})
	      node.body = this.parseStatement(true)
	      this.labels.pop()
	      node.label = expr
	      return this.finishNode(node, "LabeledStatement")
	    }
	
	    pp$1.parseExpressionStatement = function(node, expr) {
	      node.expression = expr
	      this.semicolon()
	      return this.finishNode(node, "ExpressionStatement")
	    }
	
	    // Parse a semicolon-enclosed block of statements, handling `"use
	    // strict"` declarations when `allowStrict` is true (used for
	    // function bodies).
	
	    pp$1.parseBlock = function(allowStrict) {
	      var this$1 = this;
	
	      var node = this.startNode(), first = true, oldStrict
	      node.body = []
	      this.expect(tt.braceL)
	      while (!this.eat(tt.braceR)) {
	        var stmt = this$1.parseStatement(true)
	        node.body.push(stmt)
	        if (first && allowStrict && this$1.isUseStrict(stmt)) {
	          oldStrict = this$1.strict
	          this$1.setStrict(this$1.strict = true)
	        }
	        first = false
	      }
	      if (oldStrict === false) this.setStrict(false)
	      return this.finishNode(node, "BlockStatement")
	    }
	
	    // Parse a regular `for` loop. The disambiguation code in
	    // `parseStatement` will already have parsed the init statement or
	    // expression.
	
	    pp$1.parseFor = function(node, init) {
	      node.init = init
	      this.expect(tt.semi)
	      node.test = this.type === tt.semi ? null : this.parseExpression()
	      this.expect(tt.semi)
	      node.update = this.type === tt.parenR ? null : this.parseExpression()
	      this.expect(tt.parenR)
	      node.body = this.parseStatement(false)
	      this.labels.pop()
	      return this.finishNode(node, "ForStatement")
	    }
	
	    // Parse a `for`/`in` and `for`/`of` loop, which are almost
	    // same from parser's perspective.
	
	    pp$1.parseForIn = function(node, init) {
	      var type = this.type === tt._in ? "ForInStatement" : "ForOfStatement"
	      this.next()
	      node.left = init
	      node.right = this.parseExpression()
	      this.expect(tt.parenR)
	      node.body = this.parseStatement(false)
	      this.labels.pop()
	      return this.finishNode(node, type)
	    }
	
	    // Parse a list of variable declarations.
	
	    pp$1.parseVar = function(node, isFor, kind) {
	      var this$1 = this;
	
	      node.declarations = []
	      node.kind = kind
	      for (;;) {
	        var decl = this$1.startNode()
	        this$1.parseVarId(decl)
	        if (this$1.eat(tt.eq)) {
	          decl.init = this$1.parseMaybeAssign(isFor)
	        } else if (kind === "const" && !(this$1.type === tt._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual("of")))) {
	          this$1.unexpected()
	        } else if (decl.id.type != "Identifier" && !(isFor && (this$1.type === tt._in || this$1.isContextual("of")))) {
	          this$1.raise(this$1.lastTokEnd, "Complex binding patterns require an initialization value")
	        } else {
	          decl.init = null
	        }
	        node.declarations.push(this$1.finishNode(decl, "VariableDeclarator"))
	        if (!this$1.eat(tt.comma)) break
	      }
	      return node
	    }
	
	    pp$1.parseVarId = function(decl) {
	      decl.id = this.parseBindingAtom()
	      this.checkLVal(decl.id, true)
	    }
	
	    // Parse a function declaration or literal (depending on the
	    // `isStatement` parameter).
	
	    pp$1.parseFunction = function(node, isStatement, allowExpressionBody) {
	      this.initFunction(node)
	      if (this.options.ecmaVersion >= 6)
	        node.generator = this.eat(tt.star)
	      var oldInGen = this.inGenerator
	      this.inGenerator = node.generator
	      if (isStatement || this.type === tt.name)
	        node.id = this.parseIdent()
	      this.parseFunctionParams(node)
	      this.parseFunctionBody(node, allowExpressionBody)
	      this.inGenerator = oldInGen
	      return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression")
	    }
	
	    pp$1.parseFunctionParams = function(node) {
	      this.expect(tt.parenL)
	      node.params = this.parseBindingList(tt.parenR, false, false, true)
	    }
	
	    // Parse a class declaration or literal (depending on the
	    // `isStatement` parameter).
	
	    pp$1.parseClass = function(node, isStatement) {
	      var this$1 = this;
	
	      this.next()
	      this.parseClassId(node, isStatement)
	      this.parseClassSuper(node)
	      var classBody = this.startNode()
	      var hadConstructor = false
	      classBody.body = []
	      this.expect(tt.braceL)
	      while (!this.eat(tt.braceR)) {
	        if (this$1.eat(tt.semi)) continue
	        var method = this$1.startNode()
	        var isGenerator = this$1.eat(tt.star)
	        var isMaybeStatic = this$1.type === tt.name && this$1.value === "static"
	        this$1.parsePropertyName(method)
	        method.static = isMaybeStatic && this$1.type !== tt.parenL
	        if (method.static) {
	          if (isGenerator) this$1.unexpected()
	          isGenerator = this$1.eat(tt.star)
	          this$1.parsePropertyName(method)
	        }
	        method.kind = "method"
	        var isGetSet = false
	        if (!method.computed) {
	          var key = method.key;
	          if (!isGenerator && key.type === "Identifier" && this$1.type !== tt.parenL && (key.name === "get" || key.name === "set")) {
	            isGetSet = true
	            method.kind = key.name
	            key = this$1.parsePropertyName(method)
	          }
	          if (!method.static && (key.type === "Identifier" && key.name === "constructor" ||
	              key.type === "Literal" && key.value === "constructor")) {
	            if (hadConstructor) this$1.raise(key.start, "Duplicate constructor in the same class")
	            if (isGetSet) this$1.raise(key.start, "Constructor can't have get/set modifier")
	            if (isGenerator) this$1.raise(key.start, "Constructor can't be a generator")
	            method.kind = "constructor"
	            hadConstructor = true
	          }
	        }
	        this$1.parseClassMethod(classBody, method, isGenerator)
	        if (isGetSet) {
	          var paramCount = method.kind === "get" ? 0 : 1
	          if (method.value.params.length !== paramCount) {
	            var start = method.value.start
	            if (method.kind === "get")
	              this$1.raiseRecoverable(start, "getter should have no params")
	            else
	              this$1.raiseRecoverable(start, "setter should have exactly one param")
	          }
	          if (method.kind === "set" && method.value.params[0].type === "RestElement")
	            this$1.raise(method.value.params[0].start, "Setter cannot use rest params")
	        }
	      }
	      node.body = this.finishNode(classBody, "ClassBody")
	      return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
	    }
	
	    pp$1.parseClassMethod = function(classBody, method, isGenerator) {
	      method.value = this.parseMethod(isGenerator)
	      classBody.body.push(this.finishNode(method, "MethodDefinition"))
	    }
	
	    pp$1.parseClassId = function(node, isStatement) {
	      node.id = this.type === tt.name ? this.parseIdent() : isStatement ? this.unexpected() : null
	    }
	
	    pp$1.parseClassSuper = function(node) {
	      node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null
	    }
	
	    // Parses module export declaration.
	
	    pp$1.parseExport = function(node) {
	      var this$1 = this;
	
	      this.next()
	      // export * from '...'
	      if (this.eat(tt.star)) {
	        this.expectContextual("from")
	        node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()
	        this.semicolon()
	        return this.finishNode(node, "ExportAllDeclaration")
	      }
	      if (this.eat(tt._default)) { // export default ...
	        var parens = this.type == tt.parenL
	        var expr = this.parseMaybeAssign()
	        var needsSemi = true
	        if (!parens && (expr.type == "FunctionExpression" ||
	                        expr.type == "ClassExpression")) {
	          needsSemi = false
	          if (expr.id) {
	            expr.type = expr.type == "FunctionExpression"
	              ? "FunctionDeclaration"
	              : "ClassDeclaration"
	          }
	        }
	        node.declaration = expr
	        if (needsSemi) this.semicolon()
	        return this.finishNode(node, "ExportDefaultDeclaration")
	      }
	      // export var|const|let|function|class ...
	      if (this.shouldParseExportStatement()) {
	        node.declaration = this.parseStatement(true)
	        node.specifiers = []
	        node.source = null
	      } else { // export { x, y as z } [from '...']
	        node.declaration = null
	        node.specifiers = this.parseExportSpecifiers()
	        if (this.eatContextual("from")) {
	          node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()
	        } else {
	          // check for keywords used as local names
	          for (var i = 0; i < node.specifiers.length; i++) {
	            if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {
	              this$1.unexpected(node.specifiers[i].local.start)
	            }
	          }
	
	          node.source = null
	        }
	        this.semicolon()
	      }
	      return this.finishNode(node, "ExportNamedDeclaration")
	    }
	
	    pp$1.shouldParseExportStatement = function() {
	      return this.type.keyword || this.isLet()
	    }
	
	    // Parses a comma-separated list of module exports.
	
	    pp$1.parseExportSpecifiers = function() {
	      var this$1 = this;
	
	      var nodes = [], first = true
	      // export { x, y as z } [from '...']
	      this.expect(tt.braceL)
	      while (!this.eat(tt.braceR)) {
	        if (!first) {
	          this$1.expect(tt.comma)
	          if (this$1.afterTrailingComma(tt.braceR)) break
	        } else first = false
	
	        var node = this$1.startNode()
	        node.local = this$1.parseIdent(this$1.type === tt._default)
	        node.exported = this$1.eatContextual("as") ? this$1.parseIdent(true) : node.local
	        nodes.push(this$1.finishNode(node, "ExportSpecifier"))
	      }
	      return nodes
	    }
	
	    // Parses import declaration.
	
	    pp$1.parseImport = function(node) {
	      this.next()
	      // import '...'
	      if (this.type === tt.string) {
	        node.specifiers = empty
	        node.source = this.parseExprAtom()
	      } else {
	        node.specifiers = this.parseImportSpecifiers()
	        this.expectContextual("from")
	        node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()
	      }
	      this.semicolon()
	      return this.finishNode(node, "ImportDeclaration")
	    }
	
	    // Parses a comma-separated list of module imports.
	
	    pp$1.parseImportSpecifiers = function() {
	      var this$1 = this;
	
	      var nodes = [], first = true
	      if (this.type === tt.name) {
	        // import defaultObj, { x, y as z } from '...'
	        var node = this.startNode()
	        node.local = this.parseIdent()
	        this.checkLVal(node.local, true)
	        nodes.push(this.finishNode(node, "ImportDefaultSpecifier"))
	        if (!this.eat(tt.comma)) return nodes
	      }
	      if (this.type === tt.star) {
	        var node$1 = this.startNode()
	        this.next()
	        this.expectContextual("as")
	        node$1.local = this.parseIdent()
	        this.checkLVal(node$1.local, true)
	        nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"))
	        return nodes
	      }
	      this.expect(tt.braceL)
	      while (!this.eat(tt.braceR)) {
	        if (!first) {
	          this$1.expect(tt.comma)
	          if (this$1.afterTrailingComma(tt.braceR)) break
	        } else first = false
	
	        var node$2 = this$1.startNode()
	        node$2.imported = this$1.parseIdent(true)
	        if (this$1.eatContextual("as")) {
	          node$2.local = this$1.parseIdent()
	        } else {
	          node$2.local = node$2.imported
	          if (this$1.isKeyword(node$2.local.name)) this$1.unexpected(node$2.local.start)
	          if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raise(node$2.local.start, "The keyword '" + node$2.local.name + "' is reserved")
	        }
	        this$1.checkLVal(node$2.local, true)
	        nodes.push(this$1.finishNode(node$2, "ImportSpecifier"))
	      }
	      return nodes
	    }
	
	    var pp$2 = Parser.prototype
	
	    // Convert existing expression atom to assignable pattern
	    // if possible.
	
	    pp$2.toAssignable = function(node, isBinding) {
	      var this$1 = this;
	
	      if (this.options.ecmaVersion >= 6 && node) {
	        switch (node.type) {
	        case "Identifier":
	        case "ObjectPattern":
	        case "ArrayPattern":
	          break
	
	        case "ObjectExpression":
	          node.type = "ObjectPattern"
	          for (var i = 0; i < node.properties.length; i++) {
	            var prop = node.properties[i]
	            if (prop.kind !== "init") this$1.raise(prop.key.start, "Object pattern can't contain getter or setter")
	            this$1.toAssignable(prop.value, isBinding)
	          }
	          break
	
	        case "ArrayExpression":
	          node.type = "ArrayPattern"
	          this.toAssignableList(node.elements, isBinding)
	          break
	
	        case "AssignmentExpression":
	          if (node.operator === "=") {
	            node.type = "AssignmentPattern"
	            delete node.operator
	            // falls through to AssignmentPattern
	          } else {
	            this.raise(node.left.end, "Only '=' operator can be used for specifying default value.")
	            break
	          }
	
	        case "AssignmentPattern":
	          if (node.right.type === "YieldExpression")
	            this.raise(node.right.start, "Yield expression cannot be a default value")
	          break
	
	        case "ParenthesizedExpression":
	          node.expression = this.toAssignable(node.expression, isBinding)
	          break
	
	        case "MemberExpression":
	          if (!isBinding) break
	
	        default:
	          this.raise(node.start, "Assigning to rvalue")
	        }
	      }
	      return node
	    }
	
	    // Convert list of expression atoms to binding list.
	
	    pp$2.toAssignableList = function(exprList, isBinding) {
	      var this$1 = this;
	
	      var end = exprList.length
	      if (end) {
	        var last = exprList[end - 1]
	        if (last && last.type == "RestElement") {
	          --end
	        } else if (last && last.type == "SpreadElement") {
	          last.type = "RestElement"
	          var arg = last.argument
	          this.toAssignable(arg, isBinding)
	          if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern")
	            this.unexpected(arg.start)
	          --end
	        }
	
	        if (isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
	          this.unexpected(last.argument.start)
	      }
	      for (var i = 0; i < end; i++) {
	        var elt = exprList[i]
	        if (elt) this$1.toAssignable(elt, isBinding)
	      }
	      return exprList
	    }
	
	    // Parses spread element.
	
	    pp$2.parseSpread = function(refDestructuringErrors) {
	      var node = this.startNode()
	      this.next()
	      node.argument = this.parseMaybeAssign(false, refDestructuringErrors)
	      return this.finishNode(node, "SpreadElement")
	    }
	
	    pp$2.parseRest = function(allowNonIdent) {
	      var node = this.startNode()
	      this.next()
	
	      // RestElement inside of a function parameter must be an identifier
	      if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()
	      else node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected()
	
	      return this.finishNode(node, "RestElement")
	    }
	
	    // Parses lvalue (assignable) atom.
	
	    pp$2.parseBindingAtom = function() {
	      if (this.options.ecmaVersion < 6) return this.parseIdent()
	      switch (this.type) {
	      case tt.name:
	        return this.parseIdent()
	
	      case tt.bracketL:
	        var node = this.startNode()
	        this.next()
	        node.elements = this.parseBindingList(tt.bracketR, true, true)
	        return this.finishNode(node, "ArrayPattern")
	
	      case tt.braceL:
	        return this.parseObj(true)
	
	      default:
	        this.unexpected()
	      }
	    }
	
	    pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) {
	      var this$1 = this;
	
	      var elts = [], first = true
	      while (!this.eat(close)) {
	        if (first) first = false
	        else this$1.expect(tt.comma)
	        if (allowEmpty && this$1.type === tt.comma) {
	          elts.push(null)
	        } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {
	          break
	        } else if (this$1.type === tt.ellipsis) {
	          var rest = this$1.parseRest(allowNonIdent)
	          this$1.parseBindingListItem(rest)
	          elts.push(rest)
	          if (this$1.type === tt.comma) this$1.raise(this$1.start, "Comma is not permitted after the rest element")
	          this$1.expect(close)
	          break
	        } else {
	          var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc)
	          this$1.parseBindingListItem(elem)
	          elts.push(elem)
	        }
	      }
	      return elts
	    }
	
	    pp$2.parseBindingListItem = function(param) {
	      return param
	    }
	
	    // Parses assignment pattern around given atom if possible.
	
	    pp$2.parseMaybeDefault = function(startPos, startLoc, left) {
	      left = left || this.parseBindingAtom()
	      if (this.options.ecmaVersion < 6 || !this.eat(tt.eq)) return left
	      var node = this.startNodeAt(startPos, startLoc)
	      node.left = left
	      node.right = this.parseMaybeAssign()
	      return this.finishNode(node, "AssignmentPattern")
	    }
	
	    // Verify that a node is an lval — something that can be assigned
	    // to.
	
	    pp$2.checkLVal = function(expr, isBinding, checkClashes) {
	      var this$1 = this;
	
	      switch (expr.type) {
	      case "Identifier":
	        if (this.strict && this.reservedWordsStrictBind.test(expr.name))
	          this.raiseRecoverable(expr.start, (isBinding ? "Binding " : "Assigning to ") + expr.name + " in strict mode")
	        if (checkClashes) {
	          if (has(checkClashes, expr.name))
	            this.raiseRecoverable(expr.start, "Argument name clash")
	          checkClashes[expr.name] = true
	        }
	        break
	
	      case "MemberExpression":
	        if (isBinding) this.raiseRecoverable(expr.start, (isBinding ? "Binding" : "Assigning to") + " member expression")
	        break
	
	      case "ObjectPattern":
	        for (var i = 0; i < expr.properties.length; i++)
	          this$1.checkLVal(expr.properties[i].value, isBinding, checkClashes)
	        break
	
	      case "ArrayPattern":
	        for (var i$1 = 0; i$1 < expr.elements.length; i$1++) {
	          var elem = expr.elements[i$1]
	          if (elem) this$1.checkLVal(elem, isBinding, checkClashes)
	        }
	        break
	
	      case "AssignmentPattern":
	        this.checkLVal(expr.left, isBinding, checkClashes)
	        break
	
	      case "RestElement":
	        this.checkLVal(expr.argument, isBinding, checkClashes)
	        break
	
	      case "ParenthesizedExpression":
	        this.checkLVal(expr.expression, isBinding, checkClashes)
	        break
	
	      default:
	        this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " rvalue")
	      }
	    }
	
	    var pp$3 = Parser.prototype
	
	    // Check if property name clashes with already added.
	    // Object/class getters and setters are not allowed to clash —
	    // either with each other or with an init property — and in
	    // strict mode, init properties are also not allowed to be repeated.
	
	    pp$3.checkPropClash = function(prop, propHash) {
	      if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
	        return
	      var key = prop.key;
	      var name
	      switch (key.type) {
	      case "Identifier": name = key.name; break
	      case "Literal": name = String(key.value); break
	      default: return
	      }
	      var kind = prop.kind;
	      if (this.options.ecmaVersion >= 6) {
	        if (name === "__proto__" && kind === "init") {
	          if (propHash.proto) this.raiseRecoverable(key.start, "Redefinition of __proto__ property")
	          propHash.proto = true
	        }
	        return
	      }
	      name = "$" + name
	      var other = propHash[name]
	      if (other) {
	        var isGetSet = kind !== "init"
	        if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init))
	          this.raiseRecoverable(key.start, "Redefinition of property")
	      } else {
	        other = propHash[name] = {
	          init: false,
	          get: false,
	          set: false
	        }
	      }
	      other[kind] = true
	    }
	
	    // ### Expression parsing
	
	    // These nest, from the most general expression type at the top to
	    // 'atomic', nondivisible expression types at the bottom. Most of
	    // the functions will simply let the function(s) below them parse,
	    // and, *if* the syntactic construct they handle is present, wrap
	    // the AST node that the inner parser gave them in another node.
	
	    // Parse a full expression. The optional arguments are used to
	    // forbid the `in` operator (in for loops initalization expressions)
	    // and provide reference for storing '=' operator inside shorthand
	    // property assignment in contexts where both object expression
	    // and object pattern might appear (so it's possible to raise
	    // delayed syntax error at correct position).
	
	    pp$3.parseExpression = function(noIn, refDestructuringErrors) {
	      var this$1 = this;
	
	      var startPos = this.start, startLoc = this.startLoc
	      var expr = this.parseMaybeAssign(noIn, refDestructuringErrors)
	      if (this.type === tt.comma) {
	        var node = this.startNodeAt(startPos, startLoc)
	        node.expressions = [expr]
	        while (this.eat(tt.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors))
	        return this.finishNode(node, "SequenceExpression")
	      }
	      return expr
	    }
	
	    // Parse an assignment expression. This includes applications of
	    // operators like `+=`.
	
	    pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {
	      if (this.inGenerator && this.isContextual("yield")) return this.parseYield()
	
	      var ownDestructuringErrors = false
	      if (!refDestructuringErrors) {
	        refDestructuringErrors = new DestructuringErrors
	        ownDestructuringErrors = true
	      }
	      var startPos = this.start, startLoc = this.startLoc
	      if (this.type == tt.parenL || this.type == tt.name)
	        this.potentialArrowAt = this.start
	      var left = this.parseMaybeConditional(noIn, refDestructuringErrors)
	      if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc)
	      if (this.type.isAssign) {
	        this.checkPatternErrors(refDestructuringErrors, true)
	        if (!ownDestructuringErrors) DestructuringErrors.call(refDestructuringErrors)
	        var node = this.startNodeAt(startPos, startLoc)
	        node.operator = this.value
	        node.left = this.type === tt.eq ? this.toAssignable(left) : left
	        refDestructuringErrors.shorthandAssign = 0 // reset because shorthand default was used correctly
	        this.checkLVal(left)
	        this.next()
	        node.right = this.parseMaybeAssign(noIn)
	        return this.finishNode(node, "AssignmentExpression")
	      } else {
	        if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true)
	      }
	      return left
	    }
	
	    // Parse a ternary conditional (`?:`) operator.
	
	    pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {
	      var startPos = this.start, startLoc = this.startLoc
	      var expr = this.parseExprOps(noIn, refDestructuringErrors)
	      if (this.checkExpressionErrors(refDestructuringErrors)) return expr
	      if (this.eat(tt.question)) {
	        var node = this.startNodeAt(startPos, startLoc)
	        node.test = expr
	        node.consequent = this.parseMaybeAssign()
	        this.expect(tt.colon)
	        node.alternate = this.parseMaybeAssign(noIn)
	        return this.finishNode(node, "ConditionalExpression")
	      }
	      return expr
	    }
	
	    // Start the precedence parser.
	
	    pp$3.parseExprOps = function(noIn, refDestructuringErrors) {
	      var startPos = this.start, startLoc = this.startLoc
	      var expr = this.parseMaybeUnary(refDestructuringErrors, false)
	      if (this.checkExpressionErrors(refDestructuringErrors)) return expr
	      return this.parseExprOp(expr, startPos, startLoc, -1, noIn)
	    }
	
	    // Parse binary operators with the operator precedence parsing
	    // algorithm. `left` is the left-hand side of the operator.
	    // `minPrec` provides context that allows the function to stop and
	    // defer further parser to one of its callers when it encounters an
	    // operator that has a lower precedence than the set it is parsing.
	
	    pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {
	      var prec = this.type.binop
	      if (prec != null && (!noIn || this.type !== tt._in)) {
	        if (prec > minPrec) {
	          var logical = this.type === tt.logicalOR || this.type === tt.logicalAND
	          var op = this.value
	          this.next()
	          var startPos = this.start, startLoc = this.startLoc
	          var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn)
	          var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical)
	          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)
	        }
	      }
	      return left
	    }
	
	    pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {
	      var node = this.startNodeAt(startPos, startLoc)
	      node.left = left
	      node.operator = op
	      node.right = right
	      return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
	    }
	
	    // Parse unary operators, both prefix and postfix.
	
	    pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {
	      var this$1 = this;
	
	      var startPos = this.start, startLoc = this.startLoc, expr
	      if (this.type.prefix) {
	        var node = this.startNode(), update = this.type === tt.incDec
	        node.operator = this.value
	        node.prefix = true
	        this.next()
	        node.argument = this.parseMaybeUnary(null, true)
	        this.checkExpressionErrors(refDestructuringErrors, true)
	        if (update) this.checkLVal(node.argument)
	        else if (this.strict && node.operator === "delete" &&
	                 node.argument.type === "Identifier")
	          this.raiseRecoverable(node.start, "Deleting local variable in strict mode")
	        else sawUnary = true
	        expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression")
	      } else {
	        expr = this.parseExprSubscripts(refDestructuringErrors)
	        if (this.checkExpressionErrors(refDestructuringErrors)) return expr
	        while (this.type.postfix && !this.canInsertSemicolon()) {
	          var node$1 = this$1.startNodeAt(startPos, startLoc)
	          node$1.operator = this$1.value
	          node$1.prefix = false
	          node$1.argument = expr
	          this$1.checkLVal(expr)
	          this$1.next()
	          expr = this$1.finishNode(node$1, "UpdateExpression")
	        }
	      }
	
	      if (!sawUnary && this.eat(tt.starstar))
	        return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false)
	      else
	        return expr
	    }
	
	    // Parse call, dot, and `[]`-subscript expressions.
	
	    pp$3.parseExprSubscripts = function(refDestructuringErrors) {
	      var startPos = this.start, startLoc = this.startLoc
	      var expr = this.parseExprAtom(refDestructuringErrors)
	      var skipArrowSubscripts = expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")"
	      if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr
	      return this.parseSubscripts(expr, startPos, startLoc)
	    }
	
	    pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {
	      var this$1 = this;
	
	      for (;;) {
	        if (this$1.eat(tt.dot)) {
	          var node = this$1.startNodeAt(startPos, startLoc)
	          node.object = base
	          node.property = this$1.parseIdent(true)
	          node.computed = false
	          base = this$1.finishNode(node, "MemberExpression")
	        } else if (this$1.eat(tt.bracketL)) {
	          var node$1 = this$1.startNodeAt(startPos, startLoc)
	          node$1.object = base
	          node$1.property = this$1.parseExpression()
	          node$1.computed = true
	          this$1.expect(tt.bracketR)
	          base = this$1.finishNode(node$1, "MemberExpression")
	        } else if (!noCalls && this$1.eat(tt.parenL)) {
	          var node$2 = this$1.startNodeAt(startPos, startLoc)
	          node$2.callee = base
	          node$2.arguments = this$1.parseExprList(tt.parenR, false)
	          base = this$1.finishNode(node$2, "CallExpression")
	        } else if (this$1.type === tt.backQuote) {
	          var node$3 = this$1.startNodeAt(startPos, startLoc)
	          node$3.tag = base
	          node$3.quasi = this$1.parseTemplate()
	          base = this$1.finishNode(node$3, "TaggedTemplateExpression")
	        } else {
	          return base
	        }
	      }
	    }
	
	    // Parse an atomic expression — either a single token that is an
	    // expression, an expression started by a keyword like `function` or
	    // `new`, or an expression wrapped in punctuation like `()`, `[]`,
	    // or `{}`.
	
	    pp$3.parseExprAtom = function(refDestructuringErrors) {
	      var node, canBeArrow = this.potentialArrowAt == this.start
	      switch (this.type) {
	      case tt._super:
	        if (!this.inFunction)
	          this.raise(this.start, "'super' outside of function or class")
	
	      case tt._this:
	        var type = this.type === tt._this ? "ThisExpression" : "Super"
	        node = this.startNode()
	        this.next()
	        return this.finishNode(node, type)
	
	      case tt.name:
	        var startPos = this.start, startLoc = this.startLoc
	        var id = this.parseIdent(this.type !== tt.name)
	        if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow))
	          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id])
	        return id
	
	      case tt.regexp:
	        var value = this.value
	        node = this.parseLiteral(value.value)
	        node.regex = {pattern: value.pattern, flags: value.flags}
	        return node
	
	      case tt.num: case tt.string:
	        return this.parseLiteral(this.value)
	
	      case tt._null: case tt._true: case tt._false:
	        node = this.startNode()
	        node.value = this.type === tt._null ? null : this.type === tt._true
	        node.raw = this.type.keyword
	        this.next()
	        return this.finishNode(node, "Literal")
	
	      case tt.parenL:
	        return this.parseParenAndDistinguishExpression(canBeArrow)
	
	      case tt.bracketL:
	        node = this.startNode()
	        this.next()
	        node.elements = this.parseExprList(tt.bracketR, true, true, refDestructuringErrors)
	        return this.finishNode(node, "ArrayExpression")
	
	      case tt.braceL:
	        return this.parseObj(false, refDestructuringErrors)
	
	      case tt._function:
	        node = this.startNode()
	        this.next()
	        return this.parseFunction(node, false)
	
	      case tt._class:
	        return this.parseClass(this.startNode(), false)
	
	      case tt._new:
	        return this.parseNew()
	
	      case tt.backQuote:
	        return this.parseTemplate()
	
	      default:
	        this.unexpected()
	      }
	    }
	
	    pp$3.parseLiteral = function(value) {
	      var node = this.startNode()
	      node.value = value
	      node.raw = this.input.slice(this.start, this.end)
	      this.next()
	      return this.finishNode(node, "Literal")
	    }
	
	    pp$3.parseParenExpression = function() {
	      this.expect(tt.parenL)
	      var val = this.parseExpression()
	      this.expect(tt.parenR)
	      return val
	    }
	
	    pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {
	      var this$1 = this;
	
	      var startPos = this.start, startLoc = this.startLoc, val
	      if (this.options.ecmaVersion >= 6) {
	        this.next()
	
	        var innerStartPos = this.start, innerStartLoc = this.startLoc
	        var exprList = [], first = true
	        var refDestructuringErrors = new DestructuringErrors, spreadStart, innerParenStart
	        while (this.type !== tt.parenR) {
	          first ? first = false : this$1.expect(tt.comma)
	          if (this$1.type === tt.ellipsis) {
	            spreadStart = this$1.start
	            exprList.push(this$1.parseParenItem(this$1.parseRest()))
	            break
	          } else {
	            if (this$1.type === tt.parenL && !innerParenStart) {
	              innerParenStart = this$1.start
	            }
	            exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem))
	          }
	        }
	        var innerEndPos = this.start, innerEndLoc = this.startLoc
	        this.expect(tt.parenR)
	
	        if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow)) {
	          this.checkPatternErrors(refDestructuringErrors, true)
	          if (innerParenStart) this.unexpected(innerParenStart)
	          return this.parseParenArrowList(startPos, startLoc, exprList)
	        }
	
	        if (!exprList.length) this.unexpected(this.lastTokStart)
	        if (spreadStart) this.unexpected(spreadStart)
	        this.checkExpressionErrors(refDestructuringErrors, true)
	
	        if (exprList.length > 1) {
	          val = this.startNodeAt(innerStartPos, innerStartLoc)
	          val.expressions = exprList
	          this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc)
	        } else {
	          val = exprList[0]
	        }
	      } else {
	        val = this.parseParenExpression()
	      }
	
	      if (this.options.preserveParens) {
	        var par = this.startNodeAt(startPos, startLoc)
	        par.expression = val
	        return this.finishNode(par, "ParenthesizedExpression")
	      } else {
	        return val
	      }
	    }
	
	    pp$3.parseParenItem = function(item) {
	      return item
	    }
	
	    pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {
	      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)
	    }
	
	    // New's precedence is slightly tricky. It must allow its argument to
	    // be a `[]` or dot subscript expression, but not a call — at least,
	    // not without wrapping it in parentheses. Thus, it uses the noCalls
	    // argument to parseSubscripts to prevent it from consuming the
	    // argument list.
	
	    var empty$1 = []
	
	    pp$3.parseNew = function() {
	      var node = this.startNode()
	      var meta = this.parseIdent(true)
	      if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {
	        node.meta = meta
	        node.property = this.parseIdent(true)
	        if (node.property.name !== "target")
	          this.raiseRecoverable(node.property.start, "The only valid meta property for new is new.target")
	        if (!this.inFunction)
	          this.raiseRecoverable(node.start, "new.target can only be used in functions")
	        return this.finishNode(node, "MetaProperty")
	      }
	      var startPos = this.start, startLoc = this.startLoc
	      node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true)
	      if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, false)
	      else node.arguments = empty$1
	      return this.finishNode(node, "NewExpression")
	    }
	
	    // Parse template expression.
	
	    pp$3.parseTemplateElement = function() {
	      var elem = this.startNode()
	      elem.value = {
	        raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, '\n'),
	        cooked: this.value
	      }
	      this.next()
	      elem.tail = this.type === tt.backQuote
	      return this.finishNode(elem, "TemplateElement")
	    }
	
	    pp$3.parseTemplate = function() {
	      var this$1 = this;
	
	      var node = this.startNode()
	      this.next()
	      node.expressions = []
	      var curElt = this.parseTemplateElement()
	      node.quasis = [curElt]
	      while (!curElt.tail) {
	        this$1.expect(tt.dollarBraceL)
	        node.expressions.push(this$1.parseExpression())
	        this$1.expect(tt.braceR)
	        node.quasis.push(curElt = this$1.parseTemplateElement())
	      }
	      this.next()
	      return this.finishNode(node, "TemplateLiteral")
	    }
	
	    // Parse an object literal or binding pattern.
	
	    pp$3.parseObj = function(isPattern, refDestructuringErrors) {
	      var this$1 = this;
	
	      var node = this.startNode(), first = true, propHash = {}
	      node.properties = []
	      this.next()
	      while (!this.eat(tt.braceR)) {
	        if (!first) {
	          this$1.expect(tt.comma)
	          if (this$1.afterTrailingComma(tt.braceR)) break
	        } else first = false
	
	        var prop = this$1.startNode(), isGenerator, startPos, startLoc
	        if (this$1.options.ecmaVersion >= 6) {
	          prop.method = false
	          prop.shorthand = false
	          if (isPattern || refDestructuringErrors) {
	            startPos = this$1.start
	            startLoc = this$1.startLoc
	          }
	          if (!isPattern)
	            isGenerator = this$1.eat(tt.star)
	        }
	        this$1.parsePropertyName(prop)
	        this$1.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors)
	        this$1.checkPropClash(prop, propHash)
	        node.properties.push(this$1.finishNode(prop, "Property"))
	      }
	      return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
	    }
	
	    pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {
	      if (this.eat(tt.colon)) {
	        prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors)
	        prop.kind = "init"
	      } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {
	        if (isPattern) this.unexpected()
	        prop.kind = "init"
	        prop.method = true
	        prop.value = this.parseMethod(isGenerator)
	      } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
	                 (prop.key.name === "get" || prop.key.name === "set") &&
	                 (this.type != tt.comma && this.type != tt.braceR)) {
	        if (isGenerator || isPattern) this.unexpected()
	        prop.kind = prop.key.name
	        this.parsePropertyName(prop)
	        prop.value = this.parseMethod(false)
	        var paramCount = prop.kind === "get" ? 0 : 1
	        if (prop.value.params.length !== paramCount) {
	          var start = prop.value.start
	          if (prop.kind === "get")
	            this.raiseRecoverable(start, "getter should have no params")
	          else
	            this.raiseRecoverable(start, "setter should have exactly one param")
	        }
	        if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
	          this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params")
	      } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
	        if (this.keywords.test(prop.key.name) ||
	            (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||
	            (this.inGenerator && prop.key.name == "yield"))
	          this.raiseRecoverable(prop.key.start, "'" + prop.key.name + "' can not be used as shorthand property")
	        prop.kind = "init"
	        if (isPattern) {
	          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)
	        } else if (this.type === tt.eq && refDestructuringErrors) {
	          if (!refDestructuringErrors.shorthandAssign)
	            refDestructuringErrors.shorthandAssign = this.start
	          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)
	        } else {
	          prop.value = prop.key
	        }
	        prop.shorthand = true
	      } else this.unexpected()
	    }
	
	    pp$3.parsePropertyName = function(prop) {
	      if (this.options.ecmaVersion >= 6) {
	        if (this.eat(tt.bracketL)) {
	          prop.computed = true
	          prop.key = this.parseMaybeAssign()
	          this.expect(tt.bracketR)
	          return prop.key
	        } else {
	          prop.computed = false
	        }
	      }
	      return prop.key = this.type === tt.num || this.type === tt.string ? this.parseExprAtom() : this.parseIdent(true)
	    }
	
	    // Initialize empty function node.
	
	    pp$3.initFunction = function(node) {
	      node.id = null
	      if (this.options.ecmaVersion >= 6) {
	        node.generator = false
	        node.expression = false
	      }
	    }
	
	    // Parse object or class method.
	
	    pp$3.parseMethod = function(isGenerator) {
	      var node = this.startNode(), oldInGen = this.inGenerator
	      this.inGenerator = isGenerator
	      this.initFunction(node)
	      this.expect(tt.parenL)
	      node.params = this.parseBindingList(tt.parenR, false, false)
	      if (this.options.ecmaVersion >= 6)
	        node.generator = isGenerator
	      this.parseFunctionBody(node, false)
	      this.inGenerator = oldInGen
	      return this.finishNode(node, "FunctionExpression")
	    }
	
	    // Parse arrow function expression with given parameters.
	
	    pp$3.parseArrowExpression = function(node, params) {
	      var oldInGen = this.inGenerator
	      this.inGenerator = false
	      this.initFunction(node)
	      node.params = this.toAssignableList(params, true)
	      this.parseFunctionBody(node, true)
	      this.inGenerator = oldInGen
	      return this.finishNode(node, "ArrowFunctionExpression")
	    }
	
	    // Parse function body and check parameters.
	
	    pp$3.parseFunctionBody = function(node, isArrowFunction) {
	      var isExpression = isArrowFunction && this.type !== tt.braceL
	
	      if (isExpression) {
	        node.body = this.parseMaybeAssign()
	        node.expression = true
	      } else {
	        // Start a new scope with regard to labels and the `inFunction`
	        // flag (restore them to their old value afterwards).
	        var oldInFunc = this.inFunction, oldLabels = this.labels
	        this.inFunction = true; this.labels = []
	        node.body = this.parseBlock(true)
	        node.expression = false
	        this.inFunction = oldInFunc; this.labels = oldLabels
	      }
	
	      // If this is a strict mode function, verify that argument names
	      // are not repeated, and it does not try to bind the words `eval`
	      // or `arguments`.
	      var useStrict = (!isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) ? node.body.body[0] : null;
	      if (this.strict || useStrict) {
	        var oldStrict = this.strict
	        this.strict = true
	        if (node.id)
	          this.checkLVal(node.id, true)
	        this.checkParams(node, useStrict)
	        this.strict = oldStrict
	      } else if (isArrowFunction) {
	        this.checkParams(node, useStrict)
	      }
	    }
	
	    // Checks function params for various disallowed patterns such as using "eval"
	    // or "arguments" and duplicate parameters.
	
	    pp$3.checkParams = function(node, useStrict) {
	        var this$1 = this;
	
	        var nameHash = {}
	        for (var i = 0; i < node.params.length; i++) {
	          if (useStrict && this$1.options.ecmaVersion >= 7 && node.params[i].type !== "Identifier")
	            this$1.raiseRecoverable(useStrict.start, "Illegal 'use strict' directive in function with non-simple parameter list");
	          this$1.checkLVal(node.params[i], true, nameHash)
	        }
	    }
	
	    // Parses a comma-separated list of expressions, and returns them as
	    // an array. `close` is the token type that ends the list, and
	    // `allowEmpty` can be turned on to allow subsequent commas with
	    // nothing in between them to be parsed as `null` (which is needed
	    // for array literals).
	
	    pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
	      var this$1 = this;
	
	      var elts = [], first = true
	      while (!this.eat(close)) {
	        if (!first) {
	          this$1.expect(tt.comma)
	          if (allowTrailingComma && this$1.afterTrailingComma(close)) break
	        } else first = false
	
	        var elt
	        if (allowEmpty && this$1.type === tt.comma)
	          elt = null
	        else if (this$1.type === tt.ellipsis) {
	          elt = this$1.parseSpread(refDestructuringErrors)
	          if (this$1.type === tt.comma && refDestructuringErrors && !refDestructuringErrors.trailingComma) {
	            refDestructuringErrors.trailingComma = this$1.lastTokStart
	          }
	        } else
	          elt = this$1.parseMaybeAssign(false, refDestructuringErrors)
	        elts.push(elt)
	      }
	      return elts
	    }
	
	    // Parse the next token as an identifier. If `liberal` is true (used
	    // when parsing properties), it will also convert keywords into
	    // identifiers.
	
	    pp$3.parseIdent = function(liberal) {
	      var node = this.startNode()
	      if (liberal && this.options.allowReserved == "never") liberal = false
	      if (this.type === tt.name) {
	        if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&
	            (this.options.ecmaVersion >= 6 ||
	             this.input.slice(this.start, this.end).indexOf("\\") == -1))
	          this.raiseRecoverable(this.start, "The keyword '" + this.value + "' is reserved")
	        if (!liberal && this.inGenerator && this.value === "yield")
	          this.raiseRecoverable(this.start, "Can not use 'yield' as identifier inside a generator")
	        node.name = this.value
	      } else if (liberal && this.type.keyword) {
	        node.name = this.type.keyword
	      } else {
	        this.unexpected()
	      }
	      this.next()
	      return this.finishNode(node, "Identifier")
	    }
	
	    // Parses yield expression inside generator.
	
	    pp$3.parseYield = function() {
	      var node = this.startNode()
	      this.next()
	      if (this.type == tt.semi || this.canInsertSemicolon() || (this.type != tt.star && !this.type.startsExpr)) {
	        node.delegate = false
	        node.argument = null
	      } else {
	        node.delegate = this.eat(tt.star)
	        node.argument = this.parseMaybeAssign()
	      }
	      return this.finishNode(node, "YieldExpression")
	    }
	
	    var pp$4 = Parser.prototype
	
	    // This function is used to raise exceptions on parse errors. It
	    // takes an offset integer (into the current `input`) to indicate
	    // the location of the error, attaches the position to the end
	    // of the error message, and then raises a `SyntaxError` with that
	    // message.
	
	    pp$4.raise = function(pos, message) {
	      var loc = getLineInfo(this.input, pos)
	      message += " (" + loc.line + ":" + loc.column + ")"
	      var err = new SyntaxError(message)
	      err.pos = pos; err.loc = loc; err.raisedAt = this.pos
	      throw err
	    }
	
	    pp$4.raiseRecoverable = pp$4.raise
	
	    pp$4.curPosition = function() {
	      if (this.options.locations) {
	        return new Position(this.curLine, this.pos - this.lineStart)
	      }
	    }
	
	    var Node = function Node(parser, pos, loc) {
	      this.type = ""
	      this.start = pos
	      this.end = 0
	      if (parser.options.locations)
	        this.loc = new SourceLocation(parser, loc)
	      if (parser.options.directSourceFile)
	        this.sourceFile = parser.options.directSourceFile
	      if (parser.options.ranges)
	        this.range = [pos, 0]
	    };
	
	    // Start an AST node, attaching a start offset.
	
	    var pp$5 = Parser.prototype
	
	    pp$5.startNode = function() {
	      return new Node(this, this.start, this.startLoc)
	    }
	
	    pp$5.startNodeAt = function(pos, loc) {
	      return new Node(this, pos, loc)
	    }
	
	    // Finish an AST node, adding `type` and `end` properties.
	
	    function finishNodeAt(node, type, pos, loc) {
	      node.type = type
	      node.end = pos
	      if (this.options.locations)
	        node.loc.end = loc
	      if (this.options.ranges)
	        node.range[1] = pos
	      return node
	    }
	
	    pp$5.finishNode = function(node, type) {
	      return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
	    }
	
	    // Finish node at given position
	
	    pp$5.finishNodeAt = function(node, type, pos, loc) {
	      return finishNodeAt.call(this, node, type, pos, loc)
	    }
	
	    var TokContext = function TokContext(token, isExpr, preserveSpace, override) {
	      this.token = token
	      this.isExpr = !!isExpr
	      this.preserveSpace = !!preserveSpace
	      this.override = override
	    };
	
	    var types = {
	      b_stat: new TokContext("{", false),
	      b_expr: new TokContext("{", true),
	      b_tmpl: new TokContext("${", true),
	      p_stat: new TokContext("(", false),
	      p_expr: new TokContext("(", true),
	      q_tmpl: new TokContext("`", true, true, function (p) { return p.readTmplToken(); }),
	      f_expr: new TokContext("function", true)
	    }
	
	    var pp$6 = Parser.prototype
	
	    pp$6.initialContext = function() {
	      return [types.b_stat]
	    }
	
	    pp$6.braceIsBlock = function(prevType) {
	      if (prevType === tt.colon) {
	        var parent = this.curContext()
	        if (parent === types.b_stat || parent === types.b_expr)
	          return !parent.isExpr
	      }
	      if (prevType === tt._return)
	        return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
	      if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR)
	        return true
	      if (prevType == tt.braceL)
	        return this.curContext() === types.b_stat
	      return !this.exprAllowed
	    }
	
	    pp$6.updateContext = function(prevType) {
	      var update, type = this.type
	      if (type.keyword && prevType == tt.dot)
	        this.exprAllowed = false
	      else if (update = type.updateContext)
	        update.call(this, prevType)
	      else
	        this.exprAllowed = type.beforeExpr
	    }
	
	    // Token-specific context update code
	
	    tt.parenR.updateContext = tt.braceR.updateContext = function() {
	      if (this.context.length == 1) {
	        this.exprAllowed = true
	        return
	      }
	      var out = this.context.pop()
	      if (out === types.b_stat && this.curContext() === types.f_expr) {
	        this.context.pop()
	        this.exprAllowed = false
	      } else if (out === types.b_tmpl) {
	        this.exprAllowed = true
	      } else {
	        this.exprAllowed = !out.isExpr
	      }
	    }
	
	    tt.braceL.updateContext = function(prevType) {
	      this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)
	      this.exprAllowed = true
	    }
	
	    tt.dollarBraceL.updateContext = function() {
	      this.context.push(types.b_tmpl)
	      this.exprAllowed = true
	    }
	
	    tt.parenL.updateContext = function(prevType) {
	      var statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while
	      this.context.push(statementParens ? types.p_stat : types.p_expr)
	      this.exprAllowed = true
	    }
	
	    tt.incDec.updateContext = function() {
	      // tokExprAllowed stays unchanged
	    }
	
	    tt._function.updateContext = function(prevType) {
	      if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&
	          !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))
	        this.context.push(types.f_expr)
	      this.exprAllowed = false
	    }
	
	    tt.backQuote.updateContext = function() {
	      if (this.curContext() === types.q_tmpl)
	        this.context.pop()
	      else
	        this.context.push(types.q_tmpl)
	      this.exprAllowed = false
	    }
	
	    // Object type used to represent tokens. Note that normally, tokens
	    // simply exist as properties on the parser object. This is only
	    // used for the onToken callback and the external tokenizer.
	
	    var Token = function Token(p) {
	      this.type = p.type
	      this.value = p.value
	      this.start = p.start
	      this.end = p.end
	      if (p.options.locations)
	        this.loc = new SourceLocation(p, p.startLoc, p.endLoc)
	      if (p.options.ranges)
	        this.range = [p.start, p.end]
	    };
	
	    // ## Tokenizer
	
	    var pp$7 = Parser.prototype
	
	    // Are we running under Rhino?
	    var isRhino = typeof Packages == "object" && Object.prototype.toString.call(Packages) == "[object JavaPackage]"
	
	    // Move to the next token
	
	    pp$7.next = function() {
	      if (this.options.onToken)
	        this.options.onToken(new Token(this))
	
	      this.lastTokEnd = this.end
	      this.lastTokStart = this.start
	      this.lastTokEndLoc = this.endLoc
	      this.lastTokStartLoc = this.startLoc
	      this.nextToken()
	    }
	
	    pp$7.getToken = function() {
	      this.next()
	      return new Token(this)
	    }
	
	    // If we're in an ES6 environment, make parsers iterable
	    if (typeof Symbol !== "undefined")
	      pp$7[Symbol.iterator] = function () {
	        var self = this
	        return {next: function () {
	          var token = self.getToken()
	          return {
	            done: token.type === tt.eof,
	            value: token
	          }
	        }}
	      }
	
	    // Toggle strict mode. Re-reads the next number or string to please
	    // pedantic tests (`"use strict"; 010;` should fail).
	
	    pp$7.setStrict = function(strict) {
	      var this$1 = this;
	
	      this.strict = strict
	      if (this.type !== tt.num && this.type !== tt.string) return
	      this.pos = this.start
	      if (this.options.locations) {
	        while (this.pos < this.lineStart) {
	          this$1.lineStart = this$1.input.lastIndexOf("\n", this$1.lineStart - 2) + 1
	          --this$1.curLine
	        }
	      }
	      this.nextToken()
	    }
	
	    pp$7.curContext = function() {
	      return this.context[this.context.length - 1]
	    }
	
	    // Read a single token, updating the parser object's token-related
	    // properties.
	
	    pp$7.nextToken = function() {
	      var curContext = this.curContext()
	      if (!curContext || !curContext.preserveSpace) this.skipSpace()
	
	      this.start = this.pos
	      if (this.options.locations) this.startLoc = this.curPosition()
	      if (this.pos >= this.input.length) return this.finishToken(tt.eof)
	
	      if (curContext.override) return curContext.override(this)
	      else this.readToken(this.fullCharCodeAtPos())
	    }
	
	    pp$7.readToken = function(code) {
	      // Identifier or keyword. '\uXXXX' sequences are allowed in
	      // identifiers, so '\' also dispatches to that.
	      if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
	        return this.readWord()
	
	      return this.getTokenFromCode(code)
	    }
	
	    pp$7.fullCharCodeAtPos = function() {
	      var code = this.input.charCodeAt(this.pos)
	      if (code <= 0xd7ff || code >= 0xe000) return code
	      var next = this.input.charCodeAt(this.pos + 1)
	      return (code << 10) + next - 0x35fdc00
	    }
	
	    pp$7.skipBlockComment = function() {
	      var this$1 = this;
	
	      var startLoc = this.options.onComment && this.curPosition()
	      var start = this.pos, end = this.input.indexOf("*/", this.pos += 2)
	      if (end === -1) this.raise(this.pos - 2, "Unterminated comment")
	      this.pos = end + 2
	      if (this.options.locations) {
	        lineBreakG.lastIndex = start
	        var match
	        while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {
	          ++this$1.curLine
	          this$1.lineStart = match.index + match[0].length
	        }
	      }
	      if (this.options.onComment)
	        this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
	                               startLoc, this.curPosition())
	    }
	
	    pp$7.skipLineComment = function(startSkip) {
	      var this$1 = this;
	
	      var start = this.pos
	      var startLoc = this.options.onComment && this.curPosition()
	      var ch = this.input.charCodeAt(this.pos+=startSkip)
	      while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {
	        ++this$1.pos
	        ch = this$1.input.charCodeAt(this$1.pos)
	      }
	      if (this.options.onComment)
	        this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
	                               startLoc, this.curPosition())
	    }
	
	    // Called at the start of the parse and after every token. Skips
	    // whitespace and comments, and.
	
	    pp$7.skipSpace = function() {
	      var this$1 = this;
	
	      loop: while (this.pos < this.input.length) {
	        var ch = this$1.input.charCodeAt(this$1.pos)
	        switch (ch) {
	          case 32: case 160: // ' '
	            ++this$1.pos
	            break
	          case 13:
	            if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {
	              ++this$1.pos
	            }
	          case 10: case 8232: case 8233:
	            ++this$1.pos
	            if (this$1.options.locations) {
	              ++this$1.curLine
	              this$1.lineStart = this$1.pos
	            }
	            break
	          case 47: // '/'
	            switch (this$1.input.charCodeAt(this$1.pos + 1)) {
	              case 42: // '*'
	                this$1.skipBlockComment()
	                break
	              case 47:
	                this$1.skipLineComment(2)
	                break
	              default:
	                break loop
	            }
	            break
	          default:
	            if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
	              ++this$1.pos
	            } else {
	              break loop
	            }
	        }
	      }
	    }
	
	    // Called at the end of every token. Sets `end`, `val`, and
	    // maintains `context` and `exprAllowed`, and skips the space after
	    // the token, so that the next one's `start` will point at the
	    // right position.
	
	    pp$7.finishToken = function(type, val) {
	      this.end = this.pos
	      if (this.options.locations) this.endLoc = this.curPosition()
	      var prevType = this.type
	      this.type = type
	      this.value = val
	
	      this.updateContext(prevType)
	    }
	
	    // ### Token reading
	
	    // This is the function that is called to fetch the next token. It
	    // is somewhat obscure, because it works in character codes rather
	    // than characters, and because operator parsing has been inlined
	    // into it.
	    //
	    // All in the name of speed.
	    //
	    pp$7.readToken_dot = function() {
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (next >= 48 && next <= 57) return this.readNumber(true)
	      var next2 = this.input.charCodeAt(this.pos + 2)
	      if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
	        this.pos += 3
	        return this.finishToken(tt.ellipsis)
	      } else {
	        ++this.pos
	        return this.finishToken(tt.dot)
	      }
	    }
	
	    pp$7.readToken_slash = function() { // '/'
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (this.exprAllowed) {++this.pos; return this.readRegexp()}
	      if (next === 61) return this.finishOp(tt.assign, 2)
	      return this.finishOp(tt.slash, 1)
	    }
	
	    pp$7.readToken_mult_modulo_exp = function(code) { // '%*'
	      var next = this.input.charCodeAt(this.pos + 1)
	      var size = 1
	      var tokentype = code === 42 ? tt.star : tt.modulo
	
	      // exponentiation operator ** and **=
	      if (this.options.ecmaVersion >= 7 && next === 42) {
	        ++size
	        tokentype = tt.starstar
	        next = this.input.charCodeAt(this.pos + 2)
	      }
	
	      if (next === 61) return this.finishOp(tt.assign, size + 1)
	      return this.finishOp(tokentype, size)
	    }
	
	    pp$7.readToken_pipe_amp = function(code) { // '|&'
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)
	      if (next === 61) return this.finishOp(tt.assign, 2)
	      return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)
	    }
	
	    pp$7.readToken_caret = function() { // '^'
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (next === 61) return this.finishOp(tt.assign, 2)
	      return this.finishOp(tt.bitwiseXOR, 1)
	    }
	
	    pp$7.readToken_plus_min = function(code) { // '+-'
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (next === code) {
	        if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&
	            lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
	          // A `-->` line comment
	          this.skipLineComment(3)
	          this.skipSpace()
	          return this.nextToken()
	        }
	        return this.finishOp(tt.incDec, 2)
	      }
	      if (next === 61) return this.finishOp(tt.assign, 2)
	      return this.finishOp(tt.plusMin, 1)
	    }
	
	    pp$7.readToken_lt_gt = function(code) { // '<>'
	      var next = this.input.charCodeAt(this.pos + 1)
	      var size = 1
	      if (next === code) {
	        size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2
	        if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)
	        return this.finishOp(tt.bitShift, size)
	      }
	      if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&
	          this.input.charCodeAt(this.pos + 3) == 45) {
	        if (this.inModule) this.unexpected()
	        // `<!--`, an XML-style comment that should be interpreted as a line comment
	        this.skipLineComment(4)
	        this.skipSpace()
	        return this.nextToken()
	      }
	      if (next === 61) size = 2
	      return this.finishOp(tt.relational, size)
	    }
	
	    pp$7.readToken_eq_excl = function(code) { // '=!'
	      var next = this.input.charCodeAt(this.pos + 1)
	      if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)
	      if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
	        this.pos += 2
	        return this.finishToken(tt.arrow)
	      }
	      return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)
	    }
	
	    pp$7.getTokenFromCode = function(code) {
	      switch (code) {
	        // The interpretation of a dot depends on whether it is followed
	        // by a digit or another two dots.
	      case 46: // '.'
	        return this.readToken_dot()
	
	        // Punctuation tokens.
	      case 40: ++this.pos; return this.finishToken(tt.parenL)
	      case 41: ++this.pos; return this.finishToken(tt.parenR)
	      case 59: ++this.pos; return this.finishToken(tt.semi)
	      case 44: ++this.pos; return this.finishToken(tt.comma)
	      case 91: ++this.pos; return this.finishToken(tt.bracketL)
	      case 93: ++this.pos; return this.finishToken(tt.bracketR)
	      case 123: ++this.pos; return this.finishToken(tt.braceL)
	      case 125: ++this.pos; return this.finishToken(tt.braceR)
	      case 58: ++this.pos; return this.finishToken(tt.colon)
	      case 63: ++this.pos; return this.finishToken(tt.question)
	
	      case 96: // '`'
	        if (this.options.ecmaVersion < 6) break
	        ++this.pos
	        return this.finishToken(tt.backQuote)
	
	      case 48: // '0'
	        var next = this.input.charCodeAt(this.pos + 1)
	        if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number
	        if (this.options.ecmaVersion >= 6) {
	          if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number
	          if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number
	        }
	        // Anything else beginning with a digit is an integer, octal
	        // number, or float.
	      case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
	        return this.readNumber(false)
	
	        // Quotes produce strings.
	      case 34: case 39: // '"', "'"
	        return this.readString(code)
	
	        // Operators are parsed inline in tiny state machines. '=' (61) is
	        // often referred to. `finishOp` simply skips the amount of
	        // characters it is given as second argument, and returns a token
	        // of the type given by its first argument.
	
	      case 47: // '/'
	        return this.readToken_slash()
	
	      case 37: case 42: // '%*'
	        return this.readToken_mult_modulo_exp(code)
	
	      case 124: case 38: // '|&'
	        return this.readToken_pipe_amp(code)
	
	      case 94: // '^'
	        return this.readToken_caret()
	
	      case 43: case 45: // '+-'
	        return this.readToken_plus_min(code)
	
	      case 60: case 62: // '<>'
	        return this.readToken_lt_gt(code)
	
	      case 61: case 33: // '=!'
	        return this.readToken_eq_excl(code)
	
	      case 126: // '~'
	        return this.finishOp(tt.prefix, 1)
	      }
	
	      this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'")
	    }
	
	    pp$7.finishOp = function(type, size) {
	      var str = this.input.slice(this.pos, this.pos + size)
	      this.pos += size
	      return this.finishToken(type, str)
	    }
	
	    // Parse a regular expression. Some context-awareness is necessary,
	    // since a '/' inside a '[]' set does not end the expression.
	
	    function tryCreateRegexp(src, flags, throwErrorAt, parser) {
	      try {
	        return new RegExp(src, flags)
	      } catch (e) {
	        if (throwErrorAt !== undefined) {
	          if (e instanceof SyntaxError) parser.raise(throwErrorAt, "Error parsing regular expression: " + e.message)
	          throw e
	        }
	      }
	    }
	
	    var regexpUnicodeSupport = !!tryCreateRegexp("\uffff", "u")
	
	    pp$7.readRegexp = function() {
	      var this$1 = this;
	
	      var escaped, inClass, start = this.pos
	      for (;;) {
	        if (this$1.pos >= this$1.input.length) this$1.raise(start, "Unterminated regular expression")
	        var ch = this$1.input.charAt(this$1.pos)
	        if (lineBreak.test(ch)) this$1.raise(start, "Unterminated regular expression")
	        if (!escaped) {
	          if (ch === "[") inClass = true
	          else if (ch === "]" && inClass) inClass = false
	          else if (ch === "/" && !inClass) break
	          escaped = ch === "\\"
	        } else escaped = false
	        ++this$1.pos
	      }
	      var content = this.input.slice(start, this.pos)
	      ++this.pos
	      // Need to use `readWord1` because '\uXXXX' sequences are allowed
	      // here (don't ask).
	      var mods = this.readWord1()
	      var tmp = content, tmpFlags = ""
	      if (mods) {
	        var validFlags = /^[gim]*$/
	        if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/
	        if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
	        if (mods.indexOf("u") >= 0) {
	          if (regexpUnicodeSupport) {
	            tmpFlags = "u"
	          } else {
	            // Replace each astral symbol and every Unicode escape sequence that
	            // possibly represents an astral symbol or a paired surrogate with a
	            // single ASCII symbol to avoid throwing on regular expressions that
	            // are only valid in combination with the `/u` flag.
	            // Note: replacing with the ASCII symbol `x` might cause false
	            // negatives in unlikely scenarios. For example, `[\u{61}-b]` is a
	            // perfectly valid pattern that is equivalent to `[a-b]`, but it would
	            // be replaced by `[x-b]` which throws an error.
	            tmp = tmp.replace(/\\u\{([0-9a-fA-F]+)\}/g, function (_match, code, offset) {
	              code = Number("0x" + code)
	              if (code > 0x10FFFF) this$1.raise(start + offset + 3, "Code point out of bounds")
	              return "x"
	            })
	            tmp = tmp.replace(/\\u([a-fA-F0-9]{4})|[\uD800-\uDBFF][\uDC00-\uDFFF]/g, "x")
	            tmpFlags = tmpFlags.replace("u", "")
	          }
	        }
	      }
	      // Detect invalid regular expressions.
	      var value = null
	      // Rhino's regular expression parser is flaky and throws uncatchable exceptions,
	      // so don't do detection if we are running under Rhino
	      if (!isRhino) {
	        tryCreateRegexp(tmp, tmpFlags, start, this)
	        // Get a regular expression object for this pattern-flag pair, or `null` in
	        // case the current environment doesn't support the flags it uses.
	        value = tryCreateRegexp(content, mods)
	      }
	      return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})
	    }
	
	    // Read an integer in the given radix. Return null if zero digits
	    // were read, the integer value otherwise. When `len` is given, this
	    // will return `null` unless the integer has exactly `len` digits.
	
	    pp$7.readInt = function(radix, len) {
	      var this$1 = this;
	
	      var start = this.pos, total = 0
	      for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
	        var code = this$1.input.charCodeAt(this$1.pos), val
	        if (code >= 97) val = code - 97 + 10 // a
	        else if (code >= 65) val = code - 65 + 10 // A
	        else if (code >= 48 && code <= 57) val = code - 48 // 0-9
	        else val = Infinity
	        if (val >= radix) break
	        ++this$1.pos
	        total = total * radix + val
	      }
	      if (this.pos === start || len != null && this.pos - start !== len) return null
	
	      return total
	    }
	
	    pp$7.readRadixNumber = function(radix) {
	      this.pos += 2 // 0x
	      var val = this.readInt(radix)
	      if (val == null) this.raise(this.start + 2, "Expected number in radix " + radix)
	      if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, "Identifier directly after number")
	      return this.finishToken(tt.num, val)
	    }
	
	    // Read an integer, octal integer, or floating-point number.
	
	    pp$7.readNumber = function(startsWithDot) {
	      var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48
	      if (!startsWithDot && this.readInt(10) === null) this.raise(start, "Invalid number")
	      var next = this.input.charCodeAt(this.pos)
	      if (next === 46) { // '.'
	        ++this.pos
	        this.readInt(10)
	        isFloat = true
	        next = this.input.charCodeAt(this.pos)
	      }
	      if (next === 69 || next === 101) { // 'eE'
	        next = this.input.charCodeAt(++this.pos)
	        if (next === 43 || next === 45) ++this.pos // '+-'
	        if (this.readInt(10) === null) this.raise(start, "Invalid number")
	        isFloat = true
	      }
	      if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, "Identifier directly after number")
	
	      var str = this.input.slice(start, this.pos), val
	      if (isFloat) val = parseFloat(str)
	      else if (!octal || str.length === 1) val = parseInt(str, 10)
	      else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
	      else val = parseInt(str, 8)
	      return this.finishToken(tt.num, val)
	    }
	
	    // Read a string value, interpreting backslash-escapes.
	
	    pp$7.readCodePoint = function() {
	      var ch = this.input.charCodeAt(this.pos), code
	
	      if (ch === 123) {
	        if (this.options.ecmaVersion < 6) this.unexpected()
	        var codePos = ++this.pos
	        code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos)
	        ++this.pos
	        if (code > 0x10FFFF) this.raise(codePos, "Code point out of bounds")
	      } else {
	        code = this.readHexChar(4)
	      }
	      return code
	    }
	
	    function codePointToString(code) {
	      // UTF-16 Decoding
	      if (code <= 0xFFFF) return String.fromCharCode(code)
	      code -= 0x10000
	      return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
	    }
	
	    pp$7.readString = function(quote) {
	      var this$1 = this;
	
	      var out = "", chunkStart = ++this.pos
	      for (;;) {
	        if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, "Unterminated string constant")
	        var ch = this$1.input.charCodeAt(this$1.pos)
	        if (ch === quote) break
	        if (ch === 92) { // '\'
	          out += this$1.input.slice(chunkStart, this$1.pos)
	          out += this$1.readEscapedChar(false)
	          chunkStart = this$1.pos
	        } else {
	          if (isNewLine(ch)) this$1.raise(this$1.start, "Unterminated string constant")
	          ++this$1.pos
	        }
	      }
	      out += this.input.slice(chunkStart, this.pos++)
	      return this.finishToken(tt.string, out)
	    }
	
	    // Reads template string tokens.
	
	    pp$7.readTmplToken = function() {
	      var this$1 = this;
	
	      var out = "", chunkStart = this.pos
	      for (;;) {
	        if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, "Unterminated template")
	        var ch = this$1.input.charCodeAt(this$1.pos)
	        if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'
	          if (this$1.pos === this$1.start && this$1.type === tt.template) {
	            if (ch === 36) {
	              this$1.pos += 2
	              return this$1.finishToken(tt.dollarBraceL)
	            } else {
	              ++this$1.pos
	              return this$1.finishToken(tt.backQuote)
	            }
	          }
	          out += this$1.input.slice(chunkStart, this$1.pos)
	          return this$1.finishToken(tt.template, out)
	        }
	        if (ch === 92) { // '\'
	          out += this$1.input.slice(chunkStart, this$1.pos)
	          out += this$1.readEscapedChar(true)
	          chunkStart = this$1.pos
	        } else if (isNewLine(ch)) {
	          out += this$1.input.slice(chunkStart, this$1.pos)
	          ++this$1.pos
	          switch (ch) {
	            case 13:
	              if (this$1.input.charCodeAt(this$1.pos) === 10) ++this$1.pos
	            case 10:
	              out += "\n"
	              break
	            default:
	              out += String.fromCharCode(ch)
	              break
	          }
	          if (this$1.options.locations) {
	            ++this$1.curLine
	            this$1.lineStart = this$1.pos
	          }
	          chunkStart = this$1.pos
	        } else {
	          ++this$1.pos
	        }
	      }
	    }
	
	    // Used to read escaped characters
	
	    pp$7.readEscapedChar = function(inTemplate) {
	      var ch = this.input.charCodeAt(++this.pos)
	      ++this.pos
	      switch (ch) {
	      case 110: return "\n" // 'n' -> '\n'
	      case 114: return "\r" // 'r' -> '\r'
	      case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
	      case 117: return codePointToString(this.readCodePoint()) // 'u'
	      case 116: return "\t" // 't' -> '\t'
	      case 98: return "\b" // 'b' -> '\b'
	      case 118: return "\u000b" // 'v' -> '\u000b'
	      case 102: return "\f" // 'f' -> '\f'
	      case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\r\n'
	      case 10: // ' \n'
	        if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }
	        return ""
	      default:
	        if (ch >= 48 && ch <= 55) {
	          var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]
	          var octal = parseInt(octalStr, 8)
	          if (octal > 255) {
	            octalStr = octalStr.slice(0, -1)
	            octal = parseInt(octalStr, 8)
	          }
	          if (octalStr !== "0" && (this.strict || inTemplate)) {
	            this.raise(this.pos - 2, "Octal literal in strict mode")
	          }
	          this.pos += octalStr.length - 1
	          return String.fromCharCode(octal)
	        }
	        return String.fromCharCode(ch)
	      }
	    }
	
	    // Used to read character escape sequences ('\x', '\u', '\U').
	
	    pp$7.readHexChar = function(len) {
	      var codePos = this.pos
	      var n = this.readInt(16, len)
	      if (n === null) this.raise(codePos, "Bad character escape sequence")
	      return n
	    }
	
	    // Read an identifier, and return it as a string. Sets `this.containsEsc`
	    // to whether the word contained a '\u' escape.
	    //
	    // Incrementally adds only escaped chars, adding other chunks as-is
	    // as a micro-optimization.
	
	    pp$7.readWord1 = function() {
	      var this$1 = this;
	
	      this.containsEsc = false
	      var word = "", first = true, chunkStart = this.pos
	      var astral = this.options.ecmaVersion >= 6
	      while (this.pos < this.input.length) {
	        var ch = this$1.fullCharCodeAtPos()
	        if (isIdentifierChar(ch, astral)) {
	          this$1.pos += ch <= 0xffff ? 1 : 2
	        } else if (ch === 92) { // "\"
	          this$1.containsEsc = true
	          word += this$1.input.slice(chunkStart, this$1.pos)
	          var escStart = this$1.pos
	          if (this$1.input.charCodeAt(++this$1.pos) != 117) // "u"
	            this$1.raise(this$1.pos, "Expecting Unicode escape sequence \\uXXXX")
	          ++this$1.pos
	          var esc = this$1.readCodePoint()
	          if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
	            this$1.raise(escStart, "Invalid Unicode escape")
	          word += codePointToString(esc)
	          chunkStart = this$1.pos
	        } else {
	          break
	        }
	        first = false
	      }
	      return word + this.input.slice(chunkStart, this.pos)
	    }
	
	    // Read an identifier or keyword token. Will check for reserved
	    // words when necessary.
	
	    pp$7.readWord = function() {
	      var word = this.readWord1()
	      var type = tt.name
	      if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))
	        type = keywordTypes[word]
	      return this.finishToken(type, word)
	    }
	
	    var version = "3.3.0"
	
	    // The main exported interface (under `self.acorn` when in the
	    // browser) is a `parse` function that takes a code string and
	    // returns an abstract syntax tree as specified by [Mozilla parser
	    // API][api].
	    //
	    // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API
	
	    function parse(input, options) {
	      return new Parser(options, input).parse()
	    }
	
	    // This function tries to parse a single expression at a given
	    // offset in a string. Useful for parsing mixed-language formats
	    // that embed JavaScript expressions.
	
	    function parseExpressionAt(input, pos, options) {
	      var p = new Parser(options, input, pos)
	      p.nextToken()
	      return p.parseExpression()
	    }
	
	    // Acorn is organized as a tokenizer and a recursive-descent parser.
	    // The `tokenizer` export provides an interface to the tokenizer.
	
	    function tokenizer(input, options) {
	      return new Parser(options, input)
	    }
	
	    exports.version = version;
	    exports.parse = parse;
	    exports.parseExpressionAt = parseExpressionAt;
	    exports.tokenizer = tokenizer;
	    exports.Parser = Parser;
	    exports.plugins = plugins;
	    exports.defaultOptions = defaultOptions;
	    exports.Position = Position;
	    exports.SourceLocation = SourceLocation;
	    exports.getLineInfo = getLineInfo;
	    exports.Node = Node;
	    exports.TokenType = TokenType;
	    exports.tokTypes = tt;
	    exports.TokContext = TokContext;
	    exports.tokContexts = types;
	    exports.isIdentifierChar = isIdentifierChar;
	    exports.isIdentifierStart = isIdentifierStart;
	    exports.Token = Token;
	    exports.isNewLine = isNewLine;
	    exports.lineBreak = lineBreak;
	    exports.lineBreakG = lineBreakG;
	
	    Object.defineProperty(exports, '__esModule', { value: true });
	
	  }));
	  });
	
	  var acorn$1 = (acorn && typeof acorn === 'object' && 'default' in acorn ? acorn['default'] : acorn);
	
	  var xhtml = __commonjs(function (module) {
	  module.exports = {
	    quot: '\u0022',
	    amp: '&',
	    apos: '\u0027',
	    lt: '<',
	    gt: '>',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    'int': '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    lang: '\u2329',
	    rang: '\u232A',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666'
	  };
	  });
	
	  var require$$0 = (xhtml && typeof xhtml === 'object' && 'default' in xhtml ? xhtml['default'] : xhtml);
	
	  var inject = __commonjs(function (module) {
	  'use strict';
	
	  var XHTMLEntities = require$$0;
	
	  var hexNumber = /^[\da-fA-F]+$/;
	  var decimalNumber = /^\d+$/;
	
	  module.exports = function(acorn) {
	    var tt = acorn.tokTypes;
	    var tc = acorn.tokContexts;
	
	    tc.j_oTag = new acorn.TokContext('<tag', false);
	    tc.j_cTag = new acorn.TokContext('</tag', false);
	    tc.j_expr = new acorn.TokContext('<tag>...</tag>', true, true);
	
	    tt.jsxName = new acorn.TokenType('jsxName');
	    tt.jsxText = new acorn.TokenType('jsxText', {beforeExpr: true});
	    tt.jsxTagStart = new acorn.TokenType('jsxTagStart');
	    tt.jsxTagEnd = new acorn.TokenType('jsxTagEnd');
	
	    tt.jsxTagStart.updateContext = function() {
	      this.context.push(tc.j_expr); // treat as beginning of JSX expression
	      this.context.push(tc.j_oTag); // start opening tag context
	      this.exprAllowed = false;
	    };
	    tt.jsxTagEnd.updateContext = function(prevType) {
	      var out = this.context.pop();
	      if (out === tc.j_oTag && prevType === tt.slash || out === tc.j_cTag) {
	        this.context.pop();
	        this.exprAllowed = this.curContext() === tc.j_expr;
	      } else {
	        this.exprAllowed = true;
	      }
	    };
	
	    var pp = acorn.Parser.prototype;
	
	    // Reads inline JSX contents token.
	
	    pp.jsx_readToken = function() {
	      var out = '', chunkStart = this.pos;
	      for (;;) {
	        if (this.pos >= this.input.length)
	          this.raise(this.start, 'Unterminated JSX contents');
	        var ch = this.input.charCodeAt(this.pos);
	
	        switch (ch) {
	        case 60: // '<'
	        case 123: // '{'
	          if (this.pos === this.start) {
	            if (ch === 60 && this.exprAllowed) {
	              ++this.pos;
	              return this.finishToken(tt.jsxTagStart);
	            }
	            return this.getTokenFromCode(ch);
	          }
	          out += this.input.slice(chunkStart, this.pos);
	          return this.finishToken(tt.jsxText, out);
	
	        case 38: // '&'
	          out += this.input.slice(chunkStart, this.pos);
	          out += this.jsx_readEntity();
	          chunkStart = this.pos;
	          break;
	
	        default:
	          if (acorn.isNewLine(ch)) {
	            out += this.input.slice(chunkStart, this.pos);
	            out += this.jsx_readNewLine(true);
	            chunkStart = this.pos;
	          } else {
	            ++this.pos;
	          }
	        }
	      }
	    };
	
	    pp.jsx_readNewLine = function(normalizeCRLF) {
	      var ch = this.input.charCodeAt(this.pos);
	      var out;
	      ++this.pos;
	      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {
	        ++this.pos;
	        out = normalizeCRLF ? '\n' : '\r\n';
	      } else {
	        out = String.fromCharCode(ch);
	      }
	      if (this.options.locations) {
	        ++this.curLine;
	        this.lineStart = this.pos;
	      }
	
	      return out;
	    };
	
	    pp.jsx_readString = function(quote) {
	      var out = '', chunkStart = ++this.pos;
	      for (;;) {
	        if (this.pos >= this.input.length)
	          this.raise(this.start, 'Unterminated string constant');
	        var ch = this.input.charCodeAt(this.pos);
	        if (ch === quote) break;
	        if (ch === 38) { // '&'
	          out += this.input.slice(chunkStart, this.pos);
	          out += this.jsx_readEntity();
	          chunkStart = this.pos;
	        } else if (acorn.isNewLine(ch)) {
	          out += this.input.slice(chunkStart, this.pos);
	          out += this.jsx_readNewLine(false);
	          chunkStart = this.pos;
	        } else {
	          ++this.pos;
	        }
	      }
	      out += this.input.slice(chunkStart, this.pos++);
	      return this.finishToken(tt.string, out);
	    };
	
	    pp.jsx_readEntity = function() {
	      var str = '', count = 0, entity;
	      var ch = this.input[this.pos];
	      if (ch !== '&')
	        this.raise(this.pos, 'Entity must start with an ampersand');
	      var startPos = ++this.pos;
	      while (this.pos < this.input.length && count++ < 10) {
	        ch = this.input[this.pos++];
	        if (ch === ';') {
	          if (str[0] === '#') {
	            if (str[1] === 'x') {
	              str = str.substr(2);
	              if (hexNumber.test(str))
	                entity = String.fromCharCode(parseInt(str, 16));
	            } else {
	              str = str.substr(1);
	              if (decimalNumber.test(str))
	                entity = String.fromCharCode(parseInt(str, 10));
	            }
	          } else {
	            entity = XHTMLEntities[str];
	          }
	          break;
	        }
	        str += ch;
	      }
	      if (!entity) {
	        this.pos = startPos;
	        return '&';
	      }
	      return entity;
	    };
	
	
	    // Read a JSX identifier (valid tag or attribute name).
	    //
	    // Optimized version since JSX identifiers can't contain
	    // escape characters and so can be read as single slice.
	    // Also assumes that first character was already checked
	    // by isIdentifierStart in readToken.
	
	    pp.jsx_readWord = function() {
	      var ch, start = this.pos;
	      do {
	        ch = this.input.charCodeAt(++this.pos);
	      } while (acorn.isIdentifierChar(ch) || ch === 45); // '-'
	      return this.finishToken(tt.jsxName, this.input.slice(start, this.pos));
	    };
	
	    // Transforms JSX element name to string.
	
	    function getQualifiedJSXName(object) {
	      if (object.type === 'JSXIdentifier')
	        return object.name;
	
	      if (object.type === 'JSXNamespacedName')
	        return object.namespace.name + ':' + object.name.name;
	
	      if (object.type === 'JSXMemberExpression')
	        return getQualifiedJSXName(object.object) + '.' +
	        getQualifiedJSXName(object.property);
	    }
	
	    // Parse next token as JSX identifier
	
	    pp.jsx_parseIdentifier = function() {
	      var node = this.startNode();
	      if (this.type === tt.jsxName)
	        node.name = this.value;
	      else if (this.type.keyword)
	        node.name = this.type.keyword;
	      else
	        this.unexpected();
	      this.next();
	      return this.finishNode(node, 'JSXIdentifier');
	    };
	
	    // Parse namespaced identifier.
	
	    pp.jsx_parseNamespacedName = function() {
	      var startPos = this.start, startLoc = this.startLoc;
	      var name = this.jsx_parseIdentifier();
	      if (!this.options.plugins.jsx.allowNamespaces || !this.eat(tt.colon)) return name;
	      var node = this.startNodeAt(startPos, startLoc);
	      node.namespace = name;
	      node.name = this.jsx_parseIdentifier();
	      return this.finishNode(node, 'JSXNamespacedName');
	    };
	
	    // Parses element name in any form - namespaced, member
	    // or single identifier.
	
	    pp.jsx_parseElementName = function() {
	      var startPos = this.start, startLoc = this.startLoc;
	      var node = this.jsx_parseNamespacedName();
	      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !this.options.plugins.jsx.allowNamespacedObjects) {
	        this.unexpected();
	      }
	      while (this.eat(tt.dot)) {
	        var newNode = this.startNodeAt(startPos, startLoc);
	        newNode.object = node;
	        newNode.property = this.jsx_parseIdentifier();
	        node = this.finishNode(newNode, 'JSXMemberExpression');
	      }
	      return node;
	    };
	
	    // Parses any type of JSX attribute value.
	
	    pp.jsx_parseAttributeValue = function() {
	      switch (this.type) {
	      case tt.braceL:
	        var node = this.jsx_parseExpressionContainer();
	        if (node.expression.type === 'JSXEmptyExpression')
	          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');
	        return node;
	
	      case tt.jsxTagStart:
	      case tt.string:
	        return this.parseExprAtom();
	
	      default:
	        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');
	      }
	    };
	
	    // JSXEmptyExpression is unique type since it doesn't actually parse anything,
	    // and so it should start at the end of last read token (left brace) and finish
	    // at the beginning of the next one (right brace).
	
	    pp.jsx_parseEmptyExpression = function() {
	      var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
	      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);
	    };
	
	    // Parses JSX expression enclosed into curly brackets.
	
	
	    pp.jsx_parseExpressionContainer = function() {
	      var node = this.startNode();
	      this.next();
	      node.expression = this.type === tt.braceR
	        ? this.jsx_parseEmptyExpression()
	        : this.parseExpression();
	      this.expect(tt.braceR);
	      return this.finishNode(node, 'JSXExpressionContainer');
	    };
	
	    // Parses following JSX attribute name-value pair.
	
	    pp.jsx_parseAttribute = function() {
	      var node = this.startNode();
	      if (this.eat(tt.braceL)) {
	        this.expect(tt.ellipsis);
	        node.argument = this.parseMaybeAssign();
	        this.expect(tt.braceR);
	        return this.finishNode(node, 'JSXSpreadAttribute');
	      }
	      node.name = this.jsx_parseNamespacedName();
	      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;
	      return this.finishNode(node, 'JSXAttribute');
	    };
	
	    // Parses JSX opening tag starting after '<'.
	
	    pp.jsx_parseOpeningElementAt = function(startPos, startLoc) {
	      var node = this.startNodeAt(startPos, startLoc);
	      node.attributes = [];
	      node.name = this.jsx_parseElementName();
	      while (this.type !== tt.slash && this.type !== tt.jsxTagEnd)
	        node.attributes.push(this.jsx_parseAttribute());
	      node.selfClosing = this.eat(tt.slash);
	      this.expect(tt.jsxTagEnd);
	      return this.finishNode(node, 'JSXOpeningElement');
	    };
	
	    // Parses JSX closing tag starting after '</'.
	
	    pp.jsx_parseClosingElementAt = function(startPos, startLoc) {
	      var node = this.startNodeAt(startPos, startLoc);
	      node.name = this.jsx_parseElementName();
	      this.expect(tt.jsxTagEnd);
	      return this.finishNode(node, 'JSXClosingElement');
	    };
	
	    // Parses entire JSX element, including it's opening tag
	    // (starting after '<'), attributes, contents and closing tag.
	
	    pp.jsx_parseElementAt = function(startPos, startLoc) {
	      var node = this.startNodeAt(startPos, startLoc);
	      var children = [];
	      var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);
	      var closingElement = null;
	
	      if (!openingElement.selfClosing) {
	        contents: for (;;) {
	          switch (this.type) {
	          case tt.jsxTagStart:
	            startPos = this.start; startLoc = this.startLoc;
	            this.next();
	            if (this.eat(tt.slash)) {
	              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);
	              break contents;
	            }
	            children.push(this.jsx_parseElementAt(startPos, startLoc));
	            break;
	
	          case tt.jsxText:
	            children.push(this.parseExprAtom());
	            break;
	
	          case tt.braceL:
	            children.push(this.jsx_parseExpressionContainer());
	            break;
	
	          default:
	            this.unexpected();
	          }
	        }
	        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
	          this.raise(
	            closingElement.start,
	            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');
	        }
	      }
	
	      node.openingElement = openingElement;
	      node.closingElement = closingElement;
	      node.children = children;
	      if (this.type === tt.relational && this.value === "<") {
	        this.raise(this.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
	      }
	      return this.finishNode(node, 'JSXElement');
	    };
	
	    // Parses entire JSX element from current position.
	
	    pp.jsx_parseElement = function() {
	      var startPos = this.start, startLoc = this.startLoc;
	      this.next();
	      return this.jsx_parseElementAt(startPos, startLoc);
	    };
	
	    acorn.plugins.jsx = function(instance, opts) {
	      if (!opts) {
	        return;
	      }
	
	      if (typeof opts !== 'object') {
	        opts = {};
	      }
	
	      instance.options.plugins.jsx = {
	        allowNamespaces: opts.allowNamespaces !== false,
	        allowNamespacedObjects: !!opts.allowNamespacedObjects
	      };
	
	      instance.extend('parseExprAtom', function(inner) {
	        return function(refShortHandDefaultPos) {
	          if (this.type === tt.jsxText)
	            return this.parseLiteral(this.value);
	          else if (this.type === tt.jsxTagStart)
	            return this.jsx_parseElement();
	          else
	            return inner.call(this, refShortHandDefaultPos);
	        };
	      });
	
	      instance.extend('readToken', function(inner) {
	        return function(code) {
	          var context = this.curContext();
	
	          if (context === tc.j_expr) return this.jsx_readToken();
	
	          if (context === tc.j_oTag || context === tc.j_cTag) {
	            if (acorn.isIdentifierStart(code)) return this.jsx_readWord();
	
	            if (code == 62) {
	              ++this.pos;
	              return this.finishToken(tt.jsxTagEnd);
	            }
	
	            if ((code === 34 || code === 39) && context == tc.j_oTag)
	              return this.jsx_readString(code);
	          }
	
	          if (code === 60 && this.exprAllowed) {
	            ++this.pos;
	            return this.finishToken(tt.jsxTagStart);
	          }
	          return inner.call(this, code);
	        };
	      });
	
	      instance.extend('updateContext', function(inner) {
	        return function(prevType) {
	          if (this.type == tt.braceL) {
	            var curContext = this.curContext();
	            if (curContext == tc.j_oTag) this.context.push(tc.b_expr);
	            else if (curContext == tc.j_expr) this.context.push(tc.b_tmpl);
	            else inner.call(this, prevType);
	            this.exprAllowed = true;
	          } else if (this.type === tt.slash && prevType === tt.jsxTagStart) {
	            this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore
	            this.context.push(tc.j_cTag); // reconsider as closing tag context
	            this.exprAllowed = false;
	          } else {
	            return inner.call(this, prevType);
	          }
	        };
	      });
	    };
	
	    return acorn;
	  };
	  });
	
	  var acornJsx = (inject && typeof inject === 'object' && 'default' in inject ? inject['default'] : inject);
	
	  var inject$1 = __commonjs(function (module) {
	  'use strict';
	
	  module.exports = function(acorn) {
	    var tt = acorn.tokTypes;
	    var pp = acorn.Parser.prototype;
	
	    // this is the same parseObj that acorn has with...
	    function parseObj(isPattern, refDestructuringErrors) {
	      var this$1 = this;
	
	      var node = this.startNode(), first = true, propHash = {}
	      node.properties = []
	      this.next()
	      while (!this$1.eat(tt.braceR)) {
	        if (!first) {
	          this$1.expect(tt.comma)
	          if (this$1.afterTrailingComma(tt.braceR)) break
	        } else first = false
	
	        var prop = this$1.startNode(), isGenerator, startPos, startLoc
	        if (this$1.options.ecmaVersion >= 6) {
	          // ...the spread logic borrowed from babylon :)
	          if (this$1.type === tt.ellipsis) {
	            prop = this$1.parseSpread()
	            prop.type = isPattern ? "RestProperty" : "SpreadProperty"
	            node.properties.push(prop)
	            continue
	          }
	
	          prop.method = false
	          prop.shorthand = false
	          if (isPattern || refDestructuringErrors) {
	            startPos = this$1.start
	            startLoc = this$1.startLoc
	          }
	          if (!isPattern)
	            isGenerator = this$1.eat(tt.star)
	        }
	        this$1.parsePropertyName(prop)
	        this$1.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors)
	        this$1.checkPropClash(prop, propHash)
	        node.properties.push(this$1.finishNode(prop, "Property"))
	      }
	      return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
	    }
	
	    acorn.plugins.objectSpread = function objectSpreadPlugin(instance) {
	      pp.parseObj = parseObj;
	    };
	
	    return acorn;
	  };
	  });
	
	  var acornObjectSpread = (inject$1 && typeof inject$1 === 'object' && 'default' in inject$1 ? inject$1['default'] : inject$1);
	
	  var charToInteger = {};
	  var integerToChar = {};
	
	  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {
	  	charToInteger[ char ] = i;
	  	integerToChar[ i ] = char;
	  });
	
	  function encode ( value ) {
	  	var result, i;
	
	  	if ( typeof value === 'number' ) {
	  		result = encodeInteger( value );
	  	} else {
	  		result = '';
	  		for ( i = 0; i < value.length; i += 1 ) {
	  			result += encodeInteger( value[i] );
	  		}
	  	}
	
	  	return result;
	  }
	
	  function encodeInteger ( num ) {
	  	var result = '', clamped;
	
	  	if ( num < 0 ) {
	  		num = ( -num << 1 ) | 1;
	  	} else {
	  		num <<= 1;
	  	}
	
	  	do {
	  		clamped = num & 31;
	  		num >>= 5;
	
	  		if ( num > 0 ) {
	  			clamped |= 32;
	  		}
	
	  		result += integerToChar[ clamped ];
	  	} while ( num > 0 );
	
	  	return result;
	  }
	
	  function Chunk ( start, end, content ) {
	  	this.start = start;
	  	this.end = end;
	  	this.original = content;
	
	  	this.intro = '';
	  	this.outro = '';
	
	  	this.content = content;
	  	this.storeName = false;
	  	this.edited = false;
	
	  	// we make these non-enumerable, for sanity while debugging
	  	Object.defineProperties( this, {
	  		previous: { writable: true, value: null },
	  		next: { writable: true, value: null }
	  	});
	  }
	
	  Chunk.prototype = {
	  	append: function append ( content ) {
	  		this.outro += content;
	  	},
	
	  	clone: function clone () {
	  		var chunk = new Chunk( this.start, this.end, this.original );
	
	  		chunk.intro = this.intro;
	  		chunk.outro = this.outro;
	  		chunk.content = this.content;
	  		chunk.storeName = this.storeName;
	  		chunk.edited = this.edited;
	
	  		return chunk;
	  	},
	
	  	contains: function contains ( index ) {
	  		return this.start < index && index < this.end;
	  	},
	
	  	eachNext: function eachNext ( fn ) {
	  		var chunk = this;
	  		while ( chunk ) {
	  			fn( chunk );
	  			chunk = chunk.next;
	  		}
	  	},
	
	  	eachPrevious: function eachPrevious ( fn ) {
	  		var chunk = this;
	  		while ( chunk ) {
	  			fn( chunk );
	  			chunk = chunk.previous;
	  		}
	  	},
	
	  	edit: function edit ( content, storeName ) {
	  		this.content = content;
	  		this.storeName = storeName;
	
	  		this.edited = true;
	
	  		return this;
	  	},
	
	  	prepend: function prepend ( content ) {
	  		this.intro = content + this.intro;
	  	},
	
	  	split: function split ( index ) {
	  		var sliceIndex = index - this.start;
	
	  		var originalBefore = this.original.slice( 0, sliceIndex );
	  		var originalAfter = this.original.slice( sliceIndex );
	
	  		this.original = originalBefore;
	
	  		var newChunk = new Chunk( index, this.end, originalAfter );
	  		newChunk.outro = this.outro;
	  		this.outro = '';
	
	  		this.end = index;
	
	  		if ( this.edited ) {
	  			// TODO is this block necessary?...
	  			newChunk.edit( '', false );
	  			this.content = '';
	  		} else {
	  			this.content = originalBefore;
	  		}
	
	  		newChunk.next = this.next;
	  		if ( newChunk.next ) newChunk.next.previous = newChunk;
	  		newChunk.previous = this;
	  		this.next = newChunk;
	
	  		return newChunk;
	  	},
	
	  	toString: function toString () {
	  		return this.intro + this.content + this.outro;
	  	},
	
	  	trimEnd: function trimEnd ( rx ) {
	  		this.outro = this.outro.replace( rx, '' );
	  		if ( this.outro.length ) return true;
	
	  		var trimmed = this.content.replace( rx, '' );
	
	  		if ( trimmed.length ) {
	  			if ( trimmed !== this.content ) {
	  				this.split( this.start + trimmed.length ).edit( '', false );
	  			}
	
	  			return true;
	  		} else {
	  			this.edit( '', false );
	
	  			this.intro = this.intro.replace( rx, '' );
	  			if ( this.intro.length ) return true;
	  		}
	  	},
	
	  	trimStart: function trimStart ( rx ) {
	  		this.intro = this.intro.replace( rx, '' );
	  		if ( this.intro.length ) return true;
	
	  		var trimmed = this.content.replace( rx, '' );
	
	  		if ( trimmed.length ) {
	  			if ( trimmed !== this.content ) {
	  				this.split( this.end - trimmed.length );
	  				this.edit( '', false );
	  			}
	
	  			return true;
	  		} else {
	  			this.edit( '', false );
	
	  			this.outro = this.outro.replace( rx, '' );
	  			if ( this.outro.length ) return true;
	  		}
	  	}
	  };
	
	  var _btoa;
	
	  if ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {
	  	_btoa = window.btoa;
	  } else if ( typeof Buffer === 'function' ) {
	  	_btoa = function ( str ) { return new Buffer( str ).toString( 'base64' ); };
	  } else {
	  	_btoa = function () {
	  		throw new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );
	  	};
	  }
	
	  var btoa = _btoa;
	
	  function SourceMap ( properties ) {
	  	this.version = 3;
	
	  	this.file           = properties.file;
	  	this.sources        = properties.sources;
	  	this.sourcesContent = properties.sourcesContent;
	  	this.names          = properties.names;
	  	this.mappings       = properties.mappings;
	  }
	
	  SourceMap.prototype = {
	  	toString: function toString () {
	  		return JSON.stringify( this );
	  	},
	
	  	toUrl: function toUrl () {
	  		return 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );
	  	}
	  };
	
	  function guessIndent ( code ) {
	  	var lines = code.split( '\n' );
	
	  	var tabbed = lines.filter( function ( line ) { return /^\t+/.test( line ); } );
	  	var spaced = lines.filter( function ( line ) { return /^ {2,}/.test( line ); } );
	
	  	if ( tabbed.length === 0 && spaced.length === 0 ) {
	  		return null;
	  	}
	
	  	// More lines tabbed than spaced? Assume tabs, and
	  	// default to tabs in the case of a tie (or nothing
	  	// to go on)
	  	if ( tabbed.length >= spaced.length ) {
	  		return '\t';
	  	}
	
	  	// Otherwise, we need to guess the multiple
	  	var min = spaced.reduce( function ( previous, current ) {
	  		var numSpaces = /^ +/.exec( current )[0].length;
	  		return Math.min( numSpaces, previous );
	  	}, Infinity );
	
	  	return new Array( min + 1 ).join( ' ' );
	  }
	
	  function getLocator ( source ) {
	  	var originalLines = source.split( '\n' );
	
	  	var start = 0;
	  	var lineRanges = originalLines.map( function ( line, i ) {
	  		var end = start + line.length + 1;
	  		var range = { start: start, end: end, line: i };
	
	  		start = end;
	  		return range;
	  	});
	
	  	var i = 0;
	
	  	function rangeContains ( range, index ) {
	  		return range.start <= index && index < range.end;
	  	}
	
	  	function getLocation ( range, index ) {
	  		return { line: range.line, column: index - range.start };
	  	}
	
	  	return function locate ( index ) {
	  		var range = lineRanges[i];
	
	  		var d = index >= range.end ? 1 : -1;
	
	  		while ( range ) {
	  			if ( rangeContains( range, index ) ) return getLocation( range, index );
	
	  			i += d;
	  			range = lineRanges[i];
	  		}
	  	};
	  }
	
	  function encodeMappings ( original, intro, chunk, hires, sourcemapLocations, sourceIndex, offsets, names ) {
	  	var rawLines = [];
	
	  	var generatedCodeLine = intro.split( '\n' ).length - 1;
	  	var rawSegments = rawLines[ generatedCodeLine ] = [];
	
	  	var generatedCodeColumn = 0;
	
	  	var locate = getLocator( original );
	
	  	function addEdit ( content, original, loc, nameIndex, i ) {
	  		if ( i || content.length ) {
	  			rawSegments.push({
	  				generatedCodeLine: generatedCodeLine,
	  				generatedCodeColumn: generatedCodeColumn,
	  				sourceCodeLine: loc.line,
	  				sourceCodeColumn: loc.column,
	  				sourceCodeName: nameIndex,
	  				sourceIndex: sourceIndex
	  			});
	  		}
	
	  		var lines = content.split( '\n' );
	  		var lastLine = lines.pop();
	
	  		if ( lines.length ) {
	  			generatedCodeLine += lines.length;
	  			rawLines[ generatedCodeLine ] = rawSegments = [];
	  			generatedCodeColumn = lastLine.length;
	  		} else {
	  			generatedCodeColumn += lastLine.length;
	  		}
	
	  		lines = original.split( '\n' );
	  		lastLine = lines.pop();
	
	  		if ( lines.length ) {
	  			loc.line += lines.length;
	  			loc.column = lastLine.length;
	  		} else {
	  			loc.column += lastLine.length;
	  		}
	  	}
	
	  	function addUneditedChunk ( chunk, loc ) {
	  		var originalCharIndex = chunk.start;
	  		var first = true;
	
	  		while ( originalCharIndex < chunk.end ) {
	  			if ( hires || first || sourcemapLocations[ originalCharIndex ] ) {
	  				rawSegments.push({
	  					generatedCodeLine: generatedCodeLine,
	  					generatedCodeColumn: generatedCodeColumn,
	  					sourceCodeLine: loc.line,
	  					sourceCodeColumn: loc.column,
	  					sourceCodeName: -1,
	  					sourceIndex: sourceIndex
	  				});
	  			}
	
	  			if ( original[ originalCharIndex ] === '\n' ) {
	  				loc.line += 1;
	  				loc.column = 0;
	  				generatedCodeLine += 1;
	  				rawLines[ generatedCodeLine ] = rawSegments = [];
	  				generatedCodeColumn = 0;
	  			} else {
	  				loc.column += 1;
	  				generatedCodeColumn += 1;
	  			}
	
	  			originalCharIndex += 1;
	  			first = false;
	  		}
	  	}
	
	  	while ( chunk ) {
	  		var loc = locate( chunk.start );
	
	  		if ( chunk.intro.length ) {
	  			addEdit( chunk.intro, '', loc, -1, !!chunk.previous );
	  		}
	
	  		if ( chunk.edited ) {
	  			addEdit( chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1, !!chunk.previous );
	  		} else {
	  			addUneditedChunk( chunk, loc );
	  		}
	
	  		if ( chunk.outro.length ) {
	  			addEdit( chunk.outro, '', loc, -1, !!chunk.previous );
	  		}
	
	  		var nextChunk = chunk.next;
	  		chunk = nextChunk;
	  	}
	
	  	offsets.sourceIndex = offsets.sourceIndex || 0;
	  	offsets.sourceCodeLine = offsets.sourceCodeLine || 0;
	  	offsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;
	  	offsets.sourceCodeName = offsets.sourceCodeName || 0;
	
	  	var encoded = rawLines.map( function ( segments ) {
	  		var generatedCodeColumn = 0;
	
	  		return segments.map( function ( segment ) {
	  			var arr = [
	  				segment.generatedCodeColumn - generatedCodeColumn,
	  				segment.sourceIndex - offsets.sourceIndex,
	  				segment.sourceCodeLine - offsets.sourceCodeLine,
	  				segment.sourceCodeColumn - offsets.sourceCodeColumn
	  			];
	
	  			generatedCodeColumn = segment.generatedCodeColumn;
	  			offsets.sourceIndex = segment.sourceIndex;
	  			offsets.sourceCodeLine = segment.sourceCodeLine;
	  			offsets.sourceCodeColumn = segment.sourceCodeColumn;
	
	  			if ( ~segment.sourceCodeName ) {
	  				arr.push( segment.sourceCodeName - offsets.sourceCodeName );
	  				offsets.sourceCodeName = segment.sourceCodeName;
	  			}
	
	  			return encode( arr );
	  		}).join( ',' );
	  	}).join( ';' );
	
	  	return encoded;
	  }
	
	  function getRelativePath ( from, to ) {
	  	var fromParts = from.split( /[\/\\]/ );
	  	var toParts = to.split( /[\/\\]/ );
	
	  	fromParts.pop(); // get dirname
	
	  	while ( fromParts[0] === toParts[0] ) {
	  		fromParts.shift();
	  		toParts.shift();
	  	}
	
	  	if ( fromParts.length ) {
	  		var i = fromParts.length;
	  		while ( i-- ) fromParts[i] = '..';
	  	}
	
	  	return fromParts.concat( toParts ).join( '/' );
	  }
	
	  var toString = Object.prototype.toString;
	
	  function isObject ( thing ) {
	  	return toString.call( thing ) === '[object Object]';
	  }
	
	  function MagicString ( string, options ) {
	  	if ( options === void 0 ) options = {};
	
	  	var chunk = new Chunk( 0, string.length, string );
	
	  	Object.defineProperties( this, {
	  		original:              { writable: true, value: string },
	  		outro:                 { writable: true, value: '' },
	  		intro:                 { writable: true, value: '' },
	  		firstChunk:            { writable: true, value: chunk },
	  		lastChunk:             { writable: true, value: chunk },
	  		lastSearchedChunk:     { writable: true, value: chunk },
	  		byStart:               { writable: true, value: {} },
	  		byEnd:                 { writable: true, value: {} },
	  		filename:              { writable: true, value: options.filename },
	  		indentExclusionRanges: { writable: true, value: options.indentExclusionRanges },
	  		sourcemapLocations:    { writable: true, value: {} },
	  		storedNames:           { writable: true, value: {} },
	  		indentStr:             { writable: true, value: guessIndent( string ) }
	  	});
	
	  	if ( false ) {}
	
	  	this.byStart[ 0 ] = chunk;
	  	this.byEnd[ string.length ] = chunk;
	  }
	
	  MagicString.prototype = {
	  	addSourcemapLocation: function addSourcemapLocation ( char ) {
	  		this.sourcemapLocations[ char ] = true;
	  	},
	
	  	append: function append ( content ) {
	  		if ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );
	
	  		this.outro += content;
	  		return this;
	  	},
	
	  	clone: function clone () {
	  		var cloned = new MagicString( this.original, { filename: this.filename });
	
	  		var originalChunk = this.firstChunk;
	  		var clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();
	
	  		while ( originalChunk ) {
	  			cloned.byStart[ clonedChunk.start ] = clonedChunk;
	  			cloned.byEnd[ clonedChunk.end ] = clonedChunk;
	
	  			var nextOriginalChunk = originalChunk.next;
	  			var nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();
	
	  			if ( nextClonedChunk ) {
	  				clonedChunk.next = nextClonedChunk;
	  				nextClonedChunk.previous = clonedChunk;
	
	  				clonedChunk = nextClonedChunk;
	  			}
	
	  			originalChunk = nextOriginalChunk;
	  		}
	
	  		cloned.lastChunk = clonedChunk;
	
	  		if ( this.indentExclusionRanges ) {
	  			cloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?
	  				[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :
	  				this.indentExclusionRanges.map( function ( range ) { return [ range.start, range.end ]; } );
	  		}
	
	  		Object.keys( this.sourcemapLocations ).forEach( function ( loc ) {
	  			cloned.sourcemapLocations[ loc ] = true;
	  		});
	
	  		return cloned;
	  	},
	
	  	generateMap: function generateMap ( options ) {
	  		options = options || {};
	
	  		var names = Object.keys( this.storedNames );
	
	  		if ( false ) {}
	  		var map = new SourceMap({
	  			file: ( options.file ? options.file.split( /[\/\\]/ ).pop() : null ),
	  			sources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],
	  			sourcesContent: options.includeContent ? [ this.original ] : [ null ],
	  			names: names,
	  			mappings: this.getMappings( options.hires, 0, {}, names )
	  		});
	  		if ( false ) {}
	
	  		return map;
	  	},
	
	  	getIndentString: function getIndentString () {
	  		return this.indentStr === null ? '\t' : this.indentStr;
	  	},
	
	  	getMappings: function getMappings ( hires, sourceIndex, offsets, names ) {
	  		return encodeMappings( this.original, this.intro, this.firstChunk, hires, this.sourcemapLocations, sourceIndex, offsets, names );
	  	},
	
	  	indent: function indent ( indentStr, options ) {
	  		var this$1 = this;
	
	  		var pattern = /^[^\r\n]/gm;
	
	  		if ( isObject( indentStr ) ) {
	  			options = indentStr;
	  			indentStr = undefined;
	  		}
	
	  		indentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\t' );
	
	  		if ( indentStr === '' ) return this; // noop
	
	  		options = options || {};
	
	  		// Process exclusion ranges
	  		var isExcluded = {};
	
	  		if ( options.exclude ) {
	  			var exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;
	  			exclusions.forEach( function ( exclusion ) {
	  				for ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {
	  					isExcluded[i] = true;
	  				}
	  			});
	  		}
	
	  		var shouldIndentNextCharacter = options.indentStart !== false;
	  		var replacer = function ( match ) {
	  			if ( shouldIndentNextCharacter ) return ("" + indentStr + match);
	  			shouldIndentNextCharacter = true;
	  			return match;
	  		};
	
	  		this.intro = this.intro.replace( pattern, replacer );
	
	  		var charIndex = 0;
	
	  		var chunk = this.firstChunk;
	
	  		while ( chunk ) {
	  			var end = chunk.end;
	
	  			if ( chunk.edited ) {
	  				if ( !isExcluded[ charIndex ] ) {
	  					chunk.content = chunk.content.replace( pattern, replacer );
	
	  					if ( chunk.content.length ) {
	  						shouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\n';
	  					}
	  				}
	  			} else {
	  				charIndex = chunk.start;
	
	  				while ( charIndex < end ) {
	  					if ( !isExcluded[ charIndex ] ) {
	  						var char = this$1.original[ charIndex ];
	
	  						if ( char === '\n' ) {
	  							shouldIndentNextCharacter = true;
	  						} else if ( char !== '\r' && shouldIndentNextCharacter ) {
	  							shouldIndentNextCharacter = false;
	
	  							if ( charIndex === chunk.start ) {
	  								chunk.prepend( indentStr );
	  							} else {
	  								var rhs = chunk.split( charIndex );
	  								rhs.prepend( indentStr );
	
	  								this$1.byStart[ charIndex ] = rhs;
	  								this$1.byEnd[ charIndex ] = chunk;
	
	  								chunk = rhs;
	  							}
	  						}
	  					}
	
	  					charIndex += 1;
	  				}
	  			}
	
	  			charIndex = chunk.end;
	  			chunk = chunk.next;
	  		}
	
	  		this.outro = this.outro.replace( pattern, replacer );
	
	  		return this;
	  	},
	
	  	insert: function insert () {
	  		throw new Error( 'magicString.insert(...) is deprecated. Use insertRight(...) or insertLeft(...)' );
	  	},
	
	  	insertLeft: function insertLeft ( index, content ) {
	  		if ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );
	
	  		if ( false ) {}
	
	  		this._split( index );
	
	  		var chunk = this.byEnd[ index ];
	
	  		if ( chunk ) {
	  			chunk.append( content );
	  		} else {
	  			this.intro += content;
	  		}
	
	  		if ( false ) {}
	  		return this;
	  	},
	
	  	insertRight: function insertRight ( index, content ) {
	  		if ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );
	
	  		if ( false ) {}
	
	  		this._split( index );
	
	  		var chunk = this.byStart[ index ];
	
	  		if ( chunk ) {
	  			chunk.prepend( content );
	  		} else {
	  			this.outro += content;
	  		}
	
	  		if ( false ) {}
	  		return this;
	  	},
	
	  	move: function move ( start, end, index ) {
	  		if ( index >= start && index <= end ) throw new Error( 'Cannot move a selection inside itself' );
	
	  		if ( false ) {}
	
	  		this._split( start );
	  		this._split( end );
	  		this._split( index );
	
	  		var first = this.byStart[ start ];
	  		var last = this.byEnd[ end ];
	
	  		var oldLeft = first.previous;
	  		var oldRight = last.next;
	
	  		var newRight = this.byStart[ index ];
	  		if ( !newRight && last === this.lastChunk ) return this;
	  		var newLeft = newRight ? newRight.previous : this.lastChunk;
	
	  		if ( oldLeft ) oldLeft.next = oldRight;
	  		if ( oldRight ) oldRight.previous = oldLeft;
	
	  		if ( newLeft ) newLeft.next = first;
	  		if ( newRight ) newRight.previous = last;
	
	  		if ( !first.previous ) this.firstChunk = last.next;
	  		if ( !last.next ) {
	  			this.lastChunk = first.previous;
	  			this.lastChunk.next = null;
	  		}
	
	  		first.previous = newLeft;
	  		last.next = newRight;
	
	  		if ( !newLeft ) this.firstChunk = first;
	  		if ( !newRight ) this.lastChunk = last;
	
	  		if ( false ) {}
	  		return this;
	  	},
	
	  	overwrite: function overwrite ( start, end, content, storeName ) {
	  		var this$1 = this;
	
	  		if ( typeof content !== 'string' ) throw new TypeError( 'replacement content must be a string' );
	
	  		while ( start < 0 ) start += this$1.original.length;
	  		while ( end < 0 ) end += this$1.original.length;
	
	  		if ( end > this.original.length ) throw new Error( 'end is out of bounds' );
	  		if ( start === end ) throw new Error( 'Cannot overwrite a zero-length range – use insertLeft or insertRight instead' );
	
	  		if ( false ) {}
	
	  		this._split( start );
	  		this._split( end );
	
	  		if ( storeName ) {
	  			var original = this.original.slice( start, end );
	  			this.storedNames[ original ] = true;
	  		}
	
	  		var first = this.byStart[ start ];
	  		var last = this.byEnd[ end ];
	
	  		if ( first ) {
	  			first.edit( content, storeName );
	
	  			if ( first !== last ) {
	  				first.outro = '';
	
	  				var chunk = first.next;
	  				while ( chunk !== last ) {
	  					chunk.edit( '', false );
	  					chunk.intro = chunk.outro = '';
	  					chunk = chunk.next;
	  				}
	
	  				chunk.edit( '', false );
	  				chunk.intro = '';
	  			}
	  		}
	
	  		else {
	  			// must be inserting at the end
	  			var newChunk = new Chunk( start, end, '' ).edit( content, storeName );
	
	  			// TODO last chunk in the array may not be the last chunk, if it's moved...
	  			last.next = newChunk;
	  			newChunk.previous = last;
	  		}
	
	  		if ( false ) {}
	  		return this;
	  	},
	
	  	prepend: function prepend ( content ) {
	  		if ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );
	
	  		this.intro = content + this.intro;
	  		return this;
	  	},
	
	  	remove: function remove ( start, end ) {
	  		var this$1 = this;
	
	  		while ( start < 0 ) start += this$1.original.length;
	  		while ( end < 0 ) end += this$1.original.length;
	
	  		if ( start === end ) return this;
	
	  		if ( start < 0 || end > this.original.length ) throw new Error( 'Character is out of bounds' );
	  		if ( start > end ) throw new Error( 'end must be greater than start' );
	
	  		return this.overwrite( start, end, '', false );
	  	},
	
	  	slice: function slice ( start, end ) {
	  		var this$1 = this;
	  		if ( start === void 0 ) start = 0;
	  		if ( end === void 0 ) end = this.original.length;
	
	  		while ( start < 0 ) start += this$1.original.length;
	  		while ( end < 0 ) end += this$1.original.length;
	
	  		var result = '';
	
	  		// find start chunk
	  		var chunk = this.firstChunk;
	  		while ( chunk && ( chunk.start > start || chunk.end <= start ) ) {
	
	  			// found end chunk before start
	  			if ( chunk.start < end && chunk.end >= end ) {
	  				return result;
	  			}
	
	  			chunk = chunk.next;
	  		}
	
	  		if ( chunk && chunk.edited && chunk.start !== start ) throw new Error(("Cannot use replaced character " + start + " as slice start anchor."));
	
	  		var startChunk = chunk;
	  		while ( chunk ) {
	  			if ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {
	  				result += chunk.intro;
	  			}
	
	  			var containsEnd = chunk.start < end && chunk.end >= end;
	  			if ( containsEnd && chunk.edited && chunk.end !== end ) throw new Error(("Cannot use replaced character " + end + " as slice end anchor."));
	
	  			var sliceStart = startChunk === chunk ? start - chunk.start : 0;
	  			var sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;
	
	  			result += chunk.content.slice( sliceStart, sliceEnd );
	
	  			if ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {
	  				result += chunk.outro;
	  			}
	
	  			if ( containsEnd ) {
	  				break;
	  			}
	
	  			chunk = chunk.next;
	  		}
	
	  		return result;
	  	},
	
	  	// TODO deprecate this? not really very useful
	  	snip: function snip ( start, end ) {
	  		var clone = this.clone();
	  		clone.remove( 0, start );
	  		clone.remove( end, clone.original.length );
	
	  		return clone;
	  	},
	
	  	_split: function _split ( index ) {
	  		var this$1 = this;
	
	  		if ( this.byStart[ index ] || this.byEnd[ index ] ) return;
	
	  		if ( false ) {}
	
	  		var chunk = this.lastSearchedChunk;
	  		var searchForward = index > chunk.end;
	
	  		while ( true ) {
	  			if ( chunk.contains( index ) ) return this$1._splitChunk( chunk, index );
	
	  			chunk = searchForward ?
	  				this$1.byStart[ chunk.end ] :
	  				this$1.byEnd[ chunk.start ];
	  		}
	  	},
	
	  	_splitChunk: function _splitChunk ( chunk, index ) {
	  		if ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)
	  			var loc = getLocator( this.original )( index );
	  			throw new Error( ("Cannot split a chunk that has already been edited (" + (loc.line) + ":" + (loc.column) + " – \"" + (chunk.original) + "\")") );
	  		}
	
	  		var newChunk = chunk.split( index );
	
	  		this.byEnd[ index ] = chunk;
	  		this.byStart[ index ] = newChunk;
	  		this.byEnd[ newChunk.end ] = newChunk;
	
	  		if ( chunk === this.lastChunk ) this.lastChunk = newChunk;
	
	  		this.lastSearchedChunk = chunk;
	  		if ( false ) {}
	  		return true;
	  	},
	
	  	toString: function toString () {
	  		var str = this.intro;
	
	  		var chunk = this.firstChunk;
	  		while ( chunk ) {
	  			str += chunk.toString();
	  			chunk = chunk.next;
	  		}
	
	  		return str + this.outro;
	  	},
	
	  	trimLines: function trimLines () {
	  		return this.trim('[\\r\\n]');
	  	},
	
	  	trim: function trim ( charType ) {
	  		return this.trimStart( charType ).trimEnd( charType );
	  	},
	
	  	trimEnd: function trimEnd ( charType ) {
	  		var this$1 = this;
	
	  		var rx = new RegExp( ( charType || '\\s' ) + '+$' );
	
	  		this.outro = this.outro.replace( rx, '' );
	  		if ( this.outro.length ) return this;
	
	  		var chunk = this.lastChunk;
	
	  		do {
	  			var end = chunk.end;
	  			var aborted = chunk.trimEnd( rx );
	
	  			// if chunk was trimmed, we have a new lastChunk
	  			if ( chunk.end !== end ) {
	  				this$1.lastChunk = chunk.next;
	
	  				this$1.byEnd[ chunk.end ] = chunk;
	  				this$1.byStart[ chunk.next.start ] = chunk.next;
	  			}
	
	  			if ( aborted ) return this$1;
	  			chunk = chunk.previous;
	  		} while ( chunk );
	
	  		return this;
	  	},
	
	  	trimStart: function trimStart ( charType ) {
	  		var this$1 = this;
	
	  		var rx = new RegExp( '^' + ( charType || '\\s' ) + '+' );
	
	  		this.intro = this.intro.replace( rx, '' );
	  		if ( this.intro.length ) return this;
	
	  		var chunk = this.firstChunk;
	
	  		do {
	  			var end = chunk.end;
	  			var aborted = chunk.trimStart( rx );
	
	  			if ( chunk.end !== end ) {
	  				// special case...
	  				if ( chunk === this$1.lastChunk ) this$1.lastChunk = chunk.next;
	
	  				this$1.byEnd[ chunk.end ] = chunk;
	  				this$1.byStart[ chunk.next.start ] = chunk.next;
	  			}
	
	  			if ( aborted ) return this$1;
	  			chunk = chunk.next;
	  		} while ( chunk );
	
	  		return this;
	  	}
	  };
	
	  var hasOwnProp = Object.prototype.hasOwnProperty;
	
	  function Bundle ( options ) {
	  	if ( options === void 0 ) options = {};
	
	  	this.intro = options.intro || '';
	  	this.separator = options.separator !== undefined ? options.separator : '\n';
	
	  	this.sources = [];
	
	  	this.uniqueSources = [];
	  	this.uniqueSourceIndexByFilename = {};
	  }
	
	  Bundle.prototype = {
	  	addSource: function addSource ( source ) {
	  		if ( source instanceof MagicString ) {
	  			return this.addSource({
	  				content: source,
	  				filename: source.filename,
	  				separator: this.separator
	  			});
	  		}
	
	  		if ( !isObject( source ) || !source.content ) {
	  			throw new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );
	  		}
	
	  		[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function ( option ) {
	  			if ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];
	  		});
	
	  		if ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up
	  			source.separator = this.separator;
	  		}
	
	  		if ( source.filename ) {
	  			if ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {
	  				this.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;
	  				this.uniqueSources.push({ filename: source.filename, content: source.content.original });
	  			} else {
	  				var uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];
	  				if ( source.content.original !== uniqueSource.content ) {
	  					throw new Error( ("Illegal source: same filename (" + (source.filename) + "), different contents") );
	  				}
	  			}
	  		}
	
	  		this.sources.push( source );
	  		return this;
	  	},
	
	  	append: function append ( str, options ) {
	  		this.addSource({
	  			content: new MagicString( str ),
	  			separator: ( options && options.separator ) || ''
	  		});
	
	  		return this;
	  	},
	
	  	clone: function clone () {
	  		var bundle = new Bundle({
	  			intro: this.intro,
	  			separator: this.separator
	  		});
	
	  		this.sources.forEach( function ( source ) {
	  			bundle.addSource({
	  				filename: source.filename,
	  				content: source.content.clone(),
	  				separator: source.separator
	  			});
	  		});
	
	  		return bundle;
	  	},
	
	  	generateMap: function generateMap ( options ) {
	  		var this$1 = this;
	
	  		var offsets = {};
	
	  		var names = [];
	  		this.sources.forEach( function ( source ) {
	  			Object.keys( source.content.storedNames ).forEach( function ( name ) {
	  				if ( !~names.indexOf( name ) ) names.push( name );
	  			});
	  		});
	
	  		var encoded = (
	  			getSemis( this.intro ) +
	  			this.sources.map( function ( source, i ) {
	  				var prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';
	  				var mappings;
	
	  				// we don't bother encoding sources without a filename
	  				if ( !source.filename ) {
	  					mappings = getSemis( source.content.toString() );
	  				} else {
	  					var sourceIndex = this$1.uniqueSourceIndexByFilename[ source.filename ];
	  					mappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );
	  				}
	
	  				return prefix + mappings;
	  			}).join( '' )
	  		);
	
	  		return new SourceMap({
	  			file: ( options.file ? options.file.split( /[\/\\]/ ).pop() : null ),
	  			sources: this.uniqueSources.map( function ( source ) {
	  				return options.file ? getRelativePath( options.file, source.filename ) : source.filename;
	  			}),
	  			sourcesContent: this.uniqueSources.map( function ( source ) {
	  				return options.includeContent ? source.content : null;
	  			}),
	  			names: names,
	  			mappings: encoded
	  		});
	  	},
	
	  	getIndentString: function getIndentString () {
	  		var indentStringCounts = {};
	
	  		this.sources.forEach( function ( source ) {
	  			var indentStr = source.content.indentStr;
	
	  			if ( indentStr === null ) return;
	
	  			if ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;
	  			indentStringCounts[ indentStr ] += 1;
	  		});
	
	  		return ( Object.keys( indentStringCounts ).sort( function ( a, b ) {
	  			return indentStringCounts[a] - indentStringCounts[b];
	  		})[0] ) || '\t';
	  	},
	
	  	indent: function indent ( indentStr ) {
	  		var this$1 = this;
	
	  		if ( !arguments.length ) {
	  			indentStr = this.getIndentString();
	  		}
	
	  		if ( indentStr === '' ) return this; // noop
	
	  		var trailingNewline = !this.intro || this.intro.slice( -1 ) === '\n';
	
	  		this.sources.forEach( function ( source, i ) {
	  			var separator = source.separator !== undefined ? source.separator : this$1.separator;
	  			var indentStart = trailingNewline || ( i > 0 && /\r?\n$/.test( separator ) );
	
	  			source.content.indent( indentStr, {
	  				exclude: source.indentExclusionRanges,
	  				indentStart: indentStart//: trailingNewline || /\r?\n$/.test( separator )  //true///\r?\n/.test( separator )
	  			});
	
	  			// TODO this is a very slow way to determine this
	  			trailingNewline = source.content.toString().slice( 0, -1 ) === '\n';
	  		});
	
	  		if ( this.intro ) {
	  			this.intro = indentStr + this.intro.replace( /^[^\n]/gm, function ( match, index ) {
	  				return index > 0 ? indentStr + match : match;
	  			});
	  		}
	
	  		return this;
	  	},
	
	  	prepend: function prepend ( str ) {
	  		this.intro = str + this.intro;
	  		return this;
	  	},
	
	  	toString: function toString () {
	  		var this$1 = this;
	
	  		var body = this.sources.map( function ( source, i ) {
	  			var separator = source.separator !== undefined ? source.separator : this$1.separator;
	  			var str = ( i > 0 ? separator : '' ) + source.content.toString();
	
	  			return str;
	  		}).join( '' );
	
	  		return this.intro + body;
	  	},
	
	  	trimLines: function trimLines () {
	  		return this.trim('[\\r\\n]');
	  	},
	
	  	trim: function trim ( charType ) {
	  		return this.trimStart( charType ).trimEnd( charType );
	  	},
	
	  	trimStart: function trimStart ( charType ) {
	  		var this$1 = this;
	
	  		var rx = new RegExp( '^' + ( charType || '\\s' ) + '+' );
	  		this.intro = this.intro.replace( rx, '' );
	
	  		if ( !this.intro ) {
	  			var source;
	  			var i = 0;
	
	  			do {
	  				source = this$1.sources[i];
	
	  				if ( !source ) {
	  					break;
	  				}
	
	  				source.content.trimStart( charType );
	  				i += 1;
	  			} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?
	  		}
	
	  		return this;
	  	},
	
	  	trimEnd: function trimEnd ( charType ) {
	  		var this$1 = this;
	
	  		var rx = new RegExp( ( charType || '\\s' ) + '+$' );
	
	  		var source;
	  		var i = this.sources.length - 1;
	
	  		do {
	  			source = this$1.sources[i];
	
	  			if ( !source ) {
	  				this$1.intro = this$1.intro.replace( rx, '' );
	  				break;
	  			}
	
	  			source.content.trimEnd( charType );
	  			i -= 1;
	  		} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?
	
	  		return this;
	  	}
	  };
	
	  function getSemis ( str ) {
	  	return new Array( str.split( '\n' ).length ).join( ';' );
	  }
	
	  MagicString.Bundle = Bundle;
	
	  var keys = {
	  	Program: [ 'body' ],
	  	Literal: []
	  };
	
	  // used for debugging, without the noise created by
	  // circular references
	  function toJSON ( node ) {
	  	var obj = {};
	
	  	Object.keys( node ).forEach( function ( key ) {
	  		if ( key === 'parent' || key === 'program' || key === 'keys' || key === '__wrapped' ) return;
	
	  		if ( Array.isArray( node[ key ] ) ) {
	  			obj[ key ] = node[ key ].map( toJSON );
	  		} else if ( node[ key ] && node[ key ].toJSON ) {
	  			obj[ key ] = node[ key ].toJSON();
	  		} else {
	  			obj[ key ] = node[ key ];
	  		}
	  	});
	
	  	return obj;
	  }
	
	  var Node = function Node ( raw, parent ) {
	  	raw.parent = parent;
	  	raw.program = parent.program || parent;
	  	raw.depth = parent.depth + 1;
	  	raw.keys = keys[ raw.type ];
	  	raw.indentation = undefined;
	
	  	for ( var i = 0, list = keys[ raw.type ]; i < list.length; i += 1 ) {
	  		var key = list[i];
	
	  			wrap( raw[ key ], raw );
	  	}
	
	  	raw.program.magicString.addSourcemapLocation( raw.start );
	  	raw.program.magicString.addSourcemapLocation( raw.end );
	  };
	
	  Node.prototype.ancestor = function ancestor ( level ) {
	  	var node = this;
	  	while ( level-- ) {
	  		node = node.parent;
	  		if ( !node ) return null;
	  	}
	
	  	return node;
	  };
	
	  Node.prototype.contains = function contains ( node ) {
	  		var this$1 = this;
	
	  	while ( node ) {
	  		if ( node === this$1 ) return true;
	  		node = node.parent;
	  	}
	
	  	return false;
	  };
	
	  Node.prototype.findLexicalBoundary = function findLexicalBoundary () {
	  	return this.parent.findLexicalBoundary();
	  };
	
	  Node.prototype.findNearest = function findNearest ( type ) {
	  	if ( typeof type === 'string' ) type = new RegExp( ("^" + type + "$") );
	  	if ( type.test( this.type ) ) return this;
	  	return this.parent.findNearest( type );
	  };
	
	  Node.prototype.unparenthesizedParent = function unparenthesizedParent () {
	  	var node = this.parent;
	  	while ( node && node.type === 'ParenthesizedExpression' ) {
	  		node = node.parent;
	  	}
	  	return node;
	  };
	
	  Node.prototype.unparenthesize = function unparenthesize () {
	  	var node = this;
	  	while ( node.type === 'ParenthesizedExpression' ) {
	  		node = node.expression;
	  	}
	  	return node;
	  };
	
	  Node.prototype.findScope = function findScope ( functionScope ) {
	  	return this.parent.findScope( functionScope );
	  };
	
	  Node.prototype.getIndentation = function getIndentation () {
	  	return this.parent.getIndentation();
	  };
	
	  Node.prototype.initialise = function initialise ( transforms ) {
	  	for ( var i = 0, list = this.keys; i < list.length; i += 1 ) {
	  		var key = list[i];
	
	  			var value = this[ key ];
	
	  		if ( Array.isArray( value ) ) {
	  			value.forEach( function ( node ) { return node && node.initialise( transforms ); } );
	  		} else if ( value && typeof value === 'object' ) {
	  			value.initialise( transforms );
	  		}
	  	}
	  };
	
	  Node.prototype.toJSON = function toJSON$1 () {
	  	return toJSON( this );
	  };
	
	  Node.prototype.toString = function toString () {
	  	return this.program.magicString.original.slice( this.start, this.end );
	  };
	
	  Node.prototype.transpile = function transpile ( code, transforms ) {
	  	for ( var i = 0, list = this.keys; i < list.length; i += 1 ) {
	  		var key = list[i];
	
	  			var value = this[ key ];
	
	  		if ( Array.isArray( value ) ) {
	  			value.forEach( function ( node ) { return node && node.transpile( code, transforms ); } );
	  		} else if ( value && typeof value === 'object' ) {
	  			value.transpile( code, transforms );
	  		}
	  	}
	  };
	
	  function isArguments ( node ) {
	  	return node.type === 'Identifier' && node.name === 'arguments';
	  }
	
	  function spread ( code, elements, start, argumentsArrayAlias, isNew ) {
	  	var i = elements.length;
	  	var firstSpreadIndex = -1;
	
	  	while ( i-- ) {
	  		var element$1 = elements[i];
	  		if ( element$1 && element$1.type === 'SpreadElement' ) {
	  			if ( isArguments( element$1.argument ) ) {
	  				code.overwrite( element$1.argument.start, element$1.argument.end, argumentsArrayAlias );
	  			}
	
	  			firstSpreadIndex = i;
	  		}
	  	}
	
	  	if ( firstSpreadIndex === -1 ) return false; // false indicates no spread elements
	
	  	if (isNew) {
	  		for ( i = 0; i < elements.length; i += 1 ) {
	  			var element$2 = elements[i];
	  			if ( element$2.type === 'SpreadElement' ) {
	  				code.remove( element$2.start, element$2.argument.start );
	  			} else {
	  				code.insertRight( element$2.start, '[' );
	  				code.insertRight( element$2.end, ']' );
	  			}
	  		}
	
	  		return true; // true indicates some spread elements
	  	}
	
	  	var element = elements[ firstSpreadIndex ];
	  	var previousElement = elements[ firstSpreadIndex - 1 ];
	
	  	if ( !previousElement ) {
	  		code.remove( start, element.start );
	  		code.overwrite( element.end, elements[1].start, '.concat( ' );
	  	} else {
	  		code.overwrite( previousElement.end, element.start, ' ].concat( ' );
	  	}
	
	  	for ( i = firstSpreadIndex; i < elements.length; i += 1 ) {
	  		element = elements[i];
	
	  		if ( element ) {
	  			if ( element.type === 'SpreadElement' ) {
	  				code.remove( element.start, element.argument.start );
	  			} else {
	  				code.insertLeft( element.start, '[' );
	  				code.insertLeft( element.end, ']' );
	  			}
	  		}
	  	}
	
	  	return true; // true indicates some spread elements
	  }
	
	  var ArrayExpression = (function (Node) {
	  	function ArrayExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ArrayExpression.__proto__ = Node;
	  	ArrayExpression.prototype = Object.create( Node && Node.prototype );
	  	ArrayExpression.prototype.constructor = ArrayExpression;
	
	  	ArrayExpression.prototype.initialise = function initialise ( transforms ) {
	  		var this$1 = this;
	
	  		if ( transforms.spreadRest && this.elements.length ) {
	  			var lexicalBoundary = this.findLexicalBoundary();
	
	  			var i = this.elements.length;
	  			while ( i-- ) {
	  				var element = this$1.elements[i];
	  				if ( element && element.type === 'SpreadElement' && isArguments( element.argument ) ) {
	  					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
	  				}
	  			}
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	ArrayExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.spreadRest ) {
	  			// erase trailing comma after last array element if not an array hole
	  			if ( this.elements.length ) {
	  				var lastElement = this.elements[ this.elements.length - 1 ];
	  				if ( lastElement && /\s*,/.test( code.original.slice( lastElement.end, this.end ) ) ) {
	  					code.overwrite( lastElement.end, this.end - 1, ' ' );
	  				}
	  			}
	
	  			if ( this.elements.length === 1 ) {
	  				var element = this.elements[0];
	
	  				if ( element && element.type === 'SpreadElement' ) {
	  					// special case – [ ...arguments ]
	  					if ( isArguments( element.argument ) ) {
	  						code.overwrite( this.start, this.end, ("[].concat( " + (this.argumentsArrayAlias) + " )") ); // TODO if this is the only use of argsArray, don't bother concating
	  					} else {
	  						code.overwrite( this.start, element.argument.start, '[].concat( ' );
	  						code.overwrite( element.end, this.end, ' )' );
	  					}
	  				}
	  			}
	  			else {
	  				var hasSpreadElements = spread( code, this.elements, this.start, this.argumentsArrayAlias );
	
	  				if ( hasSpreadElements ) {
	  					code.overwrite( this.end - 1, this.end, ')' );
	  				}
	  			}
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ArrayExpression;
	  }(Node));
	
	  var ArrowFunctionExpression = (function (Node) {
	  	function ArrowFunctionExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ArrowFunctionExpression.__proto__ = Node;
	  	ArrowFunctionExpression.prototype = Object.create( Node && Node.prototype );
	  	ArrowFunctionExpression.prototype.constructor = ArrowFunctionExpression;
	
	  	ArrowFunctionExpression.prototype.initialise = function initialise ( transforms ) {
	  		this.body.createScope();
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	ArrowFunctionExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.arrow ) {
	  			// remove arrow
	  			var charIndex = this.body.start;
	  			while ( code.original[ charIndex ] !== '=' ) {
	  				charIndex -= 1;
	  			}
	  			code.remove( charIndex, this.body.start );
	
	  			// wrap naked parameter
	  			if ( this.params.length === 1 && this.start === this.params[0].start ) {
	  				code.insertRight( this.params[0].start, '(' );
	  				code.insertLeft( this.params[0].end, ')' );
	  			}
	
	  			// add function
	  			if ( this.parent && this.parent.type === 'ExpressionStatement' ) {
	  				// standalone expression statement
	  				code.insertRight( this.start, '(function' );
	  				code.insertRight( this.end, ')' );
	  			} else {
	  				code.insertRight( this.start, 'function ' );
	  			}
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ArrowFunctionExpression;
	  }(Node));
	
	  function locate ( source, index ) {
	  	var lines = source.split( '\n' );
	  	var len = lines.length;
	
	  	var lineStart = 0;
	  	var i;
	
	  	for ( i = 0; i < len; i += 1 ) {
	  		var line = lines[i];
	  		var lineEnd =  lineStart + line.length + 1; // +1 for newline
	
	  		if ( lineEnd > index ) {
	  			return { line: i + 1, column: index - lineStart, char: i };
	  		}
	
	  		lineStart = lineEnd;
	  	}
	
	  	throw new Error( 'Could not determine location of character' );
	  }
	
	  function pad ( num, len ) {
	  	var result = String( num );
	  	return result + repeat( ' ', len - result.length );
	  }
	
	  function repeat ( str, times ) {
	  	var result = '';
	  	while ( times-- ) result += str;
	  	return result;
	  }
	
	  function getSnippet ( source, loc, length ) {
	  	if ( length === void 0 ) length = 1;
	
	  	var first = Math.max( loc.line - 5, 0 );
	  	var last = loc.line;
	
	  	var numDigits = String( last ).length;
	
	  	var lines = source.split( '\n' ).slice( first, last );
	
	  	var lastLine = lines[ lines.length - 1 ];
	  	var offset = lastLine.slice( 0, loc.column ).replace( /\t/g, '  ' ).length;
	
	  	var snippet = lines
	  		.map( function ( line, i ) { return ((pad( i + first + 1, numDigits )) + " : " + (line.replace( /\t/g, '  '))); } )
	  		.join( '\n' );
	
	  	snippet += '\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );
	
	  	return snippet;
	  }
	
	  var CompileError = (function (Error) {
	  	function CompileError ( node, message ) {
	  		Error.call(this);
	
	  		var source = node.program.magicString.original;
	  		var loc = locate( source, node.start );
	
	  		this.name = 'CompileError';
	  		this.message = message + " (" + (loc.line) + ":" + (loc.column) + ")";
	
	  		this.stack = new Error().stack.replace( new RegExp( (".+new " + (this.name) + ".+\\n"), 'm' ), '' );
	
	  		this.loc = loc;
	  		this.snippet = getSnippet( source, loc, node.end - node.start );
	  	}
	
	  	if ( Error ) CompileError.__proto__ = Error;
	  	CompileError.prototype = Object.create( Error && Error.prototype );
	  	CompileError.prototype.constructor = CompileError;
	
	  	CompileError.prototype.toString = function toString () {
	  		return ((this.name) + ": " + (this.message) + "\n" + (this.snippet));
	  	};
	
	  	return CompileError;
	  }(Error));
	
	  var AssignmentExpression = (function (Node) {
	  	function AssignmentExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) AssignmentExpression.__proto__ = Node;
	  	AssignmentExpression.prototype = Object.create( Node && Node.prototype );
	  	AssignmentExpression.prototype.constructor = AssignmentExpression;
	
	  	AssignmentExpression.prototype.initialise = function initialise ( transforms ) {
	  		if ( this.left.type === 'Identifier' ) {
	  			var declaration = this.findScope( false ).findDeclaration( this.left.name );
	  			if ( declaration && declaration.kind === 'const' ) {
	  				throw new CompileError( this.left, ((this.left.name) + " is read-only") );
	  			}
	
	  			// special case – https://gitlab.com/Rich-Harris/buble/issues/11
	  			var statement = declaration && declaration.node.ancestor( 3 );
	  			if ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {
	  				statement.reassigned[ this.left.name ] = true;
	  			}
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	AssignmentExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( this.operator === '**=' && transforms.exponentiation ) {
	  			this.transpileExponentiation( code, transforms );
	  		}
	
	  		else if ( /Pattern/.test( this.left.type ) && transforms.destructuring ) {
	  			this.transpileDestructuring( code, transforms );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	AssignmentExpression.prototype.transpileDestructuring = function transpileDestructuring ( code ) {
	  		var scope = this.findScope( true );
	  		var assign = scope.createIdentifier( 'assign' );
	  		var temporaries = [ assign ];
	
	  		var start = this.start;
	
	  		// We need to pick out some elements from the original code,
	  		// interleaved with generated code. These helpers are used to
	  		// easily do that while keeping the order of the output
	  		// predictable.
	  		var text = '';
	  		function use ( node ) {
	  			code.insertRight( node.start, text );
	  			code.move( node.start, node.end, start );
	  			text = '';
	  		}
	  		function write ( string ) {
	  			text += string;
	  		}
	
	  		write( ("(" + assign + " = ") );
	  		use( this.right );
	
	  		// Walk `pattern`, generating code that assigns the value in
	  		// `ref` to it. When `mayDuplicate` is false, the function
	  		// must take care to only output `ref` once.
	  		function destructure ( pattern, ref, mayDuplicate ) {
	  			if ( pattern.type === 'Identifier' || pattern.type === 'MemberExpression' ) {
	  				write( ', ' );
	  				use( pattern );
	  				write( (" = " + ref) );
	  			}
	
	  			else if ( pattern.type === 'AssignmentPattern' ) {
	  				if ( pattern.left.type === 'Identifier' ) {
	  					var target = pattern.left.name;
	  					var source = ref;
	  					if ( !mayDuplicate ) {
	  						write( (", " + target + " = " + ref) );
	  						source = target;
	  					}
	  					write( (", " + target + " = " + source + " === void 0 ? ") );
	  					use( pattern.right );
	  					write( (" : " + source) );
	  				}
	  				else {
	  					var target$1 = scope.createIdentifier( 'temp' );
	  					var source$1 = ref;
	  					temporaries.push( target$1 );
	  					if ( !mayDuplicate ) {
	  						write( (", " + target$1 + " = " + ref) );
	  						source$1 = target$1;
	  					}
	  					write( (", " + target$1 + " = " + source$1 + " === void 0 ? ") );
	  					use( pattern.right );
	  					write( (" : " + source$1) );
	  					destructure( pattern.left, target$1, true );
	  				}
	  			}
	
	  			else if ( pattern.type === 'ArrayPattern' ) {
	  				var elements = pattern.elements;
	  				if ( elements.length === 1 ) {
	  					destructure( elements[0], (ref + "[0]"), false );
	  				}
	  				else {
	  					if ( !mayDuplicate ) {
	  						var temp = scope.createIdentifier( 'array' );
	  						temporaries.push( temp );
	  						write( (", " + temp + " = " + ref) );
	  						ref = temp;
	  					}
	  					elements.forEach( function ( element, i ) {
	  						if ( element ) {
	  							if ( element.type === 'RestElement' ) {
	  								destructure( element.argument, (ref + ".slice(" + i + ")"), false );
	  							} else {
	  								destructure( element, (ref + "[" + i + "]"), false );
	  							}
	  						}
	  					} );
	  				}
	  			}
	
	  			else if ( pattern.type === 'ObjectPattern' ) {
	  				var props = pattern.properties;
	  				if ( props.length == 1 ) {
	  					var prop = props[0];
	  					var value = prop.computed || prop.key.type !== 'Identifier' ? (ref + "[" + (code.slice(prop.key.start, prop.key.end)) + "]") : (ref + "." + (prop.key.name));
	  					destructure( prop.value, value, false );
	  				}
	  				else {
	  					if ( !mayDuplicate ) {
	  						var temp$1 = scope.createIdentifier( 'obj' );
	  						temporaries.push( temp$1 );
	  						write( (", " + temp$1 + " = " + ref) );
	  						ref = temp$1;
	  					}
	  					props.forEach( function ( prop ) {
	  						var value = prop.computed || prop.key.type !== 'Identifier' ? (ref + "[" + (code.slice(prop.key.start, prop.key.end)) + "]") : (ref + "." + (prop.key.name));
	  						destructure( prop.value, value, false );
	  					} );
	  				}
	  			}
	
	  			else {
	  				throw new Error( ("Unexpected node type in destructuring assignment (" + (pattern.type) + ")") );
	  			}
	  		}
	  		destructure( this.left, assign, true );
	
	  		if ( this.unparenthesizedParent().type === 'ExpressionStatement' ) {
	  			// no rvalue needed for expression statement
	  			code.insertRight( start, (text + ")") );
	  		} else {
	  			// destructuring is part of an expression - need an rvalue
	  			code.insertRight( start, (text + ", " + assign + ")") );
	  		}
	
	  		code.remove( start, this.right.start );
	
	  		var statement = this.findNearest( /(?:Statement|Declaration)$/ );
	  		code.insertLeft( statement.start, ("var " + (temporaries.join( ', ' )) + ";\n" + (statement.getIndentation())) );
	  	};
	
	  	AssignmentExpression.prototype.transpileExponentiation = function transpileExponentiation ( code ) {
	  		var scope = this.findScope( false );
	  		var getAlias = function ( name ) {
	  			var declaration = scope.findDeclaration( name );
	  			return declaration ? declaration.name : name;
	  		};
	
	  		// first, the easy part – `**=` -> `=`
	  		var charIndex = this.left.end;
	  		while ( code.original[ charIndex ] !== '*' ) charIndex += 1;
	  		code.remove( charIndex, charIndex + 2 );
	
	  		// how we do the next part depends on a number of factors – whether
	  		// this is a top-level statement, and whether we're updating a
	  		// simple or complex reference
	  		var base;
	
	  		var left = this.left.unparenthesize();
	
	  		if ( left.type === 'Identifier' ) {
	  			base = getAlias( left.name );
	  		} else if ( left.type === 'MemberExpression' ) {
	  			var object;
	  			var needsObjectVar = false;
	  			var property;
	  			var needsPropertyVar = false;
	
	  			var statement = this.findNearest( /(?:Statement|Declaration)$/ );
	  			var i0 = statement.getIndentation();
	
	  			if ( left.property.type === 'Identifier' ) {
	  				property = left.computed ? getAlias( left.property.name ) : left.property.name;
	  			} else {
	  				property = scope.createIdentifier( 'property' );
	  				needsPropertyVar = true;
	  			}
	
	  			if ( left.object.type === 'Identifier' ) {
	  				object = getAlias( left.object.name );
	  			} else {
	  				object = scope.createIdentifier( 'object' );
	  				needsObjectVar = true;
	  			}
	
	  			if ( left.start === statement.start ) {
	  				if ( needsObjectVar && needsPropertyVar ) {
	  					code.insertRight( statement.start, ("var " + object + " = ") );
	  					code.overwrite( left.object.end, left.property.start, (";\n" + i0 + "var " + property + " = ") );
	  					code.overwrite( left.property.end, left.end, (";\n" + i0 + object + "[" + property + "]") );
	  				}
	
	  				else if ( needsObjectVar ) {
	  					code.insertRight( statement.start, ("var " + object + " = ") );
	  					code.insertLeft( left.object.end, (";\n" + i0) );
	  					code.insertLeft( left.object.end, object );
	  				}
	
	  				else if ( needsPropertyVar ) {
	  					code.insertRight( left.property.start, ("var " + property + " = ") );
	  					code.insertLeft( left.property.end, (";\n" + i0) );
	  					code.move( left.property.start, left.property.end, this.start );
	
	  					code.insertLeft( left.object.end, ("[" + property + "]") );
	  					code.remove( left.object.end, left.property.start );
	  					code.remove( left.property.end, left.end );
	  				}
	  			}
	
	  			else {
	  				var declarators = [];
	  				if ( needsObjectVar ) declarators.push( object );
	  				if ( needsPropertyVar ) declarators.push( property );
	
	  				if ( declarators.length ) {
	  					code.insertRight( statement.start, ("var " + (declarators.join( ', ' )) + ";\n" + i0) );
	  				}
	
	  				if ( needsObjectVar && needsPropertyVar ) {
	  					code.insertRight( left.start, ("( " + object + " = ") );
	  					code.overwrite( left.object.end, left.property.start, (", " + property + " = ") );
	  					code.overwrite( left.property.end, left.end, (", " + object + "[" + property + "]") );
	  				}
	
	  				else if ( needsObjectVar ) {
	  					code.insertRight( left.start, ("( " + object + " = ") );
	  					code.insertLeft( left.object.end, (", " + object) );
	  				}
	
	  				else if ( needsPropertyVar ) {
	  					code.insertRight( left.property.start, ("( " + property + " = ") );
	  					code.insertLeft( left.property.end, ", " );
	  					code.move( left.property.start, left.property.end, left.start );
	
	  					code.overwrite( left.object.end, left.property.start, ("[" + property + "]") );
	  					code.remove( left.property.end, left.end );
	  				}
	
	  				if ( needsPropertyVar ) {
	  					code.insertLeft( this.end, " )" );
	  				}
	  			}
	
	  			base = object + ( left.computed || needsPropertyVar ? ("[" + property + "]") : ("." + property) );
	  		}
	
	  		code.insertRight( this.right.start, ("Math.pow( " + base + ", ") );
	  		code.insertLeft( this.right.end, " )" );
	  	};
	
	  	return AssignmentExpression;
	  }(Node));
	
	  var BinaryExpression = (function (Node) {
	  	function BinaryExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) BinaryExpression.__proto__ = Node;
	  	BinaryExpression.prototype = Object.create( Node && Node.prototype );
	  	BinaryExpression.prototype.constructor = BinaryExpression;
	
	  	BinaryExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( this.operator === '**' && transforms.exponentiation ) {
	  			code.insertRight( this.start, "Math.pow( " );
	  			code.overwrite( this.left.end, this.right.start, ", " );
	  			code.insertLeft( this.end, " )" );
	  		}
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return BinaryExpression;
	  }(Node));
	
	  var loopStatement = /(?:For(?:In|Of)?|While)Statement/;
	
	  var BreakStatement = (function (Node) {
	  	function BreakStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) BreakStatement.__proto__ = Node;
	  	BreakStatement.prototype = Object.create( Node && Node.prototype );
	  	BreakStatement.prototype.constructor = BreakStatement;
	
	  	BreakStatement.prototype.initialise = function initialise () {
	  		var loop = this.findNearest( loopStatement );
	  		var switchCase = this.findNearest( 'SwitchCase' );
	
	  		if ( loop && ( !switchCase || loop.depth > switchCase.depth ) ) {
	  			loop.canBreak = true;
	  			this.loop = loop;
	  		}
	  	};
	
	  	BreakStatement.prototype.transpile = function transpile ( code ) {
	  		if ( this.loop && this.loop.shouldRewriteAsFunction ) {
	  			if ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );
	  			code.overwrite( this.start, this.start + 5, "return 'break'" );
	  		}
	  	};
	
	  	return BreakStatement;
	  }(Node));
	
	  var CallExpression = (function (Node) {
	  	function CallExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) CallExpression.__proto__ = Node;
	  	CallExpression.prototype = Object.create( Node && Node.prototype );
	  	CallExpression.prototype.constructor = CallExpression;
	
	  	CallExpression.prototype.initialise = function initialise ( transforms ) {
	  		var this$1 = this;
	
	  		if ( transforms.spreadRest && this.arguments.length > 1 ) {
	  			var lexicalBoundary = this.findLexicalBoundary();
	
	  			var i = this.arguments.length;
	  			while ( i-- ) {
	  				var arg = this$1.arguments[i];
	  				if ( arg.type === 'SpreadElement' && isArguments( arg.argument ) ) {
	  					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
	  				}
	  			}
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	CallExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.spreadRest && this.arguments.length ) {
	  			var hasSpreadElements = false;
	  			var context;
	
	  			var firstArgument = this.arguments[0];
	
	  			if ( this.arguments.length === 1 ) {
	  				if ( firstArgument.type === 'SpreadElement' ) {
	  					code.remove( firstArgument.start, firstArgument.argument.start );
	  					hasSpreadElements = true;
	  				}
	  			} else {
	  				hasSpreadElements = spread( code, this.arguments, firstArgument.start, this.argumentsArrayAlias );
	  			}
	
	  			if ( hasSpreadElements ) {
	
	  				// we need to handle super() and super.method() differently
	  				// due to its instance
	  				var _super = null;
	  				if ( this.callee.type === 'Super' ) {
	  					_super = this.callee;
	  				}
	  				else if ( this.callee.type === 'MemberExpression' && this.callee.object.type === 'Super' ) {
	  					_super = this.callee.object;
	  				}
	
	  				if ( !_super && this.callee.type === 'MemberExpression' ) {
	  					if ( this.callee.object.type === 'Identifier' ) {
	  						context = this.callee.object.name;
	  					} else {
	  						context = this.findScope( true ).createIdentifier( 'ref' );
	  						var callExpression = this.callee.object;
	  						var enclosure = callExpression.findNearest( /Function/ );
	  						var block = enclosure ? enclosure.body.body
	  							: callExpression.findNearest( /^Program$/ ).body;
	  						var lastStatementInBlock = block[ block.length - 1 ];
	  						var i0 = lastStatementInBlock.getIndentation();
	  						code.insertRight( callExpression.start, ("(" + context + " = ") );
	  						code.insertLeft( callExpression.end, ")" );
	  						code.insertLeft( lastStatementInBlock.end, ("\n" + i0 + "var " + context + ";") );
	  					}
	  				} else {
	  					context = 'void 0';
	  				}
	
	  				code.insertLeft( this.callee.end, '.apply' );
	
	  				if ( _super ) {
	  					_super.noCall = true; // bit hacky...
	
	  					if ( this.arguments.length > 1 ) {
	  						if ( firstArgument.type !== 'SpreadElement' ) {
	  							code.insertRight( firstArgument.start, "[ " );
	  						}
	
	  						code.insertLeft( this.arguments[ this.arguments.length - 1 ].end, ' )' );
	  					}
	  				}
	
	  				else if ( this.arguments.length === 1 ) {
	  					code.insertRight( firstArgument.start, (context + ", ") );
	  				} else {
	  					if ( firstArgument.type === 'SpreadElement' ) {
	  						code.insertLeft( firstArgument.start, (context + ", ") );
	  					} else {
	  						code.insertLeft( firstArgument.start, (context + ", [ ") );
	  					}
	
	  					code.insertLeft( this.arguments[ this.arguments.length - 1 ].end, ' )' );
	  				}
	  			}
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return CallExpression;
	  }(Node));
	
	  function findIndex ( array, fn ) {
	  	for ( var i = 0; i < array.length; i += 1 ) {
	  		if ( fn( array[i], i ) ) return i;
	  	}
	
	  	return -1;
	  }
	
	  var reserved = Object.create( null );
	  'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )
	  	.forEach( function ( word ) { return reserved[ word ] = true; } );
	
	  // TODO this code is pretty wild, tidy it up
	  var ClassBody = (function (Node) {
	  	function ClassBody () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ClassBody.__proto__ = Node;
	  	ClassBody.prototype = Object.create( Node && Node.prototype );
	  	ClassBody.prototype.constructor = ClassBody;
	
	  	ClassBody.prototype.transpile = function transpile ( code, transforms, inFunctionExpression, superName ) {
	  		var this$1 = this;
	
	  		if ( transforms.classes ) {
	  			var name = this.parent.name;
	
	  			var indentStr = code.getIndentString();
	  			var i0 = this.getIndentation() + ( inFunctionExpression ? indentStr : '' );
	  			var i1 = i0 + indentStr;
	
	  			var constructorIndex = findIndex( this.body, function ( node ) { return node.kind === 'constructor'; } );
	  			var constructor = this.body[ constructorIndex ];
	
	  			var introBlock = '';
	  			var outroBlock = '';
	
	  			if ( this.body.length ) {
	  				code.remove( this.start, this.body[0].start );
	  				code.remove( this.body[ this.body.length - 1 ].end, this.end );
	  			} else {
	  				code.remove( this.start, this.end );
	  			}
	
	  			if ( constructor ) {
	  				constructor.value.body.isConstructorBody = true;
	
	  				var previousMethod = this.body[ constructorIndex - 1 ];
	  				var nextMethod = this.body[ constructorIndex + 1 ];
	
	  				// ensure constructor is first
	  				if ( constructorIndex > 0 ) {
	  					code.remove( previousMethod.end, constructor.start );
	  					code.move( constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start );
	  				}
	
	  				if ( !inFunctionExpression ) code.insertLeft( constructor.end, ';' );
	  			}
	
	  			var namedFunctions = this.program.options.namedFunctionExpressions !== false;
	  			var namedConstructor = namedFunctions || this.parent.superClass || this.parent.type !== 'ClassDeclaration';
	  			if ( this.parent.superClass ) {
	  				var inheritanceBlock = "if ( " + superName + " ) " + name + ".__proto__ = " + superName + ";\n" + i0 + name + ".prototype = Object.create( " + superName + " && " + superName + ".prototype );\n" + i0 + name + ".prototype.constructor = " + name + ";";
	
	  				if ( constructor ) {
	  					introBlock += "\n\n" + i0 + inheritanceBlock;
	  				} else {
	  					var fn = "function " + name + " () {" + ( superName ?
	  						("\n" + i1 + superName + ".apply(this, arguments);\n" + i0 + "}") :
	  						"}" ) + ( inFunctionExpression ? '' : ';' ) + ( this.body.length ? ("\n\n" + i0) : '' );
	
	  					inheritanceBlock = fn + inheritanceBlock;
	  					introBlock += inheritanceBlock + "\n\n" + i0;
	  				}
	  			} else if ( !constructor ) {
	  				var fn$1 = 'function ' + (namedConstructor ? name + ' ' : '') + '() {}';
	  				if ( this.parent.type === 'ClassDeclaration' ) fn$1 += ';';
	  				if ( this.body.length ) fn$1 += "\n\n" + i0;
	
	  				introBlock += fn$1;
	  			}
	
	  			var scope = this.findScope( false );
	
	  			var prototypeGettersAndSetters = [];
	  			var staticGettersAndSetters = [];
	  			var prototypeAccessors;
	  			var staticAccessors;
	
	  			this.body.forEach( function ( method, i ) {
	  				if ( method.kind === 'constructor' ) {
	  					var constructorName = namedConstructor ? ' ' + name : '';
	  					code.overwrite( method.key.start, method.key.end, ("function" + constructorName) );
	  					return;
	  				}
	
	  				if ( method.static ) {
	  					var len = code.original[ method.start + 6 ] == ' ' ? 7 : 6;
	  					code.remove( method.start, method.start + len );
	  				}
	
	  				var isAccessor = method.kind !== 'method';
	  				var lhs;
	
	  				var methodName = method.key.name;
	  				if ( reserved[ methodName ] || method.value.body.scope.references[methodName] ) {
	  					methodName = scope.createIdentifier( methodName );
	  				}
	
	  				// when method name is a string or a number let's pretend it's a computed method
	
	  				var fake_computed = false;
	  				if ( ! method.computed && method.key.type === 'Literal' ) {
	  					fake_computed = true;
	  					method.computed = true;
	  				}
	
	  				if ( isAccessor ) {
	  					if ( method.computed ) {
	  						throw new Error( 'Computed accessor properties are not currently supported' );
	  					}
	
	  					code.remove( method.start, method.key.start );
	
	  					if ( method.static ) {
	  						if ( !~staticGettersAndSetters.indexOf( method.key.name ) ) staticGettersAndSetters.push( method.key.name );
	  						if ( !staticAccessors ) staticAccessors = scope.createIdentifier( 'staticAccessors' );
	
	  						lhs = "" + staticAccessors;
	  					} else {
	  						if ( !~prototypeGettersAndSetters.indexOf( method.key.name ) ) prototypeGettersAndSetters.push( method.key.name );
	  						if ( !prototypeAccessors ) prototypeAccessors = scope.createIdentifier( 'prototypeAccessors' );
	
	  						lhs = "" + prototypeAccessors;
	  					}
	  				} else {
	  					lhs = method.static ?
	  						("" + name) :
	  						(name + ".prototype");
	  				}
	
	  				if ( !method.computed ) lhs += '.';
	
	  				var insertNewlines = ( constructorIndex > 0 && i === constructorIndex + 1 ) ||
	  				                       ( i === 0 && constructorIndex === this$1.body.length - 1 );
	
	  				if ( insertNewlines ) lhs = "\n\n" + i0 + lhs;
	
	  				var c = method.key.end;
	  				if ( method.computed ) {
	  					if ( fake_computed ) {
	  						code.insertRight( method.key.start, '[' );
	  						code.insertLeft( method.key.end, ']' );
	  					} else {
	  						while ( code.original[c] !== ']' ) c += 1;
	  						c += 1;
	  					}
	  				}
	
	  				code.insertRight( method.start, lhs );
	
	  				var funcName = method.computed || isAccessor || !namedFunctions ? '' : (methodName + " ");
	  				var rhs = ( isAccessor ? ("." + (method.kind)) : '' ) + " = function" + ( method.value.generator ? '* ' : ' ' ) + funcName;
	  				code.remove( c, method.value.start );
	  				code.insertRight( method.value.start, rhs );
	  				code.insertLeft( method.end, ';' );
	
	  				if ( method.value.generator ) code.remove( method.start, method.key.start );
	  			});
	
	  			if ( prototypeGettersAndSetters.length || staticGettersAndSetters.length ) {
	  				var intro = [];
	  				var outro = [];
	
	  				if ( prototypeGettersAndSetters.length ) {
	  					intro.push( ("var " + prototypeAccessors + " = { " + (prototypeGettersAndSetters.map( function ( name ) { return (name + ": {}"); } ).join( ',' )) + " };") );
	  					outro.push( ("Object.defineProperties( " + name + ".prototype, " + prototypeAccessors + " );") );
	  				}
	
	  				if ( staticGettersAndSetters.length ) {
	  					intro.push( ("var " + staticAccessors + " = { " + (staticGettersAndSetters.map( function ( name ) { return (name + ": {}"); } ).join( ',' )) + " };") );
	  					outro.push( ("Object.defineProperties( " + name + ", " + staticAccessors + " );") );
	  				}
	
	  				if ( constructor ) introBlock += "\n\n" + i0;
	  				introBlock += intro.join( ("\n" + i0) );
	  				if ( !constructor ) introBlock += "\n\n" + i0;
	
	  				outroBlock += "\n\n" + i0 + outro.join( ("\n" + i0) );
	  			}
	
	  			if ( constructor ) {
	  				code.insertLeft( constructor.end, introBlock );
	  			} else {
	  				code.insertRight( this.start, introBlock );
	  			}
	
	  			code.insertLeft( this.end, outroBlock );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ClassBody;
	  }(Node));
	
	  // TODO this function is slightly flawed – it works on the original string,
	  // not its current edited state.
	  // That's not a problem for the way that it's currently used, but it could
	  // be in future...
	  function deindent ( node, code ) {
	  	var start = node.start;
	  	var end = node.end;
	
	  	var indentStr = code.getIndentString();
	  	var indentStrLen = indentStr.length;
	  	var indentStart = start - indentStrLen;
	
	  	if ( !node.program.indentExclusions[ indentStart ]
	  	&& code.original.slice( indentStart, start ) === indentStr ) {
	  		code.remove( indentStart, start );
	  	}
	
	  	var pattern = new RegExp( indentStr + '\\S', 'g' );
	  	var slice = code.original.slice( start, end );
	  	var match;
	
	  	while ( match = pattern.exec( slice ) ) {
	  		var removeStart = start + match.index;
	  		if ( !node.program.indentExclusions[ removeStart ] ) {
	  			code.remove( removeStart, removeStart + indentStrLen );
	  		}
	  	}
	  }
	
	  var ClassDeclaration = (function (Node) {
	  	function ClassDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ClassDeclaration.__proto__ = Node;
	  	ClassDeclaration.prototype = Object.create( Node && Node.prototype );
	  	ClassDeclaration.prototype.constructor = ClassDeclaration;
	
	  	ClassDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		this.name = this.id.name;
	  		this.findScope( true ).addDeclaration( this.id, 'class' );
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	ClassDeclaration.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.classes ) {
	  			if ( !this.superClass ) deindent( this.body, code );
	
	  			var superName = this.superClass && ( this.superClass.name || 'superclass' );
	
	  			var i0 = this.getIndentation();
	  			var i1 = i0 + code.getIndentString();
	
	  			// if this is an export default statement, we have to move the export to
	  			// after the declaration, because `export default var Foo = ...` is illegal
	  			var syntheticDefaultExport = this.parent.type === 'ExportDefaultDeclaration' ?
	  				("\n\n" + i0 + "export default " + (this.id.name) + ";") :
	  				'';
	
	  			if ( syntheticDefaultExport ) code.remove( this.parent.start, this.start );
	
	  			code.overwrite( this.start, this.id.start, 'var ' );
	
	  			if ( this.superClass ) {
	  				if ( this.superClass.end === this.body.start ) {
	  					code.remove( this.id.end, this.superClass.start );
	  					code.insertLeft( this.id.end, (" = (function (" + superName + ") {\n" + i1) );
	  				} else {
	  					code.overwrite( this.id.end, this.superClass.start, ' = ' );
	  					code.overwrite( this.superClass.end, this.body.start, ("(function (" + superName + ") {\n" + i1) );
	  				}
	  			} else {
	  				if ( this.id.end === this.body.start ) {
	  					code.insertLeft( this.id.end, ' = ' );
	  				} else {
	  					code.overwrite( this.id.end, this.body.start, ' = ' );
	  				}
	  			}
	
	  			this.body.transpile( code, transforms, !!this.superClass, superName );
	
	  			if ( this.superClass ) {
	  				code.insertLeft( this.end, ("\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}(") );
	  				code.move( this.superClass.start, this.superClass.end, this.end );
	  				code.insertRight( this.end, ("));" + syntheticDefaultExport) );
	  			} else if ( syntheticDefaultExport ) {
	  				code.insertRight( this.end, syntheticDefaultExport );
	  			}
	  		}
	
	  		else {
	  			this.body.transpile( code, transforms, false, null );
	  		}
	  	};
	
	  	return ClassDeclaration;
	  }(Node));
	
	  var ClassExpression = (function (Node) {
	  	function ClassExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ClassExpression.__proto__ = Node;
	  	ClassExpression.prototype = Object.create( Node && Node.prototype );
	  	ClassExpression.prototype.constructor = ClassExpression;
	
	  	ClassExpression.prototype.initialise = function initialise ( transforms ) {
	  		this.name = this.id ? this.id.name :
	  		            this.parent.type === 'VariableDeclarator' ? this.parent.id.name :
	  		            this.parent.type === 'AssignmentExpression' ? this.parent.left.name :
	  		            this.findScope( true ).createIdentifier( 'anonymous' );
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	ClassExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.classes ) {
	  			var superName = this.superClass && ( this.superClass.name || 'superclass' );
	
	  			var i0 = this.getIndentation();
	  			var i1 = i0 + code.getIndentString();
	
	  			if ( this.superClass ) {
	  				code.remove( this.start, this.superClass.start );
	  				code.remove( this.superClass.end, this.body.start );
	  				code.insertLeft( this.start, ("(function (" + superName + ") {\n" + i1) );
	  			} else {
	  				code.overwrite( this.start, this.body.start, ("(function () {\n" + i1) );
	  			}
	
	  			this.body.transpile( code, transforms, true, superName );
	
	  			var outro = "\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}(";
	
	  			if ( this.superClass ) {
	  				code.insertLeft( this.end, outro );
	  				code.move( this.superClass.start, this.superClass.end, this.end );
	  				code.insertRight( this.end, '))' );
	  			} else {
	  				code.insertLeft( this.end, ("\n\n" + i1 + "return " + (this.name) + ";\n" + i0 + "}())") );
	  			}
	  		}
	
	  		else {
	  			this.body.transpile( code, transforms, false );
	  		}
	  	};
	
	  	return ClassExpression;
	  }(Node));
	
	  var ContinueStatement = (function (Node) {
	  	function ContinueStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ContinueStatement.__proto__ = Node;
	  	ContinueStatement.prototype = Object.create( Node && Node.prototype );
	  	ContinueStatement.prototype.constructor = ContinueStatement;
	
	  	ContinueStatement.prototype.transpile = function transpile ( code ) {
	  		var loop = this.findNearest( loopStatement );
	  		if ( loop.shouldRewriteAsFunction ) {
	  			if ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );
	  			code.overwrite( this.start, this.start + 8, 'return' );
	  		}
	  	};
	
	  	return ContinueStatement;
	  }(Node));
	
	  var ExportDefaultDeclaration = (function (Node) {
	  	function ExportDefaultDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ExportDefaultDeclaration.__proto__ = Node;
	  	ExportDefaultDeclaration.prototype = Object.create( Node && Node.prototype );
	  	ExportDefaultDeclaration.prototype.constructor = ExportDefaultDeclaration;
	
	  	ExportDefaultDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return ExportDefaultDeclaration;
	  }(Node));
	
	  var ExportNamedDeclaration = (function (Node) {
	  	function ExportNamedDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ExportNamedDeclaration.__proto__ = Node;
	  	ExportNamedDeclaration.prototype = Object.create( Node && Node.prototype );
	  	ExportNamedDeclaration.prototype.constructor = ExportNamedDeclaration;
	
	  	ExportNamedDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return ExportNamedDeclaration;
	  }(Node));
	
	  var LoopStatement = (function (Node) {
	  	function LoopStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) LoopStatement.__proto__ = Node;
	  	LoopStatement.prototype = Object.create( Node && Node.prototype );
	  	LoopStatement.prototype.constructor = LoopStatement;
	
	  	LoopStatement.prototype.findScope = function findScope ( functionScope ) {
	  		return functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;
	  	};
	
	  	LoopStatement.prototype.initialise = function initialise ( transforms ) {
	  		var this$1 = this;
	
	  		this.body.createScope();
	  		this.createdScope = true;
	
	  		// this is populated as and when reassignments occur
	  		this.reassigned = Object.create( null );
	  		this.aliases = Object.create( null );
	
	  		Node.prototype.initialise.call( this, transforms );
	
	  		if ( transforms.letConst ) {
	  			// see if any block-scoped declarations are referenced
	  			// inside function expressions
	  			var names = Object.keys( this.body.scope.declarations );
	
	  			var i = names.length;
	  			while ( i-- ) {
	  				var name = names[i];
	  				var declaration = this$1.body.scope.declarations[ name ];
	
	  				var j = declaration.instances.length;
	  				while ( j-- ) {
	  					var instance = declaration.instances[j];
	  					var nearestFunctionExpression = instance.findNearest( /Function/ );
	
	  					if ( nearestFunctionExpression && nearestFunctionExpression.depth > this$1.depth ) {
	  						this$1.shouldRewriteAsFunction = true;
	  						break;
	  					}
	  				}
	
	  				if ( this$1.shouldRewriteAsFunction ) break;
	  			}
	  		}
	  	};
	
	  	LoopStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		var needsBlock = this.type != 'ForOfStatement' && (
	  			this.body.type !== 'BlockStatement'
	  			|| this.body.type === 'BlockStatement' && this.body.synthetic );
	
	  		if ( this.shouldRewriteAsFunction ) {
	  			var i0 = this.getIndentation();
	  			var i1 = i0 + code.getIndentString();
	
	  			var argString = this.args ? (" " + (this.args.join( ', ' )) + " ") : '';
	  			var paramString = this.params ? (" " + (this.params.join( ', ' )) + " ") : '';
	
	  			var functionScope = this.findScope( true );
	  			var loop = functionScope.createIdentifier( 'loop' );
	
	  			var before = "var " + loop + " = function (" + paramString + ") " + ( this.body.synthetic ? ("{\n" + i0 + (code.getIndentString())) : '' );
	  			var after = ( this.body.synthetic ? ("\n" + i0 + "}") : '' ) + ";\n\n" + i0;
	
	  			code.insertRight( this.body.start, before );
	  			code.insertLeft( this.body.end, after );
	  			code.move( this.start, this.body.start, this.body.end );
	
	  			if ( this.canBreak || this.canReturn ) {
	  				var returned = functionScope.createIdentifier( 'returned' );
	
	  				var insert = "{\n" + i1 + "var " + returned + " = " + loop + "(" + argString + ");\n";
	  				if ( this.canBreak ) insert += "\n" + i1 + "if ( " + returned + " === 'break' ) break;";
	  				if ( this.canReturn ) insert += "\n" + i1 + "if ( " + returned + " ) return " + returned + ".v;";
	  				insert += "\n" + i0 + "}";
	
	  				code.insertRight( this.body.end, insert );
	  			} else {
	  				var callExpression = loop + "(" + argString + ");";
	
	  				if ( this.type === 'DoWhileStatement' ) {
	  					code.overwrite( this.start, this.body.start, ("do {\n" + i1 + callExpression + "\n" + i0 + "}") );
	  				} else {
	  					code.insertRight( this.body.end, callExpression );
	  				}
	  			}
	  		} else if ( needsBlock ) {
	  			code.insertLeft( this.body.start, '{ ' );
	  			code.insertRight( this.body.end, ' }' );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return LoopStatement;
	  }(Node));
	
	  function extractNames ( node ) {
	  	var names = [];
	  	extractors[ node.type ]( names, node );
	  	return names;
	  }
	
	  var extractors = {
	  	Identifier: function Identifier ( names, node ) {
	  		names.push( node );
	  	},
	
	  	ObjectPattern: function ObjectPattern ( names, node ) {
	  		for ( var i = 0, list = node.properties; i < list.length; i += 1 ) {
	  			var prop = list[i];
	
	  			extractors[ prop.value.type ]( names, prop.value );
	  		}
	  	},
	
	  	ArrayPattern: function ArrayPattern ( names, node ) {
	  		for ( var i = 0, list = node.elements; i < list.length; i += 1 )  {
	  			var element = list[i];
	
	  			if ( element ) extractors[ element.type ]( names, element );
	  		}
	  	},
	
	  	RestElement: function RestElement ( names, node ) {
	  		extractors[ node.argument.type ]( names, node.argument );
	  	},
	
	  	AssignmentPattern: function AssignmentPattern ( names, node ) {
	  		extractors[ node.left.type ]( names, node.left );
	  	}
	  };
	
	  var ForStatement = (function (LoopStatement) {
	  	function ForStatement () {
	  		LoopStatement.apply(this, arguments);
	  	}
	
	  	if ( LoopStatement ) ForStatement.__proto__ = LoopStatement;
	  	ForStatement.prototype = Object.create( LoopStatement && LoopStatement.prototype );
	  	ForStatement.prototype.constructor = ForStatement;
	
	  	ForStatement.prototype.findScope = function findScope ( functionScope ) {
	  		return functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;
	  	};
	
	  	ForStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		var i1 = this.getIndentation() + code.getIndentString();
	
	  		if ( this.shouldRewriteAsFunction ) {
	  			// which variables are declared in the init statement?
	  			var names = this.init.type === 'VariableDeclaration' ?
	  				[].concat.apply( [], this.init.declarations.map( function ( declarator ) { return extractNames( declarator.id ); } ) ) :
	  				[];
	
	  			var aliases = this.aliases;
	
	  			this.args = names.map( function ( name ) { return name in this$1.aliases ? this$1.aliases[ name ].outer : name; } );
	  			this.params = names.map( function ( name ) { return name in this$1.aliases ? this$1.aliases[ name ].inner : name; } );
	
	  			var updates = Object.keys( this.reassigned )
	  				.map( function ( name ) { return ((aliases[ name ].outer) + " = " + (aliases[ name ].inner) + ";"); } );
	
	  			if ( updates.length ) {
	  				if ( this.body.synthetic ) {
	  					code.insertLeft( this.body.body[0].end, ("; " + (updates.join(" "))) );
	  				} else {
	  					var lastStatement = this.body.body[ this.body.body.length - 1 ];
	  					code.insertLeft( lastStatement.end, ("\n\n" + i1 + (updates.join(("\n" + i1)))) );
	  				}
	  			}
	  		}
	
	  		LoopStatement.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ForStatement;
	  }(LoopStatement));
	
	  var ForInStatement = (function (LoopStatement) {
	  	function ForInStatement () {
	  		LoopStatement.apply(this, arguments);
	  	}
	
	  	if ( LoopStatement ) ForInStatement.__proto__ = LoopStatement;
	  	ForInStatement.prototype = Object.create( LoopStatement && LoopStatement.prototype );
	  	ForInStatement.prototype.constructor = ForInStatement;
	
	  	ForInStatement.prototype.findScope = function findScope ( functionScope ) {
	  		return functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;
	  	};
	
	  	ForInStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		if ( this.shouldRewriteAsFunction ) {
	  			// which variables are declared in the init statement?
	  			var names = this.left.type === 'VariableDeclaration' ?
	  				[].concat.apply( [], this.left.declarations.map( function ( declarator ) { return extractNames( declarator.id ); } ) ) :
	  				[];
	
	  			this.args = names.map( function ( name ) { return name in this$1.aliases ? this$1.aliases[ name ].outer : name; } );
	  			this.params = names.map( function ( name ) { return name in this$1.aliases ? this$1.aliases[ name ].inner : name; } );
	  		}
	
	  		LoopStatement.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ForInStatement;
	  }(LoopStatement));
	
	  var handlers = {
	  	Identifier: destructureIdentifier,
	  	AssignmentPattern: destructureAssignmentPattern,
	  	ArrayPattern: destructureArrayPattern,
	  	ObjectPattern: destructureObjectPattern
	  };
	
	  function destructure ( code, scope, node, ref, inline, statementGenerators ) {
	  	handlers[ node.type ]( code, scope, node, ref, inline, statementGenerators );
	  }
	
	  function destructureIdentifier ( code, scope, node, ref, inline, statementGenerators ) {
	  	statementGenerators.push( function ( start, prefix, suffix ) {
	  		code.insertRight( node.start, inline ? prefix : (prefix + "var ") );
	  		code.insertLeft( node.end, (" = " + ref + suffix) );
	  		code.move( node.start, node.end, start );
	  	});
	  }
	
	  function destructureAssignmentPattern ( code, scope, node, ref, inline, statementGenerators ) {
	  	var isIdentifier = node.left.type === 'Identifier';
	  	var name = isIdentifier ? node.left.name : ref;
	
	  	if ( !inline ) {
	  		statementGenerators.push( function ( start, prefix, suffix ) {
	  			code.insertRight( node.left.end, (prefix + "if ( " + name + " === void 0 ) " + name) );
	  			code.move( node.left.end, node.right.end, start );
	  			code.insertLeft( node.right.end, suffix );
	  		});
	  	}
	
	  	if ( !isIdentifier ) {
	  		destructure( code, scope, node.left, ref, inline, statementGenerators );
	  	}
	  }
	
	  function destructureArrayPattern ( code, scope, node, ref, inline, statementGenerators ) {
	  	var c = node.start;
	
	  	node.elements.forEach( function ( element, i ) {
	  		if ( !element ) return;
	
	  		if ( element.type === 'RestElement' ) {
	  			handleProperty( code, scope, c, element.argument, (ref + ".slice(" + i + ")"), inline, statementGenerators );
	  		} else {
	  			handleProperty( code, scope, c, element, (ref + "[" + i + "]"), inline, statementGenerators );
	  		}
	  		c = element.end;
	  	});
	
	  	code.remove( c, node.end );
	  }
	
	  function destructureObjectPattern ( code, scope, node, ref, inline, statementGenerators ) {
	  	var c = node.start;
	
	  	node.properties.forEach( function ( prop ) {
	  		var value = prop.computed || prop.key.type !== 'Identifier' ? (ref + "[" + (code.slice(prop.key.start, prop.key.end)) + "]") : (ref + "." + (prop.key.name));
	  		handleProperty( code, scope, c, prop.value, value, inline, statementGenerators );
	  		c = prop.end;
	  	});
	
	  	code.remove( c, node.end );
	  }
	
	  function handleProperty ( code, scope, c, node, value, inline, statementGenerators ) {
	  	switch ( node.type ) {
	  		case 'Identifier': {
	  			code.remove( c, node.start );
	  			destructureIdentifier( code, scope, node, value, inline, statementGenerators );
	  			break;
	  		}
	
	  		case 'AssignmentPattern': {
	  			var name;
	
	  			var isIdentifier = node.left.type === 'Identifier';
	
	  			if ( isIdentifier ) {
	  				name = node.left.name;
	  				var declaration = scope.findDeclaration( name );
	  				if ( declaration ) name = declaration.name;
	  			} else {
	  				name = scope.createIdentifier( value );
	  			}
	
	  			statementGenerators.push( function ( start, prefix, suffix ) {
	  				if ( inline ) {
	  					code.insertRight( node.right.start, (name + " = " + value + " === undefined ? ") );
	  					code.insertLeft( node.right.end, (" : " + value) );
	  				} else {
	  					code.insertRight( node.right.start, (prefix + "var " + name + " = " + value + "; if ( " + name + " === void 0 ) " + name + " = ") );
	  					code.insertLeft( node.right.end, suffix );
	  				}
	
	  				code.move( node.right.start, node.right.end, start );
	  			});
	
	  			if ( isIdentifier ) {
	  				code.remove( c, node.right.start );
	  			} else {
	  				code.remove( c, node.left.start );
	  				code.remove( node.left.end, node.right.start );
	  				handleProperty( code, scope, c, node.left, name, inline, statementGenerators );
	  			}
	
	  			break;
	  		}
	
	  		case 'ObjectPattern': {
	  			code.remove( c, c = node.start );
	
	  			if ( node.properties.length > 1 ) {
	  				var ref = scope.createIdentifier( value );
	
	  				statementGenerators.push( function ( start, prefix, suffix ) {
	  					// this feels a tiny bit hacky, but we can't do a
	  					// straightforward insertLeft and keep correct order...
	  					code.insertRight( node.start, (prefix + "var " + ref + " = ") );
	  					code.overwrite( node.start, c = node.start + 1, value );
	  					code.insertLeft( c, suffix );
	
	  					code.move( node.start, c, start );
	  				});
	
	  				node.properties.forEach( function ( prop ) {
	  					var value = prop.computed || prop.key.type !== 'Identifier' ? (ref + "[" + (code.slice(prop.key.start, prop.key.end)) + "]") : (ref + "." + (prop.key.name));
	  					handleProperty( code, scope, c, prop.value, value, inline, statementGenerators );
	  					c = prop.end;
	  				});
	  			} else {
	  				var prop = node.properties[0];
	  				var value_suffix = prop.computed || prop.key.type !== 'Identifier' ? ("[" + (code.slice(prop.key.start, prop.key.end)) + "]") : ("." + (prop.key.name));
	  				handleProperty( code, scope, c, prop.value, ("" + value + value_suffix), inline, statementGenerators );
	  				c = prop.end;
	  			}
	
	  			code.remove( c, node.end );
	  			break;
	  		}
	
	  		case 'ArrayPattern': {
	  			code.remove( c, c = node.start );
	
	  			if ( node.elements.filter( Boolean ).length > 1 ) {
	  				var ref$1 = scope.createIdentifier( value );
	
	  				statementGenerators.push( function ( start, prefix, suffix ) {
	  					code.insertRight( node.start, (prefix + "var " + ref$1 + " = ") );
	  					code.overwrite( node.start, c = node.start + 1, value );
	  					code.insertLeft( c, suffix );
	
	  					code.move( node.start, c, start );
	  				});
	
	  				node.elements.forEach( function ( element, i ) {
	  					if ( !element ) return;
	
	  					if ( element.type === 'RestElement' ) {
	  						handleProperty( code, scope, c, element.argument, (ref$1 + ".slice(" + i + ")"), inline, statementGenerators );
	  					} else {
	  						handleProperty( code, scope, c, element, (ref$1 + "[" + i + "]"), inline, statementGenerators );
	  					}
	  					c = element.end;
	  				});
	  			} else {
	  				var index = findIndex( node.elements, Boolean );
	  				var element = node.elements[ index ];
	  				if ( element.type === 'RestElement' ) {
	  					handleProperty( code, scope, c, element.argument, (value + ".slice(" + index + ")"), inline, statementGenerators );
	  				} else {
	  					handleProperty( code, scope, c, element, (value + "[" + index + "]"), inline, statementGenerators );
	  				}
	  				c = element.end;
	  			}
	
	  			code.remove( c, node.end );
	  			break;
	  		}
	
	  		default: {
	  			throw new Error( ("Unexpected node type in destructuring (" + (node.type) + ")") );
	  		}
	  	}
	  }
	
	  var ForOfStatement = (function (LoopStatement) {
	  	function ForOfStatement () {
	  		LoopStatement.apply(this, arguments);
	  	}
	
	  	if ( LoopStatement ) ForOfStatement.__proto__ = LoopStatement;
	  	ForOfStatement.prototype = Object.create( LoopStatement && LoopStatement.prototype );
	  	ForOfStatement.prototype.constructor = ForOfStatement;
	
	  	ForOfStatement.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.forOf && !transforms.dangerousForOf ) throw new CompileError( this, 'for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you\'re doing' );
	  		LoopStatement.prototype.initialise.call( this, transforms );
	  	};
	
	  	ForOfStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( !transforms.dangerousForOf ) {
	  			LoopStatement.prototype.transpile.call( this, code, transforms );
	  			return;
	  		}
	
	  		// edge case (#80)
	  		if ( !this.body.body[0] ) {
	  			if ( this.left.type === 'VariableDeclaration' && this.left.kind === 'var' ) {
	  				code.remove( this.start, this.left.start );
	  				code.insertLeft( this.left.end, ';' );
	  				code.remove( this.left.end, this.end );
	  			} else {
	  				code.remove( this.start, this.end );
	  			}
	
	  			return;
	  		}
	
	  		var scope = this.findScope( true );
	  		var i0 = this.getIndentation();
	  		var i1 = i0 + code.getIndentString();
	
	  		var key = scope.createIdentifier( 'i' );
	  		var list = scope.createIdentifier( 'list' );
	
	  		if ( this.body.synthetic ) {
	  			code.insertRight( this.left.start, ("{\n" + i1) );
	  			code.insertLeft( this.body.body[0].end, ("\n" + i0 + "}") );
	  		}
	
	  		var bodyStart = this.body.body[0].start;
	
	  		code.remove( this.left.end, this.right.start );
	  		code.move( this.left.start, this.left.end, bodyStart );
	
	
	  		code.insertRight( this.right.start, ("var " + key + " = 0, " + list + " = ") );
	  		code.insertLeft( this.right.end, ("; " + key + " < " + list + ".length; " + key + " += 1") );
	
	  		// destructuring. TODO non declaration destructuring
	  		var declarator = this.left.type === 'VariableDeclaration' && this.left.declarations[0];
	  		if ( declarator && declarator.id.type !== 'Identifier' ) {
	  			var statementGenerators = [];
	  			var ref = scope.createIdentifier( 'ref' );
	  			destructure( code, scope, declarator.id, ref, false, statementGenerators );
	
	  			var suffix = ";\n" + i1;
	  			statementGenerators.forEach( function ( fn, i ) {
	  				if ( i === statementGenerators.length - 1 ) {
	  					suffix = ";\n\n" + i1;
	  				}
	
	  				fn( bodyStart, '', suffix );
	  			});
	
	  			code.insertLeft( this.left.start + this.left.kind.length + 1, ref );
	  			code.insertLeft( this.left.end, (" = " + list + "[" + key + "];\n" + i1) );
	  		} else {
	  			code.insertLeft( this.left.end, (" = " + list + "[" + key + "];\n\n" + i1) );
	  		}
	
	  		LoopStatement.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return ForOfStatement;
	  }(LoopStatement));
	
	  var FunctionDeclaration = (function (Node) {
	  	function FunctionDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) FunctionDeclaration.__proto__ = Node;
	  	FunctionDeclaration.prototype = Object.create( Node && Node.prototype );
	  	FunctionDeclaration.prototype.constructor = FunctionDeclaration;
	
	  	FunctionDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		if ( this.generator && transforms.generator ) {
	  			throw new CompileError( this, 'Generators are not supported' );
	  		}
	
	  		this.body.createScope();
	
	  		this.findScope( true ).addDeclaration( this.id, 'function' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return FunctionDeclaration;
	  }(Node));
	
	  var FunctionExpression = (function (Node) {
	  	function FunctionExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) FunctionExpression.__proto__ = Node;
	  	FunctionExpression.prototype = Object.create( Node && Node.prototype );
	  	FunctionExpression.prototype.constructor = FunctionExpression;
	
	  	FunctionExpression.prototype.initialise = function initialise ( transforms ) {
	  		if ( this.generator && transforms.generator ) {
	  			throw new CompileError( this, 'Generators are not supported' );
	  		}
	
	  		this.body.createScope();
	
	  		if ( this.id ) {
	  			// function expression IDs belong to the child scope...
	  			this.body.scope.addDeclaration( this.id, 'function' );
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	
	  		var parent = this.parent;
	  		var methodName;
	
	  		if ( transforms.conciseMethodProperty
	  				&& parent.type === 'Property'
	  				&& parent.kind === 'init'
	  				&& parent.method
	  				&& parent.key.type === 'Identifier' ) {
	  			// object literal concise method
	  			methodName = parent.key.name;
	  		}
	  		else if ( transforms.classes
	  				&& parent.type === 'MethodDefinition'
	  				&& parent.kind === 'method'
	  				&& parent.key.type === 'Identifier' ) {
	  			// method definition in a class
	  			methodName = parent.key.name;
	  		}
	  		else if ( this.id && this.id.type === 'Identifier' ) {
	  			// naked function expression
	  			methodName = this.id.alias || this.id.name;
	  		}
	
	  		if ( methodName ) {
	  			for ( var i = 0, list = this.params; i < list.length; i += 1 ) {
	  				var param = list[i];
	
	  				if ( param.type === 'Identifier' && methodName === param.name ) {
	  					// workaround for Safari 9/WebKit bug:
	  					// https://gitlab.com/Rich-Harris/buble/issues/154
	  					// change parameter name when same as method name
	
	  					var scope = this.body.scope;
	  					var declaration = scope.declarations[ methodName ];
	
	  					var alias = scope.createIdentifier( methodName );
	  					param.alias = alias;
	
	  					for ( var i$1 = 0, list$1 = declaration.instances; i$1 < list$1.length; i$1 += 1 ) {
	  						var identifier = list$1[i$1];
	
	  						identifier.alias = alias;
	  					}
	
	  					break;
	  				}
	  			}
	  		}
	  	};
	
	  	return FunctionExpression;
	  }(Node));
	
	  function isReference ( node, parent ) {
	  	if ( node.type === 'MemberExpression' ) {
	  		return !node.computed && isReference( node.object, node );
	  	}
	
	  	if ( node.type === 'Identifier' ) {
	  		// the only time we could have an identifier node without a parent is
	  		// if it's the entire body of a function without a block statement –
	  		// i.e. an arrow function expression like `a => a`
	  		if ( !parent ) return true;
	
	  		if ( /(Function|Class)Expression/.test( parent.type ) ) return false;
	
	  		if ( parent.type === 'VariableDeclarator' ) return node === parent.init;
	
	  		// TODO is this right?
	  		if ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {
	  			return parent.computed || node === parent.object;
	  		}
	
	  		if ( parent.type === 'ArrayPattern' ) return false;
	
	  		// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`
	  		if ( parent.type === 'Property' ) {
	  			if ( parent.parent.type === 'ObjectPattern' ) return false;
	  			return parent.computed || node === parent.value;
	  		}
	
	  		// disregard the `bar` in `class Foo { bar () {...} }`
	  		if ( parent.type === 'MethodDefinition' ) return false;
	
	  		// disregard the `bar` in `export { foo as bar }`
	  		if ( parent.type === 'ExportSpecifier' && node !== parent.local ) return false;
	
	  		return true;
	  	}
	  }
	
	  var Identifier = (function (Node) {
	  	function Identifier () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) Identifier.__proto__ = Node;
	  	Identifier.prototype = Object.create( Node && Node.prototype );
	  	Identifier.prototype.constructor = Identifier;
	
	  	Identifier.prototype.findScope = function findScope ( functionScope ) {
	  		if ( this.parent.params && ~this.parent.params.indexOf( this ) ) {
	  			return this.parent.body.scope;
	  		}
	
	  		if ( this.parent.type === 'FunctionExpression' && this === this.parent.id ) {
	  			return this.parent.body.scope;
	  		}
	
	  		return this.parent.findScope( functionScope	);
	  	};
	
	  	Identifier.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.arrow && isReference( this, this.parent ) ) {
	  			if ( this.name === 'arguments' && !this.findScope( false ).contains( this.name ) ) {
	  				var lexicalBoundary = this.findLexicalBoundary();
	  				var arrowFunction = this.findNearest( 'ArrowFunctionExpression' );
	  				var loop = this.findNearest( loopStatement );
	
	  				if ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {
	  					this.alias = lexicalBoundary.getArgumentsAlias();
	  				}
	
	  				if ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {
	  					this.alias = lexicalBoundary.getArgumentsAlias();
	  				}
	  			}
	
	  			this.findScope( false ).addReference( this );
	  		}
	  	};
	
	  	Identifier.prototype.transpile = function transpile ( code ) {
	  		if ( this.alias ) {
	  			code.overwrite( this.start, this.end, this.alias, true );
	  		}
	  	};
	
	  	return Identifier;
	  }(Node));
	
	  var IfStatement = (function (Node) {
	  	function IfStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) IfStatement.__proto__ = Node;
	  	IfStatement.prototype = Object.create( Node && Node.prototype );
	  	IfStatement.prototype.constructor = IfStatement;
	
	  	IfStatement.prototype.initialise = function initialise ( transforms ) {
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	IfStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( this.consequent.type !== 'BlockStatement'
	  				|| this.consequent.type === 'BlockStatement' && this.consequent.synthetic ) {
	  			code.insertLeft( this.consequent.start, '{ ' );
	  			code.insertRight( this.consequent.end, ' }' );
	  		}
	
	  		if ( this.alternate && this.alternate.type !== 'IfStatement' && (
	  				this.alternate.type !== 'BlockStatement'
	  				|| this.alternate.type === 'BlockStatement' && this.alternate.synthetic ) ) {
	  			code.insertLeft( this.alternate.start, '{ ' );
	  			code.insertRight( this.alternate.end, ' }' );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return IfStatement;
	  }(Node));
	
	  var ImportDeclaration = (function (Node) {
	  	function ImportDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ImportDeclaration.__proto__ = Node;
	  	ImportDeclaration.prototype = Object.create( Node && Node.prototype );
	  	ImportDeclaration.prototype.constructor = ImportDeclaration;
	
	  	ImportDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.moduleImport ) throw new CompileError( this, 'import is not supported' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return ImportDeclaration;
	  }(Node));
	
	  var ImportDefaultSpecifier = (function (Node) {
	  	function ImportDefaultSpecifier () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ImportDefaultSpecifier.__proto__ = Node;
	  	ImportDefaultSpecifier.prototype = Object.create( Node && Node.prototype );
	  	ImportDefaultSpecifier.prototype.constructor = ImportDefaultSpecifier;
	
	  	ImportDefaultSpecifier.prototype.initialise = function initialise ( transforms ) {
	  		this.findScope( true ).addDeclaration( this.local, 'import' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return ImportDefaultSpecifier;
	  }(Node));
	
	  var ImportSpecifier = (function (Node) {
	  	function ImportSpecifier () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ImportSpecifier.__proto__ = Node;
	  	ImportSpecifier.prototype = Object.create( Node && Node.prototype );
	  	ImportSpecifier.prototype.constructor = ImportSpecifier;
	
	  	ImportSpecifier.prototype.initialise = function initialise ( transforms ) {
	  		this.findScope( true ).addDeclaration( this.local, 'import' );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return ImportSpecifier;
	  }(Node));
	
	  var IS_DATA_ATTRIBUTE = /-/;
	
	  var JSXAttribute = (function (Node) {
	  	function JSXAttribute () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXAttribute.__proto__ = Node;
	  	JSXAttribute.prototype = Object.create( Node && Node.prototype );
	  	JSXAttribute.prototype.constructor = JSXAttribute;
	
	  	JSXAttribute.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( this.value ) {
	  			code.overwrite( this.name.end, this.value.start, ': ' );
	  		} else {
	  			// tag without value
	  			code.overwrite( this.name.start, this.name.end, ((this.name.name) + ": true") );
	  		}
	
	  		if ( IS_DATA_ATTRIBUTE.test( this.name.name ) ) {
	  			code.overwrite( this.name.start, this.name.end, ("'" + (this.name.name) + "'") );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return JSXAttribute;
	  }(Node));
	
	  function containsNewLine ( node ) {
	  	return node.type === 'Literal' && !/\S/.test( node.value ) && /\n/.test( node.value );
	  }
	
	  var JSXClosingElement = (function (Node) {
	  	function JSXClosingElement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXClosingElement.__proto__ = Node;
	  	JSXClosingElement.prototype = Object.create( Node && Node.prototype );
	  	JSXClosingElement.prototype.constructor = JSXClosingElement;
	
	  	JSXClosingElement.prototype.transpile = function transpile ( code ) {
	  		var spaceBeforeParen = true;
	
	  		var lastChild = this.parent.children[ this.parent.children.length - 1 ];
	
	  		// omit space before closing paren if
	  		//   a) this is on a separate line, or
	  		//   b) there are no children but there are attributes
	  		if ( ( lastChild && containsNewLine( lastChild ) ) || ( this.parent.openingElement.attributes.length ) ) {
	  			spaceBeforeParen = false;
	  		}
	
	  		code.overwrite( this.start, this.end, spaceBeforeParen ? ' )' : ')' );
	  	};
	
	  	return JSXClosingElement;
	  }(Node));
	
	  function normalise ( str, removeTrailingWhitespace ) {
	  	if ( removeTrailingWhitespace && /\n/.test( str ) ) {
	  		str = str.replace( /\s+$/, '' );
	  	}
	
	  	str = str
	  		.replace( /^\n\r?\s+/, '' )       // remove leading newline + space
	  		.replace( /\s*\n\r?\s*/gm, ' ' ); // replace newlines with spaces
	
	  	// TODO prefer single quotes?
	  	return JSON.stringify( str );
	  }
	
	  var JSXElement = (function (Node) {
	  	function JSXElement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXElement.__proto__ = Node;
	  	JSXElement.prototype = Object.create( Node && Node.prototype );
	  	JSXElement.prototype.constructor = JSXElement;
	
	  	JSXElement.prototype.transpile = function transpile ( code, transforms ) {
	  		Node.prototype.transpile.call( this, code, transforms );
	
	  		var children = this.children.filter( function ( child ) {
	  			if ( child.type !== 'Literal' ) return true;
	
	  			// remove whitespace-only literals, unless on a single line
	  			return /\S/.test( child.value ) || !/\n/.test( child.value );
	  		});
	
	  		if ( children.length ) {
	  			var c = this.openingElement.end;
	
	  			var i;
	  			for ( i = 0; i < children.length; i += 1 ) {
	  				var child = children[i];
	
	  				if ( child.type === 'JSXExpressionContainer' && child.expression.type === 'JSXEmptyExpression' ) {
	  					// empty block is a no op
	  				} else {
	  					var tail = code.original[ c ] === '\n' && child.type !== 'Literal' ? '' : ' ';
	  					code.insertLeft( c, ("," + tail) );
	  				}
	
	  				if ( child.type === 'Literal' ) {
	  					var str = normalise( child.value, i === children.length - 1 );
	  					code.overwrite( child.start, child.end, str );
	  				}
	
	  				c = child.end;
	  			}
	  		}
	  	};
	
	  	return JSXElement;
	  }(Node));
	
	  var JSXExpressionContainer = (function (Node) {
	  	function JSXExpressionContainer () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXExpressionContainer.__proto__ = Node;
	  	JSXExpressionContainer.prototype = Object.create( Node && Node.prototype );
	  	JSXExpressionContainer.prototype.constructor = JSXExpressionContainer;
	
	  	JSXExpressionContainer.prototype.transpile = function transpile ( code, transforms ) {
	  		code.remove( this.start, this.expression.start );
	  		code.remove( this.expression.end, this.end );
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return JSXExpressionContainer;
	  }(Node));
	
	  var JSXOpeningElement = (function (Node) {
	  	function JSXOpeningElement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXOpeningElement.__proto__ = Node;
	  	JSXOpeningElement.prototype = Object.create( Node && Node.prototype );
	  	JSXOpeningElement.prototype.constructor = JSXOpeningElement;
	
	  	JSXOpeningElement.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		code.overwrite( this.start, this.name.start, ((this.program.jsx) + "( ") );
	
	  		var html = this.name.type === 'JSXIdentifier' && this.name.name[0] === this.name.name[0].toLowerCase();
	  		if ( html ) code.insertRight( this.name.start, "'" );
	
	  		var len = this.attributes.length;
	  		var c = this.name.end;
	
	  		if ( len ) {
	  			var i;
	
	  			var hasSpread = false;
	  			for ( i = 0; i < len; i += 1 ) {
	  				if ( this$1.attributes[i].type === 'JSXSpreadAttribute' ) {
	  					hasSpread = true;
	  					break;
	  				}
	  			}
	
	  			c = this.attributes[0].end;
	
	  			for ( i = 0; i < len; i += 1 ) {
	  				var attr = this$1.attributes[i];
	
	  				if ( i > 0 ) {
	  					code.overwrite( c, attr.start, ', ' );
	  				}
	
	  				if ( hasSpread && attr.type !== 'JSXSpreadAttribute' ) {
	  					var lastAttr = this$1.attributes[ i - 1 ];
	  					var nextAttr = this$1.attributes[ i + 1 ];
	
	  					if ( !lastAttr || lastAttr.type === 'JSXSpreadAttribute' ) {
	  						code.insertRight( attr.start, '{ ' );
	  					}
	
	  					if ( !nextAttr || nextAttr.type === 'JSXSpreadAttribute' ) {
	  						code.insertLeft( attr.end, ' }' );
	  					}
	  				}
	
	  				c = attr.end;
	  			}
	
	  			var after;
	  			var before;
	  			if ( hasSpread ) {
	  				if ( len === 1 ) {
	  					before = html ? "'," : ',';
	  				} else {
	  					if (!this.program.options.objectAssign) {
	  						throw new CompileError( this, 'Mixed JSX attributes ending in spread requires specified objectAssign option with \'Object.assign\' or polyfill helper.' );
	  					}
	  					before = html ? ("', " + (this.program.options.objectAssign) + "({},") : (", " + (this.program.options.objectAssign) + "({},");
	  					after = ')';
	  				}
	  			} else {
	  				before = html ? "', {" : ', {';
	  				after = ' }';
	  			}
	
	  			code.insertRight( this.name.end, before );
	
	  			if ( after ) {
	  				code.insertLeft( this.attributes[ len - 1 ].end, after );
	  			}
	  		} else {
	  			code.insertLeft( this.name.end, html ? "', null" : ", null" );
	  			c = this.name.end;
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	
	  		if ( this.selfClosing ) {
	  			code.overwrite( c, this.end, this.attributes.length ? ")" : " )" );
	  		} else {
	  			code.remove( c, this.end );
	  		}
	  	};
	
	  	return JSXOpeningElement;
	  }(Node));
	
	  var JSXSpreadAttribute = (function (Node) {
	  	function JSXSpreadAttribute () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) JSXSpreadAttribute.__proto__ = Node;
	  	JSXSpreadAttribute.prototype = Object.create( Node && Node.prototype );
	  	JSXSpreadAttribute.prototype.constructor = JSXSpreadAttribute;
	
	  	JSXSpreadAttribute.prototype.transpile = function transpile ( code, transforms ) {
	  		code.remove( this.start, this.argument.start );
	  		code.remove( this.argument.end, this.end );
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return JSXSpreadAttribute;
	  }(Node));
	
	  var regenerate = __commonjs(function (module, exports, global) {
	  /*! https://mths.be/regenerate v1.3.1 by @mathias | MIT license */
	  ;(function(root) {
	
	  	// Detect free variables `exports`.
	  	var freeExports = typeof exports == 'object' && exports;
	
	  	// Detect free variable `module`.
	  	var freeModule = typeof module == 'object' && module &&
	  		module.exports == freeExports && module;
	
	  	// Detect free variable `global`, from Node.js/io.js or Browserified code,
	  	// and use it as `root`.
	  	var freeGlobal = typeof global == 'object' && global;
	  	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
	  		root = freeGlobal;
	  	}
	
	  	/*--------------------------------------------------------------------------*/
	
	  	var ERRORS = {
	  		'rangeOrder': 'A range\u2019s `stop` value must be greater than or equal ' +
	  			'to the `start` value.',
	  		'codePointRange': 'Invalid code point value. Code points range from ' +
	  			'U+000000 to U+10FFFF.'
	  	};
	
	  	// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs
	  	var HIGH_SURROGATE_MIN = 0xD800;
	  	var HIGH_SURROGATE_MAX = 0xDBFF;
	  	var LOW_SURROGATE_MIN = 0xDC00;
	  	var LOW_SURROGATE_MAX = 0xDFFF;
	
	  	// In Regenerate output, `\0` is never preceded by `\` because we sort by
	  	// code point value, so let’s keep this regular expression simple.
	  	var regexNull = /\\x00([^0123456789]|$)/g;
	
	  	var object = {};
	  	var hasOwnProperty = object.hasOwnProperty;
	  	var extend = function(destination, source) {
	  		var key;
	  		for (key in source) {
	  			if (hasOwnProperty.call(source, key)) {
	  				destination[key] = source[key];
	  			}
	  		}
	  		return destination;
	  	};
	
	  	var forEach = function(array, callback) {
	  		var index = -1;
	  		var length = array.length;
	  		while (++index < length) {
	  			callback(array[index], index);
	  		}
	  	};
	
	  	var toString = object.toString;
	  	var isArray = function(value) {
	  		return toString.call(value) == '[object Array]';
	  	};
	  	var isNumber = function(value) {
	  		return typeof value == 'number' ||
	  			toString.call(value) == '[object Number]';
	  	};
	
	  	// This assumes that `number` is a positive integer that `toString()`s nicely
	  	// (which is the case for all code point values).
	  	var zeroes = '0000';
	  	var pad = function(number, totalCharacters) {
	  		var string = String(number);
	  		return string.length < totalCharacters
	  			? (zeroes + string).slice(-totalCharacters)
	  			: string;
	  	};
	
	  	var hex = function(number) {
	  		return Number(number).toString(16).toUpperCase();
	  	};
	
	  	var slice = [].slice;
	
	  	/*--------------------------------------------------------------------------*/
	
	  	var dataFromCodePoints = function(codePoints) {
	  		var index = -1;
	  		var length = codePoints.length;
	  		var max = length - 1;
	  		var result = [];
	  		var isStart = true;
	  		var tmp;
	  		var previous = 0;
	  		while (++index < length) {
	  			tmp = codePoints[index];
	  			if (isStart) {
	  				result.push(tmp);
	  				previous = tmp;
	  				isStart = false;
	  			} else {
	  				if (tmp == previous + 1) {
	  					if (index != max) {
	  						previous = tmp;
	  						continue;
	  					} else {
	  						isStart = true;
	  						result.push(tmp + 1);
	  					}
	  				} else {
	  					// End the previous range and start a new one.
	  					result.push(previous + 1, tmp);
	  					previous = tmp;
	  				}
	  			}
	  		}
	  		if (!isStart) {
	  			result.push(tmp + 1);
	  		}
	  		return result;
	  	};
	
	  	var dataRemove = function(data, codePoint) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var length = data.length;
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1];
	  			if (codePoint >= start && codePoint < end) {
	  				// Modify this pair.
	  				if (codePoint == start) {
	  					if (end == start + 1) {
	  						// Just remove `start` and `end`.
	  						data.splice(index, 2);
	  						return data;
	  					} else {
	  						// Just replace `start` with a new value.
	  						data[index] = codePoint + 1;
	  						return data;
	  					}
	  				} else if (codePoint == end - 1) {
	  					// Just replace `end` with a new value.
	  					data[index + 1] = codePoint;
	  					return data;
	  				} else {
	  					// Replace `[start, end]` with `[startA, endA, startB, endB]`.
	  					data.splice(index, 2, start, codePoint, codePoint + 1, end);
	  					return data;
	  				}
	  			}
	  			index += 2;
	  		}
	  		return data;
	  	};
	
	  	var dataRemoveRange = function(data, rangeStart, rangeEnd) {
	  		if (rangeEnd < rangeStart) {
	  			throw Error(ERRORS.rangeOrder);
	  		}
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		while (index < data.length) {
	  			start = data[index];
	  			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
	
	  			// Exit as soon as no more matching pairs can be found.
	  			if (start > rangeEnd) {
	  				return data;
	  			}
	
	  			// Check if this range pair is equal to, or forms a subset of, the range
	  			// to be removed.
	  			// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.
	  			// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.
	  			if (rangeStart <= start && rangeEnd >= end) {
	  				// Remove this pair.
	  				data.splice(index, 2);
	  				continue;
	  			}
	
	  			// Check if both `rangeStart` and `rangeEnd` are within the bounds of
	  			// this pair.
	  			// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.
	  			if (rangeStart >= start && rangeEnd < end) {
	  				if (rangeStart == start) {
	  					// Replace `[start, end]` with `[startB, endB]`.
	  					data[index] = rangeEnd + 1;
	  					data[index + 1] = end + 1;
	  					return data;
	  				}
	  				// Replace `[start, end]` with `[startA, endA, startB, endB]`.
	  				data.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);
	  				return data;
	  			}
	
	  			// Check if only `rangeStart` is within the bounds of this pair.
	  			// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.
	  			if (rangeStart >= start && rangeStart <= end) {
	  				// Replace `end` with `rangeStart`.
	  				data[index + 1] = rangeStart;
	  				// Note: we cannot `return` just yet, in case any following pairs still
	  				// contain matching code points.
	  				// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20
	  				// → `[0, 4, 21, 31]`.
	  			}
	
	  			// Check if only `rangeEnd` is within the bounds of this pair.
	  			// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.
	  			else if (rangeEnd >= start && rangeEnd <= end) {
	  				// Just replace `start`.
	  				data[index] = rangeEnd + 1;
	  				return data;
	  			}
	
	  			index += 2;
	  		}
	  		return data;
	  	};
	
	  	 var dataAdd = function(data, codePoint) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var lastIndex = null;
	  		var length = data.length;
	  		if (codePoint < 0x0 || codePoint > 0x10FFFF) {
	  			throw RangeError(ERRORS.codePointRange);
	  		}
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1];
	
	  			// Check if the code point is already in the set.
	  			if (codePoint >= start && codePoint < end) {
	  				return data;
	  			}
	
	  			if (codePoint == start - 1) {
	  				// Just replace `start` with a new value.
	  				data[index] = codePoint;
	  				return data;
	  			}
	
	  			// At this point, if `start` is `greater` than `codePoint`, insert a new
	  			// `[start, end]` pair before the current pair, or after the current pair
	  			// if there is a known `lastIndex`.
	  			if (start > codePoint) {
	  				data.splice(
	  					lastIndex != null ? lastIndex + 2 : 0,
	  					0,
	  					codePoint,
	  					codePoint + 1
	  				);
	  				return data;
	  			}
	
	  			if (codePoint == end) {
	  				// Check if adding this code point causes two separate ranges to become
	  				// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.
	  				if (codePoint + 1 == data[index + 2]) {
	  					data.splice(index, 4, start, data[index + 3]);
	  					return data;
	  				}
	  				// Else, just replace `end` with a new value.
	  				data[index + 1] = codePoint + 1;
	  				return data;
	  			}
	  			lastIndex = index;
	  			index += 2;
	  		}
	  		// The loop has finished; add the new pair to the end of the data set.
	  		data.push(codePoint, codePoint + 1);
	  		return data;
	  	};
	
	  	var dataAddData = function(dataA, dataB) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var data = dataA.slice();
	  		var length = dataB.length;
	  		while (index < length) {
	  			start = dataB[index];
	  			end = dataB[index + 1] - 1;
	  			if (start == end) {
	  				data = dataAdd(data, start);
	  			} else {
	  				data = dataAddRange(data, start, end);
	  			}
	  			index += 2;
	  		}
	  		return data;
	  	};
	
	  	var dataRemoveData = function(dataA, dataB) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var data = dataA.slice();
	  		var length = dataB.length;
	  		while (index < length) {
	  			start = dataB[index];
	  			end = dataB[index + 1] - 1;
	  			if (start == end) {
	  				data = dataRemove(data, start);
	  			} else {
	  				data = dataRemoveRange(data, start, end);
	  			}
	  			index += 2;
	  		}
	  		return data;
	  	};
	
	  	var dataAddRange = function(data, rangeStart, rangeEnd) {
	  		if (rangeEnd < rangeStart) {
	  			throw Error(ERRORS.rangeOrder);
	  		}
	  		if (
	  			rangeStart < 0x0 || rangeStart > 0x10FFFF ||
	  			rangeEnd < 0x0 || rangeEnd > 0x10FFFF
	  		) {
	  			throw RangeError(ERRORS.codePointRange);
	  		}
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var added = false;
	  		var length = data.length;
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1];
	
	  			if (added) {
	  				// The range has already been added to the set; at this point, we just
	  				// need to get rid of the following ranges in case they overlap.
	
	  				// Check if this range can be combined with the previous range.
	  				if (start == rangeEnd + 1) {
	  					data.splice(index - 1, 2);
	  					return data;
	  				}
	
	  				// Exit as soon as no more possibly overlapping pairs can be found.
	  				if (start > rangeEnd) {
	  					return data;
	  				}
	
	  				// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have
	  				// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the
	  				// `0,16` range that was previously added.
	  				if (start >= rangeStart && start <= rangeEnd) {
	  					// `start` lies within the range that was previously added.
	
	  					if (end > rangeStart && end - 1 <= rangeEnd) {
	  						// `end` lies within the range that was previously added as well,
	  						// so remove this pair.
	  						data.splice(index, 2);
	  						index -= 2;
	  						// Note: we cannot `return` just yet, as there may still be other
	  						// overlapping pairs.
	  					} else {
	  						// `start` lies within the range that was previously added, but
	  						// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so
	  						// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.
	  						// Remove the previously added `end` and the current `start`.
	  						data.splice(index - 1, 2);
	  						index -= 2;
	  					}
	
	  					// Note: we cannot return yet.
	  				}
	
	  			}
	
	  			else if (start == rangeEnd + 1) {
	  				data[index] = rangeStart;
	  				return data;
	  			}
	
	  			// Check if a new pair must be inserted *before* the current one.
	  			else if (start > rangeEnd) {
	  				data.splice(index, 0, rangeStart, rangeEnd + 1);
	  				return data;
	  			}
	
	  			else if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {
	  				// The new range lies entirely within an existing range pair. No action
	  				// needed.
	  				return data;
	  			}
	
	  			else if (
	  				// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.
	  				(rangeStart >= start && rangeStart < end) ||
	  				// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.
	  				end == rangeStart
	  			) {
	  				// Replace `end` with the new value.
	  				data[index + 1] = rangeEnd + 1;
	  				// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`
	  				// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.
	  				added = true;
	  				// Note: we cannot `return` just yet.
	  			}
	
	  			else if (rangeStart <= start && rangeEnd + 1 >= end) {
	  				// The new range is a superset of the old range.
	  				data[index] = rangeStart;
	  				data[index + 1] = rangeEnd + 1;
	  				added = true;
	  			}
	
	  			index += 2;
	  		}
	  		// The loop has finished without doing anything; add the new pair to the end
	  		// of the data set.
	  		if (!added) {
	  			data.push(rangeStart, rangeEnd + 1);
	  		}
	  		return data;
	  	};
	
	  	var dataContains = function(data, codePoint) {
	  		var index = 0;
	  		var length = data.length;
	  		// Exit early if `codePoint` is not within `data`’s overall range.
	  		var start = data[index];
	  		var end = data[length - 1];
	  		if (length >= 2) {
	  			if (codePoint < start || codePoint > end) {
	  				return false;
	  			}
	  		}
	  		// Iterate over the data per `(start, end)` pair.
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1];
	  			if (codePoint >= start && codePoint < end) {
	  				return true;
	  			}
	  			index += 2;
	  		}
	  		return false;
	  	};
	
	  	var dataIntersection = function(data, codePoints) {
	  		var index = 0;
	  		var length = codePoints.length;
	  		var codePoint;
	  		var result = [];
	  		while (index < length) {
	  			codePoint = codePoints[index];
	  			if (dataContains(data, codePoint)) {
	  				result.push(codePoint);
	  			}
	  			++index;
	  		}
	  		return dataFromCodePoints(result);
	  	};
	
	  	var dataIsEmpty = function(data) {
	  		return !data.length;
	  	};
	
	  	var dataIsSingleton = function(data) {
	  		// Check if the set only represents a single code point.
	  		return data.length == 2 && data[0] + 1 == data[1];
	  	};
	
	  	var dataToArray = function(data) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var result = [];
	  		var length = data.length;
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1];
	  			while (start < end) {
	  				result.push(start);
	  				++start;
	  			}
	  			index += 2;
	  		}
	  		return result;
	  	};
	
	  	/*--------------------------------------------------------------------------*/
	
	  	// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	  	var floor = Math.floor;
	  	var highSurrogate = function(codePoint) {
	  		return parseInt(
	  			floor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,
	  			10
	  		);
	  	};
	
	  	var lowSurrogate = function(codePoint) {
	  		return parseInt(
	  			(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,
	  			10
	  		);
	  	};
	
	  	var stringFromCharCode = String.fromCharCode;
	  	var codePointToString = function(codePoint) {
	  		var string;
	  		// https://mathiasbynens.be/notes/javascript-escapes#single
	  		// Note: the `\b` escape sequence for U+0008 BACKSPACE in strings has a
	  		// different meaning in regular expressions (word boundary), so it cannot
	  		// be used here.
	  		if (codePoint == 0x09) {
	  			string = '\\t';
	  		}
	  		// Note: IE < 9 treats `'\v'` as `'v'`, so avoid using it.
	  		// else if (codePoint == 0x0B) {
	  		// 	string = '\\v';
	  		// }
	  		else if (codePoint == 0x0A) {
	  			string = '\\n';
	  		}
	  		else if (codePoint == 0x0C) {
	  			string = '\\f';
	  		}
	  		else if (codePoint == 0x0D) {
	  			string = '\\r';
	  		}
	  		else if (codePoint == 0x5C) {
	  			string = '\\\\';
	  		}
	  		else if (
	  			codePoint == 0x24 ||
	  			(codePoint >= 0x28 && codePoint <= 0x2B) ||
	  			codePoint == 0x2D || codePoint == 0x2E || codePoint == 0x3F ||
	  			(codePoint >= 0x5B && codePoint <= 0x5E) ||
	  			(codePoint >= 0x7B && codePoint <= 0x7D)
	  		) {
	  			// The code point maps to an unsafe printable ASCII character;
	  			// backslash-escape it. Here’s the list of those symbols:
	  			//
	  			//     $()*+-.?[\]^{|}
	  			//
	  			// See #7 for more info.
	  			string = '\\' + stringFromCharCode(codePoint);
	  		}
	  		else if (codePoint >= 0x20 && codePoint <= 0x7E) {
	  			// The code point maps to one of these printable ASCII symbols
	  			// (including the space character):
	  			//
	  			//      !"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO
	  			//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~
	  			//
	  			// These can safely be used directly.
	  			string = stringFromCharCode(codePoint);
	  		}
	  		else if (codePoint <= 0xFF) {
	  			// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal
	  			string = '\\x' + pad(hex(codePoint), 2);
	  		}
	  		else { // `codePoint <= 0xFFFF` holds true.
	  			// https://mathiasbynens.be/notes/javascript-escapes#unicode
	  			string = '\\u' + pad(hex(codePoint), 4);
	  		}
	
	  		// There’s no need to account for astral symbols / surrogate pairs here,
	  		// since `codePointToString` is private and only used for BMP code points.
	  		// But if that’s what you need, just add an `else` block with this code:
	  		//
	  		//     string = '\\u' + pad(hex(highSurrogate(codePoint)), 4)
	  		//     	+ '\\u' + pad(hex(lowSurrogate(codePoint)), 4);
	
	  		return string;
	  	};
	
	  	var codePointToStringUnicode = function(codePoint) {
	  		if (codePoint <= 0xFFFF) {
	  			return codePointToString(codePoint);
	  		}
	  		return '\\u{' + codePoint.toString(16).toUpperCase() + '}';
	  	};
	
	  	var symbolToCodePoint = function(symbol) {
	  		var length = symbol.length;
	  		var first = symbol.charCodeAt(0);
	  		var second;
	  		if (
	  			first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&
	  			length > 1 // There is a next code unit.
	  		) {
	  			// `first` is a high surrogate, and there is a next character. Assume
	  			// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).
	  			second = symbol.charCodeAt(1);
	  			// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	  			return (first - HIGH_SURROGATE_MIN) * 0x400 +
	  				second - LOW_SURROGATE_MIN + 0x10000;
	  		}
	  		return first;
	  	};
	
	  	var createBMPCharacterClasses = function(data) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var result = '';
	  		var index = 0;
	  		var start;
	  		var end;
	  		var length = data.length;
	  		if (dataIsSingleton(data)) {
	  			return codePointToString(data[0]);
	  		}
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
	  			if (start == end) {
	  				result += codePointToString(start);
	  			} else if (start + 1 == end) {
	  				result += codePointToString(start) + codePointToString(end);
	  			} else {
	  				result += codePointToString(start) + '-' + codePointToString(end);
	  			}
	  			index += 2;
	  		}
	  		return '[' + result + ']';
	  	};
	
	  	var createUnicodeCharacterClasses = function(data) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var result = '';
	  		var index = 0;
	  		var start;
	  		var end;
	  		var length = data.length;
	  		if (dataIsSingleton(data)) {
	  			return codePointToStringUnicode(data[0]);
	  		}
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
	  			if (start == end) {
	  				result += codePointToStringUnicode(start);
	  			} else if (start + 1 == end) {
	  				result += codePointToStringUnicode(start) + codePointToStringUnicode(end);
	  			} else {
	  				result += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);
	  			}
	  			index += 2;
	  		}
	  		return '[' + result + ']';
	  	};
	
	  	var splitAtBMP = function(data) {
	  		// Iterate over the data per `(start, end)` pair.
	  		var loneHighSurrogates = [];
	  		var loneLowSurrogates = [];
	  		var bmp = [];
	  		var astral = [];
	  		var index = 0;
	  		var start;
	  		var end;
	  		var length = data.length;
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.
	
	  			if (start < HIGH_SURROGATE_MIN) {
	
	  				// The range starts and ends before the high surrogate range.
	  				// E.g. (0, 0x10).
	  				if (end < HIGH_SURROGATE_MIN) {
	  					bmp.push(start, end + 1);
	  				}
	
	  				// The range starts before the high surrogate range and ends within it.
	  				// E.g. (0, 0xD855).
	  				if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {
	  					bmp.push(start, HIGH_SURROGATE_MIN);
	  					loneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);
	  				}
	
	  				// The range starts before the high surrogate range and ends in the low
	  				// surrogate range. E.g. (0, 0xDCFF).
	  				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
	  					bmp.push(start, HIGH_SURROGATE_MIN);
	  					loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);
	  					loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);
	  				}
	
	  				// The range starts before the high surrogate range and ends after the
	  				// low surrogate range. E.g. (0, 0x10FFFF).
	  				if (end > LOW_SURROGATE_MAX) {
	  					bmp.push(start, HIGH_SURROGATE_MIN);
	  					loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);
	  					loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);
	  					if (end <= 0xFFFF) {
	  						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
	  					} else {
	  						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
	  						astral.push(0xFFFF + 1, end + 1);
	  					}
	  				}
	
	  			} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {
	
	  				// The range starts and ends in the high surrogate range.
	  				// E.g. (0xD855, 0xD866).
	  				if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {
	  					loneHighSurrogates.push(start, end + 1);
	  				}
	
	  				// The range starts in the high surrogate range and ends in the low
	  				// surrogate range. E.g. (0xD855, 0xDCFF).
	  				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
	  					loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);
	  					loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);
	  				}
	
	  				// The range starts in the high surrogate range and ends after the low
	  				// surrogate range. E.g. (0xD855, 0x10FFFF).
	  				if (end > LOW_SURROGATE_MAX) {
	  					loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);
	  					loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);
	  					if (end <= 0xFFFF) {
	  						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
	  					} else {
	  						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
	  						astral.push(0xFFFF + 1, end + 1);
	  					}
	  				}
	
	  			} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {
	
	  				// The range starts and ends in the low surrogate range.
	  				// E.g. (0xDCFF, 0xDDFF).
	  				if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {
	  					loneLowSurrogates.push(start, end + 1);
	  				}
	
	  				// The range starts in the low surrogate range and ends after the low
	  				// surrogate range. E.g. (0xDCFF, 0x10FFFF).
	  				if (end > LOW_SURROGATE_MAX) {
	  					loneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);
	  					if (end <= 0xFFFF) {
	  						bmp.push(LOW_SURROGATE_MAX + 1, end + 1);
	  					} else {
	  						bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);
	  						astral.push(0xFFFF + 1, end + 1);
	  					}
	  				}
	
	  			} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {
	
	  				// The range starts and ends after the low surrogate range.
	  				// E.g. (0xFFAA, 0x10FFFF).
	  				if (end <= 0xFFFF) {
	  					bmp.push(start, end + 1);
	  				} else {
	  					bmp.push(start, 0xFFFF + 1);
	  					astral.push(0xFFFF + 1, end + 1);
	  				}
	
	  			} else {
	
	  				// The range starts and ends in the astral range.
	  				astral.push(start, end + 1);
	
	  			}
	
	  			index += 2;
	  		}
	  		return {
	  			'loneHighSurrogates': loneHighSurrogates,
	  			'loneLowSurrogates': loneLowSurrogates,
	  			'bmp': bmp,
	  			'astral': astral
	  		};
	  	};
	
	  	var optimizeSurrogateMappings = function(surrogateMappings) {
	  		var result = [];
	  		var tmpLow = [];
	  		var addLow = false;
	  		var mapping;
	  		var nextMapping;
	  		var highSurrogates;
	  		var lowSurrogates;
	  		var nextHighSurrogates;
	  		var nextLowSurrogates;
	  		var index = -1;
	  		var length = surrogateMappings.length;
	  		while (++index < length) {
	  			mapping = surrogateMappings[index];
	  			nextMapping = surrogateMappings[index + 1];
	  			if (!nextMapping) {
	  				result.push(mapping);
	  				continue;
	  			}
	  			highSurrogates = mapping[0];
	  			lowSurrogates = mapping[1];
	  			nextHighSurrogates = nextMapping[0];
	  			nextLowSurrogates = nextMapping[1];
	
	  			// Check for identical high surrogate ranges.
	  			tmpLow = lowSurrogates;
	  			while (
	  				nextHighSurrogates &&
	  				highSurrogates[0] == nextHighSurrogates[0] &&
	  				highSurrogates[1] == nextHighSurrogates[1]
	  			) {
	  				// Merge with the next item.
	  				if (dataIsSingleton(nextLowSurrogates)) {
	  					tmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);
	  				} else {
	  					tmpLow = dataAddRange(
	  						tmpLow,
	  						nextLowSurrogates[0],
	  						nextLowSurrogates[1] - 1
	  					);
	  				}
	  				++index;
	  				mapping = surrogateMappings[index];
	  				highSurrogates = mapping[0];
	  				lowSurrogates = mapping[1];
	  				nextMapping = surrogateMappings[index + 1];
	  				nextHighSurrogates = nextMapping && nextMapping[0];
	  				nextLowSurrogates = nextMapping && nextMapping[1];
	  				addLow = true;
	  			}
	  			result.push([
	  				highSurrogates,
	  				addLow ? tmpLow : lowSurrogates
	  			]);
	  			addLow = false;
	  		}
	  		return optimizeByLowSurrogates(result);
	  	};
	
	  	var optimizeByLowSurrogates = function(surrogateMappings) {
	  		if (surrogateMappings.length == 1) {
	  			return surrogateMappings;
	  		}
	  		var index = -1;
	  		var innerIndex = -1;
	  		while (++index < surrogateMappings.length) {
	  			var mapping = surrogateMappings[index];
	  			var lowSurrogates = mapping[1];
	  			var lowSurrogateStart = lowSurrogates[0];
	  			var lowSurrogateEnd = lowSurrogates[1];
	  			innerIndex = index; // Note: the loop starts at the next index.
	  			while (++innerIndex < surrogateMappings.length) {
	  				var otherMapping = surrogateMappings[innerIndex];
	  				var otherLowSurrogates = otherMapping[1];
	  				var otherLowSurrogateStart = otherLowSurrogates[0];
	  				var otherLowSurrogateEnd = otherLowSurrogates[1];
	  				if (
	  					lowSurrogateStart == otherLowSurrogateStart &&
	  					lowSurrogateEnd == otherLowSurrogateEnd
	  				) {
	  					// Add the code points in the other item to this one.
	  					if (dataIsSingleton(otherMapping[0])) {
	  						mapping[0] = dataAdd(mapping[0], otherMapping[0][0]);
	  					} else {
	  						mapping[0] = dataAddRange(
	  							mapping[0],
	  							otherMapping[0][0],
	  							otherMapping[0][1] - 1
	  						);
	  					}
	  					// Remove the other, now redundant, item.
	  					surrogateMappings.splice(innerIndex, 1);
	  					--innerIndex;
	  				}
	  			}
	  		}
	  		return surrogateMappings;
	  	};
	
	  	var surrogateSet = function(data) {
	  		// Exit early if `data` is an empty set.
	  		if (!data.length) {
	  			return [];
	  		}
	
	  		// Iterate over the data per `(start, end)` pair.
	  		var index = 0;
	  		var start;
	  		var end;
	  		var startHigh;
	  		var startLow;
	  		var prevStartHigh = 0;
	  		var prevEndHigh = 0;
	  		var tmpLow = [];
	  		var endHigh;
	  		var endLow;
	  		var surrogateMappings = [];
	  		var length = data.length;
	  		var dataHigh = [];
	  		while (index < length) {
	  			start = data[index];
	  			end = data[index + 1] - 1;
	
	  			startHigh = highSurrogate(start);
	  			startLow = lowSurrogate(start);
	  			endHigh = highSurrogate(end);
	  			endLow = lowSurrogate(end);
	
	  			var startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;
	  			var endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;
	  			var complete = false;
	
	  			// Append the previous high-surrogate-to-low-surrogate mappings.
	  			// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.
	  			if (
	  				startHigh == endHigh ||
	  				startsWithLowestLowSurrogate && endsWithHighestLowSurrogate
	  			) {
	  				surrogateMappings.push([
	  					[startHigh, endHigh + 1],
	  					[startLow, endLow + 1]
	  				]);
	  				complete = true;
	  			} else {
	  				surrogateMappings.push([
	  					[startHigh, startHigh + 1],
	  					[startLow, LOW_SURROGATE_MAX + 1]
	  				]);
	  			}
	
	  			// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to
	  			// `(endHigh - 1, LOW_SURROGATE_MAX)`.
	  			if (!complete && startHigh + 1 < endHigh) {
	  				if (endsWithHighestLowSurrogate) {
	  					// Combine step 2 and step 3.
	  					surrogateMappings.push([
	  						[startHigh + 1, endHigh + 1],
	  						[LOW_SURROGATE_MIN, endLow + 1]
	  					]);
	  					complete = true;
	  				} else {
	  					surrogateMappings.push([
	  						[startHigh + 1, endHigh],
	  						[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]
	  					]);
	  				}
	  			}
	
	  			// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.
	  			if (!complete) {
	  				surrogateMappings.push([
	  					[endHigh, endHigh + 1],
	  					[LOW_SURROGATE_MIN, endLow + 1]
	  				]);
	  			}
	
	  			prevStartHigh = startHigh;
	  			prevEndHigh = endHigh;
	
	  			index += 2;
	  		}
	
	  		// The format of `surrogateMappings` is as follows:
	  		//
	  		//     [ surrogateMapping1, surrogateMapping2 ]
	  		//
	  		// i.e.:
	  		//
	  		//     [
	  		//       [ highSurrogates1, lowSurrogates1 ],
	  		//       [ highSurrogates2, lowSurrogates2 ]
	  		//     ]
	  		return optimizeSurrogateMappings(surrogateMappings);
	  	};
	
	  	var createSurrogateCharacterClasses = function(surrogateMappings) {
	  		var result = [];
	  		forEach(surrogateMappings, function(surrogateMapping) {
	  			var highSurrogates = surrogateMapping[0];
	  			var lowSurrogates = surrogateMapping[1];
	  			result.push(
	  				createBMPCharacterClasses(highSurrogates) +
	  				createBMPCharacterClasses(lowSurrogates)
	  			);
	  		});
	  		return result.join('|');
	  	};
	
	  	var createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {
	  		if (hasUnicodeFlag) {
	  			return createUnicodeCharacterClasses(data);
	  		}
	  		var result = [];
	
	  		var parts = splitAtBMP(data);
	  		var loneHighSurrogates = parts.loneHighSurrogates;
	  		var loneLowSurrogates = parts.loneLowSurrogates;
	  		var bmp = parts.bmp;
	  		var astral = parts.astral;
	  		var hasAstral = !dataIsEmpty(parts.astral);
	  		var hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);
	  		var hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);
	
	  		var surrogateMappings = surrogateSet(astral);
	
	  		if (bmpOnly) {
	  			bmp = dataAddData(bmp, loneHighSurrogates);
	  			hasLoneHighSurrogates = false;
	  			bmp = dataAddData(bmp, loneLowSurrogates);
	  			hasLoneLowSurrogates = false;
	  		}
	
	  		if (!dataIsEmpty(bmp)) {
	  			// The data set contains BMP code points that are not high surrogates
	  			// needed for astral code points in the set.
	  			result.push(createBMPCharacterClasses(bmp));
	  		}
	  		if (surrogateMappings.length) {
	  			// The data set contains astral code points; append character classes
	  			// based on their surrogate pairs.
	  			result.push(createSurrogateCharacterClasses(surrogateMappings));
	  		}
	  		// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860
	  		if (hasLoneHighSurrogates) {
	  			result.push(
	  				createBMPCharacterClasses(loneHighSurrogates) +
	  				// Make sure the high surrogates aren’t part of a surrogate pair.
	  				'(?![\\uDC00-\\uDFFF])'
	  			);
	  		}
	  		if (hasLoneLowSurrogates) {
	  			result.push(
	  				// It is not possible to accurately assert the low surrogates aren’t
	  				// part of a surrogate pair, since JavaScript regular expressions do
	  				// not support lookbehind.
	  				'(?:[^\\uD800-\\uDBFF]|^)' +
	  				createBMPCharacterClasses(loneLowSurrogates)
	  			);
	  		}
	  		return result.join('|');
	  	};
	
	  	/*--------------------------------------------------------------------------*/
	
	  	// `regenerate` can be used as a constructor (and new methods can be added to
	  	// its prototype) but also as a regular function, the latter of which is the
	  	// documented and most common usage. For that reason, it’s not capitalized.
	  	var regenerate = function(value) {
	  		if (arguments.length > 1) {
	  			value = slice.call(arguments);
	  		}
	  		if (this instanceof regenerate) {
	  			this.data = [];
	  			return value ? this.add(value) : this;
	  		}
	  		return (new regenerate).add(value);
	  	};
	
	  	regenerate.version = '1.3.1';
	
	  	var proto = regenerate.prototype;
	  	extend(proto, {
	  		'add': function(value) {
	  			var $this = this;
	  			if (value == null) {
	  				return $this;
	  			}
	  			if (value instanceof regenerate) {
	  				// Allow passing other Regenerate instances.
	  				$this.data = dataAddData($this.data, value.data);
	  				return $this;
	  			}
	  			if (arguments.length > 1) {
	  				value = slice.call(arguments);
	  			}
	  			if (isArray(value)) {
	  				forEach(value, function(item) {
	  					$this.add(item);
	  				});
	  				return $this;
	  			}
	  			$this.data = dataAdd(
	  				$this.data,
	  				isNumber(value) ? value : symbolToCodePoint(value)
	  			);
	  			return $this;
	  		},
	  		'remove': function(value) {
	  			var $this = this;
	  			if (value == null) {
	  				return $this;
	  			}
	  			if (value instanceof regenerate) {
	  				// Allow passing other Regenerate instances.
	  				$this.data = dataRemoveData($this.data, value.data);
	  				return $this;
	  			}
	  			if (arguments.length > 1) {
	  				value = slice.call(arguments);
	  			}
	  			if (isArray(value)) {
	  				forEach(value, function(item) {
	  					$this.remove(item);
	  				});
	  				return $this;
	  			}
	  			$this.data = dataRemove(
	  				$this.data,
	  				isNumber(value) ? value : symbolToCodePoint(value)
	  			);
	  			return $this;
	  		},
	  		'addRange': function(start, end) {
	  			var $this = this;
	  			$this.data = dataAddRange($this.data,
	  				isNumber(start) ? start : symbolToCodePoint(start),
	  				isNumber(end) ? end : symbolToCodePoint(end)
	  			);
	  			return $this;
	  		},
	  		'removeRange': function(start, end) {
	  			var $this = this;
	  			var startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);
	  			var endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);
	  			$this.data = dataRemoveRange(
	  				$this.data,
	  				startCodePoint,
	  				endCodePoint
	  			);
	  			return $this;
	  		},
	  		'intersection': function(argument) {
	  			var $this = this;
	  			// Allow passing other Regenerate instances.
	  			// TODO: Optimize this by writing and using `dataIntersectionData()`.
	  			var array = argument instanceof regenerate ?
	  				dataToArray(argument.data) :
	  				argument;
	  			$this.data = dataIntersection($this.data, array);
	  			return $this;
	  		},
	  		'contains': function(codePoint) {
	  			return dataContains(
	  				this.data,
	  				isNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)
	  			);
	  		},
	  		'clone': function() {
	  			var set = new regenerate;
	  			set.data = this.data.slice(0);
	  			return set;
	  		},
	  		'toString': function(options) {
	  			var result = createCharacterClassesFromData(
	  				this.data,
	  				options ? options.bmpOnly : false,
	  				options ? options.hasUnicodeFlag : false
	  			);
	  			if (!result) {
	  				// For an empty set, return something that can be inserted `/here/` to
	  				// form a valid regular expression. Avoid `(?:)` since that matches the
	  				// empty string.
	  				return '[]';
	  			}
	  			// Use `\0` instead of `\x00` where possible.
	  			return result.replace(regexNull, '\\0$1');
	  		},
	  		'toRegExp': function(flags) {
	  			var pattern = this.toString(
	  				flags && flags.indexOf('u') != -1 ?
	  					{ 'hasUnicodeFlag': true } :
	  					null
	  			);
	  			return RegExp(pattern, flags || '');
	  		},
	  		'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.
	  			return dataToArray(this.data);
	  		}
	  	});
	
	  	proto.toArray = proto.valueOf;
	
	  	// Some AMD build optimizers, like r.js, check for specific condition patterns
	  	// like the following:
	  	if (
	  		true
	  	) {
	  		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	  			return regenerate;
	  		}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  	}	else if (freeExports && !freeExports.nodeType) {
	  		if (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+
	  			freeModule.exports = regenerate;
	  		} else { // in Narwhal or RingoJS v0.7.0-
	  			freeExports.regenerate = regenerate;
	  		}
	  	} else { // in Rhino or a web browser
	  		root.regenerate = regenerate;
	  	}
	
	  }(__commonjs_global));
	  });
	
	  var require$$0$2 = (regenerate && typeof regenerate === 'object' && 'default' in regenerate ? regenerate['default'] : regenerate);
	
	  var characterClassEscapeSets = __commonjs(function (module, exports) {
	  // Generated by `/scripts/character-class-escape-sets.js`. Do not edit.
	  var regenerate = require$$0$2;
	
	  exports.REGULAR = {
	  	'd': regenerate()
	  		.addRange(0x30, 0x39),
	  	'D': regenerate()
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0xFFFF),
	  	's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
	  		.addRange(0x9, 0xD)
	  		.addRange(0x2000, 0x200A)
	  		.addRange(0x2028, 0x2029),
	  	'S': regenerate()
	  		.addRange(0x0, 0x8)
	  		.addRange(0xE, 0x1F)
	  		.addRange(0x21, 0x9F)
	  		.addRange(0xA1, 0x167F)
	  		.addRange(0x1681, 0x1FFF)
	  		.addRange(0x200B, 0x2027)
	  		.addRange(0x202A, 0x202E)
	  		.addRange(0x2030, 0x205E)
	  		.addRange(0x2060, 0x2FFF)
	  		.addRange(0x3001, 0xFEFE)
	  		.addRange(0xFF00, 0xFFFF),
	  	'w': regenerate(0x5F)
	  		.addRange(0x30, 0x39)
	  		.addRange(0x41, 0x5A)
	  		.addRange(0x61, 0x7A),
	  	'W': regenerate(0x60)
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0x40)
	  		.addRange(0x5B, 0x5E)
	  		.addRange(0x7B, 0xFFFF)
	  };
	
	  exports.UNICODE = {
	  	'd': regenerate()
	  		.addRange(0x30, 0x39),
	  	'D': regenerate()
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0x10FFFF),
	  	's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
	  		.addRange(0x9, 0xD)
	  		.addRange(0x2000, 0x200A)
	  		.addRange(0x2028, 0x2029),
	  	'S': regenerate()
	  		.addRange(0x0, 0x8)
	  		.addRange(0xE, 0x1F)
	  		.addRange(0x21, 0x9F)
	  		.addRange(0xA1, 0x167F)
	  		.addRange(0x1681, 0x1FFF)
	  		.addRange(0x200B, 0x2027)
	  		.addRange(0x202A, 0x202E)
	  		.addRange(0x2030, 0x205E)
	  		.addRange(0x2060, 0x2FFF)
	  		.addRange(0x3001, 0xFEFE)
	  		.addRange(0xFF00, 0x10FFFF),
	  	'w': regenerate(0x5F)
	  		.addRange(0x30, 0x39)
	  		.addRange(0x41, 0x5A)
	  		.addRange(0x61, 0x7A),
	  	'W': regenerate(0x60)
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0x40)
	  		.addRange(0x5B, 0x5E)
	  		.addRange(0x7B, 0x10FFFF)
	  };
	
	  exports.UNICODE_IGNORE_CASE = {
	  	'd': regenerate()
	  		.addRange(0x30, 0x39),
	  	'D': regenerate()
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0x10FFFF),
	  	's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)
	  		.addRange(0x9, 0xD)
	  		.addRange(0x2000, 0x200A)
	  		.addRange(0x2028, 0x2029),
	  	'S': regenerate()
	  		.addRange(0x0, 0x8)
	  		.addRange(0xE, 0x1F)
	  		.addRange(0x21, 0x9F)
	  		.addRange(0xA1, 0x167F)
	  		.addRange(0x1681, 0x1FFF)
	  		.addRange(0x200B, 0x2027)
	  		.addRange(0x202A, 0x202E)
	  		.addRange(0x2030, 0x205E)
	  		.addRange(0x2060, 0x2FFF)
	  		.addRange(0x3001, 0xFEFE)
	  		.addRange(0xFF00, 0x10FFFF),
	  	'w': regenerate(0x5F, 0x17F, 0x212A)
	  		.addRange(0x30, 0x39)
	  		.addRange(0x41, 0x5A)
	  		.addRange(0x61, 0x7A),
	  	'W': regenerate(0x4B, 0x53, 0x60)
	  		.addRange(0x0, 0x2F)
	  		.addRange(0x3A, 0x40)
	  		.addRange(0x5B, 0x5E)
	  		.addRange(0x7B, 0x10FFFF)
	  };
	  });
	
	  var require$$0$1 = (characterClassEscapeSets && typeof characterClassEscapeSets === 'object' && 'default' in characterClassEscapeSets ? characterClassEscapeSets['default'] : characterClassEscapeSets);
	
	  var require$$1 = {
	  	"75": 8490,
	  	"83": 383,
	  	"107": 8490,
	  	"115": 383,
	  	"181": 924,
	  	"197": 8491,
	  	"383": 83,
	  	"452": 453,
	  	"453": 452,
	  	"455": 456,
	  	"456": 455,
	  	"458": 459,
	  	"459": 458,
	  	"497": 498,
	  	"498": 497,
	  	"837": 8126,
	  	"914": 976,
	  	"917": 1013,
	  	"920": 1012,
	  	"921": 8126,
	  	"922": 1008,
	  	"924": 181,
	  	"928": 982,
	  	"929": 1009,
	  	"931": 962,
	  	"934": 981,
	  	"937": 8486,
	  	"962": 931,
	  	"976": 914,
	  	"977": 1012,
	  	"981": 934,
	  	"982": 928,
	  	"1008": 922,
	  	"1009": 929,
	  	"1012": [920,977],
	  	"1013": 917,
	  	"7776": 7835,
	  	"7835": 7776,
	  	"8126": [837,921],
	  	"8486": 937,
	  	"8490": 75,
	  	"8491": 197,
	  	"66560": 66600,
	  	"66561": 66601,
	  	"66562": 66602,
	  	"66563": 66603,
	  	"66564": 66604,
	  	"66565": 66605,
	  	"66566": 66606,
	  	"66567": 66607,
	  	"66568": 66608,
	  	"66569": 66609,
	  	"66570": 66610,
	  	"66571": 66611,
	  	"66572": 66612,
	  	"66573": 66613,
	  	"66574": 66614,
	  	"66575": 66615,
	  	"66576": 66616,
	  	"66577": 66617,
	  	"66578": 66618,
	  	"66579": 66619,
	  	"66580": 66620,
	  	"66581": 66621,
	  	"66582": 66622,
	  	"66583": 66623,
	  	"66584": 66624,
	  	"66585": 66625,
	  	"66586": 66626,
	  	"66587": 66627,
	  	"66588": 66628,
	  	"66589": 66629,
	  	"66590": 66630,
	  	"66591": 66631,
	  	"66592": 66632,
	  	"66593": 66633,
	  	"66594": 66634,
	  	"66595": 66635,
	  	"66596": 66636,
	  	"66597": 66637,
	  	"66598": 66638,
	  	"66599": 66639,
	  	"66600": 66560,
	  	"66601": 66561,
	  	"66602": 66562,
	  	"66603": 66563,
	  	"66604": 66564,
	  	"66605": 66565,
	  	"66606": 66566,
	  	"66607": 66567,
	  	"66608": 66568,
	  	"66609": 66569,
	  	"66610": 66570,
	  	"66611": 66571,
	  	"66612": 66572,
	  	"66613": 66573,
	  	"66614": 66574,
	  	"66615": 66575,
	  	"66616": 66576,
	  	"66617": 66577,
	  	"66618": 66578,
	  	"66619": 66579,
	  	"66620": 66580,
	  	"66621": 66581,
	  	"66622": 66582,
	  	"66623": 66583,
	  	"66624": 66584,
	  	"66625": 66585,
	  	"66626": 66586,
	  	"66627": 66587,
	  	"66628": 66588,
	  	"66629": 66589,
	  	"66630": 66590,
	  	"66631": 66591,
	  	"66632": 66592,
	  	"66633": 66593,
	  	"66634": 66594,
	  	"66635": 66595,
	  	"66636": 66596,
	  	"66637": 66597,
	  	"66638": 66598,
	  	"66639": 66599,
	  	"68736": 68800,
	  	"68737": 68801,
	  	"68738": 68802,
	  	"68739": 68803,
	  	"68740": 68804,
	  	"68741": 68805,
	  	"68742": 68806,
	  	"68743": 68807,
	  	"68744": 68808,
	  	"68745": 68809,
	  	"68746": 68810,
	  	"68747": 68811,
	  	"68748": 68812,
	  	"68749": 68813,
	  	"68750": 68814,
	  	"68751": 68815,
	  	"68752": 68816,
	  	"68753": 68817,
	  	"68754": 68818,
	  	"68755": 68819,
	  	"68756": 68820,
	  	"68757": 68821,
	  	"68758": 68822,
	  	"68759": 68823,
	  	"68760": 68824,
	  	"68761": 68825,
	  	"68762": 68826,
	  	"68763": 68827,
	  	"68764": 68828,
	  	"68765": 68829,
	  	"68766": 68830,
	  	"68767": 68831,
	  	"68768": 68832,
	  	"68769": 68833,
	  	"68770": 68834,
	  	"68771": 68835,
	  	"68772": 68836,
	  	"68773": 68837,
	  	"68774": 68838,
	  	"68775": 68839,
	  	"68776": 68840,
	  	"68777": 68841,
	  	"68778": 68842,
	  	"68779": 68843,
	  	"68780": 68844,
	  	"68781": 68845,
	  	"68782": 68846,
	  	"68783": 68847,
	  	"68784": 68848,
	  	"68785": 68849,
	  	"68786": 68850,
	  	"68800": 68736,
	  	"68801": 68737,
	  	"68802": 68738,
	  	"68803": 68739,
	  	"68804": 68740,
	  	"68805": 68741,
	  	"68806": 68742,
	  	"68807": 68743,
	  	"68808": 68744,
	  	"68809": 68745,
	  	"68810": 68746,
	  	"68811": 68747,
	  	"68812": 68748,
	  	"68813": 68749,
	  	"68814": 68750,
	  	"68815": 68751,
	  	"68816": 68752,
	  	"68817": 68753,
	  	"68818": 68754,
	  	"68819": 68755,
	  	"68820": 68756,
	  	"68821": 68757,
	  	"68822": 68758,
	  	"68823": 68759,
	  	"68824": 68760,
	  	"68825": 68761,
	  	"68826": 68762,
	  	"68827": 68763,
	  	"68828": 68764,
	  	"68829": 68765,
	  	"68830": 68766,
	  	"68831": 68767,
	  	"68832": 68768,
	  	"68833": 68769,
	  	"68834": 68770,
	  	"68835": 68771,
	  	"68836": 68772,
	  	"68837": 68773,
	  	"68838": 68774,
	  	"68839": 68775,
	  	"68840": 68776,
	  	"68841": 68777,
	  	"68842": 68778,
	  	"68843": 68779,
	  	"68844": 68780,
	  	"68845": 68781,
	  	"68846": 68782,
	  	"68847": 68783,
	  	"68848": 68784,
	  	"68849": 68785,
	  	"68850": 68786,
	  	"71840": 71872,
	  	"71841": 71873,
	  	"71842": 71874,
	  	"71843": 71875,
	  	"71844": 71876,
	  	"71845": 71877,
	  	"71846": 71878,
	  	"71847": 71879,
	  	"71848": 71880,
	  	"71849": 71881,
	  	"71850": 71882,
	  	"71851": 71883,
	  	"71852": 71884,
	  	"71853": 71885,
	  	"71854": 71886,
	  	"71855": 71887,
	  	"71856": 71888,
	  	"71857": 71889,
	  	"71858": 71890,
	  	"71859": 71891,
	  	"71860": 71892,
	  	"71861": 71893,
	  	"71862": 71894,
	  	"71863": 71895,
	  	"71864": 71896,
	  	"71865": 71897,
	  	"71866": 71898,
	  	"71867": 71899,
	  	"71868": 71900,
	  	"71869": 71901,
	  	"71870": 71902,
	  	"71871": 71903,
	  	"71872": 71840,
	  	"71873": 71841,
	  	"71874": 71842,
	  	"71875": 71843,
	  	"71876": 71844,
	  	"71877": 71845,
	  	"71878": 71846,
	  	"71879": 71847,
	  	"71880": 71848,
	  	"71881": 71849,
	  	"71882": 71850,
	  	"71883": 71851,
	  	"71884": 71852,
	  	"71885": 71853,
	  	"71886": 71854,
	  	"71887": 71855,
	  	"71888": 71856,
	  	"71889": 71857,
	  	"71890": 71858,
	  	"71891": 71859,
	  	"71892": 71860,
	  	"71893": 71861,
	  	"71894": 71862,
	  	"71895": 71863,
	  	"71896": 71864,
	  	"71897": 71865,
	  	"71898": 71866,
	  	"71899": 71867,
	  	"71900": 71868,
	  	"71901": 71869,
	  	"71902": 71870,
	  	"71903": 71871
	  };
	
	  var parser = __commonjs(function (module) {
	  // regjsparser
	  //
	  // ==================================================================
	  //
	  // See ECMA-262 Standard: 15.10.1
	  //
	  // NOTE: The ECMA-262 standard uses the term "Assertion" for /^/. Here the
	  //   term "Anchor" is used.
	  //
	  // Pattern ::
	  //      Disjunction
	  //
	  // Disjunction ::
	  //      Alternative
	  //      Alternative | Disjunction
	  //
	  // Alternative ::
	  //      [empty]
	  //      Alternative Term
	  //
	  // Term ::
	  //      Anchor
	  //      Atom
	  //      Atom Quantifier
	  //
	  // Anchor ::
	  //      ^
	  //      $
	  //      \ b
	  //      \ B
	  //      ( ? = Disjunction )
	  //      ( ? ! Disjunction )
	  //
	  // Quantifier ::
	  //      QuantifierPrefix
	  //      QuantifierPrefix ?
	  //
	  // QuantifierPrefix ::
	  //      *
	  //      +
	  //      ?
	  //      { DecimalDigits }
	  //      { DecimalDigits , }
	  //      { DecimalDigits , DecimalDigits }
	  //
	  // Atom ::
	  //      PatternCharacter
	  //      .
	  //      \ AtomEscape
	  //      CharacterClass
	  //      ( Disjunction )
	  //      ( ? : Disjunction )
	  //
	  // PatternCharacter ::
	  //      SourceCharacter but not any of: ^ $ \ . * + ? ( ) [ ] { } |
	  //
	  // AtomEscape ::
	  //      DecimalEscape
	  //      CharacterEscape
	  //      CharacterClassEscape
	  //
	  // CharacterEscape[U] ::
	  //      ControlEscape
	  //      c ControlLetter
	  //      HexEscapeSequence
	  //      RegExpUnicodeEscapeSequence[?U] (ES6)
	  //      IdentityEscape[?U]
	  //
	  // ControlEscape ::
	  //      one of f n r t v
	  // ControlLetter ::
	  //      one of
	  //          a b c d e f g h i j k l m n o p q r s t u v w x y z
	  //          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
	  //
	  // IdentityEscape ::
	  //      SourceCharacter but not IdentifierPart
	  //      <ZWJ>
	  //      <ZWNJ>
	  //
	  // DecimalEscape ::
	  //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]
	  //
	  // CharacterClassEscape ::
	  //      one of d D s S w W
	  //
	  // CharacterClass ::
	  //      [ [lookahead ∉ {^}] ClassRanges ]
	  //      [ ^ ClassRanges ]
	  //
	  // ClassRanges ::
	  //      [empty]
	  //      NonemptyClassRanges
	  //
	  // NonemptyClassRanges ::
	  //      ClassAtom
	  //      ClassAtom NonemptyClassRangesNoDash
	  //      ClassAtom - ClassAtom ClassRanges
	  //
	  // NonemptyClassRangesNoDash ::
	  //      ClassAtom
	  //      ClassAtomNoDash NonemptyClassRangesNoDash
	  //      ClassAtomNoDash - ClassAtom ClassRanges
	  //
	  // ClassAtom ::
	  //      -
	  //      ClassAtomNoDash
	  //
	  // ClassAtomNoDash ::
	  //      SourceCharacter but not one of \ or ] or -
	  //      \ ClassEscape
	  //
	  // ClassEscape ::
	  //      DecimalEscape
	  //      b
	  //      CharacterEscape
	  //      CharacterClassEscape
	
	  (function() {
	
	    function parse(str, flags) {
	      function addRaw(node) {
	        node.raw = str.substring(node.range[0], node.range[1]);
	        return node;
	      }
	
	      function updateRawStart(node, start) {
	        node.range[0] = start;
	        return addRaw(node);
	      }
	
	      function createAnchor(kind, rawLength) {
	        return addRaw({
	          type: 'anchor',
	          kind: kind,
	          range: [
	            pos - rawLength,
	            pos
	          ]
	        });
	      }
	
	      function createValue(kind, codePoint, from, to) {
	        return addRaw({
	          type: 'value',
	          kind: kind,
	          codePoint: codePoint,
	          range: [from, to]
	        });
	      }
	
	      function createEscaped(kind, codePoint, value, fromOffset) {
	        fromOffset = fromOffset || 0;
	        return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);
	      }
	
	      function createCharacter(matches) {
	        var _char = matches[0];
	        var first = _char.charCodeAt(0);
	        if (hasUnicodeFlag) {
	          var second;
	          if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {
	            second = lookahead().charCodeAt(0);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	              // Unicode surrogate pair
	              pos++;
	              return createValue(
	                  'symbol',
	                  (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000,
	                  pos - 2, pos);
	            }
	          }
	        }
	        return createValue('symbol', first, pos - 1, pos);
	      }
	
	      function createDisjunction(alternatives, from, to) {
	        return addRaw({
	          type: 'disjunction',
	          body: alternatives,
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function createDot() {
	        return addRaw({
	          type: 'dot',
	          range: [
	            pos - 1,
	            pos
	          ]
	        });
	      }
	
	      function createCharacterClassEscape(value) {
	        return addRaw({
	          type: 'characterClassEscape',
	          value: value,
	          range: [
	            pos - 2,
	            pos
	          ]
	        });
	      }
	
	      function createReference(matchIndex) {
	        return addRaw({
	          type: 'reference',
	          matchIndex: parseInt(matchIndex, 10),
	          range: [
	            pos - 1 - matchIndex.length,
	            pos
	          ]
	        });
	      }
	
	      function createGroup(behavior, disjunction, from, to) {
	        return addRaw({
	          type: 'group',
	          behavior: behavior,
	          body: disjunction,
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function createQuantifier(min, max, from, to) {
	        if (to == null) {
	          from = pos - 1;
	          to = pos;
	        }
	
	        return addRaw({
	          type: 'quantifier',
	          min: min,
	          max: max,
	          greedy: true,
	          body: null, // set later on
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function createAlternative(terms, from, to) {
	        return addRaw({
	          type: 'alternative',
	          body: terms,
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function createCharacterClass(classRanges, negative, from, to) {
	        return addRaw({
	          type: 'characterClass',
	          body: classRanges,
	          negative: negative,
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function createClassRange(min, max, from, to) {
	        // See 15.10.2.15:
	        if (min.codePoint > max.codePoint) {
	          bail('invalid range in character class', min.raw + '-' + max.raw, from, to);
	        }
	
	        return addRaw({
	          type: 'characterClassRange',
	          min: min,
	          max: max,
	          range: [
	            from,
	            to
	          ]
	        });
	      }
	
	      function flattenBody(body) {
	        if (body.type === 'alternative') {
	          return body.body;
	        } else {
	          return [body];
	        }
	      }
	
	      function isEmpty(obj) {
	        return obj.type === 'empty';
	      }
	
	      function incr(amount) {
	        amount = (amount || 1);
	        var res = str.substring(pos, pos + amount);
	        pos += (amount || 1);
	        return res;
	      }
	
	      function skip(value) {
	        if (!match(value)) {
	          bail('character', value);
	        }
	      }
	
	      function match(value) {
	        if (str.indexOf(value, pos) === pos) {
	          return incr(value.length);
	        }
	      }
	
	      function lookahead() {
	        return str[pos];
	      }
	
	      function current(value) {
	        return str.indexOf(value, pos) === pos;
	      }
	
	      function next(value) {
	        return str[pos + 1] === value;
	      }
	
	      function matchReg(regExp) {
	        var subStr = str.substring(pos);
	        var res = subStr.match(regExp);
	        if (res) {
	          res.range = [];
	          res.range[0] = pos;
	          incr(res[0].length);
	          res.range[1] = pos;
	        }
	        return res;
	      }
	
	      function parseDisjunction() {
	        // Disjunction ::
	        //      Alternative
	        //      Alternative | Disjunction
	        var res = [], from = pos;
	        res.push(parseAlternative());
	
	        while (match('|')) {
	          res.push(parseAlternative());
	        }
	
	        if (res.length === 1) {
	          return res[0];
	        }
	
	        return createDisjunction(res, from, pos);
	      }
	
	      function parseAlternative() {
	        var res = [], from = pos;
	        var term;
	
	        // Alternative ::
	        //      [empty]
	        //      Alternative Term
	        while (term = parseTerm()) {
	          res.push(term);
	        }
	
	        if (res.length === 1) {
	          return res[0];
	        }
	
	        return createAlternative(res, from, pos);
	      }
	
	      function parseTerm() {
	        // Term ::
	        //      Anchor
	        //      Atom
	        //      Atom Quantifier
	
	        if (pos >= str.length || current('|') || current(')')) {
	          return null; /* Means: The term is empty */
	        }
	
	        var anchor = parseAnchor();
	
	        if (anchor) {
	          return anchor;
	        }
	
	        var atom = parseAtom();
	        if (!atom) {
	          bail('Expected atom');
	        }
	        var quantifier = parseQuantifier() || false;
	        if (quantifier) {
	          quantifier.body = flattenBody(atom);
	          // The quantifier contains the atom. Therefore, the beginning of the
	          // quantifier range is given by the beginning of the atom.
	          updateRawStart(quantifier, atom.range[0]);
	          return quantifier;
	        }
	        return atom;
	      }
	
	      function parseGroup(matchA, typeA, matchB, typeB) {
	        var type = null, from = pos;
	
	        if (match(matchA)) {
	          type = typeA;
	        } else if (match(matchB)) {
	          type = typeB;
	        } else {
	          return false;
	        }
	
	        var body = parseDisjunction();
	        if (!body) {
	          bail('Expected disjunction');
	        }
	        skip(')');
	        var group = createGroup(type, flattenBody(body), from, pos);
	
	        if (type == 'normal') {
	          // Keep track of the number of closed groups. This is required for
	          // parseDecimalEscape(). In case the string is parsed a second time the
	          // value already holds the total count and no incrementation is required.
	          if (firstIteration) {
	            closedCaptureCounter++;
	          }
	        }
	        return group;
	      }
	
	      function parseAnchor() {
	        // Anchor ::
	        //      ^
	        //      $
	        //      \ b
	        //      \ B
	        //      ( ? = Disjunction )
	        //      ( ? ! Disjunction )
	        var res, from = pos;
	
	        if (match('^')) {
	          return createAnchor('start', 1 /* rawLength */);
	        } else if (match('$')) {
	          return createAnchor('end', 1 /* rawLength */);
	        } else if (match('\\b')) {
	          return createAnchor('boundary', 2 /* rawLength */);
	        } else if (match('\\B')) {
	          return createAnchor('not-boundary', 2 /* rawLength */);
	        } else {
	          return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');
	        }
	      }
	
	      function parseQuantifier() {
	        // Quantifier ::
	        //      QuantifierPrefix
	        //      QuantifierPrefix ?
	        //
	        // QuantifierPrefix ::
	        //      *
	        //      +
	        //      ?
	        //      { DecimalDigits }
	        //      { DecimalDigits , }
	        //      { DecimalDigits , DecimalDigits }
	
	        var res, from = pos;
	        var quantifier;
	        var min, max;
	
	        if (match('*')) {
	          quantifier = createQuantifier(0);
	        }
	        else if (match('+')) {
	          quantifier = createQuantifier(1);
	        }
	        else if (match('?')) {
	          quantifier = createQuantifier(0, 1);
	        }
	        else if (res = matchReg(/^\{([0-9]+)\}/)) {
	          min = parseInt(res[1], 10);
	          quantifier = createQuantifier(min, min, res.range[0], res.range[1]);
	        }
	        else if (res = matchReg(/^\{([0-9]+),\}/)) {
	          min = parseInt(res[1], 10);
	          quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);
	        }
	        else if (res = matchReg(/^\{([0-9]+),([0-9]+)\}/)) {
	          min = parseInt(res[1], 10);
	          max = parseInt(res[2], 10);
	          if (min > max) {
	            bail('numbers out of order in {} quantifier', '', from, pos);
	          }
	          quantifier = createQuantifier(min, max, res.range[0], res.range[1]);
	        }
	
	        if (quantifier) {
	          if (match('?')) {
	            quantifier.greedy = false;
	            quantifier.range[1] += 1;
	          }
	        }
	
	        return quantifier;
	      }
	
	      function parseAtom() {
	        // Atom ::
	        //      PatternCharacter
	        //      .
	        //      \ AtomEscape
	        //      CharacterClass
	        //      ( Disjunction )
	        //      ( ? : Disjunction )
	
	        var res;
	
	        // jviereck: allow ']', '}' here as well to be compatible with browser's
	        //   implementations: ']'.match(/]/);
	        // if (res = matchReg(/^[^^$\\.*+?()[\]{}|]/)) {
	        if (res = matchReg(/^[^^$\\.*+?(){[|]/)) {
	          //      PatternCharacter
	          return createCharacter(res);
	        }
	        else if (match('.')) {
	          //      .
	          return createDot();
	        }
	        else if (match('\\')) {
	          //      \ AtomEscape
	          res = parseAtomEscape();
	          if (!res) {
	            bail('atomEscape');
	          }
	          return res;
	        }
	        else if (res = parseCharacterClass()) {
	          return res;
	        }
	        else {
	          //      ( Disjunction )
	          //      ( ? : Disjunction )
	          return parseGroup('(?:', 'ignore', '(', 'normal');
	        }
	      }
	
	      function parseUnicodeSurrogatePairEscape(firstEscape) {
	        if (hasUnicodeFlag) {
	          var first, second;
	          if (firstEscape.kind == 'unicodeEscape' &&
	            (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF &&
	            current('\\') && next('u') ) {
	            var prevPos = pos;
	            pos++;
	            var secondEscape = parseClassEscape();
	            if (secondEscape.kind == 'unicodeEscape' &&
	              (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {
	              // Unicode surrogate pair
	              firstEscape.range[1] = secondEscape.range[1];
	              firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	              firstEscape.type = 'value';
	              firstEscape.kind = 'unicodeCodePointEscape';
	              addRaw(firstEscape);
	            }
	            else {
	              pos = prevPos;
	            }
	          }
	        }
	        return firstEscape;
	      }
	
	      function parseClassEscape() {
	        return parseAtomEscape(true);
	      }
	
	      function parseAtomEscape(insideCharacterClass) {
	        // AtomEscape ::
	        //      DecimalEscape
	        //      CharacterEscape
	        //      CharacterClassEscape
	
	        var res, from = pos;
	
	        res = parseDecimalEscape();
	        if (res) {
	          return res;
	        }
	
	        // For ClassEscape
	        if (insideCharacterClass) {
	          if (match('b')) {
	            // 15.10.2.19
	            // The production ClassEscape :: b evaluates by returning the
	            // CharSet containing the one character <BS> (Unicode value 0008).
	            return createEscaped('singleEscape', 0x0008, '\\b');
	          } else if (match('B')) {
	            bail('\\B not possible inside of CharacterClass', '', from);
	          }
	        }
	
	        res = parseCharacterEscape();
	
	        return res;
	      }
	
	
	      function parseDecimalEscape() {
	        // DecimalEscape ::
	        //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]
	        //      CharacterClassEscape :: one of d D s S w W
	
	        var res, match;
	
	        if (res = matchReg(/^(?!0)\d+/)) {
	          match = res[0];
	          var refIdx = parseInt(res[0], 10);
	          if (refIdx <= closedCaptureCounter) {
	            // If the number is smaller than the normal-groups found so
	            // far, then it is a reference...
	            return createReference(res[0]);
	          } else {
	            // ... otherwise it needs to be interpreted as a octal (if the
	            // number is in an octal format). If it is NOT octal format,
	            // then the slash is ignored and the number is matched later
	            // as normal characters.
	
	            // Recall the negative decision to decide if the input must be parsed
	            // a second time with the total normal-groups.
	            backrefDenied.push(refIdx);
	
	            // Reset the position again, as maybe only parts of the previous
	            // matched numbers are actual octal numbers. E.g. in '019' only
	            // the '01' should be matched.
	            incr(-res[0].length);
	            if (res = matchReg(/^[0-7]{1,3}/)) {
	              return createEscaped('octal', parseInt(res[0], 8), res[0], 1);
	            } else {
	              // If we end up here, we have a case like /\91/. Then the
	              // first slash is to be ignored and the 9 & 1 to be treated
	              // like ordinary characters. Create a character for the
	              // first number only here - other number-characters
	              // (if available) will be matched later.
	              res = createCharacter(matchReg(/^[89]/));
	              return updateRawStart(res, res.range[0] - 1);
	            }
	          }
	        }
	        // Only allow octal numbers in the following. All matched numbers start
	        // with a zero (if the do not, the previous if-branch is executed).
	        // If the number is not octal format and starts with zero (e.g. `091`)
	        // then only the zeros `0` is treated here and the `91` are ordinary
	        // characters.
	        // Example:
	        //   /\091/.exec('\091')[0].length === 3
	        else if (res = matchReg(/^[0-7]{1,3}/)) {
	          match = res[0];
	          if (/^0{1,3}$/.test(match)) {
	            // If they are all zeros, then only take the first one.
	            return createEscaped('null', 0x0000, '0', match.length + 1);
	          } else {
	            return createEscaped('octal', parseInt(match, 8), match, 1);
	          }
	        } else if (res = matchReg(/^[dDsSwW]/)) {
	          return createCharacterClassEscape(res[0]);
	        }
	        return false;
	      }
	
	      function parseCharacterEscape() {
	        // CharacterEscape ::
	        //      ControlEscape
	        //      c ControlLetter
	        //      HexEscapeSequence
	        //      UnicodeEscapeSequence
	        //      IdentityEscape
	
	        var res;
	        if (res = matchReg(/^[fnrtv]/)) {
	          // ControlEscape
	          var codePoint = 0;
	          switch (res[0]) {
	            case 't': codePoint = 0x009; break;
	            case 'n': codePoint = 0x00A; break;
	            case 'v': codePoint = 0x00B; break;
	            case 'f': codePoint = 0x00C; break;
	            case 'r': codePoint = 0x00D; break;
	          }
	          return createEscaped('singleEscape', codePoint, '\\' + res[0]);
	        } else if (res = matchReg(/^c([a-zA-Z])/)) {
	          // c ControlLetter
	          return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);
	        } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {
	          // HexEscapeSequence
	          return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);
	        } else if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {
	          // UnicodeEscapeSequence
	          return parseUnicodeSurrogatePairEscape(
	            createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2)
	          );
	        } else if (hasUnicodeFlag && (res = matchReg(/^u\{([0-9a-fA-F]+)\}/))) {
	          // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)
	          return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);
	        } else {
	          // IdentityEscape
	          return parseIdentityEscape();
	        }
	      }
	
	      // Taken from the Esprima parser.
	      function isIdentifierPart(ch) {
	        // Generated by `tools/generate-identifier-regex.js`.
	        var NonAsciiIdentifierPart = new RegExp('[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]');
	
	        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)
	          (ch >= 65 && ch <= 90) ||         // A..Z
	          (ch >= 97 && ch <= 122) ||        // a..z
	          (ch >= 48 && ch <= 57) ||         // 0..9
	          (ch === 92) ||                    // \ (backslash)
	          ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));
	      }
	
	      function parseIdentityEscape() {
	        // IdentityEscape ::
	        //      SourceCharacter but not IdentifierPart
	        //      <ZWJ>
	        //      <ZWNJ>
	
	        var ZWJ = '\u200C';
	        var ZWNJ = '\u200D';
	
	        var tmp;
	
	        if (!isIdentifierPart(lookahead())) {
	          tmp = incr();
	          return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);
	        }
	
	        if (match(ZWJ)) {
	          // <ZWJ>
	          return createEscaped('identifier', 0x200C, ZWJ);
	        } else if (match(ZWNJ)) {
	          // <ZWNJ>
	          return createEscaped('identifier', 0x200D, ZWNJ);
	        }
	
	        return null;
	      }
	
	      function parseCharacterClass() {
	        // CharacterClass ::
	        //      [ [lookahead ∉ {^}] ClassRanges ]
	        //      [ ^ ClassRanges ]
	
	        var res, from = pos;
	        if (res = matchReg(/^\[\^/)) {
	          res = parseClassRanges();
	          skip(']');
	          return createCharacterClass(res, true, from, pos);
	        } else if (match('[')) {
	          res = parseClassRanges();
	          skip(']');
	          return createCharacterClass(res, false, from, pos);
	        }
	
	        return null;
	      }
	
	      function parseClassRanges() {
	        // ClassRanges ::
	        //      [empty]
	        //      NonemptyClassRanges
	
	        var res;
	        if (current(']')) {
	          // Empty array means nothing insinde of the ClassRange.
	          return [];
	        } else {
	          res = parseNonemptyClassRanges();
	          if (!res) {
	            bail('nonEmptyClassRanges');
	          }
	          return res;
	        }
	      }
	
	      function parseHelperClassRanges(atom) {
	        var from, to, res;
	        if (current('-') && !next(']')) {
	          // ClassAtom - ClassAtom ClassRanges
	          skip('-');
	
	          res = parseClassAtom();
	          if (!res) {
	            bail('classAtom');
	          }
	          to = pos;
	          var classRanges = parseClassRanges();
	          if (!classRanges) {
	            bail('classRanges');
	          }
	          from = atom.range[0];
	          if (classRanges.type === 'empty') {
	            return [createClassRange(atom, res, from, to)];
	          }
	          return [createClassRange(atom, res, from, to)].concat(classRanges);
	        }
	
	        res = parseNonemptyClassRangesNoDash();
	        if (!res) {
	          bail('nonEmptyClassRangesNoDash');
	        }
	
	        return [atom].concat(res);
	      }
	
	      function parseNonemptyClassRanges() {
	        // NonemptyClassRanges ::
	        //      ClassAtom
	        //      ClassAtom NonemptyClassRangesNoDash
	        //      ClassAtom - ClassAtom ClassRanges
	
	        var atom = parseClassAtom();
	        if (!atom) {
	          bail('classAtom');
	        }
	
	        if (current(']')) {
	          // ClassAtom
	          return [atom];
	        }
	
	        // ClassAtom NonemptyClassRangesNoDash
	        // ClassAtom - ClassAtom ClassRanges
	        return parseHelperClassRanges(atom);
	      }
	
	      function parseNonemptyClassRangesNoDash() {
	        // NonemptyClassRangesNoDash ::
	        //      ClassAtom
	        //      ClassAtomNoDash NonemptyClassRangesNoDash
	        //      ClassAtomNoDash - ClassAtom ClassRanges
	
	        var res = parseClassAtom();
	        if (!res) {
	          bail('classAtom');
	        }
	        if (current(']')) {
	          //      ClassAtom
	          return res;
	        }
	
	        // ClassAtomNoDash NonemptyClassRangesNoDash
	        // ClassAtomNoDash - ClassAtom ClassRanges
	        return parseHelperClassRanges(res);
	      }
	
	      function parseClassAtom() {
	        // ClassAtom ::
	        //      -
	        //      ClassAtomNoDash
	        if (match('-')) {
	          return createCharacter('-');
	        } else {
	          return parseClassAtomNoDash();
	        }
	      }
	
	      function parseClassAtomNoDash() {
	        // ClassAtomNoDash ::
	        //      SourceCharacter but not one of \ or ] or -
	        //      \ ClassEscape
	
	        var res;
	        if (res = matchReg(/^[^\\\]-]/)) {
	          return createCharacter(res[0]);
	        } else if (match('\\')) {
	          res = parseClassEscape();
	          if (!res) {
	            bail('classEscape');
	          }
	
	          return parseUnicodeSurrogatePairEscape(res);
	        }
	      }
	
	      function bail(message, details, from, to) {
	        from = from == null ? pos : from;
	        to = to == null ? from : to;
	
	        var contextStart = Math.max(0, from - 10);
	        var contextEnd = Math.min(to + 10, str.length);
	
	        // Output a bit of context and a line pointing to where our error is.
	        //
	        // We are assuming that there are no actual newlines in the content as this is a regular expression.
	        var context = '    ' + str.substring(contextStart, contextEnd);
	        var pointer = '    ' + new Array(from - contextStart + 1).join(' ') + '^';
	
	        throw SyntaxError(message + ' at position ' + from + (details ? ': ' + details : '') + '\n' + context + '\n' + pointer);
	      }
	
	      var backrefDenied = [];
	      var closedCaptureCounter = 0;
	      var firstIteration = true;
	      var hasUnicodeFlag = (flags || "").indexOf("u") !== -1;
	      var pos = 0;
	
	      // Convert the input to a string and treat the empty string special.
	      str = String(str);
	      if (str === '') {
	        str = '(?:)';
	      }
	
	      var result = parseDisjunction();
	
	      if (result.range[1] !== str.length) {
	        bail('Could not parse entire input - got stuck', '', result.range[1]);
	      }
	
	      // The spec requires to interpret the `\2` in `/\2()()/` as backreference.
	      // As the parser collects the number of capture groups as the string is
	      // parsed it is impossible to make these decisions at the point when the
	      // `\2` is handled. In case the local decision turns out to be wrong after
	      // the parsing has finished, the input string is parsed a second time with
	      // the total number of capture groups set.
	      //
	      // SEE: https://github.com/jviereck/regjsparser/issues/70
	      for (var i = 0; i < backrefDenied.length; i++) {
	        if (backrefDenied[i] <= closedCaptureCounter) {
	          // Parse the input a second time.
	          pos = 0;
	          firstIteration = false;
	          return parseDisjunction();
	        }
	      }
	
	      return result;
	    }
	
	    var regjsparser = {
	      parse: parse
	    };
	
	    if (typeof module !== 'undefined' && module.exports) {
	      module.exports = regjsparser;
	    } else {
	      window.regjsparser = regjsparser;
	    }
	
	  }());
	  });
	
	  var require$$3 = (parser && typeof parser === 'object' && 'default' in parser ? parser['default'] : parser);
	
	  var regjsgen = __commonjs(function (module, exports, global) {
	  /*!
	   * RegJSGen
	   * Copyright 2014 Benjamin Tan <https://d10.github.io/>
	   * Available under MIT license <http://d10.mit-license.org/>
	   */
	  ;(function() {
	    'use strict';
	
	    /** Used to determine if values are of the language type `Object` */
	    var objectTypes = {
	      'function': true,
	      'object': true
	    };
	
	    /** Used as a reference to the global object */
	    var root = (objectTypes[typeof window] && window) || this;
	
	    /** Backup possible global object */
	    var oldRoot = root;
	
	    /** Detect free variable `exports` */
	    var freeExports = objectTypes[typeof exports] && exports;
	
	    /** Detect free variable `module` */
	    var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
	
	    /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
	    var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
	    if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {
	      root = freeGlobal;
	    }
	
	    /*--------------------------------------------------------------------------*/
	
	    /*! Based on https://mths.be/fromcodepoint v0.2.0 by @mathias */
	
	    var stringFromCharCode = String.fromCharCode;
	    var floor = Math.floor;
	    function fromCodePoint() {
	      var MAX_SIZE = 0x4000;
	      var codeUnits = [];
	      var highSurrogate;
	      var lowSurrogate;
	      var index = -1;
	      var length = arguments.length;
	      if (!length) {
	        return '';
	      }
	      var result = '';
	      while (++index < length) {
	        var codePoint = Number(arguments[index]);
	        if (
	          !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
	          codePoint < 0 || // not a valid Unicode code point
	          codePoint > 0x10FFFF || // not a valid Unicode code point
	          floor(codePoint) != codePoint // not an integer
	        ) {
	          throw RangeError('Invalid code point: ' + codePoint);
	        }
	        if (codePoint <= 0xFFFF) {
	          // BMP code point
	          codeUnits.push(codePoint);
	        } else {
	          // Astral code point; split in surrogate halves
	          // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	          codePoint -= 0x10000;
	          highSurrogate = (codePoint >> 10) + 0xD800;
	          lowSurrogate = (codePoint % 0x400) + 0xDC00;
	          codeUnits.push(highSurrogate, lowSurrogate);
	        }
	        if (index + 1 == length || codeUnits.length > MAX_SIZE) {
	          result += stringFromCharCode.apply(null, codeUnits);
	          codeUnits.length = 0;
	        }
	      }
	      return result;
	    }
	
	    function assertType(type, expected) {
	      if (expected.indexOf('|') == -1) {
	        if (type == expected) {
	          return;
	        }
	
	        throw Error('Invalid node type: ' + type);
	      }
	
	      expected = assertType.hasOwnProperty(expected)
	        ? assertType[expected]
	        : (assertType[expected] = RegExp('^(?:' + expected + ')$'));
	
	      if (expected.test(type)) {
	        return;
	      }
	
	      throw Error('Invalid node type: ' + type);
	    }
	
	    /*--------------------------------------------------------------------------*/
	
	    function generate(node) {
	      var type = node.type;
	
	      if (generate.hasOwnProperty(type) && typeof generate[type] == 'function') {
	        return generate[type](node);
	      }
	
	      throw Error('Invalid node type: ' + type);
	    }
	
	    /*--------------------------------------------------------------------------*/
	
	    function generateAlternative(node) {
	      assertType(node.type, 'alternative');
	
	      var terms = node.body,
	          length = terms ? terms.length : 0;
	
	      if (length == 1) {
	        return generateTerm(terms[0]);
	      } else {
	        var i = -1,
	            result = '';
	
	        while (++i < length) {
	          result += generateTerm(terms[i]);
	        }
	
	        return result;
	      }
	    }
	
	    function generateAnchor(node) {
	      assertType(node.type, 'anchor');
	
	      switch (node.kind) {
	        case 'start':
	          return '^';
	        case 'end':
	          return '$';
	        case 'boundary':
	          return '\\b';
	        case 'not-boundary':
	          return '\\B';
	        default:
	          throw Error('Invalid assertion');
	      }
	    }
	
	    function generateAtom(node) {
	      assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');
	
	      return generate(node);
	    }
	
	    function generateCharacterClass(node) {
	      assertType(node.type, 'characterClass');
	
	      var classRanges = node.body,
	          length = classRanges ? classRanges.length : 0;
	
	      var i = -1,
	          result = '[';
	
	      if (node.negative) {
	        result += '^';
	      }
	
	      while (++i < length) {
	        result += generateClassAtom(classRanges[i]);
	      }
	
	      result += ']';
	
	      return result;
	    }
	
	    function generateCharacterClassEscape(node) {
	      assertType(node.type, 'characterClassEscape');
	
	      return '\\' + node.value;
	    }
	
	    function generateCharacterClassRange(node) {
	      assertType(node.type, 'characterClassRange');
	
	      var min = node.min,
	          max = node.max;
	
	      if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {
	        throw Error('Invalid character class range');
	      }
	
	      return generateClassAtom(min) + '-' + generateClassAtom(max);
	    }
	
	    function generateClassAtom(node) {
	      assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');
	
	      return generate(node);
	    }
	
	    function generateDisjunction(node) {
	      assertType(node.type, 'disjunction');
	
	      var body = node.body,
	          length = body ? body.length : 0;
	
	      if (length == 0) {
	        throw Error('No body');
	      } else if (length == 1) {
	        return generate(body[0]);
	      } else {
	        var i = -1,
	            result = '';
	
	        while (++i < length) {
	          if (i != 0) {
	            result += '|';
	          }
	          result += generate(body[i]);
	        }
	
	        return result;
	      }
	    }
	
	    function generateDot(node) {
	      assertType(node.type, 'dot');
	
	      return '.';
	    }
	
	    function generateGroup(node) {
	      assertType(node.type, 'group');
	
	      var result = '(';
	
	      switch (node.behavior) {
	        case 'normal':
	          break;
	        case 'ignore':
	          result += '?:';
	          break;
	        case 'lookahead':
	          result += '?=';
	          break;
	        case 'negativeLookahead':
	          result += '?!';
	          break;
	        default:
	          throw Error('Invalid behaviour: ' + node.behaviour);
	      }
	
	      var body = node.body,
	          length = body ? body.length : 0;
	
	      if (length == 1) {
	        result += generate(body[0]);
	      } else {
	        var i = -1;
	
	        while (++i < length) {
	          result += generate(body[i]);
	        }
	      }
	
	      result += ')';
	
	      return result;
	    }
	
	    function generateQuantifier(node) {
	      assertType(node.type, 'quantifier');
	
	      var quantifier = '',
	          min = node.min,
	          max = node.max;
	
	      switch (max) {
	        case undefined:
	        case null:
	          switch (min) {
	            case 0:
	              quantifier = '*'
	              break;
	            case 1:
	              quantifier = '+';
	              break;
	            default:
	              quantifier = '{' + min + ',}';
	              break;
	          }
	          break;
	        default:
	          if (min == max) {
	            quantifier = '{' + min + '}';
	          }
	          else if (min == 0 && max == 1) {
	            quantifier = '?';
	          } else {
	            quantifier = '{' + min + ',' + max + '}';
	          }
	          break;
	      }
	
	      if (!node.greedy) {
	        quantifier += '?';
	      }
	
	      return generateAtom(node.body[0]) + quantifier;
	    }
	
	    function generateReference(node) {
	      assertType(node.type, 'reference');
	
	      return '\\' + node.matchIndex;
	    }
	
	    function generateTerm(node) {
	      assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value');
	
	      return generate(node);
	    }
	
	    function generateValue(node) {
	      assertType(node.type, 'value');
	
	      var kind = node.kind,
	          codePoint = node.codePoint;
	
	      switch (kind) {
	        case 'controlLetter':
	          return '\\c' + fromCodePoint(codePoint + 64);
	        case 'hexadecimalEscape':
	          return '\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);
	        case 'identifier':
	          return '\\' + fromCodePoint(codePoint);
	        case 'null':
	          return '\\' + codePoint;
	        case 'octal':
	          return '\\' + codePoint.toString(8);
	        case 'singleEscape':
	          switch (codePoint) {
	            case 0x0008:
	              return '\\b';
	            case 0x009:
	              return '\\t';
	            case 0x00A:
	              return '\\n';
	            case 0x00B:
	              return '\\v';
	            case 0x00C:
	              return '\\f';
	            case 0x00D:
	              return '\\r';
	            default:
	              throw Error('Invalid codepoint: ' + codePoint);
	          }
	        case 'symbol':
	          return fromCodePoint(codePoint);
	        case 'unicodeEscape':
	          return '\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);
	        case 'unicodeCodePointEscape':
	          return '\\u{' + codePoint.toString(16).toUpperCase() + '}';
	        default:
	          throw Error('Unsupported node kind: ' + kind);
	      }
	    }
	
	    /*--------------------------------------------------------------------------*/
	
	    generate.alternative = generateAlternative;
	    generate.anchor = generateAnchor;
	    generate.characterClass = generateCharacterClass;
	    generate.characterClassEscape = generateCharacterClassEscape;
	    generate.characterClassRange = generateCharacterClassRange;
	    generate.disjunction = generateDisjunction;
	    generate.dot = generateDot;
	    generate.group = generateGroup;
	    generate.quantifier = generateQuantifier;
	    generate.reference = generateReference;
	    generate.value = generateValue;
	
	    /*--------------------------------------------------------------------------*/
	
	    // export regjsgen
	    // some AMD build optimizers, like r.js, check for condition patterns like the following:
	    if (true) {
	      // define as an anonymous module so, through path mapping, it can be aliased
	      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	        return {
	          'generate': generate
	        };
	      }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	    // check for `exports` after `define` in case a build optimizer adds an `exports` object
	    else if (freeExports && freeModule) {
	      // in Narwhal, Node.js, Rhino -require, or RingoJS
	      freeExports.generate = generate;
	    }
	    // in a browser or Rhino
	    else {
	      root.regjsgen = {
	        'generate': generate
	      };
	    }
	  }.call(__commonjs_global));
	  });
	
	  var require$$4 = (regjsgen && typeof regjsgen === 'object' && 'default' in regjsgen ? regjsgen['default'] : regjsgen);
	
	  var rewritePattern = __commonjs(function (module) {
	  var generate = require$$4.generate;
	  var parse = require$$3.parse;
	  var regenerate = require$$0$2;
	  var iuMappings = require$$1;
	  var ESCAPE_SETS = require$$0$1;
	
	  function getCharacterClassEscapeSet(character) {
	  	if (unicode) {
	  		if (ignoreCase) {
	  			return ESCAPE_SETS.UNICODE_IGNORE_CASE[character];
	  		}
	  		return ESCAPE_SETS.UNICODE[character];
	  	}
	  	return ESCAPE_SETS.REGULAR[character];
	  }
	
	  var object = {};
	  var hasOwnProperty = object.hasOwnProperty;
	  function has(object, property) {
	  	return hasOwnProperty.call(object, property);
	  }
	
	  // Prepare a Regenerate set containing all code points, used for negative
	  // character classes (if any).
	  var UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);
	  // Without the `u` flag, the range stops at 0xFFFF.
	  // https://mths.be/es6#sec-pattern-semantics
	  var BMP_SET = regenerate().addRange(0x0, 0xFFFF);
	
	  // Prepare a Regenerate set containing all code points that are supposed to be
	  // matched by `/./u`. https://mths.be/es6#sec-atom
	  var DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points
	  	.remove(
	  		// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):
	  		0x000A, // Line Feed <LF>
	  		0x000D, // Carriage Return <CR>
	  		0x2028, // Line Separator <LS>
	  		0x2029  // Paragraph Separator <PS>
	  	);
	  // Prepare a Regenerate set containing all code points that are supposed to be
	  // matched by `/./` (only BMP code points).
	  var DOT_SET = DOT_SET_UNICODE.clone()
	  	.intersection(BMP_SET);
	
	  // Add a range of code points + any case-folded code points in that range to a
	  // set.
	  regenerate.prototype.iuAddRange = function(min, max) {
	  	var $this = this;
	  	do {
	  		var folded = caseFold(min);
	  		if (folded) {
	  			$this.add(folded);
	  		}
	  	} while (++min <= max);
	  	return $this;
	  };
	
	  function assign(target, source) {
	  	for (var key in source) {
	  		// Note: `hasOwnProperty` is not needed here.
	  		target[key] = source[key];
	  	}
	  }
	
	  function update(item, pattern) {
	  	// TODO: Test if memoizing `pattern` here is worth the effort.
	  	if (!pattern) {
	  		return;
	  	}
	  	var tree = parse(pattern, '');
	  	switch (tree.type) {
	  		case 'characterClass':
	  		case 'group':
	  		case 'value':
	  			// No wrapping needed.
	  			break;
	  		default:
	  			// Wrap the pattern in a non-capturing group.
	  			tree = wrap(tree, pattern);
	  	}
	  	assign(item, tree);
	  }
	
	  function wrap(tree, pattern) {
	  	// Wrap the pattern in a non-capturing group.
	  	return {
	  		'type': 'group',
	  		'behavior': 'ignore',
	  		'body': [tree],
	  		'raw': '(?:' + pattern + ')'
	  	};
	  }
	
	  function caseFold(codePoint) {
	  	return has(iuMappings, codePoint) ? iuMappings[codePoint] : false;
	  }
	
	  var ignoreCase = false;
	  var unicode = false;
	  function processCharacterClass(characterClassItem) {
	  	var set = regenerate();
	  	var body = characterClassItem.body.forEach(function(item) {
	  		switch (item.type) {
	  			case 'value':
	  				set.add(item.codePoint);
	  				if (ignoreCase && unicode) {
	  					var folded = caseFold(item.codePoint);
	  					if (folded) {
	  						set.add(folded);
	  					}
	  				}
	  				break;
	  			case 'characterClassRange':
	  				var min = item.min.codePoint;
	  				var max = item.max.codePoint;
	  				set.addRange(min, max);
	  				if (ignoreCase && unicode) {
	  					set.iuAddRange(min, max);
	  				}
	  				break;
	  			case 'characterClassEscape':
	  				set.add(getCharacterClassEscapeSet(item.value));
	  				break;
	  			// The `default` clause is only here as a safeguard; it should never be
	  			// reached. Code coverage tools should ignore it.
	  			/* istanbul ignore next */
	  			default:
	  				throw Error('Unknown term type: ' + item.type);
	  		}
	  	});
	  	if (characterClassItem.negative) {
	  		set = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);
	  	}
	  	update(characterClassItem, set.toString());
	  	return characterClassItem;
	  }
	
	  function processTerm(item) {
	  	switch (item.type) {
	  		case 'dot':
	  			update(
	  				item,
	  				(unicode ? DOT_SET_UNICODE : DOT_SET).toString()
	  			);
	  			break;
	  		case 'characterClass':
	  			item = processCharacterClass(item);
	  			break;
	  		case 'characterClassEscape':
	  			update(
	  				item,
	  				getCharacterClassEscapeSet(item.value).toString()
	  			);
	  			break;
	  		case 'alternative':
	  		case 'disjunction':
	  		case 'group':
	  		case 'quantifier':
	  			item.body = item.body.map(processTerm);
	  			break;
	  		case 'value':
	  			var codePoint = item.codePoint;
	  			var set = regenerate(codePoint);
	  			if (ignoreCase && unicode) {
	  				var folded = caseFold(codePoint);
	  				if (folded) {
	  					set.add(folded);
	  				}
	  			}
	  			update(item, set.toString());
	  			break;
	  		case 'anchor':
	  		case 'empty':
	  		case 'group':
	  		case 'reference':
	  			// Nothing to do here.
	  			break;
	  		// The `default` clause is only here as a safeguard; it should never be
	  		// reached. Code coverage tools should ignore it.
	  		/* istanbul ignore next */
	  		default:
	  			throw Error('Unknown term type: ' + item.type);
	  	}
	  	return item;
	  };
	
	  module.exports = function(pattern, flags) {
	  	var tree = parse(pattern, flags);
	  	ignoreCase = flags ? flags.indexOf('i') > -1 : false;
	  	unicode = flags ? flags.indexOf('u') > -1 : false;
	  	assign(tree, processTerm(tree));
	  	return generate(tree);
	  };
	  });
	
	  var rewritePattern$1 = (rewritePattern && typeof rewritePattern === 'object' && 'default' in rewritePattern ? rewritePattern['default'] : rewritePattern);
	
	  var Literal = (function (Node) {
	  	function Literal () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) Literal.__proto__ = Node;
	  	Literal.prototype = Object.create( Node && Node.prototype );
	  	Literal.prototype.constructor = Literal;
	
	  	Literal.prototype.initialise = function initialise () {
	  		if ( typeof this.value === 'string' ) {
	  			this.program.indentExclusionElements.push( this );
	  		}
	  	};
	
	  	Literal.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.numericLiteral ) {
	  			var leading = this.raw.slice( 0, 2 );
	  			if ( leading === '0b' || leading === '0o' ) {
	  				code.overwrite( this.start, this.end, String( this.value ), true );
	  			}
	  		}
	
	  		if ( this.regex ) {
	  			var ref = this.regex;
	  			var pattern = ref.pattern;
	  			var flags = ref.flags;
	
	  			if ( transforms.stickyRegExp && /y/.test( flags ) ) throw new CompileError( this, 'Regular expression sticky flag is not supported' );
	  			if ( transforms.unicodeRegExp && /u/.test( flags ) ) {
	  				code.overwrite( this.start, this.end, ("/" + (rewritePattern$1( pattern, flags )) + "/" + (flags.replace( 'u', '' ))) );
	  			}
	  		}
	  	};
	
	  	return Literal;
	  }(Node));
	
	  var MemberExpression = (function (Node) {
	  	function MemberExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) MemberExpression.__proto__ = Node;
	  	MemberExpression.prototype = Object.create( Node && Node.prototype );
	  	MemberExpression.prototype.constructor = MemberExpression;
	
	  	MemberExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.reservedProperties && reserved[ this.property.name ] ) {
	  			code.overwrite( this.object.end, this.property.start, "['" );
	  			code.insertLeft( this.property.end, "']" );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return MemberExpression;
	  }(Node));
	
	  var NewExpression = (function (Node) {
	  	function NewExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) NewExpression.__proto__ = Node;
	  	NewExpression.prototype = Object.create( Node && Node.prototype );
	  	NewExpression.prototype.constructor = NewExpression;
	
	  	NewExpression.prototype.initialise = function initialise ( transforms ) {
	  		var this$1 = this;
	
	  		if ( transforms.spreadRest && this.arguments.length ) {
	  			var lexicalBoundary = this.findLexicalBoundary();
	
	  			var i = this.arguments.length;
	  			while ( i-- ) {
	  				var arg = this$1.arguments[i];
	  				if ( arg.type === 'SpreadElement' && isArguments( arg.argument ) ) {
	  					this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();
	  					break;
	  				}
	  			}
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	NewExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.spreadRest && this.arguments.length ) {
	  			var firstArgument = this.arguments[0];
	  			var isNew = true;
	  			var hasSpreadElements = spread( code, this.arguments, firstArgument.start, this.argumentsArrayAlias, isNew );
	
	  			if ( hasSpreadElements ) {
	  				code.insertRight( this.start + 'new'.length, ' (Function.prototype.bind.apply(' );
	  				code.overwrite( this.callee.end, firstArgument.start, ', [ null ].concat( ' );
	  				code.insertLeft( this.end, ' ))' );
	  			}
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return NewExpression;
	  }(Node));
	
	  var ObjectExpression = (function (Node) {
	  	function ObjectExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ObjectExpression.__proto__ = Node;
	  	ObjectExpression.prototype = Object.create( Node && Node.prototype );
	  	ObjectExpression.prototype.constructor = ObjectExpression;
	
	  	ObjectExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		Node.prototype.transpile.call( this, code, transforms );
	
	  		var firstPropertyStart = this.start + 1;
	  		var regularPropertyCount = 0;
	  		var spreadPropertyCount = 0;
	  		var computedPropertyCount = 0;
	
	  		for ( var i$2 = 0, list = this.properties; i$2 < list.length; i$2 += 1 ) {
	  			var prop = list[i$2];
	
	  			if ( prop.type === 'SpreadProperty' ) {
	  				spreadPropertyCount += 1;
	  			} else if ( prop.computed ) {
	  				computedPropertyCount += 1;
	  			} else if ( prop.type === 'Property' ) {
	  				regularPropertyCount += 1;
	  			}
	  		}
	
	  		if ( spreadPropertyCount ) {
	  			if ( !this.program.options.objectAssign ) {
	  				throw new CompileError( this, 'Object spread operator requires specified objectAssign option with \'Object.assign\' or polyfill helper.' );
	  			}
	  			// enclose run of non-spread properties in curlies
	  			var i = this.properties.length;
	  			if ( regularPropertyCount ) {
	  				while ( i-- ) {
	  					var prop$1 = this$1.properties[i];
	
	  					if ( prop$1.type === 'Property' && !prop$1.computed ) {
	  						var lastProp = this$1.properties[ i - 1 ];
	  						var nextProp = this$1.properties[ i + 1 ];
	
	  						if ( !lastProp || lastProp.type !== 'Property' || lastProp.computed ) {
	  							code.insertRight( prop$1.start, '{' );
	  						}
	
	  						if ( !nextProp || nextProp.type !== 'Property' || nextProp.computed ) {
	  							code.insertLeft( prop$1.end, '}' );
	  						}
	  					}
	  				}
	  			}
	
	  			// wrap the whole thing in Object.assign
	  			firstPropertyStart = this.properties[0].start;
	  			code.overwrite( this.start, firstPropertyStart, ((this.program.options.objectAssign) + "({}, "));
	  			code.overwrite( this.properties[ this.properties.length - 1 ].end, this.end, ')' );
	  		}
	
	  		if ( computedPropertyCount && transforms.computedProperty ) {
	  			var i0 = this.getIndentation();
	
	  			var isSimpleAssignment;
	  			var name;
	
	  			if ( this.parent.type === 'VariableDeclarator' && this.parent.parent.declarations.length === 1 ) {
	  				isSimpleAssignment = true;
	  				name = this.parent.id.alias || this.parent.id.name; // TODO is this right?
	  			} else if ( this.parent.type === 'AssignmentExpression' && this.parent.parent.type === 'ExpressionStatement' && this.parent.left.type === 'Identifier' ) {
	  				isSimpleAssignment = true;
	  				name = this.parent.left.alias || this.parent.left.name; // TODO is this right?
	  			} else if ( this.parent.type === 'AssignmentPattern' && this.parent.left.type === 'Identifier' ) {
	  				isSimpleAssignment = true;
	  				name = this.parent.left.alias || this.parent.left.name; // TODO is this right?
	  			}
	
	  			// handle block scoping
	  			var declaration = this.findScope( false ).findDeclaration( name );
	  			if ( declaration ) name = declaration.name;
	
	  			var start = firstPropertyStart;
	  			var end = this.end;
	
	  			if ( isSimpleAssignment ) {
	  				// ???
	  			} else {
	  				name = this.findScope( true ).createIdentifier( 'obj' );
	
	  				var statement = this.findNearest( /(?:Statement|Declaration)$/ );
	  				code.insertLeft( statement.end, ("\n" + i0 + "var " + name + ";") );
	
	  				code.insertRight( this.start, ("( " + name + " = ") );
	  			}
	
	  			var len = this.properties.length;
	  			var lastComputedProp;
	  			var sawNonComputedProperty = false;
	
	  			for ( var i$1 = 0; i$1 < len; i$1 += 1 ) {
	  				var prop$2 = this$1.properties[i$1];
	
	  				if ( prop$2.computed ) {
	  					lastComputedProp = prop$2;
	  					var moveStart = i$1 > 0 ? this$1.properties[ i$1 - 1 ].end : start;
	
	  					var propId = isSimpleAssignment ? (";\n" + i0 + name) : (", " + name);
	
	  					if (moveStart < prop$2.start) {
	  						code.overwrite( moveStart, prop$2.start, propId );
	  					} else {
	  						code.insertRight( prop$2.start, propId );
	  					}
	
	  					var c = prop$2.key.end;
	  					while ( code.original[c] !== ']' ) c += 1;
	  					c += 1;
	
	  					if ( prop$2.value.start > c ) code.remove( c, prop$2.value.start );
	  					code.insertLeft( c, ' = ' );
	  					code.move( moveStart, prop$2.end, end );
	
	  					if ( i$1 < len - 1 && ! sawNonComputedProperty ) {
	  						// remove trailing comma
	  						c = prop$2.end;
	  						while ( code.original[c] !== ',' ) c += 1;
	
	  						code.remove( prop$2.end, c + 1 );
	  					}
	
	  					if ( prop$2.method && transforms.conciseMethodProperty ) {
	  						code.insertRight( prop$2.value.start, 'function ' );
	  					}
	  				} else {
	  					sawNonComputedProperty = true;
	  				}
	  			}
	
	  			// special case
	  			if ( computedPropertyCount === len ) {
	  				code.remove( this.properties[ len - 1 ].end, this.end - 1 );
	  			}
	
	  			if ( !isSimpleAssignment ) {
	  				code.insertLeft( lastComputedProp.end, (", " + name + " )") );
	  			}
	  		}
	  	};
	
	  	return ObjectExpression;
	  }(Node));
	
	  var Property = (function (Node) {
	  	function Property () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) Property.__proto__ = Node;
	  	Property.prototype = Object.create( Node && Node.prototype );
	  	Property.prototype.constructor = Property;
	
	  	Property.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.conciseMethodProperty && !this.computed && this.parent.type !== 'ObjectPattern' ) {
	  			if ( this.shorthand ) {
	  				code.insertRight( this.start, ((this.key.name) + ": ") );
	  			} else if ( this.method ) {
	  				var name = '';
	  				if ( this.program.options.namedFunctionExpressions !== false ) {
	  					if ( this.key.type === 'Literal' && typeof this.key.value === 'number' ) {
	  						name = "";
	  					} else if ( this.key.type === 'Identifier' ) {
	  						if ( reserved[ this.key.name ] ||
	  							 ! /^[a-z_$][a-z0-9_$]*$/i.test( this.key.name ) ||
	  						     this.value.body.scope.references[this.key.name] ) {
	  							name = this.findScope( true ).createIdentifier( this.key.name );
	  						} else {
	  							name = this.key.name;
	  						}
	  					} else {
	  						name = this.findScope( true ).createIdentifier( this.key.value );
	  					}
	  					name = ' ' + name;
	  				}
	
	  				if ( this.value.generator ) code.remove( this.start, this.key.start );
	  				code.insertLeft( this.key.end, (": function" + (this.value.generator ? '*' : '') + name) );
	  			}
	  		}
	
	  		if ( transforms.reservedProperties && reserved[ this.key.name ] ) {
	  			code.insertRight( this.key.start, "'" );
	  			code.insertLeft( this.key.end, "'" );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return Property;
	  }(Node));
	
	  var ReturnStatement = (function (Node) {
	  	function ReturnStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ReturnStatement.__proto__ = Node;
	  	ReturnStatement.prototype = Object.create( Node && Node.prototype );
	  	ReturnStatement.prototype.constructor = ReturnStatement;
	
	  	ReturnStatement.prototype.initialise = function initialise ( transforms ) {
	  		this.loop = this.findNearest( loopStatement );
	  		this.nearestFunction = this.findNearest( /Function/ );
	
	  		if ( this.loop && ( !this.nearestFunction || this.loop.depth > this.nearestFunction.depth ) ) {
	  			this.loop.canReturn = true;
	  			this.shouldWrap = true;
	  		}
	
	  		if ( this.argument ) this.argument.initialise( transforms );
	  	};
	
	  	ReturnStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		var shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;
	
	  		if ( this.argument ) {
	  			if ( shouldWrap ) code.insertRight( this.argument.start, "{ v: " );
	  			this.argument.transpile( code, transforms );
	  			if ( shouldWrap ) code.insertLeft( this.argument.end, " }" );
	  		} else if ( shouldWrap ) {
	  			code.insertLeft( this.start + 6, ' {}' );
	  		}
	  	};
	
	  	return ReturnStatement;
	  }(Node));
	
	  var SpreadProperty = (function (Node) {
	  	function SpreadProperty () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) SpreadProperty.__proto__ = Node;
	  	SpreadProperty.prototype = Object.create( Node && Node.prototype );
	  	SpreadProperty.prototype.constructor = SpreadProperty;
	
	  	SpreadProperty.prototype.transpile = function transpile ( code, transforms ) {
	  		code.remove( this.start, this.argument.start );
	  		code.remove( this.argument.end, this.end );
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return SpreadProperty;
	  }(Node));
	
	  var Super = (function (Node) {
	  	function Super () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) Super.__proto__ = Node;
	  	Super.prototype = Object.create( Node && Node.prototype );
	  	Super.prototype.constructor = Super;
	
	  	Super.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.classes ) {
	  			this.method = this.findNearest( 'MethodDefinition' );
	  			if ( !this.method ) throw new CompileError( this, 'use of super outside class method' );
	
	  			var parentClass = this.findNearest( 'ClassBody' ).parent;
	  			this.superClassName = parentClass.superClass && (parentClass.superClass.name || 'superclass');
	
	  			if ( !this.superClassName ) throw new CompileError( this, 'super used in base class' );
	
	  			this.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;
	
	  			if ( this.method.kind !== 'constructor' && this.isCalled ) {
	  				throw new CompileError( this, 'super() not allowed outside class constructor' );
	  			}
	
	  			this.isMember = this.parent.type === 'MemberExpression';
	
	  			if ( !this.isCalled && !this.isMember ) {
	  				throw new CompileError( this, 'Unexpected use of `super` (expected `super(...)` or `super.*`)' );
	  			}
	  		}
	
	  		if ( transforms.arrow ) {
	  			var lexicalBoundary = this.findLexicalBoundary();
	  			var arrowFunction = this.findNearest( 'ArrowFunctionExpression' );
	  			var loop = this.findNearest( loopStatement );
	
	  			if ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {
	  				this.thisAlias = lexicalBoundary.getThisAlias();
	  			}
	
	  			if ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {
	  				this.thisAlias = lexicalBoundary.getThisAlias();
	  			}
	  		}
	  	};
	
	  	Super.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.classes ) {
	  			var expression = ( this.isCalled || this.method.static ) ?
	  				this.superClassName :
	  				((this.superClassName) + ".prototype");
	
	  			code.overwrite( this.start, this.end, expression, true );
	
	  			var callExpression = this.isCalled ? this.parent : this.parent.parent;
	
	  			if ( callExpression && callExpression.type === 'CallExpression' ) {
	  				if ( !this.noCall ) { // special case – `super( ...args )`
	  					code.insertLeft( callExpression.callee.end, '.call' );
	  				}
	
	  				var thisAlias = this.thisAlias || 'this';
	
	  				if ( callExpression.arguments.length ) {
	  					code.insertLeft( callExpression.arguments[0].start, (thisAlias + ", ") );
	  				} else {
	  					code.insertLeft( callExpression.end - 1, ("" + thisAlias) );
	  				}
	  			}
	  		}
	  	};
	
	  	return Super;
	  }(Node));
	
	  var TaggedTemplateExpression = (function (Node) {
	  	function TaggedTemplateExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) TaggedTemplateExpression.__proto__ = Node;
	  	TaggedTemplateExpression.prototype = Object.create( Node && Node.prototype );
	  	TaggedTemplateExpression.prototype.constructor = TaggedTemplateExpression;
	
	  	TaggedTemplateExpression.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.templateString && !transforms.dangerousTaggedTemplateString ) {
	  			throw new CompileError( this, 'Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you\'re doing' );
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	TaggedTemplateExpression.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.templateString && transforms.dangerousTaggedTemplateString ) {
	  			var ordered = this.quasi.expressions.concat( this.quasi.quasis ).sort( function ( a, b ) { return a.start - b.start; } );
	
	  			// insert strings at start
	  			var templateStrings = this.quasi.quasis.map( function ( quasi ) { return JSON.stringify( quasi.value.cooked ); } );
	  			code.overwrite( this.tag.end, ordered[0].start, ("([" + (templateStrings.join(', ')) + "]") );
	
	  			var lastIndex = ordered[0].start;
	  			ordered.forEach( function ( node ) {
	  				if ( node.type === 'TemplateElement' ) {
	  					code.remove( lastIndex, node.end );
	  				} else {
	  					code.overwrite( lastIndex, node.start, ', ' );
	  				}
	
	  				lastIndex = node.end;
	  			});
	
	  			code.overwrite( lastIndex, this.end, ')' );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return TaggedTemplateExpression;
	  }(Node));
	
	  var TemplateElement = (function (Node) {
	  	function TemplateElement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) TemplateElement.__proto__ = Node;
	  	TemplateElement.prototype = Object.create( Node && Node.prototype );
	  	TemplateElement.prototype.constructor = TemplateElement;
	
	  	TemplateElement.prototype.initialise = function initialise () {
	  		this.program.indentExclusionElements.push( this );
	  	};
	
	  	return TemplateElement;
	  }(Node));
	
	  var TemplateLiteral = (function (Node) {
	  	function TemplateLiteral () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) TemplateLiteral.__proto__ = Node;
	  	TemplateLiteral.prototype = Object.create( Node && Node.prototype );
	  	TemplateLiteral.prototype.constructor = TemplateLiteral;
	
	  	TemplateLiteral.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( transforms.templateString && this.parent.type !== 'TaggedTemplateExpression' ) {
	  			var ordered = this.expressions.concat( this.quasis )
	  				.sort( function ( a, b ) { return a.start - b.start || a.end - b.end; } )
	  				.filter( function ( node, i ) {
	  					// include all expressions
	  					if ( node.type !== 'TemplateElement' ) return true;
	
	  					// include all non-empty strings
	  					if ( node.value.raw ) return true;
	
	  					// exclude all empty strings not at the head
	  					return !i;
	  				});
	
	  			// special case – we may be able to skip the first element,
	  			// if it's the empty string, but only if the second and
	  			// third elements aren't both expressions (since they maybe
	  			// be numeric, and `1 + 2 + '3' === '33'`)
	  			if ( ordered.length >= 3 ) {
	  				var first = ordered[0];
	  				var third = ordered[2];
	  				if ( first.type === 'TemplateElement' && first.value.raw === '' && third.type === 'TemplateElement' ) {
	  					ordered.shift();
	  				}
	  			}
	
	  			var parenthesise = ( this.quasis.length !== 1 || this.expressions.length !== 0 ) &&
	  			                     this.parent.type !== 'AssignmentExpression' &&
	  			                     this.parent.type !== 'AssignmentPattern' &&
	  			                     this.parent.type !== 'VariableDeclarator' &&
	  			                     ( this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+' );
	
	  			if ( parenthesise ) code.insertRight( this.start, '(' );
	
	  			var lastIndex = this.start;
	
	  			ordered.forEach( function ( node, i ) {
	  				if ( node.type === 'TemplateElement' ) {
	  					var replacement = '';
	  					if ( i ) replacement += ' + ';
	  					replacement += JSON.stringify( node.value.cooked );
	
	  					code.overwrite( lastIndex, node.end, replacement );
	  				} else {
	  					var parenthesise = node.type !== 'Identifier'; // TODO other cases where it's safe
	
	  					var replacement$1 = '';
	  					if ( i ) replacement$1 += ' + ';
	  					if ( parenthesise ) replacement$1 += '(';
	
	  					code.overwrite( lastIndex, node.start, replacement$1 );
	
	  					if ( parenthesise ) code.insertLeft( node.end, ')' );
	  				}
	
	  				lastIndex = node.end;
	  			});
	
	  			var close = '';
	  			if ( parenthesise ) close += ')';
	
	  			code.overwrite( lastIndex, this.end, close );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	  	};
	
	  	return TemplateLiteral;
	  }(Node));
	
	  var ThisExpression = (function (Node) {
	  	function ThisExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) ThisExpression.__proto__ = Node;
	  	ThisExpression.prototype = Object.create( Node && Node.prototype );
	  	ThisExpression.prototype.constructor = ThisExpression;
	
	  	ThisExpression.prototype.initialise = function initialise ( transforms ) {
	  		if ( transforms.arrow ) {
	  			var lexicalBoundary = this.findLexicalBoundary();
	  			var arrowFunction = this.findNearest( 'ArrowFunctionExpression' );
	  			var loop = this.findNearest( loopStatement );
	
	  			if ( ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth )
	  			|| ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth )
	  			|| ( loop && loop.right && loop.right.contains( this ) ) ) {
	  				this.alias = lexicalBoundary.getThisAlias();
	  			}
	  		}
	  	};
	
	  	ThisExpression.prototype.transpile = function transpile ( code ) {
	  		if ( this.alias ) {
	  			code.overwrite( this.start, this.end, this.alias, true );
	  		}
	  	};
	
	  	return ThisExpression;
	  }(Node));
	
	  var UpdateExpression = (function (Node) {
	  	function UpdateExpression () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) UpdateExpression.__proto__ = Node;
	  	UpdateExpression.prototype = Object.create( Node && Node.prototype );
	  	UpdateExpression.prototype.constructor = UpdateExpression;
	
	  	UpdateExpression.prototype.initialise = function initialise ( transforms ) {
	  		if ( this.argument.type === 'Identifier' ) {
	  			var declaration = this.findScope( false ).findDeclaration( this.argument.name );
	  			if ( declaration && declaration.kind === 'const' ) {
	  				throw new CompileError( this, ((this.argument.name) + " is read-only") );
	  			}
	
	  			// special case – https://gitlab.com/Rich-Harris/buble/issues/150
	  			var statement = declaration && declaration.node.ancestor( 3 );
	  			if ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {
	  				statement.reassigned[ this.argument.name ] = true;
	  			}
	  		}
	
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	return UpdateExpression;
	  }(Node));
	
	  var VariableDeclaration = (function (Node) {
	  	function VariableDeclaration () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) VariableDeclaration.__proto__ = Node;
	  	VariableDeclaration.prototype = Object.create( Node && Node.prototype );
	  	VariableDeclaration.prototype.constructor = VariableDeclaration;
	
	  	VariableDeclaration.prototype.initialise = function initialise ( transforms ) {
	  		this.scope = this.findScope( this.kind === 'var' );
	  		this.declarations.forEach( function ( declarator ) { return declarator.initialise( transforms ); } );
	  	};
	
	  	VariableDeclaration.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		var i0 = this.getIndentation();
	  		var kind = this.kind;
	
	  		if ( transforms.letConst && kind !== 'var' ) {
	  			kind = 'var';
	  			code.overwrite( this.start, this.start + this.kind.length, kind, true );
	  		}
	
	  		if ( transforms.destructuring && this.parent.type !== 'ForOfStatement' ) {
	  			var c = this.start;
	  			var lastDeclaratorIsPattern;
	
	  			this.declarations.forEach( function ( declarator, i ) {
	  				if ( declarator.id.type === 'Identifier' ) {
	  					if ( i > 0 && this$1.declarations[ i - 1 ].id.type !== 'Identifier' ) {
	  						code.overwrite( c, declarator.id.start, "var " );
	  					}
	  				} else {
	  					var inline = loopStatement.test( this$1.parent.type );
	
	  					if ( i === 0 ) {
	  						code.remove( c, declarator.id.start );
	  					} else {
	  						code.overwrite( c, declarator.id.start, (";\n" + i0) );
	  					}
	
	  					var simple = declarator.init.type === 'Identifier' && !declarator.init.rewritten;
	
	  					var name = simple ? declarator.init.name : declarator.findScope( true ).createIdentifier( 'ref' );
	
	  					var c$1 = declarator.start;
	
	  					var statementGenerators = [];
	
	  					if ( simple ) {
	  						code.remove( declarator.id.end, declarator.end );
	  					} else {
	  						statementGenerators.push( function ( start, prefix, suffix ) {
	  							code.insertRight( declarator.id.end, ("var " + name) );
	  							code.insertLeft( declarator.init.end, ("" + suffix) );
	  							code.move( declarator.id.end, declarator.end, start );
	  						});
	  					}
	
	  					destructure( code, declarator.findScope( false ), declarator.id, name, inline, statementGenerators );
	
	  					var prefix = inline ? 'var ' : '';
	  					var suffix = inline ? ", " : (";\n" + i0);
	  					statementGenerators.forEach( function ( fn, j ) {
	  						if ( i === this$1.declarations.length - 1 && j === statementGenerators.length - 1 ) {
	  							suffix = inline ? '' : ';';
	  						}
	
	  						fn( declarator.start, j === 0 ? prefix : '', suffix );
	  					});
	  				}
	
	  				declarator.transpile( code, transforms );
	
	  				c = declarator.end;
	  				lastDeclaratorIsPattern = declarator.id.type !== 'Identifier';
	  			});
	
	  			if ( lastDeclaratorIsPattern ) {
	  				code.remove( c, this.end );
	  			}
	  		}
	
	  		else {
	  			this.declarations.forEach( function ( declarator ) {
	  				declarator.transpile( code, transforms );
	  			});
	  		}
	  	};
	
	  	return VariableDeclaration;
	  }(Node));
	
	  var VariableDeclarator = (function (Node) {
	  	function VariableDeclarator () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) VariableDeclarator.__proto__ = Node;
	  	VariableDeclarator.prototype = Object.create( Node && Node.prototype );
	  	VariableDeclarator.prototype.constructor = VariableDeclarator;
	
	  	VariableDeclarator.prototype.initialise = function initialise ( transforms ) {
	  		var kind = this.parent.kind;
	  		if ( kind === 'let' && this.parent.parent.type === 'ForStatement' ) {
	  			kind = 'for.let'; // special case...
	  		}
	
	  		this.parent.scope.addDeclaration( this.id, kind );
	  		Node.prototype.initialise.call( this, transforms );
	  	};
	
	  	VariableDeclarator.prototype.transpile = function transpile ( code, transforms ) {
	  		if ( !this.init && transforms.letConst && this.parent.kind !== 'var' ) {
	  			var inLoop = this.findNearest( /Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/ );
	  			if ( inLoop && ! /Function/.test( inLoop.type ) && ! this.isLeftDeclaratorOfLoop() ) {
	  				code.insertLeft( this.id.end, ' = (void 0)' );
	  			}
	  		}
	
	  		if ( this.id ) this.id.transpile( code, transforms );
	  		if ( this.init ) this.init.transpile( code, transforms );
	  	};
	
	  	VariableDeclarator.prototype.isLeftDeclaratorOfLoop = function isLeftDeclaratorOfLoop () {
	  		return this.parent
	  			&& this.parent.type === 'VariableDeclaration'
	  			&& this.parent.parent
	  			&& (this.parent.parent.type === 'ForInStatement'
	  				|| this.parent.parent.type === 'ForOfStatement')
	  			&& this.parent.parent.left
	  			&& this.parent.parent.left.declarations[0] === this;
	  	};
	
	  	return VariableDeclarator;
	  }(Node));
	
	  var types = {
	  	ArrayExpression: ArrayExpression,
	  	ArrowFunctionExpression: ArrowFunctionExpression,
	  	AssignmentExpression: AssignmentExpression,
	  	BinaryExpression: BinaryExpression,
	  	BreakStatement: BreakStatement,
	  	CallExpression: CallExpression,
	  	ClassBody: ClassBody,
	  	ClassDeclaration: ClassDeclaration,
	  	ClassExpression: ClassExpression,
	  	ContinueStatement: ContinueStatement,
	  	DoWhileStatement: LoopStatement,
	  	ExportNamedDeclaration: ExportNamedDeclaration,
	  	ExportDefaultDeclaration: ExportDefaultDeclaration,
	  	ForStatement: ForStatement,
	  	ForInStatement: ForInStatement,
	  	ForOfStatement: ForOfStatement,
	  	FunctionDeclaration: FunctionDeclaration,
	  	FunctionExpression: FunctionExpression,
	  	Identifier: Identifier,
	  	IfStatement: IfStatement,
	  	ImportDeclaration: ImportDeclaration,
	  	ImportDefaultSpecifier: ImportDefaultSpecifier,
	  	ImportSpecifier: ImportSpecifier,
	  	JSXAttribute: JSXAttribute,
	  	JSXClosingElement: JSXClosingElement,
	  	JSXElement: JSXElement,
	  	JSXExpressionContainer: JSXExpressionContainer,
	  	JSXOpeningElement: JSXOpeningElement,
	  	JSXSpreadAttribute: JSXSpreadAttribute,
	  	Literal: Literal,
	  	MemberExpression: MemberExpression,
	  	NewExpression: NewExpression,
	  	ObjectExpression: ObjectExpression,
	  	Property: Property,
	  	ReturnStatement: ReturnStatement,
	  	SpreadProperty: SpreadProperty,
	  	Super: Super,
	  	TaggedTemplateExpression: TaggedTemplateExpression,
	  	TemplateElement: TemplateElement,
	  	TemplateLiteral: TemplateLiteral,
	  	ThisExpression: ThisExpression,
	  	UpdateExpression: UpdateExpression,
	  	VariableDeclaration: VariableDeclaration,
	  	VariableDeclarator: VariableDeclarator,
	  	WhileStatement: LoopStatement
	  };
	
	  var statementsWithBlocks = {
	  	IfStatement: 'consequent',
	  	ForStatement: 'body',
	  	ForInStatement: 'body',
	  	ForOfStatement: 'body',
	  	WhileStatement: 'body',
	  	DoWhileStatement: 'body',
	  	ArrowFunctionExpression: 'body'
	  };
	
	  function wrap ( raw, parent ) {
	  	if ( !raw ) return;
	
	  	if ( 'length' in raw ) {
	  		var i = raw.length;
	  		while ( i-- ) wrap( raw[i], parent );
	  		return;
	  	}
	
	  	// with e.g. shorthand properties, key and value are
	  	// the same node. We don't want to wrap an object twice
	  	if ( raw.__wrapped ) return;
	  	raw.__wrapped = true;
	
	  	if ( !keys[ raw.type ] ) {
	  		keys[ raw.type ] = Object.keys( raw ).filter( function ( key ) { return typeof raw[ key ] === 'object'; } );
	  	}
	
	  	// special case – body-less if/for/while statements. TODO others?
	  	var bodyType = statementsWithBlocks[ raw.type ];
	  	if ( bodyType && raw[ bodyType ].type !== 'BlockStatement' ) {
	  		var expression = raw[ bodyType ];
	
	  		// create a synthetic block statement, otherwise all hell
	  		// breaks loose when it comes to block scoping
	  		raw[ bodyType ] = {
	  			start: expression.start,
	  			end: expression.end,
	  			type: 'BlockStatement',
	  			body: [ expression ],
	  			synthetic: true
	  		};
	  	}
	
	  	new Node( raw, parent );
	
	  	var type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;
	  	raw.__proto__ = type.prototype;
	  }
	
	  var letConst = /^(?:let|const)$/;
	
	  function Scope ( options ) {
	  	options = options || {};
	
	  	this.parent = options.parent;
	  	this.isBlockScope = !!options.block;
	
	  	var scope = this;
	  	while ( scope.isBlockScope ) scope = scope.parent;
	  	this.functionScope = scope;
	
	  	this.identifiers = [];
	  	this.declarations = Object.create( null );
	  	this.references = Object.create( null );
	  	this.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );
	  	this.aliases = this.isBlockScope ? null : Object.create( null );
	  }
	
	  Scope.prototype = {
	  	addDeclaration: function addDeclaration ( node, kind ) {
	  		for ( var i = 0, list = extractNames( node ); i < list.length; i += 1 ) {
	  			var identifier = list[i];
	
	  			var name = identifier.name;
	  			var existingDeclaration = this.declarations[ name ];
	  			if ( existingDeclaration && ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) ) {
	  				// TODO warn about double var declarations?
	  				throw new CompileError( identifier, (name + " is already declared") );
	  			}
	
	  			var declaration = { name: name, node: identifier, kind: kind, instances: [] };
	  			this.declarations[ name ] = declaration;
	
	  			if ( this.isBlockScope ) {
	  				if ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];
	  				this.functionScope.blockScopedDeclarations[ name ].push( declaration );
	  			}
	  		}
	  	},
	
	  	addReference: function addReference ( identifier ) {
	  		if ( this.consolidated ) {
	  			this.consolidateReference( identifier );
	  		} else {
	  			this.identifiers.push( identifier );
	  		}
	  	},
	
	  	consolidate: function consolidate () {
	  		var this$1 = this;
	
	  		for ( var i = 0; i < this$1.identifiers.length; i += 1 ) { // we might push to the array during consolidation, so don't cache length
	  			var identifier = this$1.identifiers[i];
	  			this$1.consolidateReference( identifier );
	  		}
	
	  		this.consolidated = true; // TODO understand why this is necessary... seems bad
	  	},
	
	  	consolidateReference: function consolidateReference ( identifier ) {
	  		var declaration = this.declarations[ identifier.name ];
	  		if ( declaration ) {
	  			declaration.instances.push( identifier );
	  		} else {
	  			this.references[ identifier.name ] = true;
	  			if ( this.parent ) this.parent.addReference( identifier );
	  		}
	  	},
	
	  	contains: function contains ( name ) {
	  		return this.declarations[ name ] ||
	  		       ( this.parent ? this.parent.contains( name ) : false );
	  	},
	
	  	createIdentifier: function createIdentifier ( base ) {
	  		var this$1 = this;
	
	  		if ( typeof base === 'number' ) base = base.toString();
	
	  		base = base
	  			.replace( /\s/g, '' )
	  			.replace( /\[([^\]]+)\]/g, '_$1' )
	  			.replace( /[^a-zA-Z0-9_$]/g, '_' )
	  			.replace( /_{2,}/, '_' );
	
	  		var name = base;
	  		var counter = 1;
	
	  		while ( this$1.declarations[ name ] || this$1.references[ name ] || this$1.aliases[ name ] || name in reserved ) {
	  			name = base + "$" + (counter++);
	  		}
	
	  		this.aliases[ name ] = true;
	  		return name;
	  	},
	
	  	findDeclaration: function findDeclaration ( name ) {
	  		return this.declarations[ name ] ||
	  		       ( this.parent && this.parent.findDeclaration( name ) );
	  	}
	  };
	
	  function isUseStrict ( node ) {
	  	if ( !node ) return false;
	  	if ( node.type !== 'ExpressionStatement' ) return false;
	  	if ( node.expression.type !== 'Literal' ) return false;
	  	return node.expression.value === 'use strict';
	  }
	
	  var BlockStatement = (function (Node) {
	  	function BlockStatement () {
	  		Node.apply(this, arguments);
	  	}
	
	  	if ( Node ) BlockStatement.__proto__ = Node;
	  	BlockStatement.prototype = Object.create( Node && Node.prototype );
	  	BlockStatement.prototype.constructor = BlockStatement;
	
	  	BlockStatement.prototype.createScope = function createScope () {
	  		var this$1 = this;
	
	  		this.parentIsFunction = /Function/.test( this.parent.type );
	  		this.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';
	  		this.scope = new Scope({
	  			block: !this.isFunctionBlock,
	  			parent: this.parent.findScope( false )
	  		});
	
	  		if ( this.parentIsFunction ) {
	  			this.parent.params.forEach( function ( node ) {
	  				this$1.scope.addDeclaration( node, 'param' );
	  			});
	  		}
	  	};
	
	  	BlockStatement.prototype.initialise = function initialise ( transforms ) {
	  		this.thisAlias = null;
	  		this.argumentsAlias = null;
	  		this.defaultParameters = [];
	
	  		// normally the scope gets created here, during initialisation,
	  		// but in some cases (e.g. `for` statements), we need to create
	  		// the scope early, as it pertains to both the init block and
	  		// the body of the statement
	  		if ( !this.scope ) this.createScope();
	
	  		this.body.forEach( function ( node ) { return node.initialise( transforms ); } );
	
	  		this.scope.consolidate();
	  	};
	
	  	BlockStatement.prototype.findLexicalBoundary = function findLexicalBoundary () {
	  		if ( this.type === 'Program' ) return this;
	  		if ( /^Function/.test( this.parent.type ) ) return this;
	
	  		return this.parent.findLexicalBoundary();
	  	};
	
	  	BlockStatement.prototype.findScope = function findScope ( functionScope ) {
	  		if ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );
	  		return this.scope;
	  	};
	
	  	BlockStatement.prototype.getArgumentsAlias = function getArgumentsAlias () {
	  		if ( !this.argumentsAlias ) {
	  			this.argumentsAlias = this.scope.createIdentifier( 'arguments' );
	  		}
	
	  		return this.argumentsAlias;
	  	};
	
	  	BlockStatement.prototype.getArgumentsArrayAlias = function getArgumentsArrayAlias () {
	  		if ( !this.argumentsArrayAlias ) {
	  			this.argumentsArrayAlias = this.scope.createIdentifier( 'argsArray' );
	  		}
	
	  		return this.argumentsArrayAlias;
	  	};
	
	  	BlockStatement.prototype.getThisAlias = function getThisAlias () {
	  		if ( !this.thisAlias ) {
	  			this.thisAlias = this.scope.createIdentifier( 'this' );
	  		}
	
	  		return this.thisAlias;
	  	};
	
	  	BlockStatement.prototype.getIndentation = function getIndentation () {
	  		var this$1 = this;
	
	  		if ( this.indentation === undefined ) {
	  			var source = this.program.magicString.original;
	
	  			var useOuter = this.synthetic || !this.body.length;
	  			var c = useOuter ? this.start : this.body[0].start;
	
	  			while ( c && source[c] !== '\n' ) c -= 1;
	
	  			this.indentation = '';
	
	  			while ( true ) { // eslint-disable-line no-constant-condition
	  				c += 1;
	  				var char = source[c];
	
	  				if ( char !== ' ' && char !== '\t' ) break;
	
	  				this$1.indentation += char;
	  			}
	
	  			var indentString = this.program.magicString.getIndentString();
	
	  			// account for dedented class constructors
	  			var parent = this.parent;
	  			while ( parent ) {
	  				if ( parent.kind === 'constructor' && !parent.parent.parent.superClass ) {
	  					this$1.indentation = this$1.indentation.replace( indentString, '' );
	  				}
	
	  				parent = parent.parent;
	  			}
	
	  			if ( useOuter ) this.indentation += indentString;
	  		}
	
	  		return this.indentation;
	  	};
	
	  	BlockStatement.prototype.transpile = function transpile ( code, transforms ) {
	  		var this$1 = this;
	
	  		var indentation = this.getIndentation();
	
	  		var introStatementGenerators = [];
	
	  		if ( this.argumentsAlias ) {
	  			introStatementGenerators.push( function ( start, prefix, suffix ) {
	  				var assignment = prefix + "var " + (this$1.argumentsAlias) + " = arguments" + suffix;
	  				code.insertLeft( start, assignment );
	  			});
	  		}
	
	  		if ( this.thisAlias ) {
	  			introStatementGenerators.push( function ( start, prefix, suffix ) {
	  				var assignment = prefix + "var " + (this$1.thisAlias) + " = this" + suffix;
	  				code.insertLeft( start, assignment );
	  			});
	  		}
	
	  		if ( this.argumentsArrayAlias ) {
	  			introStatementGenerators.push( function ( start, prefix, suffix ) {
	  				var i = this$1.scope.createIdentifier( 'i' );
	  				var assignment = prefix + "var " + i + " = arguments.length, " + (this$1.argumentsArrayAlias) + " = Array(" + i + ");\n" + indentation + "while ( " + i + "-- ) " + (this$1.argumentsArrayAlias) + "[" + i + "] = arguments[" + i + "]" + suffix;
	  				code.insertLeft( start, assignment );
	  			});
	  		}
	
	  		if ( /Function/.test( this.parent.type ) ) {
	  			this.transpileParameters( code, transforms, indentation, introStatementGenerators );
	  		}
	
	  		if ( transforms.letConst && this.isFunctionBlock ) {
	  			this.transpileBlockScopedIdentifiers( code );
	  		}
	
	  		Node.prototype.transpile.call( this, code, transforms );
	
	  		if ( this.synthetic ) {
	  			if ( this.parent.type === 'ArrowFunctionExpression' ) {
	  				var expr = this.body[0];
	
	  				if ( introStatementGenerators.length ) {
	  					code.insertLeft( this.start, "{" ).insertRight( this.end, ((this.parent.getIndentation()) + "}") );
	
	  					code.insertRight( expr.start, ("\n" + indentation + "return ") );
	  					code.insertLeft( expr.end, ";\n" );
	  				} else if ( transforms.arrow ) {
	  					code.insertLeft( expr.start, "{ return " );
	  					code.insertLeft( expr.end, "; }" );
	  				}
	  			}
	
	  			else if ( introStatementGenerators.length ) {
	  				code.insertLeft( this.start, "{" ).insertRight( this.end, "}" );
	  			}
	  		}
	
	  		var start;
	  		if ( isUseStrict( this.body[0] ) ) {
	  			start = this.body[0].end;
	  		} else if ( this.synthetic || this.parent.type === 'Root' ) {
	  			start = this.start;
	  		} else {
	  			start = this.start + 1;
	  		}
	
	  		var prefix = "\n" + indentation;
	  		var suffix = ';';
	  		introStatementGenerators.forEach( function ( fn, i ) {
	  			if ( i === introStatementGenerators.length - 1 ) suffix = ";\n";
	  			fn( start, prefix, suffix );
	  		});
	  	};
	
	  	BlockStatement.prototype.transpileParameters = function transpileParameters ( code, transforms, indentation, introStatementGenerators ) {
	  		var this$1 = this;
	
	  		var params = this.parent.params;
	
	  		params.forEach( function ( param ) {
	  			if ( param.type === 'AssignmentPattern' && param.left.type === 'Identifier' ) {
	  				if ( transforms.defaultParameter ) {
	  					introStatementGenerators.push( function ( start, prefix, suffix ) {
	  						var lhs = prefix + "if ( " + (param.left.name) + " === void 0 ) " + (param.left.name);
	
	  						code
	  							.insertRight( param.left.end, lhs )
	  							.move( param.left.end, param.right.end, start )
	  							.insertLeft( param.right.end, suffix );
	  					});
	  				}
	  			}
	
	  			else if ( param.type === 'RestElement' ) {
	  				if ( transforms.spreadRest ) {
	  					introStatementGenerators.push( function ( start, prefix, suffix ) {
	  						var penultimateParam = params[ params.length - 2 ];
	
	  						if ( penultimateParam ) {
	  							code.remove( penultimateParam ? penultimateParam.end : param.start, param.end );
	  						} else {
	  							var start$1 = param.start, end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8
	
	  							while ( /\s/.test( code.original[ start$1 - 1 ] ) ) start$1 -= 1;
	  							while ( /\s/.test( code.original[ end ] ) ) end += 1;
	
	  							code.remove( start$1, end );
	  						}
	
	  						var name = param.argument.name;
	  						var len = this$1.scope.createIdentifier( 'len' );
	  						var count = params.length - 1;
	
	  						if ( count ) {
	  							code.insertLeft( start, (prefix + "var " + name + " = [], " + len + " = arguments.length - " + count + ";\n" + indentation + "while ( " + len + "-- > 0 ) " + name + "[ " + len + " ] = arguments[ " + len + " + " + count + " ]" + suffix) );
	  						} else {
	  							code.insertLeft( start, (prefix + "var " + name + " = [], " + len + " = arguments.length;\n" + indentation + "while ( " + len + "-- ) " + name + "[ " + len + " ] = arguments[ " + len + " ]" + suffix) );
	  						}
	  					});
	  				}
	  			}
	
	  			else if ( param.type !== 'Identifier' ) {
	  				if ( transforms.parameterDestructuring ) {
	  					var ref = this$1.scope.createIdentifier( 'ref' );
	  					destructure( code, this$1.scope, param, ref, false, introStatementGenerators );
	  					code.insertLeft( param.start, ref );
	  				}
	  			}
	  		});
	  	};
	
	  	BlockStatement.prototype.transpileBlockScopedIdentifiers = function transpileBlockScopedIdentifiers ( code ) {
	  		var this$1 = this;
	
	  		Object.keys( this.scope.blockScopedDeclarations ).forEach( function ( name ) {
	  			var declarations = this$1.scope.blockScopedDeclarations[ name ];
	
	  			for ( var i = 0, list = declarations; i < list.length; i += 1 ) {
	  				var declaration = list[i];
	
	  				var cont = false; // TODO implement proper continue...
	
	  				if ( declaration.kind === 'for.let' ) {
	  					// special case
	  					var forStatement = declaration.node.findNearest( 'ForStatement' );
	
	  					if ( forStatement.shouldRewriteAsFunction ) {
	  						var outerAlias = this$1.scope.createIdentifier( name );
	  						var innerAlias = forStatement.reassigned[ name ] ?
	  							this$1.scope.createIdentifier( name ) :
	  							name;
	
	  						declaration.name = outerAlias;
	  						code.overwrite( declaration.node.start, declaration.node.end, outerAlias, true );
	
	  						forStatement.aliases[ name ] = {
	  							outer: outerAlias,
	  							inner: innerAlias
	  						};
	
	  						for ( var i$1 = 0, list$1 = declaration.instances; i$1 < list$1.length; i$1 += 1 ) {
	  							var identifier = list$1[i$1];
	
	  							var alias = forStatement.body.contains( identifier ) ?
	  								innerAlias :
	  								outerAlias;
	
	  							if ( name !== alias ) {
	  								code.overwrite( identifier.start, identifier.end, alias, true );
	  							}
	  						}
	
	  						cont = true;
	  					}
	  				}
	
	  				if ( !cont ) {
	  					var alias$1 = this$1.scope.createIdentifier( name );
	
	  					if ( name !== alias$1 ) {
	  						declaration.name = alias$1;
	  						code.overwrite( declaration.node.start, declaration.node.end, alias$1, true );
	
	  						for ( var i$2 = 0, list$2 = declaration.instances; i$2 < list$2.length; i$2 += 1 ) {
	  							var identifier$1 = list$2[i$2];
	
	  							identifier$1.rewritten = true;
	  							code.overwrite( identifier$1.start, identifier$1.end, alias$1, true );
	  						}
	  					}
	  				}
	  			}
	  		});
	  	};
	
	  	return BlockStatement;
	  }(Node));
	
	  function Program ( source, ast, transforms, options ) {
	  	var this$1 = this;
	
	  	this.type = 'Root';
	
	  	// options
	  	this.jsx = options.jsx || 'React.createElement';
	  	this.options = options;
	
	  	this.source = source;
	  	this.magicString = new MagicString( source );
	
	  	this.ast = ast;
	  	this.depth = 0;
	
	  	wrap( this.body = ast, this );
	  	this.body.__proto__ = BlockStatement.prototype;
	
	  	this.indentExclusionElements = [];
	  	this.body.initialise( transforms );
	
	  	this.indentExclusions = Object.create( null );
	  	for ( var i$1 = 0, list = this.indentExclusionElements; i$1 < list.length; i$1 += 1 ) {
	  		var node = list[i$1];
	
	  		for ( var i = node.start; i < node.end; i += 1 ) {
	  			this$1.indentExclusions[ i ] = true;
	  		}
	  	}
	
	  	this.body.transpile( this.magicString, transforms );
	  }
	
	  Program.prototype = {
	  	export: function export$1 ( options ) {
	  		if ( options === void 0 ) options = {};
	
	  		return {
	  			code: this.magicString.toString(),
	  			map: this.magicString.generateMap({
	  				file: options.file,
	  				source: options.source,
	  				includeContent: options.includeContent !== false
	  			})
	  		};
	  	},
	
	  	findNearest: function findNearest () {
	  		return null;
	  	},
	
	  	findScope: function findScope () {
	  		return null;
	  	}
	  };
	
	  var matrix = {
	  	chrome: {
	  		    48: 1333689725,
	  		    49: 1342078975,
	  		    50: 1610514431,
	  		    51: 1610514431,
	  		    52: 2147385343
	  	},
	  	firefox: {
	  		    43: 1207307741,
	  		    44: 1207307741,
	  		    45: 1207307741,
	  		    46: 1476267485,
	  		    47: 1476296671,
	  		    48: 1476296671
	  	},
	  	safari: {
	  		     8: 1073741824,
	  		     9: 1328940894
	  	},
	  	ie: {
	  		     8: 0,
	  		     9: 1073741824,
	  		    10: 1073741824,
	  		    11: 1073770592
	  	},
	  	edge: {
	  		    12: 1591620701,
	  		    13: 1608400479
	  	},
	  	node: {
	  		'0.10': 1075052608,
	  		'0.12': 1091830852,
	  		     4: 1327398527,
	  		     5: 1327398527,
	  		     6: 1610514431
	  	}
	  };
	
	  var features = [
	  	'arrow',
	  	'classes',
	  	'collections',
	  	'computedProperty',
	  	'conciseMethodProperty',
	  	'constLoop',
	  	'constRedef',
	  	'defaultParameter',
	  	'destructuring',
	  	'extendNatives',
	  	'forOf',
	  	'generator',
	  	'letConst',
	  	'letLoop',
	  	'letLoopScope',
	  	'moduleExport',
	  	'moduleImport',
	  	'numericLiteral',
	  	'objectProto',
	  	'objectSuper',
	  	'oldOctalLiteral',
	  	'parameterDestructuring',
	  	'spreadRest',
	  	'stickyRegExp',
	  	'symbol',
	  	'templateString',
	  	'unicodeEscape',
	  	'unicodeIdentifier',
	  	'unicodeRegExp',
	
	  	// ES2016
	  	'exponentiation',
	
	  	// additional transforms, not from
	  	// https://featuretests.io
	  	'reservedProperties'
	  ];
	
	  var version = "0.15.2";
	
	  var ref = [
	  	acornObjectSpread,
	  	acornJsx
	  ].reduce( function ( final, plugin ) { return plugin( final ); }, acorn$1 );
	  var parse = ref.parse;
	
	  var dangerousTransforms = [
	  	'dangerousTaggedTemplateString',
	  	'dangerousForOf'
	  ];
	
	  function target ( target ) {
	  	var targets = Object.keys( target );
	  	var bitmask = targets.length ?
	  		2147483647 :
	  		1073741824;
	
	  	Object.keys( target ).forEach( function ( environment ) {
	  		var versions = matrix[ environment ];
	  		if ( !versions ) throw new Error( ("Unknown environment '" + environment + "'. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues") );
	
	  		var targetVersion = target[ environment ];
	  		if ( !( targetVersion in versions ) ) throw new Error( ("Support data exists for the following versions of " + environment + ": " + (Object.keys( versions ).join( ', ')) + ". Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues") );
	  		var support = versions[ targetVersion ];
	
	  		bitmask &= support;
	  	});
	
	  	var transforms = Object.create( null );
	  	features.forEach( function ( name, i ) {
	  		transforms[ name ] = !( bitmask & 1 << i );
	  	});
	
	  	dangerousTransforms.forEach( function ( name ) {
	  		transforms[ name ] = false;
	  	});
	
	  	return transforms;
	  }
	
	  function transform ( source, options ) {
	  	if ( options === void 0 ) options = {};
	
	  	var ast;
	
	  	try {
	  		ast = parse( source, {
	  			ecmaVersion: 7,
	  			preserveParens: true,
	  			sourceType: 'module',
	  			plugins: {
	  				jsx: true,
	  				objectSpread: true
	  			}
	  		});
	  	} catch ( err ) {
	  		err.snippet = getSnippet( source, err.loc );
	  		err.toString = function () { return ((err.name) + ": " + (err.message) + "\n" + (err.snippet)); };
	  		throw err;
	  	}
	
	  	var transforms = target( options.target || {} );
	  	Object.keys( options.transforms || {} ).forEach( function ( name ) {
	  		if ( name === 'modules' ) {
	  			if ( !( 'moduleImport' in options.transforms ) ) transforms.moduleImport = options.transforms.modules;
	  			if ( !( 'moduleExport' in options.transforms ) ) transforms.moduleExport = options.transforms.modules;
	  			return;
	  		}
	
	  		if ( !( name in transforms ) ) throw new Error( ("Unknown transform '" + name + "'") );
	  		transforms[ name ] = options.transforms[ name ];
	  	});
	
	  	return new Program( source, ast, transforms, options ).export( options );
	  }
	
	  exports.target = target;
	  exports.transform = transform;
	  exports.VERSION = version;
	
	  Object.defineProperty(exports, '__esModule', { value: true });
	
	}));
	//# sourceMappingURL=buble.deps.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(41).Buffer))

/***/ }),
/* 526 */
/***/ (function(module, exports) {

	
	module.exports = function chain(){
	  var len = arguments.length
	  var args = [];
	
	  for (var i = 0; i < len; i++)
	    args[i] = arguments[i]
	
	  args = args.filter(function(fn){ return fn != null })
	
	  if (args.length === 0) return undefined
	  if (args.length === 1) return args[0]
	
	  return args.reduce(function(current, next){
	    return function chainedFunction() {
	      current.apply(this, arguments);
	      next.apply(this, arguments);
	    };
	  })
	}


/***/ }),
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var ascending = function(a, b) {
	  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	};
	
	var bisector = function(compare) {
	  if (compare.length === 1) compare = ascendingComparator(compare);
	  return {
	    left: function(a, x, lo, hi) {
	      if (lo == null) lo = 0;
	      if (hi == null) hi = a.length;
	      while (lo < hi) {
	        var mid = lo + hi >>> 1;
	        if (compare(a[mid], x) < 0) lo = mid + 1;
	        else hi = mid;
	      }
	      return lo;
	    },
	    right: function(a, x, lo, hi) {
	      if (lo == null) lo = 0;
	      if (hi == null) hi = a.length;
	      while (lo < hi) {
	        var mid = lo + hi >>> 1;
	        if (compare(a[mid], x) > 0) hi = mid;
	        else lo = mid + 1;
	      }
	      return lo;
	    }
	  };
	};
	
	function ascendingComparator(f) {
	  return function(d, x) {
	    return ascending(f(d), x);
	  };
	}
	
	var ascendingBisect = bisector(ascending);
	var bisectRight = ascendingBisect.right;
	var bisectLeft = ascendingBisect.left;
	
	var pairs = function(array, f) {
	  if (f == null) f = pair;
	  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
	  while (i < n) pairs[i] = f(p, p = array[++i]);
	  return pairs;
	};
	
	function pair(a, b) {
	  return [a, b];
	}
	
	var cross = function(values0, values1, reduce) {
	  var n0 = values0.length,
	      n1 = values1.length,
	      values = new Array(n0 * n1),
	      i0,
	      i1,
	      i,
	      value0;
	
	  if (reduce == null) reduce = pair;
	
	  for (i0 = i = 0; i0 < n0; ++i0) {
	    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
	      values[i] = reduce(value0, values1[i1]);
	    }
	  }
	
	  return values;
	};
	
	var descending = function(a, b) {
	  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	};
	
	var number = function(x) {
	  return x === null ? NaN : +x;
	};
	
	var variance = function(values, valueof) {
	  var n = values.length,
	      m = 0,
	      i = -1,
	      mean = 0,
	      value,
	      delta,
	      sum = 0;
	
	  if (valueof == null) {
	    while (++i < n) {
	      if (!isNaN(value = number(values[i]))) {
	        delta = value - mean;
	        mean += delta / ++m;
	        sum += delta * (value - mean);
	      }
	    }
	  }
	
	  else {
	    while (++i < n) {
	      if (!isNaN(value = number(valueof(values[i], i, values)))) {
	        delta = value - mean;
	        mean += delta / ++m;
	        sum += delta * (value - mean);
	      }
	    }
	  }
	
	  if (m > 1) return sum / (m - 1);
	};
	
	var deviation = function(array, f) {
	  var v = variance(array, f);
	  return v ? Math.sqrt(v) : v;
	};
	
	var extent = function(values, valueof) {
	  var n = values.length,
	      i = -1,
	      value,
	      min,
	      max;
	
	  if (valueof == null) {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = values[i]) != null && value >= value) {
	        min = max = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = values[i]) != null) {
	            if (min > value) min = value;
	            if (max < value) max = value;
	          }
	        }
	      }
	    }
	  }
	
	  else {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = valueof(values[i], i, values)) != null && value >= value) {
	        min = max = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = valueof(values[i], i, values)) != null) {
	            if (min > value) min = value;
	            if (max < value) max = value;
	          }
	        }
	      }
	    }
	  }
	
	  return [min, max];
	};
	
	var array = Array.prototype;
	
	var slice = array.slice;
	var map = array.map;
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	var identity = function(x) {
	  return x;
	};
	
	var range = function(start, stop, step) {
	  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
	
	  var i = -1,
	      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
	      range = new Array(n);
	
	  while (++i < n) {
	    range[i] = start + i * step;
	  }
	
	  return range;
	};
	
	var e10 = Math.sqrt(50);
	var e5 = Math.sqrt(10);
	var e2 = Math.sqrt(2);
	
	var ticks = function(start, stop, count) {
	  var reverse,
	      i = -1,
	      n,
	      ticks,
	      step;
	
	  stop = +stop, start = +start, count = +count;
	  if (start === stop && count > 0) return [start];
	  if (reverse = stop < start) n = start, start = stop, stop = n;
	  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];
	
	  if (step > 0) {
	    start = Math.ceil(start / step);
	    stop = Math.floor(stop / step);
	    ticks = new Array(n = Math.ceil(stop - start + 1));
	    while (++i < n) ticks[i] = (start + i) * step;
	  } else {
	    start = Math.floor(start * step);
	    stop = Math.ceil(stop * step);
	    ticks = new Array(n = Math.ceil(start - stop + 1));
	    while (++i < n) ticks[i] = (start - i) / step;
	  }
	
	  if (reverse) ticks.reverse();
	
	  return ticks;
	};
	
	function tickIncrement(start, stop, count) {
	  var step = (stop - start) / Math.max(0, count),
	      power = Math.floor(Math.log(step) / Math.LN10),
	      error = step / Math.pow(10, power);
	  return power >= 0
	      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
	      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
	}
	
	function tickStep(start, stop, count) {
	  var step0 = Math.abs(stop - start) / Math.max(0, count),
	      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
	      error = step0 / step1;
	  if (error >= e10) step1 *= 10;
	  else if (error >= e5) step1 *= 5;
	  else if (error >= e2) step1 *= 2;
	  return stop < start ? -step1 : step1;
	}
	
	var sturges = function(values) {
	  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
	};
	
	var histogram = function() {
	  var value = identity,
	      domain = extent,
	      threshold = sturges;
	
	  function histogram(data) {
	    var i,
	        n = data.length,
	        x,
	        values = new Array(n);
	
	    for (i = 0; i < n; ++i) {
	      values[i] = value(data[i], i, data);
	    }
	
	    var xz = domain(values),
	        x0 = xz[0],
	        x1 = xz[1],
	        tz = threshold(values, x0, x1);
	
	    // Convert number of thresholds into uniform thresholds.
	    if (!Array.isArray(tz)) {
	      tz = tickStep(x0, x1, tz);
	      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive
	    }
	
	    // Remove any thresholds outside the domain.
	    var m = tz.length;
	    while (tz[0] <= x0) tz.shift(), --m;
	    while (tz[m - 1] > x1) tz.pop(), --m;
	
	    var bins = new Array(m + 1),
	        bin;
	
	    // Initialize bins.
	    for (i = 0; i <= m; ++i) {
	      bin = bins[i] = [];
	      bin.x0 = i > 0 ? tz[i - 1] : x0;
	      bin.x1 = i < m ? tz[i] : x1;
	    }
	
	    // Assign data to bins by value, ignoring any outside the domain.
	    for (i = 0; i < n; ++i) {
	      x = values[i];
	      if (x0 <= x && x <= x1) {
	        bins[bisectRight(tz, x, 0, m)].push(data[i]);
	      }
	    }
	
	    return bins;
	  }
	
	  histogram.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
	  };
	
	  histogram.domain = function(_) {
	    return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
	  };
	
	  histogram.thresholds = function(_) {
	    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
	  };
	
	  return histogram;
	};
	
	var quantile = function(values, p, valueof) {
	  if (valueof == null) valueof = number;
	  if (!(n = values.length)) return;
	  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
	  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
	  var n,
	      i = (n - 1) * p,
	      i0 = Math.floor(i),
	      value0 = +valueof(values[i0], i0, values),
	      value1 = +valueof(values[i0 + 1], i0 + 1, values);
	  return value0 + (value1 - value0) * (i - i0);
	};
	
	var freedmanDiaconis = function(values, min, max) {
	  values = map.call(values, number).sort(ascending);
	  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));
	};
	
	var scott = function(values, min, max) {
	  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
	};
	
	var max = function(values, valueof) {
	  var n = values.length,
	      i = -1,
	      value,
	      max;
	
	  if (valueof == null) {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = values[i]) != null && value >= value) {
	        max = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = values[i]) != null && value > max) {
	            max = value;
	          }
	        }
	      }
	    }
	  }
	
	  else {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = valueof(values[i], i, values)) != null && value >= value) {
	        max = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = valueof(values[i], i, values)) != null && value > max) {
	            max = value;
	          }
	        }
	      }
	    }
	  }
	
	  return max;
	};
	
	var mean = function(values, valueof) {
	  var n = values.length,
	      m = n,
	      i = -1,
	      value,
	      sum = 0;
	
	  if (valueof == null) {
	    while (++i < n) {
	      if (!isNaN(value = number(values[i]))) sum += value;
	      else --m;
	    }
	  }
	
	  else {
	    while (++i < n) {
	      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;
	      else --m;
	    }
	  }
	
	  if (m) return sum / m;
	};
	
	var median = function(values, valueof) {
	  var n = values.length,
	      i = -1,
	      value,
	      numbers = [];
	
	  if (valueof == null) {
	    while (++i < n) {
	      if (!isNaN(value = number(values[i]))) {
	        numbers.push(value);
	      }
	    }
	  }
	
	  else {
	    while (++i < n) {
	      if (!isNaN(value = number(valueof(values[i], i, values)))) {
	        numbers.push(value);
	      }
	    }
	  }
	
	  return quantile(numbers.sort(ascending), 0.5);
	};
	
	var merge = function(arrays) {
	  var n = arrays.length,
	      m,
	      i = -1,
	      j = 0,
	      merged,
	      array;
	
	  while (++i < n) j += arrays[i].length;
	  merged = new Array(j);
	
	  while (--n >= 0) {
	    array = arrays[n];
	    m = array.length;
	    while (--m >= 0) {
	      merged[--j] = array[m];
	    }
	  }
	
	  return merged;
	};
	
	var min = function(values, valueof) {
	  var n = values.length,
	      i = -1,
	      value,
	      min;
	
	  if (valueof == null) {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = values[i]) != null && value >= value) {
	        min = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = values[i]) != null && min > value) {
	            min = value;
	          }
	        }
	      }
	    }
	  }
	
	  else {
	    while (++i < n) { // Find the first comparable value.
	      if ((value = valueof(values[i], i, values)) != null && value >= value) {
	        min = value;
	        while (++i < n) { // Compare the remaining values.
	          if ((value = valueof(values[i], i, values)) != null && min > value) {
	            min = value;
	          }
	        }
	      }
	    }
	  }
	
	  return min;
	};
	
	var permute = function(array, indexes) {
	  var i = indexes.length, permutes = new Array(i);
	  while (i--) permutes[i] = array[indexes[i]];
	  return permutes;
	};
	
	var scan = function(values, compare) {
	  if (!(n = values.length)) return;
	  var n,
	      i = 0,
	      j = 0,
	      xi,
	      xj = values[j];
	
	  if (compare == null) compare = ascending;
	
	  while (++i < n) {
	    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
	      xj = xi, j = i;
	    }
	  }
	
	  if (compare(xj, xj) === 0) return j;
	};
	
	var shuffle = function(array, i0, i1) {
	  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
	      t,
	      i;
	
	  while (m) {
	    i = Math.random() * m-- | 0;
	    t = array[m + i0];
	    array[m + i0] = array[i + i0];
	    array[i + i0] = t;
	  }
	
	  return array;
	};
	
	var sum = function(values, valueof) {
	  var n = values.length,
	      i = -1,
	      value,
	      sum = 0;
	
	  if (valueof == null) {
	    while (++i < n) {
	      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
	    }
	  }
	
	  else {
	    while (++i < n) {
	      if (value = +valueof(values[i], i, values)) sum += value;
	    }
	  }
	
	  return sum;
	};
	
	var transpose = function(matrix) {
	  if (!(n = matrix.length)) return [];
	  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
	    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
	      row[j] = matrix[j][i];
	    }
	  }
	  return transpose;
	};
	
	function length(d) {
	  return d.length;
	}
	
	var zip = function() {
	  return transpose(arguments);
	};
	
	exports.bisect = bisectRight;
	exports.bisectRight = bisectRight;
	exports.bisectLeft = bisectLeft;
	exports.ascending = ascending;
	exports.bisector = bisector;
	exports.cross = cross;
	exports.descending = descending;
	exports.deviation = deviation;
	exports.extent = extent;
	exports.histogram = histogram;
	exports.thresholdFreedmanDiaconis = freedmanDiaconis;
	exports.thresholdScott = scott;
	exports.thresholdSturges = sturges;
	exports.max = max;
	exports.mean = mean;
	exports.median = median;
	exports.merge = merge;
	exports.min = min;
	exports.pairs = pairs;
	exports.permute = permute;
	exports.quantile = quantile;
	exports.range = range;
	exports.scan = scan;
	exports.shuffle = shuffle;
	exports.sum = sum;
	exports.ticks = ticks;
	exports.tickIncrement = tickIncrement;
	exports.tickStep = tickStep;
	exports.transpose = transpose;
	exports.variance = variance;
	exports.zip = zip;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var prefix = "$";
	
	function Map() {}
	
	Map.prototype = map.prototype = {
	  constructor: Map,
	  has: function(key) {
	    return (prefix + key) in this;
	  },
	  get: function(key) {
	    return this[prefix + key];
	  },
	  set: function(key, value) {
	    this[prefix + key] = value;
	    return this;
	  },
	  remove: function(key) {
	    var property = prefix + key;
	    return property in this && delete this[property];
	  },
	  clear: function() {
	    for (var property in this) if (property[0] === prefix) delete this[property];
	  },
	  keys: function() {
	    var keys = [];
	    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
	    return keys;
	  },
	  values: function() {
	    var values = [];
	    for (var property in this) if (property[0] === prefix) values.push(this[property]);
	    return values;
	  },
	  entries: function() {
	    var entries = [];
	    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
	    return entries;
	  },
	  size: function() {
	    var size = 0;
	    for (var property in this) if (property[0] === prefix) ++size;
	    return size;
	  },
	  empty: function() {
	    for (var property in this) if (property[0] === prefix) return false;
	    return true;
	  },
	  each: function(f) {
	    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
	  }
	};
	
	function map(object, f) {
	  var map = new Map;
	
	  // Copy constructor.
	  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });
	
	  // Index array by numeric index or specified key function.
	  else if (Array.isArray(object)) {
	    var i = -1,
	        n = object.length,
	        o;
	
	    if (f == null) while (++i < n) map.set(i, object[i]);
	    else while (++i < n) map.set(f(o = object[i], i, object), o);
	  }
	
	  // Convert object to map.
	  else if (object) for (var key in object) map.set(key, object[key]);
	
	  return map;
	}
	
	var nest = function() {
	  var keys = [],
	      sortKeys = [],
	      sortValues,
	      rollup,
	      nest;
	
	  function apply(array, depth, createResult, setResult) {
	    if (depth >= keys.length) {
	      if (sortValues != null) array.sort(sortValues);
	      return rollup != null ? rollup(array) : array;
	    }
	
	    var i = -1,
	        n = array.length,
	        key = keys[depth++],
	        keyValue,
	        value,
	        valuesByKey = map(),
	        values,
	        result = createResult();
	
	    while (++i < n) {
	      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
	        values.push(value);
	      } else {
	        valuesByKey.set(keyValue, [value]);
	      }
	    }
	
	    valuesByKey.each(function(values, key) {
	      setResult(result, key, apply(values, depth, createResult, setResult));
	    });
	
	    return result;
	  }
	
	  function entries(map$$1, depth) {
	    if (++depth > keys.length) return map$$1;
	    var array, sortKey = sortKeys[depth - 1];
	    if (rollup != null && depth >= keys.length) array = map$$1.entries();
	    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });
	    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;
	  }
	
	  return nest = {
	    object: function(array) { return apply(array, 0, createObject, setObject); },
	    map: function(array) { return apply(array, 0, createMap, setMap); },
	    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
	    key: function(d) { keys.push(d); return nest; },
	    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
	    sortValues: function(order) { sortValues = order; return nest; },
	    rollup: function(f) { rollup = f; return nest; }
	  };
	};
	
	function createObject() {
	  return {};
	}
	
	function setObject(object, key, value) {
	  object[key] = value;
	}
	
	function createMap() {
	  return map();
	}
	
	function setMap(map$$1, key, value) {
	  map$$1.set(key, value);
	}
	
	function Set() {}
	
	var proto = map.prototype;
	
	Set.prototype = set.prototype = {
	  constructor: Set,
	  has: proto.has,
	  add: function(value) {
	    value += "";
	    this[prefix + value] = value;
	    return this;
	  },
	  remove: proto.remove,
	  clear: proto.clear,
	  values: proto.keys,
	  size: proto.size,
	  empty: proto.empty,
	  each: proto.each
	};
	
	function set(object, f) {
	  var set = new Set;
	
	  // Copy constructor.
	  if (object instanceof Set) object.each(function(value) { set.add(value); });
	
	  // Otherwise, assume it’s an array.
	  else if (object) {
	    var i = -1, n = object.length;
	    if (f == null) while (++i < n) set.add(object[i]);
	    else while (++i < n) set.add(f(object[i], i, object));
	  }
	
	  return set;
	}
	
	var keys = function(map) {
	  var keys = [];
	  for (var key in map) keys.push(key);
	  return keys;
	};
	
	var values = function(map) {
	  var values = [];
	  for (var key in map) values.push(map[key]);
	  return values;
	};
	
	var entries = function(map) {
	  var entries = [];
	  for (var key in map) entries.push({key: key, value: map[key]});
	  return entries;
	};
	
	exports.nest = nest;
	exports.set = set;
	exports.map = map;
	exports.keys = keys;
	exports.values = values;
	exports.entries = entries;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	function linear(t) {
	  return +t;
	}
	
	function quadIn(t) {
	  return t * t;
	}
	
	function quadOut(t) {
	  return t * (2 - t);
	}
	
	function quadInOut(t) {
	  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
	}
	
	function cubicIn(t) {
	  return t * t * t;
	}
	
	function cubicOut(t) {
	  return --t * t * t + 1;
	}
	
	function cubicInOut(t) {
	  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
	}
	
	var exponent = 3;
	
	var polyIn = (function custom(e) {
	  e = +e;
	
	  function polyIn(t) {
	    return Math.pow(t, e);
	  }
	
	  polyIn.exponent = custom;
	
	  return polyIn;
	})(exponent);
	
	var polyOut = (function custom(e) {
	  e = +e;
	
	  function polyOut(t) {
	    return 1 - Math.pow(1 - t, e);
	  }
	
	  polyOut.exponent = custom;
	
	  return polyOut;
	})(exponent);
	
	var polyInOut = (function custom(e) {
	  e = +e;
	
	  function polyInOut(t) {
	    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
	  }
	
	  polyInOut.exponent = custom;
	
	  return polyInOut;
	})(exponent);
	
	var pi = Math.PI;
	var halfPi = pi / 2;
	
	function sinIn(t) {
	  return 1 - Math.cos(t * halfPi);
	}
	
	function sinOut(t) {
	  return Math.sin(t * halfPi);
	}
	
	function sinInOut(t) {
	  return (1 - Math.cos(pi * t)) / 2;
	}
	
	function expIn(t) {
	  return Math.pow(2, 10 * t - 10);
	}
	
	function expOut(t) {
	  return 1 - Math.pow(2, -10 * t);
	}
	
	function expInOut(t) {
	  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
	}
	
	function circleIn(t) {
	  return 1 - Math.sqrt(1 - t * t);
	}
	
	function circleOut(t) {
	  return Math.sqrt(1 - --t * t);
	}
	
	function circleInOut(t) {
	  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
	}
	
	var b1 = 4 / 11;
	var b2 = 6 / 11;
	var b3 = 8 / 11;
	var b4 = 3 / 4;
	var b5 = 9 / 11;
	var b6 = 10 / 11;
	var b7 = 15 / 16;
	var b8 = 21 / 22;
	var b9 = 63 / 64;
	var b0 = 1 / b1 / b1;
	
	function bounceIn(t) {
	  return 1 - bounceOut(1 - t);
	}
	
	function bounceOut(t) {
	  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
	}
	
	function bounceInOut(t) {
	  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
	}
	
	var overshoot = 1.70158;
	
	var backIn = (function custom(s) {
	  s = +s;
	
	  function backIn(t) {
	    return t * t * ((s + 1) * t - s);
	  }
	
	  backIn.overshoot = custom;
	
	  return backIn;
	})(overshoot);
	
	var backOut = (function custom(s) {
	  s = +s;
	
	  function backOut(t) {
	    return --t * t * ((s + 1) * t + s) + 1;
	  }
	
	  backOut.overshoot = custom;
	
	  return backOut;
	})(overshoot);
	
	var backInOut = (function custom(s) {
	  s = +s;
	
	  function backInOut(t) {
	    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
	  }
	
	  backInOut.overshoot = custom;
	
	  return backInOut;
	})(overshoot);
	
	var tau = 2 * Math.PI;
	var amplitude = 1;
	var period = 0.3;
	
	var elasticIn = (function custom(a, p) {
	  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	  function elasticIn(t) {
	    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
	  }
	
	  elasticIn.amplitude = function(a) { return custom(a, p * tau); };
	  elasticIn.period = function(p) { return custom(a, p); };
	
	  return elasticIn;
	})(amplitude, period);
	
	var elasticOut = (function custom(a, p) {
	  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	  function elasticOut(t) {
	    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
	  }
	
	  elasticOut.amplitude = function(a) { return custom(a, p * tau); };
	  elasticOut.period = function(p) { return custom(a, p); };
	
	  return elasticOut;
	})(amplitude, period);
	
	var elasticInOut = (function custom(a, p) {
	  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	  function elasticInOut(t) {
	    return ((t = t * 2 - 1) < 0
	        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)
	        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
	  }
	
	  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };
	  elasticInOut.period = function(p) { return custom(a, p); };
	
	  return elasticInOut;
	})(amplitude, period);
	
	exports.easeLinear = linear;
	exports.easeQuad = quadInOut;
	exports.easeQuadIn = quadIn;
	exports.easeQuadOut = quadOut;
	exports.easeQuadInOut = quadInOut;
	exports.easeCubic = cubicInOut;
	exports.easeCubicIn = cubicIn;
	exports.easeCubicOut = cubicOut;
	exports.easeCubicInOut = cubicInOut;
	exports.easePoly = polyInOut;
	exports.easePolyIn = polyIn;
	exports.easePolyOut = polyOut;
	exports.easePolyInOut = polyInOut;
	exports.easeSin = sinInOut;
	exports.easeSinIn = sinIn;
	exports.easeSinOut = sinOut;
	exports.easeSinInOut = sinInOut;
	exports.easeExp = expInOut;
	exports.easeExpIn = expIn;
	exports.easeExpOut = expOut;
	exports.easeExpInOut = expInOut;
	exports.easeCircle = circleInOut;
	exports.easeCircleIn = circleIn;
	exports.easeCircleOut = circleOut;
	exports.easeCircleInOut = circleInOut;
	exports.easeBounce = bounceOut;
	exports.easeBounceIn = bounceIn;
	exports.easeBounceOut = bounceOut;
	exports.easeBounceInOut = bounceInOut;
	exports.easeBack = backInOut;
	exports.easeBackIn = backIn;
	exports.easeBackOut = backOut;
	exports.easeBackInOut = backInOut;
	exports.easeElastic = elasticOut;
	exports.easeElasticIn = elasticIn;
	exports.easeElasticOut = elasticOut;
	exports.easeElasticInOut = elasticInOut;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-format/ Version 1.2.1. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	// Computes the decimal coefficient and exponent of the specified number x with
	// significant digits p, where x is positive and p is in [1, 21] or undefined.
	// For example, formatDecimal(1.23) returns ["123", 0].
	var formatDecimal = function(x, p) {
	  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
	  var i, coefficient = x.slice(0, i);
	
	  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
	  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
	  return [
	    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
	    +x.slice(i + 1)
	  ];
	};
	
	var exponent = function(x) {
	  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
	};
	
	var formatGroup = function(grouping, thousands) {
	  return function(value, width) {
	    var i = value.length,
	        t = [],
	        j = 0,
	        g = grouping[0],
	        length = 0;
	
	    while (i > 0 && g > 0) {
	      if (length + g + 1 > width) g = Math.max(1, width - length);
	      t.push(value.substring(i -= g, i + g));
	      if ((length += g + 1) > width) break;
	      g = grouping[j = (j + 1) % grouping.length];
	    }
	
	    return t.reverse().join(thousands);
	  };
	};
	
	var formatNumerals = function(numerals) {
	  return function(value) {
	    return value.replace(/[0-9]/g, function(i) {
	      return numerals[+i];
	    });
	  };
	};
	
	var formatDefault = function(x, p) {
	  x = x.toPrecision(p);
	
	  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
	    switch (x[i]) {
	      case ".": i0 = i1 = i; break;
	      case "0": if (i0 === 0) i0 = i; i1 = i; break;
	      case "e": break out;
	      default: if (i0 > 0) i0 = 0; break;
	    }
	  }
	
	  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
	};
	
	var prefixExponent;
	
	var formatPrefixAuto = function(x, p) {
	  var d = formatDecimal(x, p);
	  if (!d) return x + "";
	  var coefficient = d[0],
	      exponent = d[1],
	      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
	      n = coefficient.length;
	  return i === n ? coefficient
	      : i > n ? coefficient + new Array(i - n + 1).join("0")
	      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
	      : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
	};
	
	var formatRounded = function(x, p) {
	  var d = formatDecimal(x, p);
	  if (!d) return x + "";
	  var coefficient = d[0],
	      exponent = d[1];
	  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
	      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
	      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
	};
	
	var formatTypes = {
	  "": formatDefault,
	  "%": function(x, p) { return (x * 100).toFixed(p); },
	  "b": function(x) { return Math.round(x).toString(2); },
	  "c": function(x) { return x + ""; },
	  "d": function(x) { return Math.round(x).toString(10); },
	  "e": function(x, p) { return x.toExponential(p); },
	  "f": function(x, p) { return x.toFixed(p); },
	  "g": function(x, p) { return x.toPrecision(p); },
	  "o": function(x) { return Math.round(x).toString(8); },
	  "p": function(x, p) { return formatRounded(x * 100, p); },
	  "r": formatRounded,
	  "s": formatPrefixAuto,
	  "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
	  "x": function(x) { return Math.round(x).toString(16); }
	};
	
	// [[fill]align][sign][symbol][0][width][,][.precision][type]
	var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
	
	function formatSpecifier(specifier) {
	  return new FormatSpecifier(specifier);
	}
	
	formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof
	
	function FormatSpecifier(specifier) {
	  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
	
	  var match,
	      fill = match[1] || " ",
	      align = match[2] || ">",
	      sign = match[3] || "-",
	      symbol = match[4] || "",
	      zero = !!match[5],
	      width = match[6] && +match[6],
	      comma = !!match[7],
	      precision = match[8] && +match[8].slice(1),
	      type = match[9] || "";
	
	  // The "n" type is an alias for ",g".
	  if (type === "n") comma = true, type = "g";
	
	  // Map invalid types to the default format.
	  else if (!formatTypes[type]) type = "";
	
	  // If zero fill is specified, padding goes after sign and before digits.
	  if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";
	
	  this.fill = fill;
	  this.align = align;
	  this.sign = sign;
	  this.symbol = symbol;
	  this.zero = zero;
	  this.width = width;
	  this.comma = comma;
	  this.precision = precision;
	  this.type = type;
	}
	
	FormatSpecifier.prototype.toString = function() {
	  return this.fill
	      + this.align
	      + this.sign
	      + this.symbol
	      + (this.zero ? "0" : "")
	      + (this.width == null ? "" : Math.max(1, this.width | 0))
	      + (this.comma ? "," : "")
	      + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
	      + this.type;
	};
	
	var identity = function(x) {
	  return x;
	};
	
	var prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];
	
	var formatLocale = function(locale) {
	  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
	      currency = locale.currency,
	      decimal = locale.decimal,
	      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,
	      percent = locale.percent || "%";
	
	  function newFormat(specifier) {
	    specifier = formatSpecifier(specifier);
	
	    var fill = specifier.fill,
	        align = specifier.align,
	        sign = specifier.sign,
	        symbol = specifier.symbol,
	        zero = specifier.zero,
	        width = specifier.width,
	        comma = specifier.comma,
	        precision = specifier.precision,
	        type = specifier.type;
	
	    // Compute the prefix and suffix.
	    // For SI-prefix, the suffix is lazily computed.
	    var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
	        suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : "";
	
	    // What format function should we use?
	    // Is this an integer type?
	    // Can this type generate exponential notation?
	    var formatType = formatTypes[type],
	        maybeSuffix = !type || /[defgprs%]/.test(type);
	
	    // Set the default precision if not specified,
	    // or clamp the specified precision to the supported range.
	    // For significant precision, it must be in [1, 21].
	    // For fixed precision, it must be in [0, 20].
	    precision = precision == null ? (type ? 6 : 12)
	        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
	        : Math.max(0, Math.min(20, precision));
	
	    function format(value) {
	      var valuePrefix = prefix,
	          valueSuffix = suffix,
	          i, n, c;
	
	      if (type === "c") {
	        valueSuffix = formatType(value) + valueSuffix;
	        value = "";
	      } else {
	        value = +value;
	
	        // Perform the initial formatting.
	        var valueNegative = value < 0;
	        value = formatType(Math.abs(value), precision);
	
	        // If a negative value rounds to zero during formatting, treat as positive.
	        if (valueNegative && +value === 0) valueNegative = false;
	
	        // Compute the prefix and suffix.
	        valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
	        valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
	
	        // Break the formatted value into the integer “value” part that can be
	        // grouped, and fractional or exponential “suffix” part that is not.
	        if (maybeSuffix) {
	          i = -1, n = value.length;
	          while (++i < n) {
	            if (c = value.charCodeAt(i), 48 > c || c > 57) {
	              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
	              value = value.slice(0, i);
	              break;
	            }
	          }
	        }
	      }
	
	      // If the fill character is not "0", grouping is applied before padding.
	      if (comma && !zero) value = group(value, Infinity);
	
	      // Compute the padding.
	      var length = valuePrefix.length + value.length + valueSuffix.length,
	          padding = length < width ? new Array(width - length + 1).join(fill) : "";
	
	      // If the fill character is "0", grouping is applied after padding.
	      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
	
	      // Reconstruct the final output based on the desired alignment.
	      switch (align) {
	        case "<": value = valuePrefix + value + valueSuffix + padding; break;
	        case "=": value = valuePrefix + padding + value + valueSuffix; break;
	        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
	        default: value = padding + valuePrefix + value + valueSuffix; break;
	      }
	
	      return numerals(value);
	    }
	
	    format.toString = function() {
	      return specifier + "";
	    };
	
	    return format;
	  }
	
	  function formatPrefix(specifier, value) {
	    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
	        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
	        k = Math.pow(10, -e),
	        prefix = prefixes[8 + e / 3];
	    return function(value) {
	      return f(k * value) + prefix;
	    };
	  }
	
	  return {
	    format: newFormat,
	    formatPrefix: formatPrefix
	  };
	};
	
	var locale;
	
	
	
	defaultLocale({
	  decimal: ".",
	  thousands: ",",
	  grouping: [3],
	  currency: ["$", ""]
	});
	
	function defaultLocale(definition) {
	  locale = formatLocale(definition);
	  exports.format = locale.format;
	  exports.formatPrefix = locale.formatPrefix;
	  return locale;
	}
	
	var precisionFixed = function(step) {
	  return Math.max(0, -exponent(Math.abs(step)));
	};
	
	var precisionPrefix = function(step, value) {
	  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
	};
	
	var precisionRound = function(step, max) {
	  step = Math.abs(step), max = Math.abs(max) - step;
	  return Math.max(0, exponent(max) - exponent(step)) + 1;
	};
	
	exports.formatDefaultLocale = defaultLocale;
	exports.formatLocale = formatLocale;
	exports.formatSpecifier = formatSpecifier;
	exports.precisionFixed = precisionFixed;
	exports.precisionPrefix = precisionPrefix;
	exports.precisionRound = precisionRound;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var pi = Math.PI;
	var tau = 2 * pi;
	var epsilon = 1e-6;
	var tauEpsilon = tau - epsilon;
	
	function Path() {
	  this._x0 = this._y0 = // start of current subpath
	  this._x1 = this._y1 = null; // end of current subpath
	  this._ = "";
	}
	
	function path() {
	  return new Path;
	}
	
	Path.prototype = path.prototype = {
	  constructor: Path,
	  moveTo: function(x, y) {
	    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
	  },
	  closePath: function() {
	    if (this._x1 !== null) {
	      this._x1 = this._x0, this._y1 = this._y0;
	      this._ += "Z";
	    }
	  },
	  lineTo: function(x, y) {
	    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  quadraticCurveTo: function(x1, y1, x, y) {
	    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
	    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  arcTo: function(x1, y1, x2, y2, r) {
	    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
	    var x0 = this._x1,
	        y0 = this._y1,
	        x21 = x2 - x1,
	        y21 = y2 - y1,
	        x01 = x0 - x1,
	        y01 = y0 - y1,
	        l01_2 = x01 * x01 + y01 * y01;
	
	    // Is the radius negative? Error.
	    if (r < 0) throw new Error("negative radius: " + r);
	
	    // Is this path empty? Move to (x1,y1).
	    if (this._x1 === null) {
	      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
	    }
	
	    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
	    else if (!(l01_2 > epsilon)) {}
	
	    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
	    // Equivalently, is (x1,y1) coincident with (x2,y2)?
	    // Or, is the radius zero? Line to (x1,y1).
	    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
	      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
	    }
	
	    // Otherwise, draw an arc!
	    else {
	      var x20 = x2 - x0,
	          y20 = y2 - y0,
	          l21_2 = x21 * x21 + y21 * y21,
	          l20_2 = x20 * x20 + y20 * y20,
	          l21 = Math.sqrt(l21_2),
	          l01 = Math.sqrt(l01_2),
	          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
	          t01 = l / l01,
	          t21 = l / l21;
	
	      // If the start tangent is not coincident with (x0,y0), line to.
	      if (Math.abs(t01 - 1) > epsilon) {
	        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
	      }
	
	      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
	    }
	  },
	  arc: function(x, y, r, a0, a1, ccw) {
	    x = +x, y = +y, r = +r;
	    var dx = r * Math.cos(a0),
	        dy = r * Math.sin(a0),
	        x0 = x + dx,
	        y0 = y + dy,
	        cw = 1 ^ ccw,
	        da = ccw ? a0 - a1 : a1 - a0;
	
	    // Is the radius negative? Error.
	    if (r < 0) throw new Error("negative radius: " + r);
	
	    // Is this path empty? Move to (x0,y0).
	    if (this._x1 === null) {
	      this._ += "M" + x0 + "," + y0;
	    }
	
	    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
	    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
	      this._ += "L" + x0 + "," + y0;
	    }
	
	    // Is this arc empty? We’re done.
	    if (!r) return;
	
	    // Does the angle go the wrong way? Flip the direction.
	    if (da < 0) da = da % tau + tau;
	
	    // Is this a complete circle? Draw two arcs to complete the circle.
	    if (da > tauEpsilon) {
	      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
	    }
	
	    // Is this arc non-empty? Draw an arc!
	    else if (da > epsilon) {
	      this._ += "A" + r + "," + r + ",0," + (+(da >= pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
	    }
	  },
	  rect: function(x, y, w, h) {
	    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
	  },
	  toString: function() {
	    return this._;
	  }
	};
	
	exports.path = path;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports, __webpack_require__(608), __webpack_require__(609), __webpack_require__(299), __webpack_require__(611), __webpack_require__(301), __webpack_require__(614), __webpack_require__(298)) :
		typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :
		(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));
	}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';
	
	var array = Array.prototype;
	
	var map$1 = array.map;
	var slice = array.slice;
	
	var implicit = {name: "implicit"};
	
	function ordinal(range$$1) {
	  var index = d3Collection.map(),
	      domain = [],
	      unknown = implicit;
	
	  range$$1 = range$$1 == null ? [] : slice.call(range$$1);
	
	  function scale(d) {
	    var key = d + "", i = index.get(key);
	    if (!i) {
	      if (unknown !== implicit) return unknown;
	      index.set(key, i = domain.push(d));
	    }
	    return range$$1[(i - 1) % range$$1.length];
	  }
	
	  scale.domain = function(_) {
	    if (!arguments.length) return domain.slice();
	    domain = [], index = d3Collection.map();
	    var i = -1, n = _.length, d, key;
	    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
	    return scale;
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();
	  };
	
	  scale.unknown = function(_) {
	    return arguments.length ? (unknown = _, scale) : unknown;
	  };
	
	  scale.copy = function() {
	    return ordinal()
	        .domain(domain)
	        .range(range$$1)
	        .unknown(unknown);
	  };
	
	  return scale;
	}
	
	function band() {
	  var scale = ordinal().unknown(undefined),
	      domain = scale.domain,
	      ordinalRange = scale.range,
	      range$$1 = [0, 1],
	      step,
	      bandwidth,
	      round = false,
	      paddingInner = 0,
	      paddingOuter = 0,
	      align = 0.5;
	
	  delete scale.unknown;
	
	  function rescale() {
	    var n = domain().length,
	        reverse = range$$1[1] < range$$1[0],
	        start = range$$1[reverse - 0],
	        stop = range$$1[1 - reverse];
	    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
	    if (round) step = Math.floor(step);
	    start += (stop - start - step * (n - paddingInner)) * align;
	    bandwidth = step * (1 - paddingInner);
	    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
	    var values = d3Array.range(n).map(function(i) { return start + step * i; });
	    return ordinalRange(reverse ? values.reverse() : values);
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain(_), rescale()) : domain();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();
	  };
	
	  scale.rangeRound = function(_) {
	    return range$$1 = [+_[0], +_[1]], round = true, rescale();
	  };
	
	  scale.bandwidth = function() {
	    return bandwidth;
	  };
	
	  scale.step = function() {
	    return step;
	  };
	
	  scale.round = function(_) {
	    return arguments.length ? (round = !!_, rescale()) : round;
	  };
	
	  scale.padding = function(_) {
	    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	  };
	
	  scale.paddingInner = function(_) {
	    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	  };
	
	  scale.paddingOuter = function(_) {
	    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
	  };
	
	  scale.align = function(_) {
	    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
	  };
	
	  scale.copy = function() {
	    return band()
	        .domain(domain())
	        .range(range$$1)
	        .round(round)
	        .paddingInner(paddingInner)
	        .paddingOuter(paddingOuter)
	        .align(align);
	  };
	
	  return rescale();
	}
	
	function pointish(scale) {
	  var copy = scale.copy;
	
	  scale.padding = scale.paddingOuter;
	  delete scale.paddingInner;
	  delete scale.paddingOuter;
	
	  scale.copy = function() {
	    return pointish(copy());
	  };
	
	  return scale;
	}
	
	function point() {
	  return pointish(band().paddingInner(1));
	}
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	var number = function(x) {
	  return +x;
	};
	
	var unit = [0, 1];
	
	function deinterpolateLinear(a, b) {
	  return (b -= (a = +a))
	      ? function(x) { return (x - a) / b; }
	      : constant(b);
	}
	
	function deinterpolateClamp(deinterpolate) {
	  return function(a, b) {
	    var d = deinterpolate(a = +a, b = +b);
	    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
	  };
	}
	
	function reinterpolateClamp(reinterpolate) {
	  return function(a, b) {
	    var r = reinterpolate(a = +a, b = +b);
	    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
	  };
	}
	
	function bimap(domain, range$$1, deinterpolate, reinterpolate) {
	  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];
	  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
	  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
	  return function(x) { return r0(d0(x)); };
	}
	
	function polymap(domain, range$$1, deinterpolate, reinterpolate) {
	  var j = Math.min(domain.length, range$$1.length) - 1,
	      d = new Array(j),
	      r = new Array(j),
	      i = -1;
	
	  // Reverse descending domains.
	  if (domain[j] < domain[0]) {
	    domain = domain.slice().reverse();
	    range$$1 = range$$1.slice().reverse();
	  }
	
	  while (++i < j) {
	    d[i] = deinterpolate(domain[i], domain[i + 1]);
	    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);
	  }
	
	  return function(x) {
	    var i = d3Array.bisect(domain, x, 1, j) - 1;
	    return r[i](d[i](x));
	  };
	}
	
	function copy(source, target) {
	  return target
	      .domain(source.domain())
	      .range(source.range())
	      .interpolate(source.interpolate())
	      .clamp(source.clamp());
	}
	
	// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
	// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
	function continuous(deinterpolate, reinterpolate) {
	  var domain = unit,
	      range$$1 = unit,
	      interpolate$$1 = d3Interpolate.interpolate,
	      clamp = false,
	      piecewise,
	      output,
	      input;
	
	  function rescale() {
	    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;
	    output = input = null;
	    return scale;
	  }
	
	  function scale(x) {
	    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);
	  }
	
	  scale.invert = function(y) {
	    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
	  };
	
	  scale.rangeRound = function(_) {
	    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();
	  };
	
	  scale.clamp = function(_) {
	    return arguments.length ? (clamp = !!_, rescale()) : clamp;
	  };
	
	  scale.interpolate = function(_) {
	    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;
	  };
	
	  return rescale();
	}
	
	var tickFormat = function(domain, count, specifier) {
	  var start = domain[0],
	      stop = domain[domain.length - 1],
	      step = d3Array.tickStep(start, stop, count == null ? 10 : count),
	      precision;
	  specifier = d3Format.formatSpecifier(specifier == null ? ",f" : specifier);
	  switch (specifier.type) {
	    case "s": {
	      var value = Math.max(Math.abs(start), Math.abs(stop));
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;
	      return d3Format.formatPrefix(specifier, value);
	    }
	    case "":
	    case "e":
	    case "g":
	    case "p":
	    case "r": {
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
	      break;
	    }
	    case "f":
	    case "%": {
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
	      break;
	    }
	  }
	  return d3Format.format(specifier);
	};
	
	function linearish(scale) {
	  var domain = scale.domain;
	
	  scale.ticks = function(count) {
	    var d = domain();
	    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    return tickFormat(domain(), count, specifier);
	  };
	
	  scale.nice = function(count) {
	    if (count == null) count = 10;
	
	    var d = domain(),
	        i0 = 0,
	        i1 = d.length - 1,
	        start = d[i0],
	        stop = d[i1],
	        step;
	
	    if (stop < start) {
	      step = start, start = stop, stop = step;
	      step = i0, i0 = i1, i1 = step;
	    }
	
	    step = d3Array.tickIncrement(start, stop, count);
	
	    if (step > 0) {
	      start = Math.floor(start / step) * step;
	      stop = Math.ceil(stop / step) * step;
	      step = d3Array.tickIncrement(start, stop, count);
	    } else if (step < 0) {
	      start = Math.ceil(start * step) / step;
	      stop = Math.floor(stop * step) / step;
	      step = d3Array.tickIncrement(start, stop, count);
	    }
	
	    if (step > 0) {
	      d[i0] = Math.floor(start / step) * step;
	      d[i1] = Math.ceil(stop / step) * step;
	      domain(d);
	    } else if (step < 0) {
	      d[i0] = Math.ceil(start * step) / step;
	      d[i1] = Math.floor(stop * step) / step;
	      domain(d);
	    }
	
	    return scale;
	  };
	
	  return scale;
	}
	
	function linear() {
	  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);
	
	  scale.copy = function() {
	    return copy(scale, linear());
	  };
	
	  return linearish(scale);
	}
	
	function identity() {
	  var domain = [0, 1];
	
	  function scale(x) {
	    return +x;
	  }
	
	  scale.invert = scale;
	
	  scale.domain = scale.range = function(_) {
	    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();
	  };
	
	  scale.copy = function() {
	    return identity().domain(domain);
	  };
	
	  return linearish(scale);
	}
	
	var nice = function(domain, interval) {
	  domain = domain.slice();
	
	  var i0 = 0,
	      i1 = domain.length - 1,
	      x0 = domain[i0],
	      x1 = domain[i1],
	      t;
	
	  if (x1 < x0) {
	    t = i0, i0 = i1, i1 = t;
	    t = x0, x0 = x1, x1 = t;
	  }
	
	  domain[i0] = interval.floor(x0);
	  domain[i1] = interval.ceil(x1);
	  return domain;
	};
	
	function deinterpolate(a, b) {
	  return (b = Math.log(b / a))
	      ? function(x) { return Math.log(x / a) / b; }
	      : constant(b);
	}
	
	function reinterpolate(a, b) {
	  return a < 0
	      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }
	      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };
	}
	
	function pow10(x) {
	  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
	}
	
	function powp(base) {
	  return base === 10 ? pow10
	      : base === Math.E ? Math.exp
	      : function(x) { return Math.pow(base, x); };
	}
	
	function logp(base) {
	  return base === Math.E ? Math.log
	      : base === 10 && Math.log10
	      || base === 2 && Math.log2
	      || (base = Math.log(base), function(x) { return Math.log(x) / base; });
	}
	
	function reflect(f) {
	  return function(x) {
	    return -f(-x);
	  };
	}
	
	function log() {
	  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),
	      domain = scale.domain,
	      base = 10,
	      logs = logp(10),
	      pows = powp(10);
	
	  function rescale() {
	    logs = logp(base), pows = powp(base);
	    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
	    return scale;
	  }
	
	  scale.base = function(_) {
	    return arguments.length ? (base = +_, rescale()) : base;
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain(_), rescale()) : domain();
	  };
	
	  scale.ticks = function(count) {
	    var d = domain(),
	        u = d[0],
	        v = d[d.length - 1],
	        r;
	
	    if (r = v < u) i = u, u = v, v = i;
	
	    var i = logs(u),
	        j = logs(v),
	        p,
	        k,
	        t,
	        n = count == null ? 10 : +count,
	        z = [];
	
	    if (!(base % 1) && j - i < n) {
	      i = Math.round(i) - 1, j = Math.round(j) + 1;
	      if (u > 0) for (; i < j; ++i) {
	        for (k = 1, p = pows(i); k < base; ++k) {
	          t = p * k;
	          if (t < u) continue;
	          if (t > v) break;
	          z.push(t);
	        }
	      } else for (; i < j; ++i) {
	        for (k = base - 1, p = pows(i); k >= 1; --k) {
	          t = p * k;
	          if (t < u) continue;
	          if (t > v) break;
	          z.push(t);
	        }
	      }
	    } else {
	      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);
	    }
	
	    return r ? z.reverse() : z;
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
	    if (typeof specifier !== "function") specifier = d3Format.format(specifier);
	    if (count === Infinity) return specifier;
	    if (count == null) count = 10;
	    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
	    return function(d) {
	      var i = d / pows(Math.round(logs(d)));
	      if (i * base < base - 0.5) i *= base;
	      return i <= k ? specifier(d) : "";
	    };
	  };
	
	  scale.nice = function() {
	    return domain(nice(domain(), {
	      floor: function(x) { return pows(Math.floor(logs(x))); },
	      ceil: function(x) { return pows(Math.ceil(logs(x))); }
	    }));
	  };
	
	  scale.copy = function() {
	    return copy(scale, log().base(base));
	  };
	
	  return scale;
	}
	
	function raise(x, exponent) {
	  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
	}
	
	function pow() {
	  var exponent = 1,
	      scale = continuous(deinterpolate, reinterpolate),
	      domain = scale.domain;
	
	  function deinterpolate(a, b) {
	    return (b = raise(b, exponent) - (a = raise(a, exponent)))
	        ? function(x) { return (raise(x, exponent) - a) / b; }
	        : constant(b);
	  }
	
	  function reinterpolate(a, b) {
	    b = raise(b, exponent) - (a = raise(a, exponent));
	    return function(t) { return raise(a + b * t, 1 / exponent); };
	  }
	
	  scale.exponent = function(_) {
	    return arguments.length ? (exponent = +_, domain(domain())) : exponent;
	  };
	
	  scale.copy = function() {
	    return copy(scale, pow().exponent(exponent));
	  };
	
	  return linearish(scale);
	}
	
	function sqrt() {
	  return pow().exponent(0.5);
	}
	
	function quantile$1() {
	  var domain = [],
	      range$$1 = [],
	      thresholds = [];
	
	  function rescale() {
	    var i = 0, n = Math.max(1, range$$1.length);
	    thresholds = new Array(n - 1);
	    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);
	    return scale;
	  }
	
	  function scale(x) {
	    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];
	  }
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return i < 0 ? [NaN, NaN] : [
	      i > 0 ? thresholds[i - 1] : domain[0],
	      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
	    ];
	  };
	
	  scale.domain = function(_) {
	    if (!arguments.length) return domain.slice();
	    domain = [];
	    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
	    domain.sort(d3Array.ascending);
	    return rescale();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
	  };
	
	  scale.quantiles = function() {
	    return thresholds.slice();
	  };
	
	  scale.copy = function() {
	    return quantile$1()
	        .domain(domain)
	        .range(range$$1);
	  };
	
	  return scale;
	}
	
	function quantize() {
	  var x0 = 0,
	      x1 = 1,
	      n = 1,
	      domain = [0.5],
	      range$$1 = [0, 1];
	
	  function scale(x) {
	    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
	  }
	
	  function rescale() {
	    var i = -1;
	    domain = new Array(n);
	    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
	    return scale;
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();
	  };
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return i < 0 ? [NaN, NaN]
	        : i < 1 ? [x0, domain[0]]
	        : i >= n ? [domain[n - 1], x1]
	        : [domain[i - 1], domain[i]];
	  };
	
	  scale.copy = function() {
	    return quantize()
	        .domain([x0, x1])
	        .range(range$$1);
	  };
	
	  return linearish(scale);
	}
	
	function threshold() {
	  var domain = [0.5],
	      range$$1 = [0, 1],
	      n = 1;
	
	  function scale(x) {
	    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();
	  };
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return [domain[i - 1], domain[i]];
	  };
	
	  scale.copy = function() {
	    return threshold()
	        .domain(domain)
	        .range(range$$1);
	  };
	
	  return scale;
	}
	
	var durationSecond = 1000;
	var durationMinute = durationSecond * 60;
	var durationHour = durationMinute * 60;
	var durationDay = durationHour * 24;
	var durationWeek = durationDay * 7;
	var durationMonth = durationDay * 30;
	var durationYear = durationDay * 365;
	
	function date(t) {
	  return new Date(t);
	}
	
	function number$1(t) {
	  return t instanceof Date ? +t : +new Date(+t);
	}
	
	function calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {
	  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),
	      invert = scale.invert,
	      domain = scale.domain;
	
	  var formatMillisecond = format$$1(".%L"),
	      formatSecond = format$$1(":%S"),
	      formatMinute = format$$1("%I:%M"),
	      formatHour = format$$1("%I %p"),
	      formatDay = format$$1("%a %d"),
	      formatWeek = format$$1("%b %d"),
	      formatMonth = format$$1("%B"),
	      formatYear = format$$1("%Y");
	
	  var tickIntervals = [
	    [second,  1,      durationSecond],
	    [second,  5,  5 * durationSecond],
	    [second, 15, 15 * durationSecond],
	    [second, 30, 30 * durationSecond],
	    [minute,  1,      durationMinute],
	    [minute,  5,  5 * durationMinute],
	    [minute, 15, 15 * durationMinute],
	    [minute, 30, 30 * durationMinute],
	    [  hour,  1,      durationHour  ],
	    [  hour,  3,  3 * durationHour  ],
	    [  hour,  6,  6 * durationHour  ],
	    [  hour, 12, 12 * durationHour  ],
	    [   day,  1,      durationDay   ],
	    [   day,  2,  2 * durationDay   ],
	    [  week,  1,      durationWeek  ],
	    [ month,  1,      durationMonth ],
	    [ month,  3,  3 * durationMonth ],
	    [  year,  1,      durationYear  ]
	  ];
	
	  function tickFormat(date) {
	    return (second(date) < date ? formatMillisecond
	        : minute(date) < date ? formatSecond
	        : hour(date) < date ? formatMinute
	        : day(date) < date ? formatHour
	        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
	        : year(date) < date ? formatMonth
	        : formatYear)(date);
	  }
	
	  function tickInterval(interval, start, stop, step) {
	    if (interval == null) interval = 10;
	
	    // If a desired tick count is specified, pick a reasonable tick interval
	    // based on the extent of the domain and a rough estimate of tick size.
	    // Otherwise, assume interval is already a time interval and use it.
	    if (typeof interval === "number") {
	      var target = Math.abs(stop - start) / interval,
	          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);
	      if (i === tickIntervals.length) {
	        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);
	        interval = year;
	      } else if (i) {
	        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
	        step = i[1];
	        interval = i[0];
	      } else {
	        step = Math.max(d3Array.tickStep(start, stop, interval), 1);
	        interval = millisecond;
	      }
	    }
	
	    return step == null ? interval : interval.every(step);
	  }
	
	  scale.invert = function(y) {
	    return new Date(invert(y));
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);
	  };
	
	  scale.ticks = function(interval, step) {
	    var d = domain(),
	        t0 = d[0],
	        t1 = d[d.length - 1],
	        r = t1 < t0,
	        t;
	    if (r) t = t0, t0 = t1, t1 = t;
	    t = tickInterval(interval, t0, t1, step);
	    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
	    return r ? t.reverse() : t;
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    return specifier == null ? tickFormat : format$$1(specifier);
	  };
	
	  scale.nice = function(interval, step) {
	    var d = domain();
	    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
	        ? domain(nice(d, interval))
	        : scale;
	  };
	
	  scale.copy = function() {
	    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));
	  };
	
	  return scale;
	}
	
	var time = function() {
	  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
	};
	
	var utcTime = function() {
	  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
	};
	
	var colors = function(s) {
	  return s.match(/.{6}/g).map(function(x) {
	    return "#" + x;
	  });
	};
	
	var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
	
	var category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
	
	var category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
	
	var category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
	
	var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));
	
	var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));
	
	var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));
	
	var rainbow = d3Color.cubehelix();
	
	var rainbow$1 = function(t) {
	  if (t < 0 || t > 1) t -= Math.floor(t);
	  var ts = Math.abs(t - 0.5);
	  rainbow.h = 360 * t - 100;
	  rainbow.s = 1.5 - 1.5 * ts;
	  rainbow.l = 0.8 - 0.9 * ts;
	  return rainbow + "";
	};
	
	function ramp(range$$1) {
	  var n = range$$1.length;
	  return function(t) {
	    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
	  };
	}
	
	var viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
	
	var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
	
	var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
	
	var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
	
	function sequential(interpolator) {
	  var x0 = 0,
	      x1 = 1,
	      clamp = false;
	
	  function scale(x) {
	    var t = (x - x0) / (x1 - x0);
	    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
	  };
	
	  scale.clamp = function(_) {
	    return arguments.length ? (clamp = !!_, scale) : clamp;
	  };
	
	  scale.interpolator = function(_) {
	    return arguments.length ? (interpolator = _, scale) : interpolator;
	  };
	
	  scale.copy = function() {
	    return sequential(interpolator).domain([x0, x1]).clamp(clamp);
	  };
	
	  return linearish(scale);
	}
	
	exports.scaleBand = band;
	exports.scalePoint = point;
	exports.scaleIdentity = identity;
	exports.scaleLinear = linear;
	exports.scaleLog = log;
	exports.scaleOrdinal = ordinal;
	exports.scaleImplicit = implicit;
	exports.scalePow = pow;
	exports.scaleSqrt = sqrt;
	exports.scaleQuantile = quantile$1;
	exports.scaleQuantize = quantize;
	exports.scaleThreshold = threshold;
	exports.scaleTime = time;
	exports.scaleUtc = utcTime;
	exports.schemeCategory10 = category10;
	exports.schemeCategory20b = category20b;
	exports.schemeCategory20c = category20c;
	exports.schemeCategory20 = category20;
	exports.interpolateCubehelixDefault = cubehelix$1;
	exports.interpolateRainbow = rainbow$1;
	exports.interpolateWarm = warm;
	exports.interpolateCool = cool;
	exports.interpolateViridis = viridis;
	exports.interpolateMagma = magma;
	exports.interpolateInferno = inferno;
	exports.interpolatePlasma = plasma;
	exports.scaleSequential = sequential;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-time-format/ Version 2.1.1. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports, __webpack_require__(301)) :
		typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :
		(factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Time) { 'use strict';
	
	function localDate(d) {
	  if (0 <= d.y && d.y < 100) {
	    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
	    date.setFullYear(d.y);
	    return date;
	  }
	  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
	}
	
	function utcDate(d) {
	  if (0 <= d.y && d.y < 100) {
	    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
	    date.setUTCFullYear(d.y);
	    return date;
	  }
	  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
	}
	
	function newYear(y) {
	  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
	}
	
	function formatLocale(locale) {
	  var locale_dateTime = locale.dateTime,
	      locale_date = locale.date,
	      locale_time = locale.time,
	      locale_periods = locale.periods,
	      locale_weekdays = locale.days,
	      locale_shortWeekdays = locale.shortDays,
	      locale_months = locale.months,
	      locale_shortMonths = locale.shortMonths;
	
	  var periodRe = formatRe(locale_periods),
	      periodLookup = formatLookup(locale_periods),
	      weekdayRe = formatRe(locale_weekdays),
	      weekdayLookup = formatLookup(locale_weekdays),
	      shortWeekdayRe = formatRe(locale_shortWeekdays),
	      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
	      monthRe = formatRe(locale_months),
	      monthLookup = formatLookup(locale_months),
	      shortMonthRe = formatRe(locale_shortMonths),
	      shortMonthLookup = formatLookup(locale_shortMonths);
	
	  var formats = {
	    "a": formatShortWeekday,
	    "A": formatWeekday,
	    "b": formatShortMonth,
	    "B": formatMonth,
	    "c": null,
	    "d": formatDayOfMonth,
	    "e": formatDayOfMonth,
	    "f": formatMicroseconds,
	    "H": formatHour24,
	    "I": formatHour12,
	    "j": formatDayOfYear,
	    "L": formatMilliseconds,
	    "m": formatMonthNumber,
	    "M": formatMinutes,
	    "p": formatPeriod,
	    "Q": formatUnixTimestamp,
	    "s": formatUnixTimestampSeconds,
	    "S": formatSeconds,
	    "u": formatWeekdayNumberMonday,
	    "U": formatWeekNumberSunday,
	    "V": formatWeekNumberISO,
	    "w": formatWeekdayNumberSunday,
	    "W": formatWeekNumberMonday,
	    "x": null,
	    "X": null,
	    "y": formatYear,
	    "Y": formatFullYear,
	    "Z": formatZone,
	    "%": formatLiteralPercent
	  };
	
	  var utcFormats = {
	    "a": formatUTCShortWeekday,
	    "A": formatUTCWeekday,
	    "b": formatUTCShortMonth,
	    "B": formatUTCMonth,
	    "c": null,
	    "d": formatUTCDayOfMonth,
	    "e": formatUTCDayOfMonth,
	    "f": formatUTCMicroseconds,
	    "H": formatUTCHour24,
	    "I": formatUTCHour12,
	    "j": formatUTCDayOfYear,
	    "L": formatUTCMilliseconds,
	    "m": formatUTCMonthNumber,
	    "M": formatUTCMinutes,
	    "p": formatUTCPeriod,
	    "Q": formatUnixTimestamp,
	    "s": formatUnixTimestampSeconds,
	    "S": formatUTCSeconds,
	    "u": formatUTCWeekdayNumberMonday,
	    "U": formatUTCWeekNumberSunday,
	    "V": formatUTCWeekNumberISO,
	    "w": formatUTCWeekdayNumberSunday,
	    "W": formatUTCWeekNumberMonday,
	    "x": null,
	    "X": null,
	    "y": formatUTCYear,
	    "Y": formatUTCFullYear,
	    "Z": formatUTCZone,
	    "%": formatLiteralPercent
	  };
	
	  var parses = {
	    "a": parseShortWeekday,
	    "A": parseWeekday,
	    "b": parseShortMonth,
	    "B": parseMonth,
	    "c": parseLocaleDateTime,
	    "d": parseDayOfMonth,
	    "e": parseDayOfMonth,
	    "f": parseMicroseconds,
	    "H": parseHour24,
	    "I": parseHour24,
	    "j": parseDayOfYear,
	    "L": parseMilliseconds,
	    "m": parseMonthNumber,
	    "M": parseMinutes,
	    "p": parsePeriod,
	    "Q": parseUnixTimestamp,
	    "s": parseUnixTimestampSeconds,
	    "S": parseSeconds,
	    "u": parseWeekdayNumberMonday,
	    "U": parseWeekNumberSunday,
	    "V": parseWeekNumberISO,
	    "w": parseWeekdayNumberSunday,
	    "W": parseWeekNumberMonday,
	    "x": parseLocaleDate,
	    "X": parseLocaleTime,
	    "y": parseYear,
	    "Y": parseFullYear,
	    "Z": parseZone,
	    "%": parseLiteralPercent
	  };
	
	  // These recursive directive definitions must be deferred.
	  formats.x = newFormat(locale_date, formats);
	  formats.X = newFormat(locale_time, formats);
	  formats.c = newFormat(locale_dateTime, formats);
	  utcFormats.x = newFormat(locale_date, utcFormats);
	  utcFormats.X = newFormat(locale_time, utcFormats);
	  utcFormats.c = newFormat(locale_dateTime, utcFormats);
	
	  function newFormat(specifier, formats) {
	    return function(date) {
	      var string = [],
	          i = -1,
	          j = 0,
	          n = specifier.length,
	          c,
	          pad,
	          format;
	
	      if (!(date instanceof Date)) date = new Date(+date);
	
	      while (++i < n) {
	        if (specifier.charCodeAt(i) === 37) {
	          string.push(specifier.slice(j, i));
	          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
	          else pad = c === "e" ? " " : "0";
	          if (format = formats[c]) c = format(date, pad);
	          string.push(c);
	          j = i + 1;
	        }
	      }
	
	      string.push(specifier.slice(j, i));
	      return string.join("");
	    };
	  }
	
	  function newParse(specifier, newDate) {
	    return function(string) {
	      var d = newYear(1900),
	          i = parseSpecifier(d, specifier, string += "", 0),
	          week, day;
	      if (i != string.length) return null;
	
	      // If a UNIX timestamp is specified, return it.
	      if ("Q" in d) return new Date(d.Q);
	
	      // The am-pm flag is 0 for AM, and 1 for PM.
	      if ("p" in d) d.H = d.H % 12 + d.p * 12;
	
	      // Convert day-of-week and week-of-year to day-of-year.
	      if ("V" in d) {
	        if (d.V < 1 || d.V > 53) return null;
	        if (!("w" in d)) d.w = 1;
	        if ("Z" in d) {
	          week = utcDate(newYear(d.y)), day = week.getUTCDay();
	          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);
	          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);
	          d.y = week.getUTCFullYear();
	          d.m = week.getUTCMonth();
	          d.d = week.getUTCDate() + (d.w + 6) % 7;
	        } else {
	          week = newDate(newYear(d.y)), day = week.getDay();
	          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);
	          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);
	          d.y = week.getFullYear();
	          d.m = week.getMonth();
	          d.d = week.getDate() + (d.w + 6) % 7;
	        }
	      } else if ("W" in d || "U" in d) {
	        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
	        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
	        d.m = 0;
	        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
	      }
	
	      // If a time zone is specified, all fields are interpreted as UTC and then
	      // offset according to the specified time zone.
	      if ("Z" in d) {
	        d.H += d.Z / 100 | 0;
	        d.M += d.Z % 100;
	        return utcDate(d);
	      }
	
	      // Otherwise, all fields are in local time.
	      return newDate(d);
	    };
	  }
	
	  function parseSpecifier(d, specifier, string, j) {
	    var i = 0,
	        n = specifier.length,
	        m = string.length,
	        c,
	        parse;
	
	    while (i < n) {
	      if (j >= m) return -1;
	      c = specifier.charCodeAt(i++);
	      if (c === 37) {
	        c = specifier.charAt(i++);
	        parse = parses[c in pads ? specifier.charAt(i++) : c];
	        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
	      } else if (c != string.charCodeAt(j++)) {
	        return -1;
	      }
	    }
	
	    return j;
	  }
	
	  function parsePeriod(d, string, i) {
	    var n = periodRe.exec(string.slice(i));
	    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseShortWeekday(d, string, i) {
	    var n = shortWeekdayRe.exec(string.slice(i));
	    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseWeekday(d, string, i) {
	    var n = weekdayRe.exec(string.slice(i));
	    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseShortMonth(d, string, i) {
	    var n = shortMonthRe.exec(string.slice(i));
	    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseMonth(d, string, i) {
	    var n = monthRe.exec(string.slice(i));
	    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseLocaleDateTime(d, string, i) {
	    return parseSpecifier(d, locale_dateTime, string, i);
	  }
	
	  function parseLocaleDate(d, string, i) {
	    return parseSpecifier(d, locale_date, string, i);
	  }
	
	  function parseLocaleTime(d, string, i) {
	    return parseSpecifier(d, locale_time, string, i);
	  }
	
	  function formatShortWeekday(d) {
	    return locale_shortWeekdays[d.getDay()];
	  }
	
	  function formatWeekday(d) {
	    return locale_weekdays[d.getDay()];
	  }
	
	  function formatShortMonth(d) {
	    return locale_shortMonths[d.getMonth()];
	  }
	
	  function formatMonth(d) {
	    return locale_months[d.getMonth()];
	  }
	
	  function formatPeriod(d) {
	    return locale_periods[+(d.getHours() >= 12)];
	  }
	
	  function formatUTCShortWeekday(d) {
	    return locale_shortWeekdays[d.getUTCDay()];
	  }
	
	  function formatUTCWeekday(d) {
	    return locale_weekdays[d.getUTCDay()];
	  }
	
	  function formatUTCShortMonth(d) {
	    return locale_shortMonths[d.getUTCMonth()];
	  }
	
	  function formatUTCMonth(d) {
	    return locale_months[d.getUTCMonth()];
	  }
	
	  function formatUTCPeriod(d) {
	    return locale_periods[+(d.getUTCHours() >= 12)];
	  }
	
	  return {
	    format: function(specifier) {
	      var f = newFormat(specifier += "", formats);
	      f.toString = function() { return specifier; };
	      return f;
	    },
	    parse: function(specifier) {
	      var p = newParse(specifier += "", localDate);
	      p.toString = function() { return specifier; };
	      return p;
	    },
	    utcFormat: function(specifier) {
	      var f = newFormat(specifier += "", utcFormats);
	      f.toString = function() { return specifier; };
	      return f;
	    },
	    utcParse: function(specifier) {
	      var p = newParse(specifier, utcDate);
	      p.toString = function() { return specifier; };
	      return p;
	    }
	  };
	}
	
	var pads = {"-": "", "_": " ", "0": "0"};
	var numberRe = /^\s*\d+/;
	var percentRe = /^%/;
	var requoteRe = /[\\^$*+?|[\]().{}]/g;
	
	function pad(value, fill, width) {
	  var sign = value < 0 ? "-" : "",
	      string = (sign ? -value : value) + "",
	      length = string.length;
	  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	}
	
	function requote(s) {
	  return s.replace(requoteRe, "\\$&");
	}
	
	function formatRe(names) {
	  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
	}
	
	function formatLookup(names) {
	  var map = {}, i = -1, n = names.length;
	  while (++i < n) map[names[i].toLowerCase()] = i;
	  return map;
	}
	
	function parseWeekdayNumberSunday(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 1));
	  return n ? (d.w = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekdayNumberMonday(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 1));
	  return n ? (d.u = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekNumberSunday(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.U = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekNumberISO(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.V = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekNumberMonday(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.W = +n[0], i + n[0].length) : -1;
	}
	
	function parseFullYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 4));
	  return n ? (d.y = +n[0], i + n[0].length) : -1;
	}
	
	function parseYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
	}
	
	function parseZone(d, string, i) {
	  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
	  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
	}
	
	function parseMonthNumber(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
	}
	
	function parseDayOfMonth(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.d = +n[0], i + n[0].length) : -1;
	}
	
	function parseDayOfYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 3));
	  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
	}
	
	function parseHour24(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.H = +n[0], i + n[0].length) : -1;
	}
	
	function parseMinutes(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.M = +n[0], i + n[0].length) : -1;
	}
	
	function parseSeconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.S = +n[0], i + n[0].length) : -1;
	}
	
	function parseMilliseconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 3));
	  return n ? (d.L = +n[0], i + n[0].length) : -1;
	}
	
	function parseMicroseconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 6));
	  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
	}
	
	function parseLiteralPercent(d, string, i) {
	  var n = percentRe.exec(string.slice(i, i + 1));
	  return n ? i + n[0].length : -1;
	}
	
	function parseUnixTimestamp(d, string, i) {
	  var n = numberRe.exec(string.slice(i));
	  return n ? (d.Q = +n[0], i + n[0].length) : -1;
	}
	
	function parseUnixTimestampSeconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i));
	  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;
	}
	
	function formatDayOfMonth(d, p) {
	  return pad(d.getDate(), p, 2);
	}
	
	function formatHour24(d, p) {
	  return pad(d.getHours(), p, 2);
	}
	
	function formatHour12(d, p) {
	  return pad(d.getHours() % 12 || 12, p, 2);
	}
	
	function formatDayOfYear(d, p) {
	  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);
	}
	
	function formatMilliseconds(d, p) {
	  return pad(d.getMilliseconds(), p, 3);
	}
	
	function formatMicroseconds(d, p) {
	  return formatMilliseconds(d, p) + "000";
	}
	
	function formatMonthNumber(d, p) {
	  return pad(d.getMonth() + 1, p, 2);
	}
	
	function formatMinutes(d, p) {
	  return pad(d.getMinutes(), p, 2);
	}
	
	function formatSeconds(d, p) {
	  return pad(d.getSeconds(), p, 2);
	}
	
	function formatWeekdayNumberMonday(d) {
	  var day = d.getDay();
	  return day === 0 ? 7 : day;
	}
	
	function formatWeekNumberSunday(d, p) {
	  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);
	}
	
	function formatWeekNumberISO(d, p) {
	  var day = d.getDay();
	  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);
	  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);
	}
	
	function formatWeekdayNumberSunday(d) {
	  return d.getDay();
	}
	
	function formatWeekNumberMonday(d, p) {
	  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);
	}
	
	function formatYear(d, p) {
	  return pad(d.getFullYear() % 100, p, 2);
	}
	
	function formatFullYear(d, p) {
	  return pad(d.getFullYear() % 10000, p, 4);
	}
	
	function formatZone(d) {
	  var z = d.getTimezoneOffset();
	  return (z > 0 ? "-" : (z *= -1, "+"))
	      + pad(z / 60 | 0, "0", 2)
	      + pad(z % 60, "0", 2);
	}
	
	function formatUTCDayOfMonth(d, p) {
	  return pad(d.getUTCDate(), p, 2);
	}
	
	function formatUTCHour24(d, p) {
	  return pad(d.getUTCHours(), p, 2);
	}
	
	function formatUTCHour12(d, p) {
	  return pad(d.getUTCHours() % 12 || 12, p, 2);
	}
	
	function formatUTCDayOfYear(d, p) {
	  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);
	}
	
	function formatUTCMilliseconds(d, p) {
	  return pad(d.getUTCMilliseconds(), p, 3);
	}
	
	function formatUTCMicroseconds(d, p) {
	  return formatUTCMilliseconds(d, p) + "000";
	}
	
	function formatUTCMonthNumber(d, p) {
	  return pad(d.getUTCMonth() + 1, p, 2);
	}
	
	function formatUTCMinutes(d, p) {
	  return pad(d.getUTCMinutes(), p, 2);
	}
	
	function formatUTCSeconds(d, p) {
	  return pad(d.getUTCSeconds(), p, 2);
	}
	
	function formatUTCWeekdayNumberMonday(d) {
	  var dow = d.getUTCDay();
	  return dow === 0 ? 7 : dow;
	}
	
	function formatUTCWeekNumberSunday(d, p) {
	  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);
	}
	
	function formatUTCWeekNumberISO(d, p) {
	  var day = d.getUTCDay();
	  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);
	  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);
	}
	
	function formatUTCWeekdayNumberSunday(d) {
	  return d.getUTCDay();
	}
	
	function formatUTCWeekNumberMonday(d, p) {
	  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);
	}
	
	function formatUTCYear(d, p) {
	  return pad(d.getUTCFullYear() % 100, p, 2);
	}
	
	function formatUTCFullYear(d, p) {
	  return pad(d.getUTCFullYear() % 10000, p, 4);
	}
	
	function formatUTCZone() {
	  return "+0000";
	}
	
	function formatLiteralPercent() {
	  return "%";
	}
	
	function formatUnixTimestamp(d) {
	  return +d;
	}
	
	function formatUnixTimestampSeconds(d) {
	  return Math.floor(+d / 1000);
	}
	
	var locale;
	
	
	
	
	
	defaultLocale({
	  dateTime: "%x, %X",
	  date: "%-m/%-d/%Y",
	  time: "%-I:%M:%S %p",
	  periods: ["AM", "PM"],
	  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
	});
	
	function defaultLocale(definition) {
	  locale = formatLocale(definition);
	  exports.timeFormat = locale.format;
	  exports.timeParse = locale.parse;
	  exports.utcFormat = locale.utcFormat;
	  exports.utcParse = locale.utcParse;
	  return locale;
	}
	
	var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
	
	function formatIsoNative(date) {
	  return date.toISOString();
	}
	
	var formatIso = Date.prototype.toISOString
	    ? formatIsoNative
	    : exports.utcFormat(isoSpecifier);
	
	function parseIsoNative(string) {
	  var date = new Date(string);
	  return isNaN(date) ? null : date;
	}
	
	var parseIso = +new Date("2000-01-01T00:00:00.000Z")
	    ? parseIsoNative
	    : exports.utcParse(isoSpecifier);
	
	exports.timeFormatDefaultLocale = defaultLocale;
	exports.timeFormatLocale = formatLocale;
	exports.isoFormat = formatIso;
	exports.isoParse = parseIso;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-timer/ Version 1.0.7. Copyright 2017 Mike Bostock.
	(function (global, factory) {
		 true ? factory(exports) :
		typeof define === 'function' && define.amd ? define(['exports'], factory) :
		(factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var frame = 0;
	var timeout = 0;
	var interval = 0;
	var pokeDelay = 1000;
	var taskHead;
	var taskTail;
	var clockLast = 0;
	var clockNow = 0;
	var clockSkew = 0;
	var clock = typeof performance === "object" && performance.now ? performance : Date;
	var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };
	
	function now() {
	  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
	}
	
	function clearNow() {
	  clockNow = 0;
	}
	
	function Timer() {
	  this._call =
	  this._time =
	  this._next = null;
	}
	
	Timer.prototype = timer.prototype = {
	  constructor: Timer,
	  restart: function(callback, delay, time) {
	    if (typeof callback !== "function") throw new TypeError("callback is not a function");
	    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
	    if (!this._next && taskTail !== this) {
	      if (taskTail) taskTail._next = this;
	      else taskHead = this;
	      taskTail = this;
	    }
	    this._call = callback;
	    this._time = time;
	    sleep();
	  },
	  stop: function() {
	    if (this._call) {
	      this._call = null;
	      this._time = Infinity;
	      sleep();
	    }
	  }
	};
	
	function timer(callback, delay, time) {
	  var t = new Timer;
	  t.restart(callback, delay, time);
	  return t;
	}
	
	function timerFlush() {
	  now(); // Get the current time, if not already set.
	  ++frame; // Pretend we’ve set an alarm, if we haven’t already.
	  var t = taskHead, e;
	  while (t) {
	    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
	    t = t._next;
	  }
	  --frame;
	}
	
	function wake() {
	  clockNow = (clockLast = clock.now()) + clockSkew;
	  frame = timeout = 0;
	  try {
	    timerFlush();
	  } finally {
	    frame = 0;
	    nap();
	    clockNow = 0;
	  }
	}
	
	function poke() {
	  var now = clock.now(), delay = now - clockLast;
	  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
	}
	
	function nap() {
	  var t0, t1 = taskHead, t2, time = Infinity;
	  while (t1) {
	    if (t1._call) {
	      if (time > t1._time) time = t1._time;
	      t0 = t1, t1 = t1._next;
	    } else {
	      t2 = t1._next, t1._next = null;
	      t1 = t0 ? t0._next = t2 : taskHead = t2;
	    }
	  }
	  taskTail = t0;
	  sleep(time);
	}
	
	function sleep(time) {
	  if (frame) return; // Soonest alarm already set, or will be.
	  if (timeout) timeout = clearTimeout(timeout);
	  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
	  if (delay > 24) {
	    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
	    if (interval) interval = clearInterval(interval);
	  } else {
	    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
	    frame = 1, setFrame(wake);
	  }
	}
	
	var timeout$1 = function(callback, delay, time) {
	  var t = new Timer;
	  delay = delay == null ? 0 : +delay;
	  t.restart(function(elapsed) {
	    t.stop();
	    callback(elapsed + delay);
	  }, delay, time);
	  return t;
	};
	
	var interval$1 = function(callback, delay, time) {
	  var t = new Timer, total = delay;
	  if (delay == null) return t.restart(callback, delay, time), t;
	  delay = +delay, time = time == null ? now() : +time;
	  t.restart(function tick(elapsed) {
	    elapsed += total;
	    t.restart(tick, total += delay, time);
	    callback(elapsed);
	  }, delay, time);
	  return t;
	};
	
	exports.now = now;
	exports.timer = timer;
	exports.timerFlush = timerFlush;
	exports.timeout = timeout$1;
	exports.interval = interval$1;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ }),
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports, __webpack_require__(302), __webpack_require__(303), __webpack_require__(304)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(module, exports, require('../added'), require('../deleted'), require('../updated'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod, mod.exports, global.added, global.deleted, global.updated);
	    global.index = mod.exports;
	  }
	})(this, function (module, exports, _added, _deleted, _updated) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  var _added2 = _interopRequireDefault(_added);
	
	  var _deleted2 = _interopRequireDefault(_deleted);
	
	  var _updated2 = _interopRequireDefault(_updated);
	
	  function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : {
	      default: obj
	    };
	  }
	
	  var detailedDiff = function detailedDiff(lhs, rhs) {
	    return {
	      added: (0, _added2.default)(lhs, rhs),
	      deleted: (0, _deleted2.default)(lhs, rhs),
	      updated: (0, _updated2.default)(lhs, rhs)
	    };
	  };
	
	  exports.default = detailedDiff;
	  module.exports = exports['default'];
	});

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports, __webpack_require__(121)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(module, exports, require('../utils'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod, mod.exports, global.utils);
	    global.index = mod.exports;
	  }
	})(this, function (module, exports, _utils) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	
	  function _defineProperty(obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }
	
	    return obj;
	  }
	
	  var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  var diff = function diff(lhs, rhs) {
	    if (lhs === rhs) return {}; // equal return no diff
	
	    if (!(0, _utils.isObject)(lhs) || !(0, _utils.isObject)(rhs)) return rhs; // return updated rhs
	
	    var l = (0, _utils.properObject)(lhs);
	    var r = (0, _utils.properObject)(rhs);
	
	    var deletedValues = Object.keys(l).reduce(function (acc, key) {
	      return r.hasOwnProperty(key) ? acc : _extends({}, acc, _defineProperty({}, key, undefined));
	    }, {});
	
	    if ((0, _utils.isDate)(l) || (0, _utils.isDate)(r)) {
	      if (l.valueOf() == r.valueOf()) return {};
	      return r;
	    }
	
	    return Object.keys(r).reduce(function (acc, key) {
	      if (!l.hasOwnProperty(key)) return _extends({}, acc, _defineProperty({}, key, r[key])); // return added r key
	
	      var difference = diff(l[key], r[key]);
	
	      if ((0, _utils.isObject)(difference) && (0, _utils.isEmpty)(difference) && !(0, _utils.isDate)(difference)) return acc; // return no diff
	
	      return _extends({}, acc, _defineProperty({}, key, difference)); // return updated key
	    }, deletedValues);
	  };
	
	  exports.default = diff;
	  module.exports = exports['default'];
	});

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(620), __webpack_require__(302), __webpack_require__(303), __webpack_require__(304), __webpack_require__(619)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== "undefined") {
	    factory(exports, require('./diff'), require('./added'), require('./deleted'), require('./updated'), require('./detailed'));
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports, global.diff, global.added, global.deleted, global.updated, global.detailed);
	    global.index = mod.exports;
	  }
	})(this, function (exports, _diff, _added, _deleted, _updated, _detailed) {
	  'use strict';
	
	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  exports.detailedDiff = exports.updatedDiff = exports.deletedDiff = exports.diff = exports.addedDiff = undefined;
	
	  var _diff2 = _interopRequireDefault(_diff);
	
	  var _added2 = _interopRequireDefault(_added);
	
	  var _deleted2 = _interopRequireDefault(_deleted);
	
	  var _updated2 = _interopRequireDefault(_updated);
	
	  var _detailed2 = _interopRequireDefault(_detailed);
	
	  function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : {
	      default: obj
	    };
	  }
	
	  exports.addedDiff = _added2.default;
	  exports.diff = _diff2.default;
	  exports.deletedDiff = _deleted2.default;
	  exports.updatedDiff = _updated2.default;
	  exports.detailedDiff = _detailed2.default;
	});

/***/ }),
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Module Dependencies
	 */
	
	var xor, props;
	
	try {
	  xor = __webpack_require__(264);
	} catch (e) {
	  xor = __webpack_require__(264);
	}
	
	try {
	  props = __webpack_require__(263);
	} catch (e) {
	  props = __webpack_require__(263);
	}
	
	/**
	 * Export `Iterator`
	 */
	
	module.exports = Iterator;
	
	/**
	 * Initialize `Iterator`
	 *
	 * @param {Node} node
	 * @param {Node} root
	 * @return {Iterator} self
	 * @api public
	 */
	
	function Iterator(node, root) {
	  if (!(this instanceof Iterator)) return new Iterator(node, root);
	  this.node = this.start = this.peeked = node;
	  this.root = root;
	  this.closingTag = false;
	  this._revisit = true;
	  this._selects = [];
	  this._rejects = [];
	
	  if (node && this.higher(node)) {
	    throw new Error('root must be a parent or ancestor to node');
	  }
	}
	
	/**
	 * Reset the Iterator
	 *
	 * @param {Node} node (optional)
	 * @return {Iterator} self
	 * @api public
	 */
	
	Iterator.prototype.reset = function(node) {
	  this.node = node || this.start;
	  return this;
	};
	
	/**
	 * Revisit element nodes. Defaults to `true`
	 */
	
	Iterator.prototype.revisit = function(revisit) {
	  this._revisit = undefined == revisit ? true : revisit;
	  return this;
	};
	
	/**
	 * Jump to the opening tag
	 */
	
	Iterator.prototype.opening = function() {
	  if (1 == this.node.nodeType) this.closingTag = false;
	  return this;
	};
	
	/**
	 * Jump to the closing tag
	 */
	
	Iterator.prototype.atOpening = function() {
	  return !this.closingTag;
	};
	
	
	/**
	 * Jump to the closing tag
	 */
	
	Iterator.prototype.closing = function() {
	  if (1 == this.node.nodeType) this.closingTag = true;
	  return this;
	};
	
	/**
	 * Jump to the closing tag
	 */
	
	Iterator.prototype.atClosing = function() {
	  return this.closingTag;
	};
	
	/**
	 * Next node
	 *
	 * @param {Number} type
	 * @return {Node|null}
	 * @api public
	 */
	
	Iterator.prototype.next = traverse('nextSibling', 'firstChild');
	
	/**
	 * Previous node
	 *
	 * @param {Number} type
	 * @return {Node|null}
	 * @api public
	 */
	
	Iterator.prototype.previous =
	Iterator.prototype.prev = traverse('previousSibling', 'lastChild');
	
	/**
	 * Make traverse function
	 *
	 * @param {String} dir
	 * @param {String} child
	 * @return {Function}
	 * @api private
	 */
	
	function traverse(dir, child) {
	  var next = dir == 'nextSibling';
	  return function walk(expr, n, peek) {
	    expr = this.compile(expr);
	    n = n && n > 0 ? n : 1;
	    var node = this.node;
	    var closing = this.closingTag;
	    var revisit = this._revisit;
	
	    while (node) {
	      if (xor(next, closing) && node[child]) {
	        // element with children: <em>...</em>
	        node = node[child];
	        closing = !next;
	      } else if (1 == node.nodeType && !node[child] && xor(next, closing)) {
	        // empty element tag: <em></em>
	        closing = next;
	        if (!revisit) continue;
	      } else if (node[dir]) {
	        // element has a neighbor: ...<em></em>...
	        node = node[dir];
	        closing = !next;
	      } else {
	        // done with current layer, move up.
	        node = node.parentNode;
	        closing = next;
	        if (!revisit) continue;
	      }
	
	      if (!node || this.higher(node, this.root)) break;
	
	      if (expr(node) && this.selects(node, peek) && this.rejects(node, peek)) {
	        if (--n) continue;
	        if (!peek) this.node = node;
	        this.closingTag = closing;
	        return node;
	      }
	    }
	
	    return null;
	  };
	}
	
	/**
	 * Select nodes that cause `expr(node)`
	 * to be truthy
	 *
	 * @param {Number|String|Function} expr
	 * @return {Iterator} self
	 * @api public
	 */
	
	Iterator.prototype.select = function(expr) {
	  expr = this.compile(expr);
	  this._selects.push(expr);
	  return this;
	};
	
	/**
	 * Run through the selects ORing each
	 *
	 * @param {Node} node
	 * @param {Boolean} peek
	 * @return {Boolean}
	 * @api private
	 */
	
	Iterator.prototype.selects = function(node, peek) {
	  var exprs = this._selects;
	  var len = exprs.length;
	  if (!len) return true;
	
	  for (var i = 0; i < len; i++) {
	    if (exprs[i].call(this, node, peek)) return true;
	  };
	
	  return false;
	};
	
	/**
	 * Select nodes that cause `expr(node)`
	 * to be falsy
	 *
	 * @param {Number|String|Function} expr
	 * @return {Iterator} self
	 * @api public
	 */
	
	Iterator.prototype.reject = function(expr) {
	  expr = this.compile(expr);
	  this._rejects.push(expr);
	  return this;
	};
	
	/**
	 * Run through the reject expressions ANDing each
	 *
	 * @param {Node} node
	 * @param {Boolean} peek
	 * @return {Boolean}
	 * @api private
	 */
	
	Iterator.prototype.rejects = function(node, peek) {
	  var exprs = this._rejects;
	  var len = exprs.length;
	  if (!len) return true;
	
	  for (var i = 0; i < len; i++) {
	    if (exprs[i].call(this, node, peek)) return false;
	  };
	
	  return true;
	};
	
	/**
	 * Check if node is higher
	 * than root.
	 *
	 * @param {Node} node
	 * @param {Node} root
	 * @return {Boolean}
	 * @api private
	 */
	
	Iterator.prototype.higher = function(node) {
	  var root = this.root;
	  if (!root) return false;
	  node = node.parentNode;
	  while (node && node != root) node = node.parentNode;
	  return node != root;
	};
	
	/**
	 * Compile an expression
	 *
	 * @param {String|Function|Number} expr
	 * @return {Function}
	 */
	
	Iterator.prototype.compile = function(expr) {
	  switch (typeof expr) {
	    case 'number':
	      return function(node) { return expr == node.nodeType; };
	    case 'string':
	      return new Function('node', 'return ' + props(expr, 'node.'));
	    case 'function':
	      return expr;
	    default:
	      return function() { return true; };
	  }
	};
	
	/**
	 * Peek in either direction
	 * `n` nodes. Peek backwards
	 * using negative numbers.
	 *
	 * @param {Number} n (optional)
	 * @return {Node|null}
	 * @api public
	 */
	
	Iterator.prototype.peak =
	Iterator.prototype.peek = function(expr, n) {
	  if (arguments.length == 1) n = expr, expr = true;
	  n = undefined == n ? 1 : n;
	  if (!n) return this.node;
	  else if (n > 0) return this.next(expr, n, true);
	  else return this.prev(expr, Math.abs(n), true);
	};
	
	/**
	 * Add a plugin
	 *
	 * @param {Function} fn
	 * @return {Iterator}
	 * @api public
	 */
	
	Iterator.prototype.use = function(fn) {
	  fn(this);
	  return this;
	};


/***/ }),
/* 628 */,
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	var prr = __webpack_require__(913)
	
	function init (type, message, cause) {
	  prr(this, {
	      type    : type
	    , name    : type
	      // can be passed just a 'cause'
	    , cause   : typeof message != 'string' ? message : cause
	    , message : !!message && typeof message != 'string' ? message.message : message
	
	  }, 'ewr')
	}
	
	// generic prototype, not intended to be actually used - helpful for `instanceof`
	function CustomError (message, cause) {
	  Error.call(this)
	  if (Error.captureStackTrace)
	    Error.captureStackTrace(this, arguments.callee)
	  init.call(this, 'CustomError', message, cause)
	}
	
	CustomError.prototype = new Error()
	
	function createError (errno, type, proto) {
	  var err = function (message, cause) {
	    init.call(this, type, message, cause)
	    //TODO: the specificity here is stupid, errno should be available everywhere
	    if (type == 'FilesystemError') {
	      this.code    = this.cause.code
	      this.path    = this.cause.path
	      this.errno   = this.cause.errno
	      this.message =
	        (errno.errno[this.cause.errno]
	          ? errno.errno[this.cause.errno].description
	          : this.cause.message)
	        + (this.cause.path ? ' [' + this.cause.path + ']' : '')
	    }
	    Error.call(this)
	    if (Error.captureStackTrace)
	      Error.captureStackTrace(this, arguments.callee)
	  }
	  err.prototype = !!proto ? new proto() : new CustomError()
	  return err
	}
	
	module.exports = function (errno) {
	  var ce = function (type, proto) {
	    return createError(errno, type, proto)
	  }
	  return {
	      CustomError     : CustomError
	    , FilesystemError : ce('FilesystemError')
	    , createError     : ce
	  }
	}


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	var all = module.exports.all = [
	  {
	    errno: -2,
	    code: 'ENOENT',
	    description: 'no such file or directory'
	  },
	  {
	    errno: -1,
	    code: 'UNKNOWN',
	    description: 'unknown error'
	  },
	  {
	    errno: 0,
	    code: 'OK',
	    description: 'success'
	  },
	  {
	    errno: 1,
	    code: 'EOF',
	    description: 'end of file'
	  },
	  {
	    errno: 2,
	    code: 'EADDRINFO',
	    description: 'getaddrinfo error'
	  },
	  {
	    errno: 3,
	    code: 'EACCES',
	    description: 'permission denied'
	  },
	  {
	    errno: 4,
	    code: 'EAGAIN',
	    description: 'resource temporarily unavailable'
	  },
	  {
	    errno: 5,
	    code: 'EADDRINUSE',
	    description: 'address already in use'
	  },
	  {
	    errno: 6,
	    code: 'EADDRNOTAVAIL',
	    description: 'address not available'
	  },
	  {
	    errno: 7,
	    code: 'EAFNOSUPPORT',
	    description: 'address family not supported'
	  },
	  {
	    errno: 8,
	    code: 'EALREADY',
	    description: 'connection already in progress'
	  },
	  {
	    errno: 9,
	    code: 'EBADF',
	    description: 'bad file descriptor'
	  },
	  {
	    errno: 10,
	    code: 'EBUSY',
	    description: 'resource busy or locked'
	  },
	  {
	    errno: 11,
	    code: 'ECONNABORTED',
	    description: 'software caused connection abort'
	  },
	  {
	    errno: 12,
	    code: 'ECONNREFUSED',
	    description: 'connection refused'
	  },
	  {
	    errno: 13,
	    code: 'ECONNRESET',
	    description: 'connection reset by peer'
	  },
	  {
	    errno: 14,
	    code: 'EDESTADDRREQ',
	    description: 'destination address required'
	  },
	  {
	    errno: 15,
	    code: 'EFAULT',
	    description: 'bad address in system call argument'
	  },
	  {
	    errno: 16,
	    code: 'EHOSTUNREACH',
	    description: 'host is unreachable'
	  },
	  {
	    errno: 17,
	    code: 'EINTR',
	    description: 'interrupted system call'
	  },
	  {
	    errno: 18,
	    code: 'EINVAL',
	    description: 'invalid argument'
	  },
	  {
	    errno: 19,
	    code: 'EISCONN',
	    description: 'socket is already connected'
	  },
	  {
	    errno: 20,
	    code: 'EMFILE',
	    description: 'too many open files'
	  },
	  {
	    errno: 21,
	    code: 'EMSGSIZE',
	    description: 'message too long'
	  },
	  {
	    errno: 22,
	    code: 'ENETDOWN',
	    description: 'network is down'
	  },
	  {
	    errno: 23,
	    code: 'ENETUNREACH',
	    description: 'network is unreachable'
	  },
	  {
	    errno: 24,
	    code: 'ENFILE',
	    description: 'file table overflow'
	  },
	  {
	    errno: 25,
	    code: 'ENOBUFS',
	    description: 'no buffer space available'
	  },
	  {
	    errno: 26,
	    code: 'ENOMEM',
	    description: 'not enough memory'
	  },
	  {
	    errno: 27,
	    code: 'ENOTDIR',
	    description: 'not a directory'
	  },
	  {
	    errno: 28,
	    code: 'EISDIR',
	    description: 'illegal operation on a directory'
	  },
	  {
	    errno: 29,
	    code: 'ENONET',
	    description: 'machine is not on the network'
	  },
	  {
	    errno: 31,
	    code: 'ENOTCONN',
	    description: 'socket is not connected'
	  },
	  {
	    errno: 32,
	    code: 'ENOTSOCK',
	    description: 'socket operation on non-socket'
	  },
	  {
	    errno: 33,
	    code: 'ENOTSUP',
	    description: 'operation not supported on socket'
	  },
	  {
	    errno: 34,
	    code: 'ENOENT',
	    description: 'no such file or directory'
	  },
	  {
	    errno: 35,
	    code: 'ENOSYS',
	    description: 'function not implemented'
	  },
	  {
	    errno: 36,
	    code: 'EPIPE',
	    description: 'broken pipe'
	  },
	  {
	    errno: 37,
	    code: 'EPROTO',
	    description: 'protocol error'
	  },
	  {
	    errno: 38,
	    code: 'EPROTONOSUPPORT',
	    description: 'protocol not supported'
	  },
	  {
	    errno: 39,
	    code: 'EPROTOTYPE',
	    description: 'protocol wrong type for socket'
	  },
	  {
	    errno: 40,
	    code: 'ETIMEDOUT',
	    description: 'connection timed out'
	  },
	  {
	    errno: 41,
	    code: 'ECHARSET',
	    description: 'invalid Unicode character'
	  },
	  {
	    errno: 42,
	    code: 'EAIFAMNOSUPPORT',
	    description: 'address family for hostname not supported'
	  },
	  {
	    errno: 44,
	    code: 'EAISERVICE',
	    description: 'servname not supported for ai_socktype'
	  },
	  {
	    errno: 45,
	    code: 'EAISOCKTYPE',
	    description: 'ai_socktype not supported'
	  },
	  {
	    errno: 46,
	    code: 'ESHUTDOWN',
	    description: 'cannot send after transport endpoint shutdown'
	  },
	  {
	    errno: 47,
	    code: 'EEXIST',
	    description: 'file already exists'
	  },
	  {
	    errno: 48,
	    code: 'ESRCH',
	    description: 'no such process'
	  },
	  {
	    errno: 49,
	    code: 'ENAMETOOLONG',
	    description: 'name too long'
	  },
	  {
	    errno: 50,
	    code: 'EPERM',
	    description: 'operation not permitted'
	  },
	  {
	    errno: 51,
	    code: 'ELOOP',
	    description: 'too many symbolic links encountered'
	  },
	  {
	    errno: 52,
	    code: 'EXDEV',
	    description: 'cross-device link not permitted'
	  },
	  {
	    errno: 53,
	    code: 'ENOTEMPTY',
	    description: 'directory not empty'
	  },
	  {
	    errno: 54,
	    code: 'ENOSPC',
	    description: 'no space left on device'
	  },
	  {
	    errno: 55,
	    code: 'EIO',
	    description: 'i/o error'
	  },
	  {
	    errno: 56,
	    code: 'EROFS',
	    description: 'read-only file system'
	  },
	  {
	    errno: 57,
	    code: 'ENODEV',
	    description: 'no such device'
	  },
	  {
	    errno: 58,
	    code: 'ESPIPE',
	    description: 'invalid seek'
	  },
	  {
	    errno: 59,
	    code: 'ECANCELED',
	    description: 'operation canceled'
	  }
	]
	
	module.exports.errno = {}
	module.exports.code = {}
	
	all.forEach(function (error) {
	  module.exports.errno[error.errno] = error
	  module.exports.code[error.code] = error
	})
	
	module.exports.custom = __webpack_require__(629)(module.exports)
	module.exports.create = module.exports.custom.createError


/***/ }),
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/he v1.1.1 by @mathias | MIT license */
	;(function(root) {
	
		// Detect free variables `exports`.
		var freeExports = typeof exports == 'object' && exports;
	
		// Detect free variable `module`.
		var freeModule = typeof module == 'object' && module &&
			module.exports == freeExports && module;
	
		// Detect free variable `global`, from Node.js or Browserified code,
		// and use it as `root`.
		var freeGlobal = typeof global == 'object' && global;
		if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
			root = freeGlobal;
		}
	
		/*--------------------------------------------------------------------------*/
	
		// All astral symbols.
		var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
		// All ASCII symbols (not just printable ASCII) except those listed in the
		// first column of the overrides table.
		// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides
		var regexAsciiWhitelist = /[\x01-\x7F]/g;
		// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or
		// code points listed in the first column of the overrides table on
		// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.
		var regexBmpWhitelist = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g;
	
		var regexEncodeNonAscii = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g;
		var encodeMap = {'\xAD':'shy','\u200C':'zwnj','\u200D':'zwj','\u200E':'lrm','\u2063':'ic','\u2062':'it','\u2061':'af','\u200F':'rlm','\u200B':'ZeroWidthSpace','\u2060':'NoBreak','\u0311':'DownBreve','\u20DB':'tdot','\u20DC':'DotDot','\t':'Tab','\n':'NewLine','\u2008':'puncsp','\u205F':'MediumSpace','\u2009':'thinsp','\u200A':'hairsp','\u2004':'emsp13','\u2002':'ensp','\u2005':'emsp14','\u2003':'emsp','\u2007':'numsp','\xA0':'nbsp','\u205F\u200A':'ThickSpace','\u203E':'oline','_':'lowbar','\u2010':'dash','\u2013':'ndash','\u2014':'mdash','\u2015':'horbar',',':'comma',';':'semi','\u204F':'bsemi',':':'colon','\u2A74':'Colone','!':'excl','\xA1':'iexcl','?':'quest','\xBF':'iquest','.':'period','\u2025':'nldr','\u2026':'mldr','\xB7':'middot','\'':'apos','\u2018':'lsquo','\u2019':'rsquo','\u201A':'sbquo','\u2039':'lsaquo','\u203A':'rsaquo','"':'quot','\u201C':'ldquo','\u201D':'rdquo','\u201E':'bdquo','\xAB':'laquo','\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\u2308':'lceil','\u2309':'rceil','\u230A':'lfloor','\u230B':'rfloor','\u2985':'lopar','\u2986':'ropar','\u298B':'lbrke','\u298C':'rbrke','\u298D':'lbrkslu','\u298E':'rbrksld','\u298F':'lbrksld','\u2990':'rbrkslu','\u2991':'langd','\u2992':'rangd','\u2993':'lparlt','\u2994':'rpargt','\u2995':'gtlPar','\u2996':'ltrPar','\u27E6':'lobrk','\u27E7':'robrk','\u27E8':'lang','\u27E9':'rang','\u27EA':'Lang','\u27EB':'Rang','\u27EC':'loang','\u27ED':'roang','\u2772':'lbbrk','\u2773':'rbbrk','\u2016':'Vert','\xA7':'sect','\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\u2030':'permil','\u2031':'pertenk','\u2020':'dagger','\u2021':'Dagger','\u2022':'bull','\u2043':'hybull','\u2032':'prime','\u2033':'Prime','\u2034':'tprime','\u2057':'qprime','\u2035':'bprime','\u2041':'caret','`':'grave','\xB4':'acute','\u02DC':'tilde','^':'Hat','\xAF':'macr','\u02D8':'breve','\u02D9':'dot','\xA8':'die','\u02DA':'ring','\u02DD':'dblac','\xB8':'cedil','\u02DB':'ogon','\u02C6':'circ','\u02C7':'caron','\xB0':'deg','\xA9':'copy','\xAE':'reg','\u2117':'copysr','\u2118':'wp','\u211E':'rx','\u2127':'mho','\u2129':'iiota','\u2190':'larr','\u219A':'nlarr','\u2192':'rarr','\u219B':'nrarr','\u2191':'uarr','\u2193':'darr','\u2194':'harr','\u21AE':'nharr','\u2195':'varr','\u2196':'nwarr','\u2197':'nearr','\u2198':'searr','\u2199':'swarr','\u219D':'rarrw','\u219D\u0338':'nrarrw','\u219E':'Larr','\u219F':'Uarr','\u21A0':'Rarr','\u21A1':'Darr','\u21A2':'larrtl','\u21A3':'rarrtl','\u21A4':'mapstoleft','\u21A5':'mapstoup','\u21A6':'map','\u21A7':'mapstodown','\u21A9':'larrhk','\u21AA':'rarrhk','\u21AB':'larrlp','\u21AC':'rarrlp','\u21AD':'harrw','\u21B0':'lsh','\u21B1':'rsh','\u21B2':'ldsh','\u21B3':'rdsh','\u21B5':'crarr','\u21B6':'cularr','\u21B7':'curarr','\u21BA':'olarr','\u21BB':'orarr','\u21BC':'lharu','\u21BD':'lhard','\u21BE':'uharr','\u21BF':'uharl','\u21C0':'rharu','\u21C1':'rhard','\u21C2':'dharr','\u21C3':'dharl','\u21C4':'rlarr','\u21C5':'udarr','\u21C6':'lrarr','\u21C7':'llarr','\u21C8':'uuarr','\u21C9':'rrarr','\u21CA':'ddarr','\u21CB':'lrhar','\u21CC':'rlhar','\u21D0':'lArr','\u21CD':'nlArr','\u21D1':'uArr','\u21D2':'rArr','\u21CF':'nrArr','\u21D3':'dArr','\u21D4':'iff','\u21CE':'nhArr','\u21D5':'vArr','\u21D6':'nwArr','\u21D7':'neArr','\u21D8':'seArr','\u21D9':'swArr','\u21DA':'lAarr','\u21DB':'rAarr','\u21DD':'zigrarr','\u21E4':'larrb','\u21E5':'rarrb','\u21F5':'duarr','\u21FD':'loarr','\u21FE':'roarr','\u21FF':'hoarr','\u2200':'forall','\u2201':'comp','\u2202':'part','\u2202\u0338':'npart','\u2203':'exist','\u2204':'nexist','\u2205':'empty','\u2207':'Del','\u2208':'in','\u2209':'notin','\u220B':'ni','\u220C':'notni','\u03F6':'bepsi','\u220F':'prod','\u2210':'coprod','\u2211':'sum','+':'plus','\xB1':'pm','\xF7':'div','\xD7':'times','<':'lt','\u226E':'nlt','<\u20D2':'nvlt','=':'equals','\u2260':'ne','=\u20E5':'bne','\u2A75':'Equal','>':'gt','\u226F':'ngt','>\u20D2':'nvgt','\xAC':'not','|':'vert','\xA6':'brvbar','\u2212':'minus','\u2213':'mp','\u2214':'plusdo','\u2044':'frasl','\u2216':'setmn','\u2217':'lowast','\u2218':'compfn','\u221A':'Sqrt','\u221D':'prop','\u221E':'infin','\u221F':'angrt','\u2220':'ang','\u2220\u20D2':'nang','\u2221':'angmsd','\u2222':'angsph','\u2223':'mid','\u2224':'nmid','\u2225':'par','\u2226':'npar','\u2227':'and','\u2228':'or','\u2229':'cap','\u2229\uFE00':'caps','\u222A':'cup','\u222A\uFE00':'cups','\u222B':'int','\u222C':'Int','\u222D':'tint','\u2A0C':'qint','\u222E':'oint','\u222F':'Conint','\u2230':'Cconint','\u2231':'cwint','\u2232':'cwconint','\u2233':'awconint','\u2234':'there4','\u2235':'becaus','\u2236':'ratio','\u2237':'Colon','\u2238':'minusd','\u223A':'mDDot','\u223B':'homtht','\u223C':'sim','\u2241':'nsim','\u223C\u20D2':'nvsim','\u223D':'bsim','\u223D\u0331':'race','\u223E':'ac','\u223E\u0333':'acE','\u223F':'acd','\u2240':'wr','\u2242':'esim','\u2242\u0338':'nesim','\u2243':'sime','\u2244':'nsime','\u2245':'cong','\u2247':'ncong','\u2246':'simne','\u2248':'ap','\u2249':'nap','\u224A':'ape','\u224B':'apid','\u224B\u0338':'napid','\u224C':'bcong','\u224D':'CupCap','\u226D':'NotCupCap','\u224D\u20D2':'nvap','\u224E':'bump','\u224E\u0338':'nbump','\u224F':'bumpe','\u224F\u0338':'nbumpe','\u2250':'doteq','\u2250\u0338':'nedot','\u2251':'eDot','\u2252':'efDot','\u2253':'erDot','\u2254':'colone','\u2255':'ecolon','\u2256':'ecir','\u2257':'cire','\u2259':'wedgeq','\u225A':'veeeq','\u225C':'trie','\u225F':'equest','\u2261':'equiv','\u2262':'nequiv','\u2261\u20E5':'bnequiv','\u2264':'le','\u2270':'nle','\u2264\u20D2':'nvle','\u2265':'ge','\u2271':'nge','\u2265\u20D2':'nvge','\u2266':'lE','\u2266\u0338':'nlE','\u2267':'gE','\u2267\u0338':'ngE','\u2268\uFE00':'lvnE','\u2268':'lnE','\u2269':'gnE','\u2269\uFE00':'gvnE','\u226A':'ll','\u226A\u0338':'nLtv','\u226A\u20D2':'nLt','\u226B':'gg','\u226B\u0338':'nGtv','\u226B\u20D2':'nGt','\u226C':'twixt','\u2272':'lsim','\u2274':'nlsim','\u2273':'gsim','\u2275':'ngsim','\u2276':'lg','\u2278':'ntlg','\u2277':'gl','\u2279':'ntgl','\u227A':'pr','\u2280':'npr','\u227B':'sc','\u2281':'nsc','\u227C':'prcue','\u22E0':'nprcue','\u227D':'sccue','\u22E1':'nsccue','\u227E':'prsim','\u227F':'scsim','\u227F\u0338':'NotSucceedsTilde','\u2282':'sub','\u2284':'nsub','\u2282\u20D2':'vnsub','\u2283':'sup','\u2285':'nsup','\u2283\u20D2':'vnsup','\u2286':'sube','\u2288':'nsube','\u2287':'supe','\u2289':'nsupe','\u228A\uFE00':'vsubne','\u228A':'subne','\u228B\uFE00':'vsupne','\u228B':'supne','\u228D':'cupdot','\u228E':'uplus','\u228F':'sqsub','\u228F\u0338':'NotSquareSubset','\u2290':'sqsup','\u2290\u0338':'NotSquareSuperset','\u2291':'sqsube','\u22E2':'nsqsube','\u2292':'sqsupe','\u22E3':'nsqsupe','\u2293':'sqcap','\u2293\uFE00':'sqcaps','\u2294':'sqcup','\u2294\uFE00':'sqcups','\u2295':'oplus','\u2296':'ominus','\u2297':'otimes','\u2298':'osol','\u2299':'odot','\u229A':'ocir','\u229B':'oast','\u229D':'odash','\u229E':'plusb','\u229F':'minusb','\u22A0':'timesb','\u22A1':'sdotb','\u22A2':'vdash','\u22AC':'nvdash','\u22A3':'dashv','\u22A4':'top','\u22A5':'bot','\u22A7':'models','\u22A8':'vDash','\u22AD':'nvDash','\u22A9':'Vdash','\u22AE':'nVdash','\u22AA':'Vvdash','\u22AB':'VDash','\u22AF':'nVDash','\u22B0':'prurel','\u22B2':'vltri','\u22EA':'nltri','\u22B3':'vrtri','\u22EB':'nrtri','\u22B4':'ltrie','\u22EC':'nltrie','\u22B4\u20D2':'nvltrie','\u22B5':'rtrie','\u22ED':'nrtrie','\u22B5\u20D2':'nvrtrie','\u22B6':'origof','\u22B7':'imof','\u22B8':'mumap','\u22B9':'hercon','\u22BA':'intcal','\u22BB':'veebar','\u22BD':'barvee','\u22BE':'angrtvb','\u22BF':'lrtri','\u22C0':'Wedge','\u22C1':'Vee','\u22C2':'xcap','\u22C3':'xcup','\u22C4':'diam','\u22C5':'sdot','\u22C6':'Star','\u22C7':'divonx','\u22C8':'bowtie','\u22C9':'ltimes','\u22CA':'rtimes','\u22CB':'lthree','\u22CC':'rthree','\u22CD':'bsime','\u22CE':'cuvee','\u22CF':'cuwed','\u22D0':'Sub','\u22D1':'Sup','\u22D2':'Cap','\u22D3':'Cup','\u22D4':'fork','\u22D5':'epar','\u22D6':'ltdot','\u22D7':'gtdot','\u22D8':'Ll','\u22D8\u0338':'nLl','\u22D9':'Gg','\u22D9\u0338':'nGg','\u22DA\uFE00':'lesg','\u22DA':'leg','\u22DB':'gel','\u22DB\uFE00':'gesl','\u22DE':'cuepr','\u22DF':'cuesc','\u22E6':'lnsim','\u22E7':'gnsim','\u22E8':'prnsim','\u22E9':'scnsim','\u22EE':'vellip','\u22EF':'ctdot','\u22F0':'utdot','\u22F1':'dtdot','\u22F2':'disin','\u22F3':'isinsv','\u22F4':'isins','\u22F5':'isindot','\u22F5\u0338':'notindot','\u22F6':'notinvc','\u22F7':'notinvb','\u22F9':'isinE','\u22F9\u0338':'notinE','\u22FA':'nisd','\u22FB':'xnis','\u22FC':'nis','\u22FD':'notnivc','\u22FE':'notnivb','\u2305':'barwed','\u2306':'Barwed','\u230C':'drcrop','\u230D':'dlcrop','\u230E':'urcrop','\u230F':'ulcrop','\u2310':'bnot','\u2312':'profline','\u2313':'profsurf','\u2315':'telrec','\u2316':'target','\u231C':'ulcorn','\u231D':'urcorn','\u231E':'dlcorn','\u231F':'drcorn','\u2322':'frown','\u2323':'smile','\u232D':'cylcty','\u232E':'profalar','\u2336':'topbot','\u233D':'ovbar','\u233F':'solbar','\u237C':'angzarr','\u23B0':'lmoust','\u23B1':'rmoust','\u23B4':'tbrk','\u23B5':'bbrk','\u23B6':'bbrktbrk','\u23DC':'OverParenthesis','\u23DD':'UnderParenthesis','\u23DE':'OverBrace','\u23DF':'UnderBrace','\u23E2':'trpezium','\u23E7':'elinters','\u2423':'blank','\u2500':'boxh','\u2502':'boxv','\u250C':'boxdr','\u2510':'boxdl','\u2514':'boxur','\u2518':'boxul','\u251C':'boxvr','\u2524':'boxvl','\u252C':'boxhd','\u2534':'boxhu','\u253C':'boxvh','\u2550':'boxH','\u2551':'boxV','\u2552':'boxdR','\u2553':'boxDr','\u2554':'boxDR','\u2555':'boxdL','\u2556':'boxDl','\u2557':'boxDL','\u2558':'boxuR','\u2559':'boxUr','\u255A':'boxUR','\u255B':'boxuL','\u255C':'boxUl','\u255D':'boxUL','\u255E':'boxvR','\u255F':'boxVr','\u2560':'boxVR','\u2561':'boxvL','\u2562':'boxVl','\u2563':'boxVL','\u2564':'boxHd','\u2565':'boxhD','\u2566':'boxHD','\u2567':'boxHu','\u2568':'boxhU','\u2569':'boxHU','\u256A':'boxvH','\u256B':'boxVh','\u256C':'boxVH','\u2580':'uhblk','\u2584':'lhblk','\u2588':'block','\u2591':'blk14','\u2592':'blk12','\u2593':'blk34','\u25A1':'squ','\u25AA':'squf','\u25AB':'EmptyVerySmallSquare','\u25AD':'rect','\u25AE':'marker','\u25B1':'fltns','\u25B3':'xutri','\u25B4':'utrif','\u25B5':'utri','\u25B8':'rtrif','\u25B9':'rtri','\u25BD':'xdtri','\u25BE':'dtrif','\u25BF':'dtri','\u25C2':'ltrif','\u25C3':'ltri','\u25CA':'loz','\u25CB':'cir','\u25EC':'tridot','\u25EF':'xcirc','\u25F8':'ultri','\u25F9':'urtri','\u25FA':'lltri','\u25FB':'EmptySmallSquare','\u25FC':'FilledSmallSquare','\u2605':'starf','\u2606':'star','\u260E':'phone','\u2640':'female','\u2642':'male','\u2660':'spades','\u2663':'clubs','\u2665':'hearts','\u2666':'diams','\u266A':'sung','\u2713':'check','\u2717':'cross','\u2720':'malt','\u2736':'sext','\u2758':'VerticalSeparator','\u27C8':'bsolhsub','\u27C9':'suphsol','\u27F5':'xlarr','\u27F6':'xrarr','\u27F7':'xharr','\u27F8':'xlArr','\u27F9':'xrArr','\u27FA':'xhArr','\u27FC':'xmap','\u27FF':'dzigrarr','\u2902':'nvlArr','\u2903':'nvrArr','\u2904':'nvHarr','\u2905':'Map','\u290C':'lbarr','\u290D':'rbarr','\u290E':'lBarr','\u290F':'rBarr','\u2910':'RBarr','\u2911':'DDotrahd','\u2912':'UpArrowBar','\u2913':'DownArrowBar','\u2916':'Rarrtl','\u2919':'latail','\u291A':'ratail','\u291B':'lAtail','\u291C':'rAtail','\u291D':'larrfs','\u291E':'rarrfs','\u291F':'larrbfs','\u2920':'rarrbfs','\u2923':'nwarhk','\u2924':'nearhk','\u2925':'searhk','\u2926':'swarhk','\u2927':'nwnear','\u2928':'toea','\u2929':'tosa','\u292A':'swnwar','\u2933':'rarrc','\u2933\u0338':'nrarrc','\u2935':'cudarrr','\u2936':'ldca','\u2937':'rdca','\u2938':'cudarrl','\u2939':'larrpl','\u293C':'curarrm','\u293D':'cularrp','\u2945':'rarrpl','\u2948':'harrcir','\u2949':'Uarrocir','\u294A':'lurdshar','\u294B':'ldrushar','\u294E':'LeftRightVector','\u294F':'RightUpDownVector','\u2950':'DownLeftRightVector','\u2951':'LeftUpDownVector','\u2952':'LeftVectorBar','\u2953':'RightVectorBar','\u2954':'RightUpVectorBar','\u2955':'RightDownVectorBar','\u2956':'DownLeftVectorBar','\u2957':'DownRightVectorBar','\u2958':'LeftUpVectorBar','\u2959':'LeftDownVectorBar','\u295A':'LeftTeeVector','\u295B':'RightTeeVector','\u295C':'RightUpTeeVector','\u295D':'RightDownTeeVector','\u295E':'DownLeftTeeVector','\u295F':'DownRightTeeVector','\u2960':'LeftUpTeeVector','\u2961':'LeftDownTeeVector','\u2962':'lHar','\u2963':'uHar','\u2964':'rHar','\u2965':'dHar','\u2966':'luruhar','\u2967':'ldrdhar','\u2968':'ruluhar','\u2969':'rdldhar','\u296A':'lharul','\u296B':'llhard','\u296C':'rharul','\u296D':'lrhard','\u296E':'udhar','\u296F':'duhar','\u2970':'RoundImplies','\u2971':'erarr','\u2972':'simrarr','\u2973':'larrsim','\u2974':'rarrsim','\u2975':'rarrap','\u2976':'ltlarr','\u2978':'gtrarr','\u2979':'subrarr','\u297B':'suplarr','\u297C':'lfisht','\u297D':'rfisht','\u297E':'ufisht','\u297F':'dfisht','\u299A':'vzigzag','\u299C':'vangrt','\u299D':'angrtvbd','\u29A4':'ange','\u29A5':'range','\u29A6':'dwangle','\u29A7':'uwangle','\u29A8':'angmsdaa','\u29A9':'angmsdab','\u29AA':'angmsdac','\u29AB':'angmsdad','\u29AC':'angmsdae','\u29AD':'angmsdaf','\u29AE':'angmsdag','\u29AF':'angmsdah','\u29B0':'bemptyv','\u29B1':'demptyv','\u29B2':'cemptyv','\u29B3':'raemptyv','\u29B4':'laemptyv','\u29B5':'ohbar','\u29B6':'omid','\u29B7':'opar','\u29B9':'operp','\u29BB':'olcross','\u29BC':'odsold','\u29BE':'olcir','\u29BF':'ofcir','\u29C0':'olt','\u29C1':'ogt','\u29C2':'cirscir','\u29C3':'cirE','\u29C4':'solb','\u29C5':'bsolb','\u29C9':'boxbox','\u29CD':'trisb','\u29CE':'rtriltri','\u29CF':'LeftTriangleBar','\u29CF\u0338':'NotLeftTriangleBar','\u29D0':'RightTriangleBar','\u29D0\u0338':'NotRightTriangleBar','\u29DC':'iinfin','\u29DD':'infintie','\u29DE':'nvinfin','\u29E3':'eparsl','\u29E4':'smeparsl','\u29E5':'eqvparsl','\u29EB':'lozf','\u29F4':'RuleDelayed','\u29F6':'dsol','\u2A00':'xodot','\u2A01':'xoplus','\u2A02':'xotime','\u2A04':'xuplus','\u2A06':'xsqcup','\u2A0D':'fpartint','\u2A10':'cirfnint','\u2A11':'awint','\u2A12':'rppolint','\u2A13':'scpolint','\u2A14':'npolint','\u2A15':'pointint','\u2A16':'quatint','\u2A17':'intlarhk','\u2A22':'pluscir','\u2A23':'plusacir','\u2A24':'simplus','\u2A25':'plusdu','\u2A26':'plussim','\u2A27':'plustwo','\u2A29':'mcomma','\u2A2A':'minusdu','\u2A2D':'loplus','\u2A2E':'roplus','\u2A2F':'Cross','\u2A30':'timesd','\u2A31':'timesbar','\u2A33':'smashp','\u2A34':'lotimes','\u2A35':'rotimes','\u2A36':'otimesas','\u2A37':'Otimes','\u2A38':'odiv','\u2A39':'triplus','\u2A3A':'triminus','\u2A3B':'tritime','\u2A3C':'iprod','\u2A3F':'amalg','\u2A40':'capdot','\u2A42':'ncup','\u2A43':'ncap','\u2A44':'capand','\u2A45':'cupor','\u2A46':'cupcap','\u2A47':'capcup','\u2A48':'cupbrcap','\u2A49':'capbrcup','\u2A4A':'cupcup','\u2A4B':'capcap','\u2A4C':'ccups','\u2A4D':'ccaps','\u2A50':'ccupssm','\u2A53':'And','\u2A54':'Or','\u2A55':'andand','\u2A56':'oror','\u2A57':'orslope','\u2A58':'andslope','\u2A5A':'andv','\u2A5B':'orv','\u2A5C':'andd','\u2A5D':'ord','\u2A5F':'wedbar','\u2A66':'sdote','\u2A6A':'simdot','\u2A6D':'congdot','\u2A6D\u0338':'ncongdot','\u2A6E':'easter','\u2A6F':'apacir','\u2A70':'apE','\u2A70\u0338':'napE','\u2A71':'eplus','\u2A72':'pluse','\u2A73':'Esim','\u2A77':'eDDot','\u2A78':'equivDD','\u2A79':'ltcir','\u2A7A':'gtcir','\u2A7B':'ltquest','\u2A7C':'gtquest','\u2A7D':'les','\u2A7D\u0338':'nles','\u2A7E':'ges','\u2A7E\u0338':'nges','\u2A7F':'lesdot','\u2A80':'gesdot','\u2A81':'lesdoto','\u2A82':'gesdoto','\u2A83':'lesdotor','\u2A84':'gesdotol','\u2A85':'lap','\u2A86':'gap','\u2A87':'lne','\u2A88':'gne','\u2A89':'lnap','\u2A8A':'gnap','\u2A8B':'lEg','\u2A8C':'gEl','\u2A8D':'lsime','\u2A8E':'gsime','\u2A8F':'lsimg','\u2A90':'gsiml','\u2A91':'lgE','\u2A92':'glE','\u2A93':'lesges','\u2A94':'gesles','\u2A95':'els','\u2A96':'egs','\u2A97':'elsdot','\u2A98':'egsdot','\u2A99':'el','\u2A9A':'eg','\u2A9D':'siml','\u2A9E':'simg','\u2A9F':'simlE','\u2AA0':'simgE','\u2AA1':'LessLess','\u2AA1\u0338':'NotNestedLessLess','\u2AA2':'GreaterGreater','\u2AA2\u0338':'NotNestedGreaterGreater','\u2AA4':'glj','\u2AA5':'gla','\u2AA6':'ltcc','\u2AA7':'gtcc','\u2AA8':'lescc','\u2AA9':'gescc','\u2AAA':'smt','\u2AAB':'lat','\u2AAC':'smte','\u2AAC\uFE00':'smtes','\u2AAD':'late','\u2AAD\uFE00':'lates','\u2AAE':'bumpE','\u2AAF':'pre','\u2AAF\u0338':'npre','\u2AB0':'sce','\u2AB0\u0338':'nsce','\u2AB3':'prE','\u2AB4':'scE','\u2AB5':'prnE','\u2AB6':'scnE','\u2AB7':'prap','\u2AB8':'scap','\u2AB9':'prnap','\u2ABA':'scnap','\u2ABB':'Pr','\u2ABC':'Sc','\u2ABD':'subdot','\u2ABE':'supdot','\u2ABF':'subplus','\u2AC0':'supplus','\u2AC1':'submult','\u2AC2':'supmult','\u2AC3':'subedot','\u2AC4':'supedot','\u2AC5':'subE','\u2AC5\u0338':'nsubE','\u2AC6':'supE','\u2AC6\u0338':'nsupE','\u2AC7':'subsim','\u2AC8':'supsim','\u2ACB\uFE00':'vsubnE','\u2ACB':'subnE','\u2ACC\uFE00':'vsupnE','\u2ACC':'supnE','\u2ACF':'csub','\u2AD0':'csup','\u2AD1':'csube','\u2AD2':'csupe','\u2AD3':'subsup','\u2AD4':'supsub','\u2AD5':'subsub','\u2AD6':'supsup','\u2AD7':'suphsub','\u2AD8':'supdsub','\u2AD9':'forkv','\u2ADA':'topfork','\u2ADB':'mlcp','\u2AE4':'Dashv','\u2AE6':'Vdashl','\u2AE7':'Barv','\u2AE8':'vBar','\u2AE9':'vBarv','\u2AEB':'Vbar','\u2AEC':'Not','\u2AED':'bNot','\u2AEE':'rnmid','\u2AEF':'cirmid','\u2AF0':'midcir','\u2AF1':'topcir','\u2AF2':'nhpar','\u2AF3':'parsim','\u2AFD':'parsl','\u2AFD\u20E5':'nparsl','\u266D':'flat','\u266E':'natur','\u266F':'sharp','\xA4':'curren','\xA2':'cent','$':'dollar','\xA3':'pound','\xA5':'yen','\u20AC':'euro','\xB9':'sup1','\xBD':'half','\u2153':'frac13','\xBC':'frac14','\u2155':'frac15','\u2159':'frac16','\u215B':'frac18','\xB2':'sup2','\u2154':'frac23','\u2156':'frac25','\xB3':'sup3','\xBE':'frac34','\u2157':'frac35','\u215C':'frac38','\u2158':'frac45','\u215A':'frac56','\u215D':'frac58','\u215E':'frac78','\uD835\uDCB6':'ascr','\uD835\uDD52':'aopf','\uD835\uDD1E':'afr','\uD835\uDD38':'Aopf','\uD835\uDD04':'Afr','\uD835\uDC9C':'Ascr','\xAA':'ordf','\xE1':'aacute','\xC1':'Aacute','\xE0':'agrave','\xC0':'Agrave','\u0103':'abreve','\u0102':'Abreve','\xE2':'acirc','\xC2':'Acirc','\xE5':'aring','\xC5':'angst','\xE4':'auml','\xC4':'Auml','\xE3':'atilde','\xC3':'Atilde','\u0105':'aogon','\u0104':'Aogon','\u0101':'amacr','\u0100':'Amacr','\xE6':'aelig','\xC6':'AElig','\uD835\uDCB7':'bscr','\uD835\uDD53':'bopf','\uD835\uDD1F':'bfr','\uD835\uDD39':'Bopf','\u212C':'Bscr','\uD835\uDD05':'Bfr','\uD835\uDD20':'cfr','\uD835\uDCB8':'cscr','\uD835\uDD54':'copf','\u212D':'Cfr','\uD835\uDC9E':'Cscr','\u2102':'Copf','\u0107':'cacute','\u0106':'Cacute','\u0109':'ccirc','\u0108':'Ccirc','\u010D':'ccaron','\u010C':'Ccaron','\u010B':'cdot','\u010A':'Cdot','\xE7':'ccedil','\xC7':'Ccedil','\u2105':'incare','\uD835\uDD21':'dfr','\u2146':'dd','\uD835\uDD55':'dopf','\uD835\uDCB9':'dscr','\uD835\uDC9F':'Dscr','\uD835\uDD07':'Dfr','\u2145':'DD','\uD835\uDD3B':'Dopf','\u010F':'dcaron','\u010E':'Dcaron','\u0111':'dstrok','\u0110':'Dstrok','\xF0':'eth','\xD0':'ETH','\u2147':'ee','\u212F':'escr','\uD835\uDD22':'efr','\uD835\uDD56':'eopf','\u2130':'Escr','\uD835\uDD08':'Efr','\uD835\uDD3C':'Eopf','\xE9':'eacute','\xC9':'Eacute','\xE8':'egrave','\xC8':'Egrave','\xEA':'ecirc','\xCA':'Ecirc','\u011B':'ecaron','\u011A':'Ecaron','\xEB':'euml','\xCB':'Euml','\u0117':'edot','\u0116':'Edot','\u0119':'eogon','\u0118':'Eogon','\u0113':'emacr','\u0112':'Emacr','\uD835\uDD23':'ffr','\uD835\uDD57':'fopf','\uD835\uDCBB':'fscr','\uD835\uDD09':'Ffr','\uD835\uDD3D':'Fopf','\u2131':'Fscr','\uFB00':'fflig','\uFB03':'ffilig','\uFB04':'ffllig','\uFB01':'filig','fj':'fjlig','\uFB02':'fllig','\u0192':'fnof','\u210A':'gscr','\uD835\uDD58':'gopf','\uD835\uDD24':'gfr','\uD835\uDCA2':'Gscr','\uD835\uDD3E':'Gopf','\uD835\uDD0A':'Gfr','\u01F5':'gacute','\u011F':'gbreve','\u011E':'Gbreve','\u011D':'gcirc','\u011C':'Gcirc','\u0121':'gdot','\u0120':'Gdot','\u0122':'Gcedil','\uD835\uDD25':'hfr','\u210E':'planckh','\uD835\uDCBD':'hscr','\uD835\uDD59':'hopf','\u210B':'Hscr','\u210C':'Hfr','\u210D':'Hopf','\u0125':'hcirc','\u0124':'Hcirc','\u210F':'hbar','\u0127':'hstrok','\u0126':'Hstrok','\uD835\uDD5A':'iopf','\uD835\uDD26':'ifr','\uD835\uDCBE':'iscr','\u2148':'ii','\uD835\uDD40':'Iopf','\u2110':'Iscr','\u2111':'Im','\xED':'iacute','\xCD':'Iacute','\xEC':'igrave','\xCC':'Igrave','\xEE':'icirc','\xCE':'Icirc','\xEF':'iuml','\xCF':'Iuml','\u0129':'itilde','\u0128':'Itilde','\u0130':'Idot','\u012F':'iogon','\u012E':'Iogon','\u012B':'imacr','\u012A':'Imacr','\u0133':'ijlig','\u0132':'IJlig','\u0131':'imath','\uD835\uDCBF':'jscr','\uD835\uDD5B':'jopf','\uD835\uDD27':'jfr','\uD835\uDCA5':'Jscr','\uD835\uDD0D':'Jfr','\uD835\uDD41':'Jopf','\u0135':'jcirc','\u0134':'Jcirc','\u0237':'jmath','\uD835\uDD5C':'kopf','\uD835\uDCC0':'kscr','\uD835\uDD28':'kfr','\uD835\uDCA6':'Kscr','\uD835\uDD42':'Kopf','\uD835\uDD0E':'Kfr','\u0137':'kcedil','\u0136':'Kcedil','\uD835\uDD29':'lfr','\uD835\uDCC1':'lscr','\u2113':'ell','\uD835\uDD5D':'lopf','\u2112':'Lscr','\uD835\uDD0F':'Lfr','\uD835\uDD43':'Lopf','\u013A':'lacute','\u0139':'Lacute','\u013E':'lcaron','\u013D':'Lcaron','\u013C':'lcedil','\u013B':'Lcedil','\u0142':'lstrok','\u0141':'Lstrok','\u0140':'lmidot','\u013F':'Lmidot','\uD835\uDD2A':'mfr','\uD835\uDD5E':'mopf','\uD835\uDCC2':'mscr','\uD835\uDD10':'Mfr','\uD835\uDD44':'Mopf','\u2133':'Mscr','\uD835\uDD2B':'nfr','\uD835\uDD5F':'nopf','\uD835\uDCC3':'nscr','\u2115':'Nopf','\uD835\uDCA9':'Nscr','\uD835\uDD11':'Nfr','\u0144':'nacute','\u0143':'Nacute','\u0148':'ncaron','\u0147':'Ncaron','\xF1':'ntilde','\xD1':'Ntilde','\u0146':'ncedil','\u0145':'Ncedil','\u2116':'numero','\u014B':'eng','\u014A':'ENG','\uD835\uDD60':'oopf','\uD835\uDD2C':'ofr','\u2134':'oscr','\uD835\uDCAA':'Oscr','\uD835\uDD12':'Ofr','\uD835\uDD46':'Oopf','\xBA':'ordm','\xF3':'oacute','\xD3':'Oacute','\xF2':'ograve','\xD2':'Ograve','\xF4':'ocirc','\xD4':'Ocirc','\xF6':'ouml','\xD6':'Ouml','\u0151':'odblac','\u0150':'Odblac','\xF5':'otilde','\xD5':'Otilde','\xF8':'oslash','\xD8':'Oslash','\u014D':'omacr','\u014C':'Omacr','\u0153':'oelig','\u0152':'OElig','\uD835\uDD2D':'pfr','\uD835\uDCC5':'pscr','\uD835\uDD61':'popf','\u2119':'Popf','\uD835\uDD13':'Pfr','\uD835\uDCAB':'Pscr','\uD835\uDD62':'qopf','\uD835\uDD2E':'qfr','\uD835\uDCC6':'qscr','\uD835\uDCAC':'Qscr','\uD835\uDD14':'Qfr','\u211A':'Qopf','\u0138':'kgreen','\uD835\uDD2F':'rfr','\uD835\uDD63':'ropf','\uD835\uDCC7':'rscr','\u211B':'Rscr','\u211C':'Re','\u211D':'Ropf','\u0155':'racute','\u0154':'Racute','\u0159':'rcaron','\u0158':'Rcaron','\u0157':'rcedil','\u0156':'Rcedil','\uD835\uDD64':'sopf','\uD835\uDCC8':'sscr','\uD835\uDD30':'sfr','\uD835\uDD4A':'Sopf','\uD835\uDD16':'Sfr','\uD835\uDCAE':'Sscr','\u24C8':'oS','\u015B':'sacute','\u015A':'Sacute','\u015D':'scirc','\u015C':'Scirc','\u0161':'scaron','\u0160':'Scaron','\u015F':'scedil','\u015E':'Scedil','\xDF':'szlig','\uD835\uDD31':'tfr','\uD835\uDCC9':'tscr','\uD835\uDD65':'topf','\uD835\uDCAF':'Tscr','\uD835\uDD17':'Tfr','\uD835\uDD4B':'Topf','\u0165':'tcaron','\u0164':'Tcaron','\u0163':'tcedil','\u0162':'Tcedil','\u2122':'trade','\u0167':'tstrok','\u0166':'Tstrok','\uD835\uDCCA':'uscr','\uD835\uDD66':'uopf','\uD835\uDD32':'ufr','\uD835\uDD4C':'Uopf','\uD835\uDD18':'Ufr','\uD835\uDCB0':'Uscr','\xFA':'uacute','\xDA':'Uacute','\xF9':'ugrave','\xD9':'Ugrave','\u016D':'ubreve','\u016C':'Ubreve','\xFB':'ucirc','\xDB':'Ucirc','\u016F':'uring','\u016E':'Uring','\xFC':'uuml','\xDC':'Uuml','\u0171':'udblac','\u0170':'Udblac','\u0169':'utilde','\u0168':'Utilde','\u0173':'uogon','\u0172':'Uogon','\u016B':'umacr','\u016A':'Umacr','\uD835\uDD33':'vfr','\uD835\uDD67':'vopf','\uD835\uDCCB':'vscr','\uD835\uDD19':'Vfr','\uD835\uDD4D':'Vopf','\uD835\uDCB1':'Vscr','\uD835\uDD68':'wopf','\uD835\uDCCC':'wscr','\uD835\uDD34':'wfr','\uD835\uDCB2':'Wscr','\uD835\uDD4E':'Wopf','\uD835\uDD1A':'Wfr','\u0175':'wcirc','\u0174':'Wcirc','\uD835\uDD35':'xfr','\uD835\uDCCD':'xscr','\uD835\uDD69':'xopf','\uD835\uDD4F':'Xopf','\uD835\uDD1B':'Xfr','\uD835\uDCB3':'Xscr','\uD835\uDD36':'yfr','\uD835\uDCCE':'yscr','\uD835\uDD6A':'yopf','\uD835\uDCB4':'Yscr','\uD835\uDD1C':'Yfr','\uD835\uDD50':'Yopf','\xFD':'yacute','\xDD':'Yacute','\u0177':'ycirc','\u0176':'Ycirc','\xFF':'yuml','\u0178':'Yuml','\uD835\uDCCF':'zscr','\uD835\uDD37':'zfr','\uD835\uDD6B':'zopf','\u2128':'Zfr','\u2124':'Zopf','\uD835\uDCB5':'Zscr','\u017A':'zacute','\u0179':'Zacute','\u017E':'zcaron','\u017D':'Zcaron','\u017C':'zdot','\u017B':'Zdot','\u01B5':'imped','\xFE':'thorn','\xDE':'THORN','\u0149':'napos','\u03B1':'alpha','\u0391':'Alpha','\u03B2':'beta','\u0392':'Beta','\u03B3':'gamma','\u0393':'Gamma','\u03B4':'delta','\u0394':'Delta','\u03B5':'epsi','\u03F5':'epsiv','\u0395':'Epsilon','\u03DD':'gammad','\u03DC':'Gammad','\u03B6':'zeta','\u0396':'Zeta','\u03B7':'eta','\u0397':'Eta','\u03B8':'theta','\u03D1':'thetav','\u0398':'Theta','\u03B9':'iota','\u0399':'Iota','\u03BA':'kappa','\u03F0':'kappav','\u039A':'Kappa','\u03BB':'lambda','\u039B':'Lambda','\u03BC':'mu','\xB5':'micro','\u039C':'Mu','\u03BD':'nu','\u039D':'Nu','\u03BE':'xi','\u039E':'Xi','\u03BF':'omicron','\u039F':'Omicron','\u03C0':'pi','\u03D6':'piv','\u03A0':'Pi','\u03C1':'rho','\u03F1':'rhov','\u03A1':'Rho','\u03C3':'sigma','\u03A3':'Sigma','\u03C2':'sigmaf','\u03C4':'tau','\u03A4':'Tau','\u03C5':'upsi','\u03A5':'Upsilon','\u03D2':'Upsi','\u03C6':'phi','\u03D5':'phiv','\u03A6':'Phi','\u03C7':'chi','\u03A7':'Chi','\u03C8':'psi','\u03A8':'Psi','\u03C9':'omega','\u03A9':'ohm','\u0430':'acy','\u0410':'Acy','\u0431':'bcy','\u0411':'Bcy','\u0432':'vcy','\u0412':'Vcy','\u0433':'gcy','\u0413':'Gcy','\u0453':'gjcy','\u0403':'GJcy','\u0434':'dcy','\u0414':'Dcy','\u0452':'djcy','\u0402':'DJcy','\u0435':'iecy','\u0415':'IEcy','\u0451':'iocy','\u0401':'IOcy','\u0454':'jukcy','\u0404':'Jukcy','\u0436':'zhcy','\u0416':'ZHcy','\u0437':'zcy','\u0417':'Zcy','\u0455':'dscy','\u0405':'DScy','\u0438':'icy','\u0418':'Icy','\u0456':'iukcy','\u0406':'Iukcy','\u0457':'yicy','\u0407':'YIcy','\u0439':'jcy','\u0419':'Jcy','\u0458':'jsercy','\u0408':'Jsercy','\u043A':'kcy','\u041A':'Kcy','\u045C':'kjcy','\u040C':'KJcy','\u043B':'lcy','\u041B':'Lcy','\u0459':'ljcy','\u0409':'LJcy','\u043C':'mcy','\u041C':'Mcy','\u043D':'ncy','\u041D':'Ncy','\u045A':'njcy','\u040A':'NJcy','\u043E':'ocy','\u041E':'Ocy','\u043F':'pcy','\u041F':'Pcy','\u0440':'rcy','\u0420':'Rcy','\u0441':'scy','\u0421':'Scy','\u0442':'tcy','\u0422':'Tcy','\u045B':'tshcy','\u040B':'TSHcy','\u0443':'ucy','\u0423':'Ucy','\u045E':'ubrcy','\u040E':'Ubrcy','\u0444':'fcy','\u0424':'Fcy','\u0445':'khcy','\u0425':'KHcy','\u0446':'tscy','\u0426':'TScy','\u0447':'chcy','\u0427':'CHcy','\u045F':'dzcy','\u040F':'DZcy','\u0448':'shcy','\u0428':'SHcy','\u0449':'shchcy','\u0429':'SHCHcy','\u044A':'hardcy','\u042A':'HARDcy','\u044B':'ycy','\u042B':'Ycy','\u044C':'softcy','\u042C':'SOFTcy','\u044D':'ecy','\u042D':'Ecy','\u044E':'yucy','\u042E':'YUcy','\u044F':'yacy','\u042F':'YAcy','\u2135':'aleph','\u2136':'beth','\u2137':'gimel','\u2138':'daleth'};
	
		var regexEscape = /["&'<>`]/g;
		var escapeMap = {
			'"': '&quot;',
			'&': '&amp;',
			'\'': '&#x27;',
			'<': '&lt;',
			// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the
			// following is not strictly necessary unless it’s part of a tag or an
			// unquoted attribute value. We’re only escaping it to support those
			// situations, and for XML support.
			'>': '&gt;',
			// In Internet Explorer ≤ 8, the backtick character can be used
			// to break out of (un)quoted attribute values or HTML comments.
			// See http://html5sec.org/#102, http://html5sec.org/#108, and
			// http://html5sec.org/#133.
			'`': '&#x60;'
		};
	
		var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;
		var regexInvalidRawCodePoint = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
		var regexDecode = /&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)([=a-zA-Z0-9])?/g;
		var decodeMap = {'aacute':'\xE1','Aacute':'\xC1','abreve':'\u0103','Abreve':'\u0102','ac':'\u223E','acd':'\u223F','acE':'\u223E\u0333','acirc':'\xE2','Acirc':'\xC2','acute':'\xB4','acy':'\u0430','Acy':'\u0410','aelig':'\xE6','AElig':'\xC6','af':'\u2061','afr':'\uD835\uDD1E','Afr':'\uD835\uDD04','agrave':'\xE0','Agrave':'\xC0','alefsym':'\u2135','aleph':'\u2135','alpha':'\u03B1','Alpha':'\u0391','amacr':'\u0101','Amacr':'\u0100','amalg':'\u2A3F','amp':'&','AMP':'&','and':'\u2227','And':'\u2A53','andand':'\u2A55','andd':'\u2A5C','andslope':'\u2A58','andv':'\u2A5A','ang':'\u2220','ange':'\u29A4','angle':'\u2220','angmsd':'\u2221','angmsdaa':'\u29A8','angmsdab':'\u29A9','angmsdac':'\u29AA','angmsdad':'\u29AB','angmsdae':'\u29AC','angmsdaf':'\u29AD','angmsdag':'\u29AE','angmsdah':'\u29AF','angrt':'\u221F','angrtvb':'\u22BE','angrtvbd':'\u299D','angsph':'\u2222','angst':'\xC5','angzarr':'\u237C','aogon':'\u0105','Aogon':'\u0104','aopf':'\uD835\uDD52','Aopf':'\uD835\uDD38','ap':'\u2248','apacir':'\u2A6F','ape':'\u224A','apE':'\u2A70','apid':'\u224B','apos':'\'','ApplyFunction':'\u2061','approx':'\u2248','approxeq':'\u224A','aring':'\xE5','Aring':'\xC5','ascr':'\uD835\uDCB6','Ascr':'\uD835\uDC9C','Assign':'\u2254','ast':'*','asymp':'\u2248','asympeq':'\u224D','atilde':'\xE3','Atilde':'\xC3','auml':'\xE4','Auml':'\xC4','awconint':'\u2233','awint':'\u2A11','backcong':'\u224C','backepsilon':'\u03F6','backprime':'\u2035','backsim':'\u223D','backsimeq':'\u22CD','Backslash':'\u2216','Barv':'\u2AE7','barvee':'\u22BD','barwed':'\u2305','Barwed':'\u2306','barwedge':'\u2305','bbrk':'\u23B5','bbrktbrk':'\u23B6','bcong':'\u224C','bcy':'\u0431','Bcy':'\u0411','bdquo':'\u201E','becaus':'\u2235','because':'\u2235','Because':'\u2235','bemptyv':'\u29B0','bepsi':'\u03F6','bernou':'\u212C','Bernoullis':'\u212C','beta':'\u03B2','Beta':'\u0392','beth':'\u2136','between':'\u226C','bfr':'\uD835\uDD1F','Bfr':'\uD835\uDD05','bigcap':'\u22C2','bigcirc':'\u25EF','bigcup':'\u22C3','bigodot':'\u2A00','bigoplus':'\u2A01','bigotimes':'\u2A02','bigsqcup':'\u2A06','bigstar':'\u2605','bigtriangledown':'\u25BD','bigtriangleup':'\u25B3','biguplus':'\u2A04','bigvee':'\u22C1','bigwedge':'\u22C0','bkarow':'\u290D','blacklozenge':'\u29EB','blacksquare':'\u25AA','blacktriangle':'\u25B4','blacktriangledown':'\u25BE','blacktriangleleft':'\u25C2','blacktriangleright':'\u25B8','blank':'\u2423','blk12':'\u2592','blk14':'\u2591','blk34':'\u2593','block':'\u2588','bne':'=\u20E5','bnequiv':'\u2261\u20E5','bnot':'\u2310','bNot':'\u2AED','bopf':'\uD835\uDD53','Bopf':'\uD835\uDD39','bot':'\u22A5','bottom':'\u22A5','bowtie':'\u22C8','boxbox':'\u29C9','boxdl':'\u2510','boxdL':'\u2555','boxDl':'\u2556','boxDL':'\u2557','boxdr':'\u250C','boxdR':'\u2552','boxDr':'\u2553','boxDR':'\u2554','boxh':'\u2500','boxH':'\u2550','boxhd':'\u252C','boxhD':'\u2565','boxHd':'\u2564','boxHD':'\u2566','boxhu':'\u2534','boxhU':'\u2568','boxHu':'\u2567','boxHU':'\u2569','boxminus':'\u229F','boxplus':'\u229E','boxtimes':'\u22A0','boxul':'\u2518','boxuL':'\u255B','boxUl':'\u255C','boxUL':'\u255D','boxur':'\u2514','boxuR':'\u2558','boxUr':'\u2559','boxUR':'\u255A','boxv':'\u2502','boxV':'\u2551','boxvh':'\u253C','boxvH':'\u256A','boxVh':'\u256B','boxVH':'\u256C','boxvl':'\u2524','boxvL':'\u2561','boxVl':'\u2562','boxVL':'\u2563','boxvr':'\u251C','boxvR':'\u255E','boxVr':'\u255F','boxVR':'\u2560','bprime':'\u2035','breve':'\u02D8','Breve':'\u02D8','brvbar':'\xA6','bscr':'\uD835\uDCB7','Bscr':'\u212C','bsemi':'\u204F','bsim':'\u223D','bsime':'\u22CD','bsol':'\\','bsolb':'\u29C5','bsolhsub':'\u27C8','bull':'\u2022','bullet':'\u2022','bump':'\u224E','bumpe':'\u224F','bumpE':'\u2AAE','bumpeq':'\u224F','Bumpeq':'\u224E','cacute':'\u0107','Cacute':'\u0106','cap':'\u2229','Cap':'\u22D2','capand':'\u2A44','capbrcup':'\u2A49','capcap':'\u2A4B','capcup':'\u2A47','capdot':'\u2A40','CapitalDifferentialD':'\u2145','caps':'\u2229\uFE00','caret':'\u2041','caron':'\u02C7','Cayleys':'\u212D','ccaps':'\u2A4D','ccaron':'\u010D','Ccaron':'\u010C','ccedil':'\xE7','Ccedil':'\xC7','ccirc':'\u0109','Ccirc':'\u0108','Cconint':'\u2230','ccups':'\u2A4C','ccupssm':'\u2A50','cdot':'\u010B','Cdot':'\u010A','cedil':'\xB8','Cedilla':'\xB8','cemptyv':'\u29B2','cent':'\xA2','centerdot':'\xB7','CenterDot':'\xB7','cfr':'\uD835\uDD20','Cfr':'\u212D','chcy':'\u0447','CHcy':'\u0427','check':'\u2713','checkmark':'\u2713','chi':'\u03C7','Chi':'\u03A7','cir':'\u25CB','circ':'\u02C6','circeq':'\u2257','circlearrowleft':'\u21BA','circlearrowright':'\u21BB','circledast':'\u229B','circledcirc':'\u229A','circleddash':'\u229D','CircleDot':'\u2299','circledR':'\xAE','circledS':'\u24C8','CircleMinus':'\u2296','CirclePlus':'\u2295','CircleTimes':'\u2297','cire':'\u2257','cirE':'\u29C3','cirfnint':'\u2A10','cirmid':'\u2AEF','cirscir':'\u29C2','ClockwiseContourIntegral':'\u2232','CloseCurlyDoubleQuote':'\u201D','CloseCurlyQuote':'\u2019','clubs':'\u2663','clubsuit':'\u2663','colon':':','Colon':'\u2237','colone':'\u2254','Colone':'\u2A74','coloneq':'\u2254','comma':',','commat':'@','comp':'\u2201','compfn':'\u2218','complement':'\u2201','complexes':'\u2102','cong':'\u2245','congdot':'\u2A6D','Congruent':'\u2261','conint':'\u222E','Conint':'\u222F','ContourIntegral':'\u222E','copf':'\uD835\uDD54','Copf':'\u2102','coprod':'\u2210','Coproduct':'\u2210','copy':'\xA9','COPY':'\xA9','copysr':'\u2117','CounterClockwiseContourIntegral':'\u2233','crarr':'\u21B5','cross':'\u2717','Cross':'\u2A2F','cscr':'\uD835\uDCB8','Cscr':'\uD835\uDC9E','csub':'\u2ACF','csube':'\u2AD1','csup':'\u2AD0','csupe':'\u2AD2','ctdot':'\u22EF','cudarrl':'\u2938','cudarrr':'\u2935','cuepr':'\u22DE','cuesc':'\u22DF','cularr':'\u21B6','cularrp':'\u293D','cup':'\u222A','Cup':'\u22D3','cupbrcap':'\u2A48','cupcap':'\u2A46','CupCap':'\u224D','cupcup':'\u2A4A','cupdot':'\u228D','cupor':'\u2A45','cups':'\u222A\uFE00','curarr':'\u21B7','curarrm':'\u293C','curlyeqprec':'\u22DE','curlyeqsucc':'\u22DF','curlyvee':'\u22CE','curlywedge':'\u22CF','curren':'\xA4','curvearrowleft':'\u21B6','curvearrowright':'\u21B7','cuvee':'\u22CE','cuwed':'\u22CF','cwconint':'\u2232','cwint':'\u2231','cylcty':'\u232D','dagger':'\u2020','Dagger':'\u2021','daleth':'\u2138','darr':'\u2193','dArr':'\u21D3','Darr':'\u21A1','dash':'\u2010','dashv':'\u22A3','Dashv':'\u2AE4','dbkarow':'\u290F','dblac':'\u02DD','dcaron':'\u010F','Dcaron':'\u010E','dcy':'\u0434','Dcy':'\u0414','dd':'\u2146','DD':'\u2145','ddagger':'\u2021','ddarr':'\u21CA','DDotrahd':'\u2911','ddotseq':'\u2A77','deg':'\xB0','Del':'\u2207','delta':'\u03B4','Delta':'\u0394','demptyv':'\u29B1','dfisht':'\u297F','dfr':'\uD835\uDD21','Dfr':'\uD835\uDD07','dHar':'\u2965','dharl':'\u21C3','dharr':'\u21C2','DiacriticalAcute':'\xB4','DiacriticalDot':'\u02D9','DiacriticalDoubleAcute':'\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\u02DC','diam':'\u22C4','diamond':'\u22C4','Diamond':'\u22C4','diamondsuit':'\u2666','diams':'\u2666','die':'\xA8','DifferentialD':'\u2146','digamma':'\u03DD','disin':'\u22F2','div':'\xF7','divide':'\xF7','divideontimes':'\u22C7','divonx':'\u22C7','djcy':'\u0452','DJcy':'\u0402','dlcorn':'\u231E','dlcrop':'\u230D','dollar':'$','dopf':'\uD835\uDD55','Dopf':'\uD835\uDD3B','dot':'\u02D9','Dot':'\xA8','DotDot':'\u20DC','doteq':'\u2250','doteqdot':'\u2251','DotEqual':'\u2250','dotminus':'\u2238','dotplus':'\u2214','dotsquare':'\u22A1','doublebarwedge':'\u2306','DoubleContourIntegral':'\u222F','DoubleDot':'\xA8','DoubleDownArrow':'\u21D3','DoubleLeftArrow':'\u21D0','DoubleLeftRightArrow':'\u21D4','DoubleLeftTee':'\u2AE4','DoubleLongLeftArrow':'\u27F8','DoubleLongLeftRightArrow':'\u27FA','DoubleLongRightArrow':'\u27F9','DoubleRightArrow':'\u21D2','DoubleRightTee':'\u22A8','DoubleUpArrow':'\u21D1','DoubleUpDownArrow':'\u21D5','DoubleVerticalBar':'\u2225','downarrow':'\u2193','Downarrow':'\u21D3','DownArrow':'\u2193','DownArrowBar':'\u2913','DownArrowUpArrow':'\u21F5','DownBreve':'\u0311','downdownarrows':'\u21CA','downharpoonleft':'\u21C3','downharpoonright':'\u21C2','DownLeftRightVector':'\u2950','DownLeftTeeVector':'\u295E','DownLeftVector':'\u21BD','DownLeftVectorBar':'\u2956','DownRightTeeVector':'\u295F','DownRightVector':'\u21C1','DownRightVectorBar':'\u2957','DownTee':'\u22A4','DownTeeArrow':'\u21A7','drbkarow':'\u2910','drcorn':'\u231F','drcrop':'\u230C','dscr':'\uD835\uDCB9','Dscr':'\uD835\uDC9F','dscy':'\u0455','DScy':'\u0405','dsol':'\u29F6','dstrok':'\u0111','Dstrok':'\u0110','dtdot':'\u22F1','dtri':'\u25BF','dtrif':'\u25BE','duarr':'\u21F5','duhar':'\u296F','dwangle':'\u29A6','dzcy':'\u045F','DZcy':'\u040F','dzigrarr':'\u27FF','eacute':'\xE9','Eacute':'\xC9','easter':'\u2A6E','ecaron':'\u011B','Ecaron':'\u011A','ecir':'\u2256','ecirc':'\xEA','Ecirc':'\xCA','ecolon':'\u2255','ecy':'\u044D','Ecy':'\u042D','eDDot':'\u2A77','edot':'\u0117','eDot':'\u2251','Edot':'\u0116','ee':'\u2147','efDot':'\u2252','efr':'\uD835\uDD22','Efr':'\uD835\uDD08','eg':'\u2A9A','egrave':'\xE8','Egrave':'\xC8','egs':'\u2A96','egsdot':'\u2A98','el':'\u2A99','Element':'\u2208','elinters':'\u23E7','ell':'\u2113','els':'\u2A95','elsdot':'\u2A97','emacr':'\u0113','Emacr':'\u0112','empty':'\u2205','emptyset':'\u2205','EmptySmallSquare':'\u25FB','emptyv':'\u2205','EmptyVerySmallSquare':'\u25AB','emsp':'\u2003','emsp13':'\u2004','emsp14':'\u2005','eng':'\u014B','ENG':'\u014A','ensp':'\u2002','eogon':'\u0119','Eogon':'\u0118','eopf':'\uD835\uDD56','Eopf':'\uD835\uDD3C','epar':'\u22D5','eparsl':'\u29E3','eplus':'\u2A71','epsi':'\u03B5','epsilon':'\u03B5','Epsilon':'\u0395','epsiv':'\u03F5','eqcirc':'\u2256','eqcolon':'\u2255','eqsim':'\u2242','eqslantgtr':'\u2A96','eqslantless':'\u2A95','Equal':'\u2A75','equals':'=','EqualTilde':'\u2242','equest':'\u225F','Equilibrium':'\u21CC','equiv':'\u2261','equivDD':'\u2A78','eqvparsl':'\u29E5','erarr':'\u2971','erDot':'\u2253','escr':'\u212F','Escr':'\u2130','esdot':'\u2250','esim':'\u2242','Esim':'\u2A73','eta':'\u03B7','Eta':'\u0397','eth':'\xF0','ETH':'\xD0','euml':'\xEB','Euml':'\xCB','euro':'\u20AC','excl':'!','exist':'\u2203','Exists':'\u2203','expectation':'\u2130','exponentiale':'\u2147','ExponentialE':'\u2147','fallingdotseq':'\u2252','fcy':'\u0444','Fcy':'\u0424','female':'\u2640','ffilig':'\uFB03','fflig':'\uFB00','ffllig':'\uFB04','ffr':'\uD835\uDD23','Ffr':'\uD835\uDD09','filig':'\uFB01','FilledSmallSquare':'\u25FC','FilledVerySmallSquare':'\u25AA','fjlig':'fj','flat':'\u266D','fllig':'\uFB02','fltns':'\u25B1','fnof':'\u0192','fopf':'\uD835\uDD57','Fopf':'\uD835\uDD3D','forall':'\u2200','ForAll':'\u2200','fork':'\u22D4','forkv':'\u2AD9','Fouriertrf':'\u2131','fpartint':'\u2A0D','frac12':'\xBD','frac13':'\u2153','frac14':'\xBC','frac15':'\u2155','frac16':'\u2159','frac18':'\u215B','frac23':'\u2154','frac25':'\u2156','frac34':'\xBE','frac35':'\u2157','frac38':'\u215C','frac45':'\u2158','frac56':'\u215A','frac58':'\u215D','frac78':'\u215E','frasl':'\u2044','frown':'\u2322','fscr':'\uD835\uDCBB','Fscr':'\u2131','gacute':'\u01F5','gamma':'\u03B3','Gamma':'\u0393','gammad':'\u03DD','Gammad':'\u03DC','gap':'\u2A86','gbreve':'\u011F','Gbreve':'\u011E','Gcedil':'\u0122','gcirc':'\u011D','Gcirc':'\u011C','gcy':'\u0433','Gcy':'\u0413','gdot':'\u0121','Gdot':'\u0120','ge':'\u2265','gE':'\u2267','gel':'\u22DB','gEl':'\u2A8C','geq':'\u2265','geqq':'\u2267','geqslant':'\u2A7E','ges':'\u2A7E','gescc':'\u2AA9','gesdot':'\u2A80','gesdoto':'\u2A82','gesdotol':'\u2A84','gesl':'\u22DB\uFE00','gesles':'\u2A94','gfr':'\uD835\uDD24','Gfr':'\uD835\uDD0A','gg':'\u226B','Gg':'\u22D9','ggg':'\u22D9','gimel':'\u2137','gjcy':'\u0453','GJcy':'\u0403','gl':'\u2277','gla':'\u2AA5','glE':'\u2A92','glj':'\u2AA4','gnap':'\u2A8A','gnapprox':'\u2A8A','gne':'\u2A88','gnE':'\u2269','gneq':'\u2A88','gneqq':'\u2269','gnsim':'\u22E7','gopf':'\uD835\uDD58','Gopf':'\uD835\uDD3E','grave':'`','GreaterEqual':'\u2265','GreaterEqualLess':'\u22DB','GreaterFullEqual':'\u2267','GreaterGreater':'\u2AA2','GreaterLess':'\u2277','GreaterSlantEqual':'\u2A7E','GreaterTilde':'\u2273','gscr':'\u210A','Gscr':'\uD835\uDCA2','gsim':'\u2273','gsime':'\u2A8E','gsiml':'\u2A90','gt':'>','Gt':'\u226B','GT':'>','gtcc':'\u2AA7','gtcir':'\u2A7A','gtdot':'\u22D7','gtlPar':'\u2995','gtquest':'\u2A7C','gtrapprox':'\u2A86','gtrarr':'\u2978','gtrdot':'\u22D7','gtreqless':'\u22DB','gtreqqless':'\u2A8C','gtrless':'\u2277','gtrsim':'\u2273','gvertneqq':'\u2269\uFE00','gvnE':'\u2269\uFE00','Hacek':'\u02C7','hairsp':'\u200A','half':'\xBD','hamilt':'\u210B','hardcy':'\u044A','HARDcy':'\u042A','harr':'\u2194','hArr':'\u21D4','harrcir':'\u2948','harrw':'\u21AD','Hat':'^','hbar':'\u210F','hcirc':'\u0125','Hcirc':'\u0124','hearts':'\u2665','heartsuit':'\u2665','hellip':'\u2026','hercon':'\u22B9','hfr':'\uD835\uDD25','Hfr':'\u210C','HilbertSpace':'\u210B','hksearow':'\u2925','hkswarow':'\u2926','hoarr':'\u21FF','homtht':'\u223B','hookleftarrow':'\u21A9','hookrightarrow':'\u21AA','hopf':'\uD835\uDD59','Hopf':'\u210D','horbar':'\u2015','HorizontalLine':'\u2500','hscr':'\uD835\uDCBD','Hscr':'\u210B','hslash':'\u210F','hstrok':'\u0127','Hstrok':'\u0126','HumpDownHump':'\u224E','HumpEqual':'\u224F','hybull':'\u2043','hyphen':'\u2010','iacute':'\xED','Iacute':'\xCD','ic':'\u2063','icirc':'\xEE','Icirc':'\xCE','icy':'\u0438','Icy':'\u0418','Idot':'\u0130','iecy':'\u0435','IEcy':'\u0415','iexcl':'\xA1','iff':'\u21D4','ifr':'\uD835\uDD26','Ifr':'\u2111','igrave':'\xEC','Igrave':'\xCC','ii':'\u2148','iiiint':'\u2A0C','iiint':'\u222D','iinfin':'\u29DC','iiota':'\u2129','ijlig':'\u0133','IJlig':'\u0132','Im':'\u2111','imacr':'\u012B','Imacr':'\u012A','image':'\u2111','ImaginaryI':'\u2148','imagline':'\u2110','imagpart':'\u2111','imath':'\u0131','imof':'\u22B7','imped':'\u01B5','Implies':'\u21D2','in':'\u2208','incare':'\u2105','infin':'\u221E','infintie':'\u29DD','inodot':'\u0131','int':'\u222B','Int':'\u222C','intcal':'\u22BA','integers':'\u2124','Integral':'\u222B','intercal':'\u22BA','Intersection':'\u22C2','intlarhk':'\u2A17','intprod':'\u2A3C','InvisibleComma':'\u2063','InvisibleTimes':'\u2062','iocy':'\u0451','IOcy':'\u0401','iogon':'\u012F','Iogon':'\u012E','iopf':'\uD835\uDD5A','Iopf':'\uD835\uDD40','iota':'\u03B9','Iota':'\u0399','iprod':'\u2A3C','iquest':'\xBF','iscr':'\uD835\uDCBE','Iscr':'\u2110','isin':'\u2208','isindot':'\u22F5','isinE':'\u22F9','isins':'\u22F4','isinsv':'\u22F3','isinv':'\u2208','it':'\u2062','itilde':'\u0129','Itilde':'\u0128','iukcy':'\u0456','Iukcy':'\u0406','iuml':'\xEF','Iuml':'\xCF','jcirc':'\u0135','Jcirc':'\u0134','jcy':'\u0439','Jcy':'\u0419','jfr':'\uD835\uDD27','Jfr':'\uD835\uDD0D','jmath':'\u0237','jopf':'\uD835\uDD5B','Jopf':'\uD835\uDD41','jscr':'\uD835\uDCBF','Jscr':'\uD835\uDCA5','jsercy':'\u0458','Jsercy':'\u0408','jukcy':'\u0454','Jukcy':'\u0404','kappa':'\u03BA','Kappa':'\u039A','kappav':'\u03F0','kcedil':'\u0137','Kcedil':'\u0136','kcy':'\u043A','Kcy':'\u041A','kfr':'\uD835\uDD28','Kfr':'\uD835\uDD0E','kgreen':'\u0138','khcy':'\u0445','KHcy':'\u0425','kjcy':'\u045C','KJcy':'\u040C','kopf':'\uD835\uDD5C','Kopf':'\uD835\uDD42','kscr':'\uD835\uDCC0','Kscr':'\uD835\uDCA6','lAarr':'\u21DA','lacute':'\u013A','Lacute':'\u0139','laemptyv':'\u29B4','lagran':'\u2112','lambda':'\u03BB','Lambda':'\u039B','lang':'\u27E8','Lang':'\u27EA','langd':'\u2991','langle':'\u27E8','lap':'\u2A85','Laplacetrf':'\u2112','laquo':'\xAB','larr':'\u2190','lArr':'\u21D0','Larr':'\u219E','larrb':'\u21E4','larrbfs':'\u291F','larrfs':'\u291D','larrhk':'\u21A9','larrlp':'\u21AB','larrpl':'\u2939','larrsim':'\u2973','larrtl':'\u21A2','lat':'\u2AAB','latail':'\u2919','lAtail':'\u291B','late':'\u2AAD','lates':'\u2AAD\uFE00','lbarr':'\u290C','lBarr':'\u290E','lbbrk':'\u2772','lbrace':'{','lbrack':'[','lbrke':'\u298B','lbrksld':'\u298F','lbrkslu':'\u298D','lcaron':'\u013E','Lcaron':'\u013D','lcedil':'\u013C','Lcedil':'\u013B','lceil':'\u2308','lcub':'{','lcy':'\u043B','Lcy':'\u041B','ldca':'\u2936','ldquo':'\u201C','ldquor':'\u201E','ldrdhar':'\u2967','ldrushar':'\u294B','ldsh':'\u21B2','le':'\u2264','lE':'\u2266','LeftAngleBracket':'\u27E8','leftarrow':'\u2190','Leftarrow':'\u21D0','LeftArrow':'\u2190','LeftArrowBar':'\u21E4','LeftArrowRightArrow':'\u21C6','leftarrowtail':'\u21A2','LeftCeiling':'\u2308','LeftDoubleBracket':'\u27E6','LeftDownTeeVector':'\u2961','LeftDownVector':'\u21C3','LeftDownVectorBar':'\u2959','LeftFloor':'\u230A','leftharpoondown':'\u21BD','leftharpoonup':'\u21BC','leftleftarrows':'\u21C7','leftrightarrow':'\u2194','Leftrightarrow':'\u21D4','LeftRightArrow':'\u2194','leftrightarrows':'\u21C6','leftrightharpoons':'\u21CB','leftrightsquigarrow':'\u21AD','LeftRightVector':'\u294E','LeftTee':'\u22A3','LeftTeeArrow':'\u21A4','LeftTeeVector':'\u295A','leftthreetimes':'\u22CB','LeftTriangle':'\u22B2','LeftTriangleBar':'\u29CF','LeftTriangleEqual':'\u22B4','LeftUpDownVector':'\u2951','LeftUpTeeVector':'\u2960','LeftUpVector':'\u21BF','LeftUpVectorBar':'\u2958','LeftVector':'\u21BC','LeftVectorBar':'\u2952','leg':'\u22DA','lEg':'\u2A8B','leq':'\u2264','leqq':'\u2266','leqslant':'\u2A7D','les':'\u2A7D','lescc':'\u2AA8','lesdot':'\u2A7F','lesdoto':'\u2A81','lesdotor':'\u2A83','lesg':'\u22DA\uFE00','lesges':'\u2A93','lessapprox':'\u2A85','lessdot':'\u22D6','lesseqgtr':'\u22DA','lesseqqgtr':'\u2A8B','LessEqualGreater':'\u22DA','LessFullEqual':'\u2266','LessGreater':'\u2276','lessgtr':'\u2276','LessLess':'\u2AA1','lesssim':'\u2272','LessSlantEqual':'\u2A7D','LessTilde':'\u2272','lfisht':'\u297C','lfloor':'\u230A','lfr':'\uD835\uDD29','Lfr':'\uD835\uDD0F','lg':'\u2276','lgE':'\u2A91','lHar':'\u2962','lhard':'\u21BD','lharu':'\u21BC','lharul':'\u296A','lhblk':'\u2584','ljcy':'\u0459','LJcy':'\u0409','ll':'\u226A','Ll':'\u22D8','llarr':'\u21C7','llcorner':'\u231E','Lleftarrow':'\u21DA','llhard':'\u296B','lltri':'\u25FA','lmidot':'\u0140','Lmidot':'\u013F','lmoust':'\u23B0','lmoustache':'\u23B0','lnap':'\u2A89','lnapprox':'\u2A89','lne':'\u2A87','lnE':'\u2268','lneq':'\u2A87','lneqq':'\u2268','lnsim':'\u22E6','loang':'\u27EC','loarr':'\u21FD','lobrk':'\u27E6','longleftarrow':'\u27F5','Longleftarrow':'\u27F8','LongLeftArrow':'\u27F5','longleftrightarrow':'\u27F7','Longleftrightarrow':'\u27FA','LongLeftRightArrow':'\u27F7','longmapsto':'\u27FC','longrightarrow':'\u27F6','Longrightarrow':'\u27F9','LongRightArrow':'\u27F6','looparrowleft':'\u21AB','looparrowright':'\u21AC','lopar':'\u2985','lopf':'\uD835\uDD5D','Lopf':'\uD835\uDD43','loplus':'\u2A2D','lotimes':'\u2A34','lowast':'\u2217','lowbar':'_','LowerLeftArrow':'\u2199','LowerRightArrow':'\u2198','loz':'\u25CA','lozenge':'\u25CA','lozf':'\u29EB','lpar':'(','lparlt':'\u2993','lrarr':'\u21C6','lrcorner':'\u231F','lrhar':'\u21CB','lrhard':'\u296D','lrm':'\u200E','lrtri':'\u22BF','lsaquo':'\u2039','lscr':'\uD835\uDCC1','Lscr':'\u2112','lsh':'\u21B0','Lsh':'\u21B0','lsim':'\u2272','lsime':'\u2A8D','lsimg':'\u2A8F','lsqb':'[','lsquo':'\u2018','lsquor':'\u201A','lstrok':'\u0142','Lstrok':'\u0141','lt':'<','Lt':'\u226A','LT':'<','ltcc':'\u2AA6','ltcir':'\u2A79','ltdot':'\u22D6','lthree':'\u22CB','ltimes':'\u22C9','ltlarr':'\u2976','ltquest':'\u2A7B','ltri':'\u25C3','ltrie':'\u22B4','ltrif':'\u25C2','ltrPar':'\u2996','lurdshar':'\u294A','luruhar':'\u2966','lvertneqq':'\u2268\uFE00','lvnE':'\u2268\uFE00','macr':'\xAF','male':'\u2642','malt':'\u2720','maltese':'\u2720','map':'\u21A6','Map':'\u2905','mapsto':'\u21A6','mapstodown':'\u21A7','mapstoleft':'\u21A4','mapstoup':'\u21A5','marker':'\u25AE','mcomma':'\u2A29','mcy':'\u043C','Mcy':'\u041C','mdash':'\u2014','mDDot':'\u223A','measuredangle':'\u2221','MediumSpace':'\u205F','Mellintrf':'\u2133','mfr':'\uD835\uDD2A','Mfr':'\uD835\uDD10','mho':'\u2127','micro':'\xB5','mid':'\u2223','midast':'*','midcir':'\u2AF0','middot':'\xB7','minus':'\u2212','minusb':'\u229F','minusd':'\u2238','minusdu':'\u2A2A','MinusPlus':'\u2213','mlcp':'\u2ADB','mldr':'\u2026','mnplus':'\u2213','models':'\u22A7','mopf':'\uD835\uDD5E','Mopf':'\uD835\uDD44','mp':'\u2213','mscr':'\uD835\uDCC2','Mscr':'\u2133','mstpos':'\u223E','mu':'\u03BC','Mu':'\u039C','multimap':'\u22B8','mumap':'\u22B8','nabla':'\u2207','nacute':'\u0144','Nacute':'\u0143','nang':'\u2220\u20D2','nap':'\u2249','napE':'\u2A70\u0338','napid':'\u224B\u0338','napos':'\u0149','napprox':'\u2249','natur':'\u266E','natural':'\u266E','naturals':'\u2115','nbsp':'\xA0','nbump':'\u224E\u0338','nbumpe':'\u224F\u0338','ncap':'\u2A43','ncaron':'\u0148','Ncaron':'\u0147','ncedil':'\u0146','Ncedil':'\u0145','ncong':'\u2247','ncongdot':'\u2A6D\u0338','ncup':'\u2A42','ncy':'\u043D','Ncy':'\u041D','ndash':'\u2013','ne':'\u2260','nearhk':'\u2924','nearr':'\u2197','neArr':'\u21D7','nearrow':'\u2197','nedot':'\u2250\u0338','NegativeMediumSpace':'\u200B','NegativeThickSpace':'\u200B','NegativeThinSpace':'\u200B','NegativeVeryThinSpace':'\u200B','nequiv':'\u2262','nesear':'\u2928','nesim':'\u2242\u0338','NestedGreaterGreater':'\u226B','NestedLessLess':'\u226A','NewLine':'\n','nexist':'\u2204','nexists':'\u2204','nfr':'\uD835\uDD2B','Nfr':'\uD835\uDD11','nge':'\u2271','ngE':'\u2267\u0338','ngeq':'\u2271','ngeqq':'\u2267\u0338','ngeqslant':'\u2A7E\u0338','nges':'\u2A7E\u0338','nGg':'\u22D9\u0338','ngsim':'\u2275','ngt':'\u226F','nGt':'\u226B\u20D2','ngtr':'\u226F','nGtv':'\u226B\u0338','nharr':'\u21AE','nhArr':'\u21CE','nhpar':'\u2AF2','ni':'\u220B','nis':'\u22FC','nisd':'\u22FA','niv':'\u220B','njcy':'\u045A','NJcy':'\u040A','nlarr':'\u219A','nlArr':'\u21CD','nldr':'\u2025','nle':'\u2270','nlE':'\u2266\u0338','nleftarrow':'\u219A','nLeftarrow':'\u21CD','nleftrightarrow':'\u21AE','nLeftrightarrow':'\u21CE','nleq':'\u2270','nleqq':'\u2266\u0338','nleqslant':'\u2A7D\u0338','nles':'\u2A7D\u0338','nless':'\u226E','nLl':'\u22D8\u0338','nlsim':'\u2274','nlt':'\u226E','nLt':'\u226A\u20D2','nltri':'\u22EA','nltrie':'\u22EC','nLtv':'\u226A\u0338','nmid':'\u2224','NoBreak':'\u2060','NonBreakingSpace':'\xA0','nopf':'\uD835\uDD5F','Nopf':'\u2115','not':'\xAC','Not':'\u2AEC','NotCongruent':'\u2262','NotCupCap':'\u226D','NotDoubleVerticalBar':'\u2226','NotElement':'\u2209','NotEqual':'\u2260','NotEqualTilde':'\u2242\u0338','NotExists':'\u2204','NotGreater':'\u226F','NotGreaterEqual':'\u2271','NotGreaterFullEqual':'\u2267\u0338','NotGreaterGreater':'\u226B\u0338','NotGreaterLess':'\u2279','NotGreaterSlantEqual':'\u2A7E\u0338','NotGreaterTilde':'\u2275','NotHumpDownHump':'\u224E\u0338','NotHumpEqual':'\u224F\u0338','notin':'\u2209','notindot':'\u22F5\u0338','notinE':'\u22F9\u0338','notinva':'\u2209','notinvb':'\u22F7','notinvc':'\u22F6','NotLeftTriangle':'\u22EA','NotLeftTriangleBar':'\u29CF\u0338','NotLeftTriangleEqual':'\u22EC','NotLess':'\u226E','NotLessEqual':'\u2270','NotLessGreater':'\u2278','NotLessLess':'\u226A\u0338','NotLessSlantEqual':'\u2A7D\u0338','NotLessTilde':'\u2274','NotNestedGreaterGreater':'\u2AA2\u0338','NotNestedLessLess':'\u2AA1\u0338','notni':'\u220C','notniva':'\u220C','notnivb':'\u22FE','notnivc':'\u22FD','NotPrecedes':'\u2280','NotPrecedesEqual':'\u2AAF\u0338','NotPrecedesSlantEqual':'\u22E0','NotReverseElement':'\u220C','NotRightTriangle':'\u22EB','NotRightTriangleBar':'\u29D0\u0338','NotRightTriangleEqual':'\u22ED','NotSquareSubset':'\u228F\u0338','NotSquareSubsetEqual':'\u22E2','NotSquareSuperset':'\u2290\u0338','NotSquareSupersetEqual':'\u22E3','NotSubset':'\u2282\u20D2','NotSubsetEqual':'\u2288','NotSucceeds':'\u2281','NotSucceedsEqual':'\u2AB0\u0338','NotSucceedsSlantEqual':'\u22E1','NotSucceedsTilde':'\u227F\u0338','NotSuperset':'\u2283\u20D2','NotSupersetEqual':'\u2289','NotTilde':'\u2241','NotTildeEqual':'\u2244','NotTildeFullEqual':'\u2247','NotTildeTilde':'\u2249','NotVerticalBar':'\u2224','npar':'\u2226','nparallel':'\u2226','nparsl':'\u2AFD\u20E5','npart':'\u2202\u0338','npolint':'\u2A14','npr':'\u2280','nprcue':'\u22E0','npre':'\u2AAF\u0338','nprec':'\u2280','npreceq':'\u2AAF\u0338','nrarr':'\u219B','nrArr':'\u21CF','nrarrc':'\u2933\u0338','nrarrw':'\u219D\u0338','nrightarrow':'\u219B','nRightarrow':'\u21CF','nrtri':'\u22EB','nrtrie':'\u22ED','nsc':'\u2281','nsccue':'\u22E1','nsce':'\u2AB0\u0338','nscr':'\uD835\uDCC3','Nscr':'\uD835\uDCA9','nshortmid':'\u2224','nshortparallel':'\u2226','nsim':'\u2241','nsime':'\u2244','nsimeq':'\u2244','nsmid':'\u2224','nspar':'\u2226','nsqsube':'\u22E2','nsqsupe':'\u22E3','nsub':'\u2284','nsube':'\u2288','nsubE':'\u2AC5\u0338','nsubset':'\u2282\u20D2','nsubseteq':'\u2288','nsubseteqq':'\u2AC5\u0338','nsucc':'\u2281','nsucceq':'\u2AB0\u0338','nsup':'\u2285','nsupe':'\u2289','nsupE':'\u2AC6\u0338','nsupset':'\u2283\u20D2','nsupseteq':'\u2289','nsupseteqq':'\u2AC6\u0338','ntgl':'\u2279','ntilde':'\xF1','Ntilde':'\xD1','ntlg':'\u2278','ntriangleleft':'\u22EA','ntrianglelefteq':'\u22EC','ntriangleright':'\u22EB','ntrianglerighteq':'\u22ED','nu':'\u03BD','Nu':'\u039D','num':'#','numero':'\u2116','numsp':'\u2007','nvap':'\u224D\u20D2','nvdash':'\u22AC','nvDash':'\u22AD','nVdash':'\u22AE','nVDash':'\u22AF','nvge':'\u2265\u20D2','nvgt':'>\u20D2','nvHarr':'\u2904','nvinfin':'\u29DE','nvlArr':'\u2902','nvle':'\u2264\u20D2','nvlt':'<\u20D2','nvltrie':'\u22B4\u20D2','nvrArr':'\u2903','nvrtrie':'\u22B5\u20D2','nvsim':'\u223C\u20D2','nwarhk':'\u2923','nwarr':'\u2196','nwArr':'\u21D6','nwarrow':'\u2196','nwnear':'\u2927','oacute':'\xF3','Oacute':'\xD3','oast':'\u229B','ocir':'\u229A','ocirc':'\xF4','Ocirc':'\xD4','ocy':'\u043E','Ocy':'\u041E','odash':'\u229D','odblac':'\u0151','Odblac':'\u0150','odiv':'\u2A38','odot':'\u2299','odsold':'\u29BC','oelig':'\u0153','OElig':'\u0152','ofcir':'\u29BF','ofr':'\uD835\uDD2C','Ofr':'\uD835\uDD12','ogon':'\u02DB','ograve':'\xF2','Ograve':'\xD2','ogt':'\u29C1','ohbar':'\u29B5','ohm':'\u03A9','oint':'\u222E','olarr':'\u21BA','olcir':'\u29BE','olcross':'\u29BB','oline':'\u203E','olt':'\u29C0','omacr':'\u014D','Omacr':'\u014C','omega':'\u03C9','Omega':'\u03A9','omicron':'\u03BF','Omicron':'\u039F','omid':'\u29B6','ominus':'\u2296','oopf':'\uD835\uDD60','Oopf':'\uD835\uDD46','opar':'\u29B7','OpenCurlyDoubleQuote':'\u201C','OpenCurlyQuote':'\u2018','operp':'\u29B9','oplus':'\u2295','or':'\u2228','Or':'\u2A54','orarr':'\u21BB','ord':'\u2A5D','order':'\u2134','orderof':'\u2134','ordf':'\xAA','ordm':'\xBA','origof':'\u22B6','oror':'\u2A56','orslope':'\u2A57','orv':'\u2A5B','oS':'\u24C8','oscr':'\u2134','Oscr':'\uD835\uDCAA','oslash':'\xF8','Oslash':'\xD8','osol':'\u2298','otilde':'\xF5','Otilde':'\xD5','otimes':'\u2297','Otimes':'\u2A37','otimesas':'\u2A36','ouml':'\xF6','Ouml':'\xD6','ovbar':'\u233D','OverBar':'\u203E','OverBrace':'\u23DE','OverBracket':'\u23B4','OverParenthesis':'\u23DC','par':'\u2225','para':'\xB6','parallel':'\u2225','parsim':'\u2AF3','parsl':'\u2AFD','part':'\u2202','PartialD':'\u2202','pcy':'\u043F','Pcy':'\u041F','percnt':'%','period':'.','permil':'\u2030','perp':'\u22A5','pertenk':'\u2031','pfr':'\uD835\uDD2D','Pfr':'\uD835\uDD13','phi':'\u03C6','Phi':'\u03A6','phiv':'\u03D5','phmmat':'\u2133','phone':'\u260E','pi':'\u03C0','Pi':'\u03A0','pitchfork':'\u22D4','piv':'\u03D6','planck':'\u210F','planckh':'\u210E','plankv':'\u210F','plus':'+','plusacir':'\u2A23','plusb':'\u229E','pluscir':'\u2A22','plusdo':'\u2214','plusdu':'\u2A25','pluse':'\u2A72','PlusMinus':'\xB1','plusmn':'\xB1','plussim':'\u2A26','plustwo':'\u2A27','pm':'\xB1','Poincareplane':'\u210C','pointint':'\u2A15','popf':'\uD835\uDD61','Popf':'\u2119','pound':'\xA3','pr':'\u227A','Pr':'\u2ABB','prap':'\u2AB7','prcue':'\u227C','pre':'\u2AAF','prE':'\u2AB3','prec':'\u227A','precapprox':'\u2AB7','preccurlyeq':'\u227C','Precedes':'\u227A','PrecedesEqual':'\u2AAF','PrecedesSlantEqual':'\u227C','PrecedesTilde':'\u227E','preceq':'\u2AAF','precnapprox':'\u2AB9','precneqq':'\u2AB5','precnsim':'\u22E8','precsim':'\u227E','prime':'\u2032','Prime':'\u2033','primes':'\u2119','prnap':'\u2AB9','prnE':'\u2AB5','prnsim':'\u22E8','prod':'\u220F','Product':'\u220F','profalar':'\u232E','profline':'\u2312','profsurf':'\u2313','prop':'\u221D','Proportion':'\u2237','Proportional':'\u221D','propto':'\u221D','prsim':'\u227E','prurel':'\u22B0','pscr':'\uD835\uDCC5','Pscr':'\uD835\uDCAB','psi':'\u03C8','Psi':'\u03A8','puncsp':'\u2008','qfr':'\uD835\uDD2E','Qfr':'\uD835\uDD14','qint':'\u2A0C','qopf':'\uD835\uDD62','Qopf':'\u211A','qprime':'\u2057','qscr':'\uD835\uDCC6','Qscr':'\uD835\uDCAC','quaternions':'\u210D','quatint':'\u2A16','quest':'?','questeq':'\u225F','quot':'"','QUOT':'"','rAarr':'\u21DB','race':'\u223D\u0331','racute':'\u0155','Racute':'\u0154','radic':'\u221A','raemptyv':'\u29B3','rang':'\u27E9','Rang':'\u27EB','rangd':'\u2992','range':'\u29A5','rangle':'\u27E9','raquo':'\xBB','rarr':'\u2192','rArr':'\u21D2','Rarr':'\u21A0','rarrap':'\u2975','rarrb':'\u21E5','rarrbfs':'\u2920','rarrc':'\u2933','rarrfs':'\u291E','rarrhk':'\u21AA','rarrlp':'\u21AC','rarrpl':'\u2945','rarrsim':'\u2974','rarrtl':'\u21A3','Rarrtl':'\u2916','rarrw':'\u219D','ratail':'\u291A','rAtail':'\u291C','ratio':'\u2236','rationals':'\u211A','rbarr':'\u290D','rBarr':'\u290F','RBarr':'\u2910','rbbrk':'\u2773','rbrace':'}','rbrack':']','rbrke':'\u298C','rbrksld':'\u298E','rbrkslu':'\u2990','rcaron':'\u0159','Rcaron':'\u0158','rcedil':'\u0157','Rcedil':'\u0156','rceil':'\u2309','rcub':'}','rcy':'\u0440','Rcy':'\u0420','rdca':'\u2937','rdldhar':'\u2969','rdquo':'\u201D','rdquor':'\u201D','rdsh':'\u21B3','Re':'\u211C','real':'\u211C','realine':'\u211B','realpart':'\u211C','reals':'\u211D','rect':'\u25AD','reg':'\xAE','REG':'\xAE','ReverseElement':'\u220B','ReverseEquilibrium':'\u21CB','ReverseUpEquilibrium':'\u296F','rfisht':'\u297D','rfloor':'\u230B','rfr':'\uD835\uDD2F','Rfr':'\u211C','rHar':'\u2964','rhard':'\u21C1','rharu':'\u21C0','rharul':'\u296C','rho':'\u03C1','Rho':'\u03A1','rhov':'\u03F1','RightAngleBracket':'\u27E9','rightarrow':'\u2192','Rightarrow':'\u21D2','RightArrow':'\u2192','RightArrowBar':'\u21E5','RightArrowLeftArrow':'\u21C4','rightarrowtail':'\u21A3','RightCeiling':'\u2309','RightDoubleBracket':'\u27E7','RightDownTeeVector':'\u295D','RightDownVector':'\u21C2','RightDownVectorBar':'\u2955','RightFloor':'\u230B','rightharpoondown':'\u21C1','rightharpoonup':'\u21C0','rightleftarrows':'\u21C4','rightleftharpoons':'\u21CC','rightrightarrows':'\u21C9','rightsquigarrow':'\u219D','RightTee':'\u22A2','RightTeeArrow':'\u21A6','RightTeeVector':'\u295B','rightthreetimes':'\u22CC','RightTriangle':'\u22B3','RightTriangleBar':'\u29D0','RightTriangleEqual':'\u22B5','RightUpDownVector':'\u294F','RightUpTeeVector':'\u295C','RightUpVector':'\u21BE','RightUpVectorBar':'\u2954','RightVector':'\u21C0','RightVectorBar':'\u2953','ring':'\u02DA','risingdotseq':'\u2253','rlarr':'\u21C4','rlhar':'\u21CC','rlm':'\u200F','rmoust':'\u23B1','rmoustache':'\u23B1','rnmid':'\u2AEE','roang':'\u27ED','roarr':'\u21FE','robrk':'\u27E7','ropar':'\u2986','ropf':'\uD835\uDD63','Ropf':'\u211D','roplus':'\u2A2E','rotimes':'\u2A35','RoundImplies':'\u2970','rpar':')','rpargt':'\u2994','rppolint':'\u2A12','rrarr':'\u21C9','Rrightarrow':'\u21DB','rsaquo':'\u203A','rscr':'\uD835\uDCC7','Rscr':'\u211B','rsh':'\u21B1','Rsh':'\u21B1','rsqb':']','rsquo':'\u2019','rsquor':'\u2019','rthree':'\u22CC','rtimes':'\u22CA','rtri':'\u25B9','rtrie':'\u22B5','rtrif':'\u25B8','rtriltri':'\u29CE','RuleDelayed':'\u29F4','ruluhar':'\u2968','rx':'\u211E','sacute':'\u015B','Sacute':'\u015A','sbquo':'\u201A','sc':'\u227B','Sc':'\u2ABC','scap':'\u2AB8','scaron':'\u0161','Scaron':'\u0160','sccue':'\u227D','sce':'\u2AB0','scE':'\u2AB4','scedil':'\u015F','Scedil':'\u015E','scirc':'\u015D','Scirc':'\u015C','scnap':'\u2ABA','scnE':'\u2AB6','scnsim':'\u22E9','scpolint':'\u2A13','scsim':'\u227F','scy':'\u0441','Scy':'\u0421','sdot':'\u22C5','sdotb':'\u22A1','sdote':'\u2A66','searhk':'\u2925','searr':'\u2198','seArr':'\u21D8','searrow':'\u2198','sect':'\xA7','semi':';','seswar':'\u2929','setminus':'\u2216','setmn':'\u2216','sext':'\u2736','sfr':'\uD835\uDD30','Sfr':'\uD835\uDD16','sfrown':'\u2322','sharp':'\u266F','shchcy':'\u0449','SHCHcy':'\u0429','shcy':'\u0448','SHcy':'\u0428','ShortDownArrow':'\u2193','ShortLeftArrow':'\u2190','shortmid':'\u2223','shortparallel':'\u2225','ShortRightArrow':'\u2192','ShortUpArrow':'\u2191','shy':'\xAD','sigma':'\u03C3','Sigma':'\u03A3','sigmaf':'\u03C2','sigmav':'\u03C2','sim':'\u223C','simdot':'\u2A6A','sime':'\u2243','simeq':'\u2243','simg':'\u2A9E','simgE':'\u2AA0','siml':'\u2A9D','simlE':'\u2A9F','simne':'\u2246','simplus':'\u2A24','simrarr':'\u2972','slarr':'\u2190','SmallCircle':'\u2218','smallsetminus':'\u2216','smashp':'\u2A33','smeparsl':'\u29E4','smid':'\u2223','smile':'\u2323','smt':'\u2AAA','smte':'\u2AAC','smtes':'\u2AAC\uFE00','softcy':'\u044C','SOFTcy':'\u042C','sol':'/','solb':'\u29C4','solbar':'\u233F','sopf':'\uD835\uDD64','Sopf':'\uD835\uDD4A','spades':'\u2660','spadesuit':'\u2660','spar':'\u2225','sqcap':'\u2293','sqcaps':'\u2293\uFE00','sqcup':'\u2294','sqcups':'\u2294\uFE00','Sqrt':'\u221A','sqsub':'\u228F','sqsube':'\u2291','sqsubset':'\u228F','sqsubseteq':'\u2291','sqsup':'\u2290','sqsupe':'\u2292','sqsupset':'\u2290','sqsupseteq':'\u2292','squ':'\u25A1','square':'\u25A1','Square':'\u25A1','SquareIntersection':'\u2293','SquareSubset':'\u228F','SquareSubsetEqual':'\u2291','SquareSuperset':'\u2290','SquareSupersetEqual':'\u2292','SquareUnion':'\u2294','squarf':'\u25AA','squf':'\u25AA','srarr':'\u2192','sscr':'\uD835\uDCC8','Sscr':'\uD835\uDCAE','ssetmn':'\u2216','ssmile':'\u2323','sstarf':'\u22C6','star':'\u2606','Star':'\u22C6','starf':'\u2605','straightepsilon':'\u03F5','straightphi':'\u03D5','strns':'\xAF','sub':'\u2282','Sub':'\u22D0','subdot':'\u2ABD','sube':'\u2286','subE':'\u2AC5','subedot':'\u2AC3','submult':'\u2AC1','subne':'\u228A','subnE':'\u2ACB','subplus':'\u2ABF','subrarr':'\u2979','subset':'\u2282','Subset':'\u22D0','subseteq':'\u2286','subseteqq':'\u2AC5','SubsetEqual':'\u2286','subsetneq':'\u228A','subsetneqq':'\u2ACB','subsim':'\u2AC7','subsub':'\u2AD5','subsup':'\u2AD3','succ':'\u227B','succapprox':'\u2AB8','succcurlyeq':'\u227D','Succeeds':'\u227B','SucceedsEqual':'\u2AB0','SucceedsSlantEqual':'\u227D','SucceedsTilde':'\u227F','succeq':'\u2AB0','succnapprox':'\u2ABA','succneqq':'\u2AB6','succnsim':'\u22E9','succsim':'\u227F','SuchThat':'\u220B','sum':'\u2211','Sum':'\u2211','sung':'\u266A','sup':'\u2283','Sup':'\u22D1','sup1':'\xB9','sup2':'\xB2','sup3':'\xB3','supdot':'\u2ABE','supdsub':'\u2AD8','supe':'\u2287','supE':'\u2AC6','supedot':'\u2AC4','Superset':'\u2283','SupersetEqual':'\u2287','suphsol':'\u27C9','suphsub':'\u2AD7','suplarr':'\u297B','supmult':'\u2AC2','supne':'\u228B','supnE':'\u2ACC','supplus':'\u2AC0','supset':'\u2283','Supset':'\u22D1','supseteq':'\u2287','supseteqq':'\u2AC6','supsetneq':'\u228B','supsetneqq':'\u2ACC','supsim':'\u2AC8','supsub':'\u2AD4','supsup':'\u2AD6','swarhk':'\u2926','swarr':'\u2199','swArr':'\u21D9','swarrow':'\u2199','swnwar':'\u292A','szlig':'\xDF','Tab':'\t','target':'\u2316','tau':'\u03C4','Tau':'\u03A4','tbrk':'\u23B4','tcaron':'\u0165','Tcaron':'\u0164','tcedil':'\u0163','Tcedil':'\u0162','tcy':'\u0442','Tcy':'\u0422','tdot':'\u20DB','telrec':'\u2315','tfr':'\uD835\uDD31','Tfr':'\uD835\uDD17','there4':'\u2234','therefore':'\u2234','Therefore':'\u2234','theta':'\u03B8','Theta':'\u0398','thetasym':'\u03D1','thetav':'\u03D1','thickapprox':'\u2248','thicksim':'\u223C','ThickSpace':'\u205F\u200A','thinsp':'\u2009','ThinSpace':'\u2009','thkap':'\u2248','thksim':'\u223C','thorn':'\xFE','THORN':'\xDE','tilde':'\u02DC','Tilde':'\u223C','TildeEqual':'\u2243','TildeFullEqual':'\u2245','TildeTilde':'\u2248','times':'\xD7','timesb':'\u22A0','timesbar':'\u2A31','timesd':'\u2A30','tint':'\u222D','toea':'\u2928','top':'\u22A4','topbot':'\u2336','topcir':'\u2AF1','topf':'\uD835\uDD65','Topf':'\uD835\uDD4B','topfork':'\u2ADA','tosa':'\u2929','tprime':'\u2034','trade':'\u2122','TRADE':'\u2122','triangle':'\u25B5','triangledown':'\u25BF','triangleleft':'\u25C3','trianglelefteq':'\u22B4','triangleq':'\u225C','triangleright':'\u25B9','trianglerighteq':'\u22B5','tridot':'\u25EC','trie':'\u225C','triminus':'\u2A3A','TripleDot':'\u20DB','triplus':'\u2A39','trisb':'\u29CD','tritime':'\u2A3B','trpezium':'\u23E2','tscr':'\uD835\uDCC9','Tscr':'\uD835\uDCAF','tscy':'\u0446','TScy':'\u0426','tshcy':'\u045B','TSHcy':'\u040B','tstrok':'\u0167','Tstrok':'\u0166','twixt':'\u226C','twoheadleftarrow':'\u219E','twoheadrightarrow':'\u21A0','uacute':'\xFA','Uacute':'\xDA','uarr':'\u2191','uArr':'\u21D1','Uarr':'\u219F','Uarrocir':'\u2949','ubrcy':'\u045E','Ubrcy':'\u040E','ubreve':'\u016D','Ubreve':'\u016C','ucirc':'\xFB','Ucirc':'\xDB','ucy':'\u0443','Ucy':'\u0423','udarr':'\u21C5','udblac':'\u0171','Udblac':'\u0170','udhar':'\u296E','ufisht':'\u297E','ufr':'\uD835\uDD32','Ufr':'\uD835\uDD18','ugrave':'\xF9','Ugrave':'\xD9','uHar':'\u2963','uharl':'\u21BF','uharr':'\u21BE','uhblk':'\u2580','ulcorn':'\u231C','ulcorner':'\u231C','ulcrop':'\u230F','ultri':'\u25F8','umacr':'\u016B','Umacr':'\u016A','uml':'\xA8','UnderBar':'_','UnderBrace':'\u23DF','UnderBracket':'\u23B5','UnderParenthesis':'\u23DD','Union':'\u22C3','UnionPlus':'\u228E','uogon':'\u0173','Uogon':'\u0172','uopf':'\uD835\uDD66','Uopf':'\uD835\uDD4C','uparrow':'\u2191','Uparrow':'\u21D1','UpArrow':'\u2191','UpArrowBar':'\u2912','UpArrowDownArrow':'\u21C5','updownarrow':'\u2195','Updownarrow':'\u21D5','UpDownArrow':'\u2195','UpEquilibrium':'\u296E','upharpoonleft':'\u21BF','upharpoonright':'\u21BE','uplus':'\u228E','UpperLeftArrow':'\u2196','UpperRightArrow':'\u2197','upsi':'\u03C5','Upsi':'\u03D2','upsih':'\u03D2','upsilon':'\u03C5','Upsilon':'\u03A5','UpTee':'\u22A5','UpTeeArrow':'\u21A5','upuparrows':'\u21C8','urcorn':'\u231D','urcorner':'\u231D','urcrop':'\u230E','uring':'\u016F','Uring':'\u016E','urtri':'\u25F9','uscr':'\uD835\uDCCA','Uscr':'\uD835\uDCB0','utdot':'\u22F0','utilde':'\u0169','Utilde':'\u0168','utri':'\u25B5','utrif':'\u25B4','uuarr':'\u21C8','uuml':'\xFC','Uuml':'\xDC','uwangle':'\u29A7','vangrt':'\u299C','varepsilon':'\u03F5','varkappa':'\u03F0','varnothing':'\u2205','varphi':'\u03D5','varpi':'\u03D6','varpropto':'\u221D','varr':'\u2195','vArr':'\u21D5','varrho':'\u03F1','varsigma':'\u03C2','varsubsetneq':'\u228A\uFE00','varsubsetneqq':'\u2ACB\uFE00','varsupsetneq':'\u228B\uFE00','varsupsetneqq':'\u2ACC\uFE00','vartheta':'\u03D1','vartriangleleft':'\u22B2','vartriangleright':'\u22B3','vBar':'\u2AE8','Vbar':'\u2AEB','vBarv':'\u2AE9','vcy':'\u0432','Vcy':'\u0412','vdash':'\u22A2','vDash':'\u22A8','Vdash':'\u22A9','VDash':'\u22AB','Vdashl':'\u2AE6','vee':'\u2228','Vee':'\u22C1','veebar':'\u22BB','veeeq':'\u225A','vellip':'\u22EE','verbar':'|','Verbar':'\u2016','vert':'|','Vert':'\u2016','VerticalBar':'\u2223','VerticalLine':'|','VerticalSeparator':'\u2758','VerticalTilde':'\u2240','VeryThinSpace':'\u200A','vfr':'\uD835\uDD33','Vfr':'\uD835\uDD19','vltri':'\u22B2','vnsub':'\u2282\u20D2','vnsup':'\u2283\u20D2','vopf':'\uD835\uDD67','Vopf':'\uD835\uDD4D','vprop':'\u221D','vrtri':'\u22B3','vscr':'\uD835\uDCCB','Vscr':'\uD835\uDCB1','vsubne':'\u228A\uFE00','vsubnE':'\u2ACB\uFE00','vsupne':'\u228B\uFE00','vsupnE':'\u2ACC\uFE00','Vvdash':'\u22AA','vzigzag':'\u299A','wcirc':'\u0175','Wcirc':'\u0174','wedbar':'\u2A5F','wedge':'\u2227','Wedge':'\u22C0','wedgeq':'\u2259','weierp':'\u2118','wfr':'\uD835\uDD34','Wfr':'\uD835\uDD1A','wopf':'\uD835\uDD68','Wopf':'\uD835\uDD4E','wp':'\u2118','wr':'\u2240','wreath':'\u2240','wscr':'\uD835\uDCCC','Wscr':'\uD835\uDCB2','xcap':'\u22C2','xcirc':'\u25EF','xcup':'\u22C3','xdtri':'\u25BD','xfr':'\uD835\uDD35','Xfr':'\uD835\uDD1B','xharr':'\u27F7','xhArr':'\u27FA','xi':'\u03BE','Xi':'\u039E','xlarr':'\u27F5','xlArr':'\u27F8','xmap':'\u27FC','xnis':'\u22FB','xodot':'\u2A00','xopf':'\uD835\uDD69','Xopf':'\uD835\uDD4F','xoplus':'\u2A01','xotime':'\u2A02','xrarr':'\u27F6','xrArr':'\u27F9','xscr':'\uD835\uDCCD','Xscr':'\uD835\uDCB3','xsqcup':'\u2A06','xuplus':'\u2A04','xutri':'\u25B3','xvee':'\u22C1','xwedge':'\u22C0','yacute':'\xFD','Yacute':'\xDD','yacy':'\u044F','YAcy':'\u042F','ycirc':'\u0177','Ycirc':'\u0176','ycy':'\u044B','Ycy':'\u042B','yen':'\xA5','yfr':'\uD835\uDD36','Yfr':'\uD835\uDD1C','yicy':'\u0457','YIcy':'\u0407','yopf':'\uD835\uDD6A','Yopf':'\uD835\uDD50','yscr':'\uD835\uDCCE','Yscr':'\uD835\uDCB4','yucy':'\u044E','YUcy':'\u042E','yuml':'\xFF','Yuml':'\u0178','zacute':'\u017A','Zacute':'\u0179','zcaron':'\u017E','Zcaron':'\u017D','zcy':'\u0437','Zcy':'\u0417','zdot':'\u017C','Zdot':'\u017B','zeetrf':'\u2128','ZeroWidthSpace':'\u200B','zeta':'\u03B6','Zeta':'\u0396','zfr':'\uD835\uDD37','Zfr':'\u2128','zhcy':'\u0436','ZHcy':'\u0416','zigrarr':'\u21DD','zopf':'\uD835\uDD6B','Zopf':'\u2124','zscr':'\uD835\uDCCF','Zscr':'\uD835\uDCB5','zwj':'\u200D','zwnj':'\u200C'};
		var decodeMapLegacy = {'aacute':'\xE1','Aacute':'\xC1','acirc':'\xE2','Acirc':'\xC2','acute':'\xB4','aelig':'\xE6','AElig':'\xC6','agrave':'\xE0','Agrave':'\xC0','amp':'&','AMP':'&','aring':'\xE5','Aring':'\xC5','atilde':'\xE3','Atilde':'\xC3','auml':'\xE4','Auml':'\xC4','brvbar':'\xA6','ccedil':'\xE7','Ccedil':'\xC7','cedil':'\xB8','cent':'\xA2','copy':'\xA9','COPY':'\xA9','curren':'\xA4','deg':'\xB0','divide':'\xF7','eacute':'\xE9','Eacute':'\xC9','ecirc':'\xEA','Ecirc':'\xCA','egrave':'\xE8','Egrave':'\xC8','eth':'\xF0','ETH':'\xD0','euml':'\xEB','Euml':'\xCB','frac12':'\xBD','frac14':'\xBC','frac34':'\xBE','gt':'>','GT':'>','iacute':'\xED','Iacute':'\xCD','icirc':'\xEE','Icirc':'\xCE','iexcl':'\xA1','igrave':'\xEC','Igrave':'\xCC','iquest':'\xBF','iuml':'\xEF','Iuml':'\xCF','laquo':'\xAB','lt':'<','LT':'<','macr':'\xAF','micro':'\xB5','middot':'\xB7','nbsp':'\xA0','not':'\xAC','ntilde':'\xF1','Ntilde':'\xD1','oacute':'\xF3','Oacute':'\xD3','ocirc':'\xF4','Ocirc':'\xD4','ograve':'\xF2','Ograve':'\xD2','ordf':'\xAA','ordm':'\xBA','oslash':'\xF8','Oslash':'\xD8','otilde':'\xF5','Otilde':'\xD5','ouml':'\xF6','Ouml':'\xD6','para':'\xB6','plusmn':'\xB1','pound':'\xA3','quot':'"','QUOT':'"','raquo':'\xBB','reg':'\xAE','REG':'\xAE','sect':'\xA7','shy':'\xAD','sup1':'\xB9','sup2':'\xB2','sup3':'\xB3','szlig':'\xDF','thorn':'\xFE','THORN':'\xDE','times':'\xD7','uacute':'\xFA','Uacute':'\xDA','ucirc':'\xFB','Ucirc':'\xDB','ugrave':'\xF9','Ugrave':'\xD9','uml':'\xA8','uuml':'\xFC','Uuml':'\xDC','yacute':'\xFD','Yacute':'\xDD','yen':'\xA5','yuml':'\xFF'};
		var decodeMapNumeric = {'0':'\uFFFD','128':'\u20AC','130':'\u201A','131':'\u0192','132':'\u201E','133':'\u2026','134':'\u2020','135':'\u2021','136':'\u02C6','137':'\u2030','138':'\u0160','139':'\u2039','140':'\u0152','142':'\u017D','145':'\u2018','146':'\u2019','147':'\u201C','148':'\u201D','149':'\u2022','150':'\u2013','151':'\u2014','152':'\u02DC','153':'\u2122','154':'\u0161','155':'\u203A','156':'\u0153','158':'\u017E','159':'\u0178'};
		var invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];
	
		/*--------------------------------------------------------------------------*/
	
		var stringFromCharCode = String.fromCharCode;
	
		var object = {};
		var hasOwnProperty = object.hasOwnProperty;
		var has = function(object, propertyName) {
			return hasOwnProperty.call(object, propertyName);
		};
	
		var contains = function(array, value) {
			var index = -1;
			var length = array.length;
			while (++index < length) {
				if (array[index] == value) {
					return true;
				}
			}
			return false;
		};
	
		var merge = function(options, defaults) {
			if (!options) {
				return defaults;
			}
			var result = {};
			var key;
			for (key in defaults) {
				// A `hasOwnProperty` check is not needed here, since only recognized
				// option names are used anyway. Any others are ignored.
				result[key] = has(options, key) ? options[key] : defaults[key];
			}
			return result;
		};
	
		// Modified version of `ucs2encode`; see https://mths.be/punycode.
		var codePointToSymbol = function(codePoint, strict) {
			var output = '';
			if ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {
				// See issue #4:
				// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is
				// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD
				// REPLACEMENT CHARACTER.”
				if (strict) {
					parseError('character reference outside the permissible Unicode range');
				}
				return '\uFFFD';
			}
			if (has(decodeMapNumeric, codePoint)) {
				if (strict) {
					parseError('disallowed character reference');
				}
				return decodeMapNumeric[codePoint];
			}
			if (strict && contains(invalidReferenceCodePoints, codePoint)) {
				parseError('disallowed character reference');
			}
			if (codePoint > 0xFFFF) {
				codePoint -= 0x10000;
				output += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
				codePoint = 0xDC00 | codePoint & 0x3FF;
			}
			output += stringFromCharCode(codePoint);
			return output;
		};
	
		var hexEscape = function(codePoint) {
			return '&#x' + codePoint.toString(16).toUpperCase() + ';';
		};
	
		var decEscape = function(codePoint) {
			return '&#' + codePoint + ';';
		};
	
		var parseError = function(message) {
			throw Error('Parse error: ' + message);
		};
	
		/*--------------------------------------------------------------------------*/
	
		var encode = function(string, options) {
			options = merge(options, encode.options);
			var strict = options.strict;
			if (strict && regexInvalidRawCodePoint.test(string)) {
				parseError('forbidden code point');
			}
			var encodeEverything = options.encodeEverything;
			var useNamedReferences = options.useNamedReferences;
			var allowUnsafeSymbols = options.allowUnsafeSymbols;
			var escapeCodePoint = options.decimal ? decEscape : hexEscape;
	
			var escapeBmpSymbol = function(symbol) {
				return escapeCodePoint(symbol.charCodeAt(0));
			};
	
			if (encodeEverything) {
				// Encode ASCII symbols.
				string = string.replace(regexAsciiWhitelist, function(symbol) {
					// Use named references if requested & possible.
					if (useNamedReferences && has(encodeMap, symbol)) {
						return '&' + encodeMap[symbol] + ';';
					}
					return escapeBmpSymbol(symbol);
				});
				// Shorten a few escapes that represent two symbols, of which at least one
				// is within the ASCII range.
				if (useNamedReferences) {
					string = string
						.replace(/&gt;\u20D2/g, '&nvgt;')
						.replace(/&lt;\u20D2/g, '&nvlt;')
						.replace(/&#x66;&#x6A;/g, '&fjlig;');
				}
				// Encode non-ASCII symbols.
				if (useNamedReferences) {
					// Encode non-ASCII symbols that can be replaced with a named reference.
					string = string.replace(regexEncodeNonAscii, function(string) {
						// Note: there is no need to check `has(encodeMap, string)` here.
						return '&' + encodeMap[string] + ';';
					});
				}
				// Note: any remaining non-ASCII symbols are handled outside of the `if`.
			} else if (useNamedReferences) {
				// Apply named character references.
				// Encode `<>"'&` using named character references.
				if (!allowUnsafeSymbols) {
					string = string.replace(regexEscape, function(string) {
						return '&' + encodeMap[string] + ';'; // no need to check `has()` here
					});
				}
				// Shorten escapes that represent two symbols, of which at least one is
				// `<>"'&`.
				string = string
					.replace(/&gt;\u20D2/g, '&nvgt;')
					.replace(/&lt;\u20D2/g, '&nvlt;');
				// Encode non-ASCII symbols that can be replaced with a named reference.
				string = string.replace(regexEncodeNonAscii, function(string) {
					// Note: there is no need to check `has(encodeMap, string)` here.
					return '&' + encodeMap[string] + ';';
				});
			} else if (!allowUnsafeSymbols) {
				// Encode `<>"'&` using hexadecimal escapes, now that they’re not handled
				// using named character references.
				string = string.replace(regexEscape, escapeBmpSymbol);
			}
			return string
				// Encode astral symbols.
				.replace(regexAstralSymbols, function($0) {
					// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
					var high = $0.charCodeAt(0);
					var low = $0.charCodeAt(1);
					var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
					return escapeCodePoint(codePoint);
				})
				// Encode any remaining BMP symbols that are not printable ASCII symbols
				// using a hexadecimal escape.
				.replace(regexBmpWhitelist, escapeBmpSymbol);
		};
		// Expose default options (so they can be overridden globally).
		encode.options = {
			'allowUnsafeSymbols': false,
			'encodeEverything': false,
			'strict': false,
			'useNamedReferences': false,
			'decimal' : false
		};
	
		var decode = function(html, options) {
			options = merge(options, decode.options);
			var strict = options.strict;
			if (strict && regexInvalidEntity.test(html)) {
				parseError('malformed character reference');
			}
			return html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7) {
				var codePoint;
				var semicolon;
				var decDigits;
				var hexDigits;
				var reference;
				var next;
				if ($1) {
					// Decode decimal escapes, e.g. `&#119558;`.
					decDigits = $1;
					semicolon = $2;
					if (strict && !semicolon) {
						parseError('character reference was not terminated by a semicolon');
					}
					codePoint = parseInt(decDigits, 10);
					return codePointToSymbol(codePoint, strict);
				}
				if ($3) {
					// Decode hexadecimal escapes, e.g. `&#x1D306;`.
					hexDigits = $3;
					semicolon = $4;
					if (strict && !semicolon) {
						parseError('character reference was not terminated by a semicolon');
					}
					codePoint = parseInt(hexDigits, 16);
					return codePointToSymbol(codePoint, strict);
				}
				if ($5) {
					// Decode named character references with trailing `;`, e.g. `&copy;`.
					reference = $5;
					if (has(decodeMap, reference)) {
						return decodeMap[reference];
					} else {
						// Ambiguous ampersand. https://mths.be/notes/ambiguous-ampersands
						if (strict) {
							parseError(
								'named character reference was not terminated by a semicolon'
							);
						}
						return $0;
					}
				}
				// If we’re still here, it’s a legacy reference for sure. No need for an
				// extra `if` check.
				// Decode named character references without trailing `;`, e.g. `&amp`
				// This is only a parse error if it gets converted to `&`, or if it is
				// followed by `=` in an attribute context.
				reference = $6;
				next = $7;
				if (next && options.isAttributeValue) {
					if (strict && next == '=') {
						parseError('`&` did not start a character reference');
					}
					return $0;
				} else {
					if (strict) {
						parseError(
							'named character reference was not terminated by a semicolon'
						);
					}
					// Note: there is no need to check `has(decodeMapLegacy, reference)`.
					return decodeMapLegacy[reference] + (next || '');
				}
			});
		};
		// Expose default options (so they can be overridden globally).
		decode.options = {
			'isAttributeValue': false,
			'strict': false
		};
	
		var escape = function(string) {
			return string.replace(regexEscape, function($0) {
				// Note: there is no need to check `has(escapeMap, $0)` here.
				return escapeMap[$0];
			});
		};
	
		/*--------------------------------------------------------------------------*/
	
		var he = {
			'version': '1.1.1',
			'encode': encode,
			'decode': decode,
			'escape': escape,
			'unescape': decode
		};
	
		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return he;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}	else if (freeExports && !freeExports.nodeType) {
			if (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+
				freeModule.exports = he;
			} else { // in Narwhal or RingoJS v0.7.0-
				for (var key in he) {
					has(he, key) && (freeExports[key] = he[key]);
				}
			}
		} else { // in Rhino or a web browser
			root.he = he;
		}
	
	}(this));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module), (function() { return this; }())))

/***/ }),
/* 655 */,
/* 656 */
/***/ (function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ }),
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61),
	    root = __webpack_require__(24);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(736),
	    hashDelete = __webpack_require__(737),
	    hashGet = __webpack_require__(738),
	    hashHas = __webpack_require__(739),
	    hashSet = __webpack_require__(740);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(61),
	    root = __webpack_require__(24);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ }),
/* 665 */
/***/ (function(module, exports) {

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  // Don't return `map.set` because it's not chainable in IE 11.
	  map.set(pair[0], pair[1]);
	  return map;
	}
	
	module.exports = addMapEntry;


/***/ }),
/* 666 */
/***/ (function(module, exports) {

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  // Don't return `set.add` because it's not chainable in IE 11.
	  set.add(value);
	  return set;
	}
	
	module.exports = addSetEntry;


/***/ }),
/* 667 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(328);
	
	/**
	 * Gets the size of an ASCII `string`.
	 *
	 * @private
	 * @param {string} string The string inspect.
	 * @returns {number} Returns the string size.
	 */
	var asciiSize = baseProperty('length');
	
	module.exports = asciiSize;


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    keys = __webpack_require__(53);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    keysIn = __webpack_require__(73);
	
	/**
	 * The base implementation of `_.assignIn` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssignIn(object, source) {
	  return object && copyObject(source, keysIn(source), object);
	}
	
	module.exports = baseAssignIn;


/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(124),
	    arrayEach = __webpack_require__(317),
	    assignValue = __webpack_require__(126),
	    baseAssign = __webpack_require__(669),
	    baseAssignIn = __webpack_require__(670),
	    cloneBuffer = __webpack_require__(330),
	    copyArray = __webpack_require__(130),
	    copySymbols = __webpack_require__(713),
	    copySymbolsIn = __webpack_require__(714),
	    getAllKeys = __webpack_require__(341),
	    getAllKeysIn = __webpack_require__(342),
	    getTag = __webpack_require__(135),
	    initCloneArray = __webpack_require__(741),
	    initCloneByTag = __webpack_require__(742),
	    initCloneObject = __webpack_require__(345),
	    isArray = __webpack_require__(18),
	    isBuffer = __webpack_require__(96),
	    isObject = __webpack_require__(29),
	    keys = __webpack_require__(53);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Deep clone
	 *  2 - Flatten inherited properties
	 *  4 - Clone symbols
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, bitmask, customizer, key, object, stack) {
	  var result,
	      isDeep = bitmask & CLONE_DEEP_FLAG,
	      isFlat = bitmask & CLONE_FLAT_FLAG,
	      isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      result = (isFlat || isFunc) ? {} : initCloneObject(value);
	      if (!isDeep) {
	        return isFlat
	          ? copySymbolsIn(value, baseAssignIn(result, value))
	          : copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  var keysFunc = isFull
	    ? (isFlat ? getAllKeysIn : getAllKeys)
	    : (isFlat ? keysIn : keys);
	
	  var props = isArr ? undefined : keysFunc(value);
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(191),
	    arrayIncludes = __webpack_require__(192),
	    arrayIncludesWith = __webpack_require__(319),
	    arrayMap = __webpack_require__(91),
	    baseUnary = __webpack_require__(200),
	    cacheHas = __webpack_require__(201);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(62);
	
	/**
	 * The base implementation of methods like `_.max` and `_.min` which accepts a
	 * `comparator` to determine the extremum value.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The iteratee invoked per iteration.
	 * @param {Function} comparator The comparator used to compare values.
	 * @returns {*} Returns the extremum value.
	 */
	function baseExtremum(array, iteratee, comparator) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var value = array[index],
	        current = iteratee(value);
	
	    if (current != null && (computed === undefined
	          ? (current === current && !isSymbol(current))
	          : comparator(current, computed)
	        )) {
	      var computed = current,
	          result = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseExtremum;


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(196);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ }),
/* 675 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	 * without support for iteratee shorthands, which iterates over `collection`
	 * using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the found element or its key, else `undefined`.
	 */
	function baseFindKey(collection, predicate, eachFunc) {
	  var result;
	  eachFunc(collection, function(value, key, collection) {
	    if (predicate(value, key, collection)) {
	      result = key;
	      return false;
	    }
	  });
	  return result;
	}
	
	module.exports = baseFindKey;


/***/ }),
/* 676 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.gt` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if `value` is greater than `other`,
	 *  else `false`.
	 */
	function baseGt(value, other) {
	  return value > other;
	}
	
	module.exports = baseGt;


/***/ }),
/* 677 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    isObjectLike = __webpack_require__(45);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(124),
	    equalArrays = __webpack_require__(338),
	    equalByTag = __webpack_require__(727),
	    equalObjects = __webpack_require__(728),
	    getTag = __webpack_require__(135),
	    isArray = __webpack_require__(18),
	    isBuffer = __webpack_require__(96),
	    isTypedArray = __webpack_require__(139);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(124),
	    baseIsEqual = __webpack_require__(197);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ }),
/* 681 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}
	
	module.exports = baseIsNaN;


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(15),
	    isMasked = __webpack_require__(747),
	    isObject = __webpack_require__(29),
	    toSource = __webpack_require__(355);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(60),
	    isLength = __webpack_require__(212),
	    isObjectLike = __webpack_require__(45);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(29),
	    isPrototype = __webpack_require__(93),
	    nativeKeysIn = __webpack_require__(761);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];
	
	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeysIn;


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(196),
	    isArrayLike = __webpack_require__(32);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(680),
	    getMatchData = __webpack_require__(730),
	    matchesStrictComparable = __webpack_require__(348);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(197),
	    get = __webpack_require__(209),
	    hasIn = __webpack_require__(357),
	    isKey = __webpack_require__(206),
	    isStrictComparable = __webpack_require__(346),
	    matchesStrictComparable = __webpack_require__(348),
	    toKey = __webpack_require__(71);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(124),
	    assignMergeValue = __webpack_require__(321),
	    baseFor = __webpack_require__(324),
	    baseMergeDeep = __webpack_require__(689),
	    isObject = __webpack_require__(29),
	    keysIn = __webpack_require__(73);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(321),
	    cloneBuffer = __webpack_require__(330),
	    cloneTypedArray = __webpack_require__(331),
	    copyArray = __webpack_require__(130),
	    initCloneObject = __webpack_require__(345),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(18),
	    isArrayLikeObject = __webpack_require__(358),
	    isBuffer = __webpack_require__(96),
	    isFunction = __webpack_require__(15),
	    isObject = __webpack_require__(29),
	    isPlainObject = __webpack_require__(33),
	    isTypedArray = __webpack_require__(139),
	    toPlainObject = __webpack_require__(797);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(91),
	    baseIteratee = __webpack_require__(52),
	    baseMap = __webpack_require__(685),
	    baseSortBy = __webpack_require__(699),
	    baseUnary = __webpack_require__(200),
	    compareMultiple = __webpack_require__(712),
	    identity = __webpack_require__(44);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(692),
	    hasIn = __webpack_require__(357);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}
	
	module.exports = basePick;


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(129),
	    baseSet = __webpack_require__(696),
	    castPath = __webpack_require__(70);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};
	
	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);
	
	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}
	
	module.exports = basePickBy;


/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(129);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ }),
/* 694 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ }),
/* 695 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}
	
	module.exports = baseReduce;


/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(126),
	    castPath = __webpack_require__(70),
	    isIndex = __webpack_require__(92),
	    isObject = __webpack_require__(29),
	    toKey = __webpack_require__(71);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;
	
	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(782),
	    defineProperty = __webpack_require__(337),
	    identity = __webpack_require__(44);
	
	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};
	
	module.exports = baseSetToString;


/***/ }),
/* 698 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ }),
/* 699 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ }),
/* 700 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}
	
	module.exports = baseSum;


/***/ }),
/* 701 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    arrayMap = __webpack_require__(91),
	    isArray = __webpack_require__(18),
	    isSymbol = __webpack_require__(62);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(191),
	    arrayIncludes = __webpack_require__(192),
	    arrayIncludesWith = __webpack_require__(319),
	    cacheHas = __webpack_require__(201),
	    createSet = __webpack_require__(724),
	    setToArray = __webpack_require__(137);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;
	
	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseUniq;


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(70),
	    last = __webpack_require__(214),
	    parent = __webpack_require__(764),
	    toKey = __webpack_require__(71);
	
	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}
	
	module.exports = baseUnset;


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(91);
	
	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}
	
	module.exports = baseValues;


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(202);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	var addMapEntry = __webpack_require__(665),
	    arrayReduce = __webpack_require__(194),
	    mapToArray = __webpack_require__(347);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1;
	
	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}
	
	module.exports = cloneMap;


/***/ }),
/* 708 */
/***/ (function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

	var addSetEntry = __webpack_require__(666),
	    arrayReduce = __webpack_require__(194),
	    setToArray = __webpack_require__(137);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1;
	
	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}
	
	module.exports = cloneSet;


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(62);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(711);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    getSymbols = __webpack_require__(204);
	
	/**
	 * Copies own symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    getSymbolsIn = __webpack_require__(344);
	
	/**
	 * Copies own and inherited symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbolsIn(source, object) {
	  return copyObject(source, getSymbolsIn(source), object);
	}
	
	module.exports = copySymbolsIn;


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(24);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ }),
/* 716 */
/***/ (function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;
	
	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}
	
	module.exports = countHolders;


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(32);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ }),
/* 718 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(132),
	    root = __webpack_require__(24);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBind;


/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(125),
	    createCtor = __webpack_require__(132),
	    createHybrid = __webpack_require__(334),
	    createRecurry = __webpack_require__(335),
	    getHolder = __webpack_require__(133),
	    replaceHolders = __webpack_require__(94),
	    root = __webpack_require__(24);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurry;


/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(52),
	    isArrayLike = __webpack_require__(32),
	    keys = __webpack_require__(53);
	
	/**
	 * Creates a `_.find` or `_.findLast` function.
	 *
	 * @private
	 * @param {Function} findIndexFunc The function to find the collection index.
	 * @returns {Function} Returns the new find function.
	 */
	function createFind(findIndexFunc) {
	  return function(collection, predicate, fromIndex) {
	    var iterable = Object(collection);
	    if (!isArrayLike(collection)) {
	      var iteratee = baseIteratee(predicate, 3);
	      collection = keys(collection);
	      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	    }
	    var index = findIndexFunc(collection, predicate, fromIndex);
	    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	  };
	}
	
	module.exports = createFind;


/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(125),
	    createCtor = __webpack_require__(132),
	    root = __webpack_require__(24);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartial;


/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(694),
	    isIterateeCall = __webpack_require__(205),
	    toFinite = __webpack_require__(367);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(314),
	    noop = __webpack_require__(361),
	    setToArray = __webpack_require__(137);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Creates a set object of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	  return new Set(values);
	};
	
	module.exports = createSet;


/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(72);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	 * of source objects to the destination object for all destination properties
	 * that resolve to `undefined`.
	 *
	 * @private
	 * @param {*} objValue The destination value.
	 * @param {*} srcValue The source value.
	 * @param {string} key The key of the property to assign.
	 * @param {Object} object The parent object of `objValue`.
	 * @returns {*} Returns the value to assign.
	 */
	function customDefaultsAssignIn(objValue, srcValue, key, object) {
	  if (objValue === undefined ||
	      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	    return srcValue;
	  }
	  return objValue;
	}
	
	module.exports = customDefaultsAssignIn;


/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(33);
	
	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}
	
	module.exports = customOmitClone;


/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    Uint8Array = __webpack_require__(315),
	    eq = __webpack_require__(72),
	    equalArrays = __webpack_require__(338),
	    mapToArray = __webpack_require__(347),
	    setToArray = __webpack_require__(137);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(341);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(765);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}
	
	module.exports = getFuncName;


/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(346),
	    keys = __webpack_require__(53);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 732 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ }),
/* 733 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	    reSplitDetails = /,? & /;
	
	/**
	 * Extracts wrapper details from the `source` body comment.
	 *
	 * @private
	 * @param {string} source The source to inspect.
	 * @returns {Array} Returns the wrapper details.
	 */
	function getWrapDetails(source) {
	  var match = source.match(reWrapDetails);
	  return match ? match[1].split(reSplitDetails) : [];
	}
	
	module.exports = getWrapDetails;


/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(70),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(18),
	    isIndex = __webpack_require__(92),
	    isLength = __webpack_require__(212),
	    toKey = __webpack_require__(71);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ }),
/* 735 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}
	
	module.exports = hasUnicode;


/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(136);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}
	
	module.exports = hashClear;


/***/ }),
/* 737 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = hashDelete;


/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(136);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(136);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(136);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ }),
/* 741 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(202),
	    cloneDataView = __webpack_require__(706),
	    cloneMap = __webpack_require__(707),
	    cloneRegExp = __webpack_require__(708),
	    cloneSet = __webpack_require__(709),
	    cloneSymbol = __webpack_require__(710),
	    cloneTypedArray = __webpack_require__(331);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ }),
/* 743 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
	
	/**
	 * Inserts wrapper `details` in a comment at the top of the `source` body.
	 *
	 * @private
	 * @param {string} source The source to modify.
	 * @returns {Array} details The details to insert.
	 * @returns {string} Returns the modified source.
	 */
	function insertWrapDetails(source, details) {
	  var length = details.length;
	  if (!length) {
	    return source;
	  }
	  var lastIndex = length - 1;
	  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	  details = details.join(length > 2 ? ', ' : ' ');
	  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	}
	
	module.exports = insertWrapDetails;


/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(68),
	    isArguments = __webpack_require__(95),
	    isArray = __webpack_require__(18);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ }),
/* 745 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(188),
	    getData = __webpack_require__(343),
	    getFuncName = __webpack_require__(729),
	    lodash = __webpack_require__(800);
	
	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	 *  else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];
	
	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}
	
	module.exports = isLaziable;


/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(715);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ }),
/* 748 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(127);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(127);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(127);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(127);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(663),
	    ListCache = __webpack_require__(123),
	    Map = __webpack_require__(189);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(134);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = mapCacheDelete;


/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(134);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(134);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(134);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;
	
	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(360);
	
	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;
	
	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });
	
	  var cache = result.cache;
	  return result;
	}
	
	module.exports = memoizeCapped;


/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(332),
	    composeArgsRight = __webpack_require__(333),
	    replaceHolders = __webpack_require__(94);
	
	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and
	 * `_.rearg` modify function arguments, making the order in which they are
	 * executed important, preventing the merging of metadata. However, we make
	 * an exception for a safe combined case where curried functions have `_.ary`
	 * and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	  var isCombo =
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & WRAP_BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = value;
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & WRAP_ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;
	
	  return data;
	}
	
	module.exports = mergeData;


/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(350);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 761 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(340);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module)))

/***/ }),
/* 763 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(129),
	    baseSlice = __webpack_require__(698);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ }),
/* 765 */
/***/ (function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};
	
	module.exports = realNames;


/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(130),
	    isIndex = __webpack_require__(92);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ }),
/* 767 */
/***/ (function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ }),
/* 768 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}
	
	module.exports = stackClear;


/***/ }),
/* 770 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);
	
	  this.size = data.size;
	  return result;
	}
	
	module.exports = stackDelete;


/***/ }),
/* 771 */
/***/ (function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ }),
/* 772 */
/***/ (function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(123),
	    Map = __webpack_require__(189),
	    MapCache = __webpack_require__(190);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}
	
	module.exports = stackSet;


/***/ }),
/* 774 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiSize = __webpack_require__(668),
	    hasUnicode = __webpack_require__(735),
	    unicodeSize = __webpack_require__(777);
	
	/**
	 * Gets the number of symbols in `string`.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {number} Returns the string size.
	 */
	function stringSize(string) {
	  return hasUnicode(string)
	    ? unicodeSize(string)
	    : asciiSize(string);
	}
	
	module.exports = stringSize;


/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(758);
	
	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ }),
/* 777 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Gets the size of a Unicode `string`.
	 *
	 * @private
	 * @param {string} string The string inspect.
	 * @returns {number} Returns the string size.
	 */
	function unicodeSize(string) {
	  var result = reUnicode.lastIndex = 0;
	  while (reUnicode.test(string)) {
	    ++result;
	  }
	  return result;
	}
	
	module.exports = unicodeSize;


/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(317),
	    arrayIncludes = __webpack_require__(192);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256,
	    WRAP_FLIP_FLAG = 512;
	
	/** Used to associate wrap methods with their bit flags. */
	var wrapFlags = [
	  ['ary', WRAP_ARY_FLAG],
	  ['bind', WRAP_BIND_FLAG],
	  ['bindKey', WRAP_BIND_KEY_FLAG],
	  ['curry', WRAP_CURRY_FLAG],
	  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	  ['flip', WRAP_FLIP_FLAG],
	  ['partial', WRAP_PARTIAL_FLAG],
	  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	  ['rearg', WRAP_REARG_FLAG]
	];
	
	/**
	 * Updates wrapper `details` based on `bitmask` flags.
	 *
	 * @private
	 * @returns {Array} details The details to modify.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Array} Returns `details`.
	 */
	function updateWrapDetails(details, bitmask) {
	  arrayEach(wrapFlags, function(pair) {
	    var value = '_.' + pair[0];
	    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	      details.push(value);
	    }
	  });
	  return details.sort();
	}
	
	module.exports = updateWrapDetails;


/***/ }),
/* 779 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(188),
	    LodashWrapper = __webpack_require__(313),
	    copyArray = __webpack_require__(130);
	
	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}
	
	module.exports = wrapperClone;


/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    createAssigner = __webpack_require__(131),
	    keysIn = __webpack_require__(73);
	
	/**
	 * This method is like `_.assign` except that it iterates over own and
	 * inherited source properties.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias extend
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assign
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	 */
	var assignIn = createAssigner(function(object, source) {
	  copyObject(source, keysIn(source), object);
	});
	
	module.exports = assignIn;


/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    createAssigner = __webpack_require__(131),
	    keysIn = __webpack_require__(73);
	
	/**
	 * This method is like `_.assignIn` except that it accepts `customizer`
	 * which is invoked to produce the assigned values. If `customizer` returns
	 * `undefined`, assignment is handled by the method instead. The `customizer`
	 * is invoked with five arguments: (objValue, srcValue, key, object, source).
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias extendWith
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} sources The source objects.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @returns {Object} Returns `object`.
	 * @see _.assignWith
	 * @example
	 *
	 * function customizer(objValue, srcValue) {
	 *   return _.isUndefined(objValue) ? srcValue : objValue;
	 * }
	 *
	 * var defaults = _.partialRight(_.assignInWith, customizer);
	 *
	 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	  copyObject(source, keysIn(source), object, customizer);
	});
	
	module.exports = assignInWith;


/***/ }),
/* 782 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(780);


/***/ }),
/* 784 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(318),
	    baseFilter = __webpack_require__(674),
	    baseIteratee = __webpack_require__(52),
	    isArray = __webpack_require__(18);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ }),
/* 785 */
/***/ (function(module, exports, __webpack_require__) {

	var createFind = __webpack_require__(721),
	    findIndex = __webpack_require__(208);
	
	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	var find = createFind(findIndex);
	
	module.exports = find;


/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindKey = __webpack_require__(675),
	    baseForOwn = __webpack_require__(325),
	    baseIteratee = __webpack_require__(52);
	
	/**
	 * This method is like `_.find` except that it returns the key of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Object
	 * @param {Object} object The object to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {string|undefined} Returns the key of the matched element,
	 *  else `undefined`.
	 * @example
	 *
	 * var users = {
	 *   'barney':  { 'age': 36, 'active': true },
	 *   'fred':    { 'age': 40, 'active': false },
	 *   'pebbles': { 'age': 1,  'active': true }
	 * };
	 *
	 * _.findKey(users, function(o) { return o.age < 40; });
	 * // => 'barney' (iteration order is not guaranteed)
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findKey(users, { 'age': 1, 'active': true });
	 * // => 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findKey(users, ['active', false]);
	 * // => 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findKey(users, 'active');
	 * // => 'barney'
	 */
	function findKey(object, predicate) {
	  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
	}
	
	module.exports = findKey;


/***/ }),
/* 787 */
/***/ (function(module, exports) {

	/**
	 * The inverse of `_.toPairs`; this method returns an object composed
	 * from key-value `pairs`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Array
	 * @param {Array} pairs The key-value pairs.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * _.fromPairs([['a', 1], ['b', 2]]);
	 * // => { 'a': 1, 'b': 2 }
	 */
	function fromPairs(pairs) {
	  var index = -1,
	      length = pairs == null ? 0 : pairs.length,
	      result = {};
	
	  while (++index < length) {
	    var pair = pairs[index];
	    result[pair[0]] = pair[1];
	  }
	  return result;
	}
	
	module.exports = fromPairs;


/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(197);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ }),
/* 789 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	 * @example
	 *
	 * _.isNull(null);
	 * // => true
	 *
	 * _.isNull(void 0);
	 * // => false
	 */
	function isNull(value) {
	  return value === null;
	}
	
	module.exports = isNull;


/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

	var baseExtremum = __webpack_require__(673),
	    baseGt = __webpack_require__(676),
	    baseIteratee = __webpack_require__(52);
	
	/**
	 * This method is like `_.max` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the criterion by which
	 * the value is ranked. The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {*} Returns the maximum value.
	 * @example
	 *
	 * var objects = [{ 'n': 1 }, { 'n': 2 }];
	 *
	 * _.maxBy(objects, function(o) { return o.n; });
	 * // => { 'n': 2 }
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.maxBy(objects, 'n');
	 * // => { 'n': 2 }
	 */
	function maxBy(array, iteratee) {
	  return (array && array.length)
	    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)
	    : undefined;
	}
	
	module.exports = maxBy;


/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(69),
	    createWrap = __webpack_require__(336),
	    getHolder = __webpack_require__(133),
	    replaceHolders = __webpack_require__(94);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with `partials` prepended to the
	 * arguments it receives. This method is like `_.bind` except it does **not**
	 * alter the `this` binding.
	 *
	 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.2.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var sayHelloTo = _.partial(greet, 'hello');
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 *
	 * // Partially applied with placeholders.
	 * var greetFred = _.partial(greet, _, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 */
	var partial = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partial));
	  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partial.placeholder = {};
	
	module.exports = partial;


/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(198),
	    getTag = __webpack_require__(135),
	    isArrayLike = __webpack_require__(32),
	    isString = __webpack_require__(138),
	    stringSize = __webpack_require__(775);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/**
	 * Gets the size of `collection` by returning its length for array-like
	 * values or the number of own enumerable string keyed properties for objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @returns {number} Returns the collection size.
	 * @example
	 *
	 * _.size([1, 2, 3]);
	 * // => 3
	 *
	 * _.size({ 'a': 1, 'b': 2 });
	 * // => 2
	 *
	 * _.size('pebbles');
	 * // => 7
	 */
	function size(collection) {
	  if (collection == null) {
	    return 0;
	  }
	  if (isArrayLike(collection)) {
	    return isString(collection) ? stringSize(collection) : collection.length;
	  }
	  var tag = getTag(collection);
	  if (tag == mapTag || tag == setTag) {
	    return collection.size;
	  }
	  return baseKeys(collection).length;
	}
	
	module.exports = size;


/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(323),
	    baseOrderBy = __webpack_require__(690),
	    baseRest = __webpack_require__(69),
	    isIterateeCall = __webpack_require__(205);
	
	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, [function(o) { return o.user; }]);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	 */
	var sortBy = baseRest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees = [iteratees[0]];
	  }
	  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	});
	
	module.exports = sortBy;


/***/ }),
/* 794 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(52),
	    baseSum = __webpack_require__(700);
	
	/**
	 * This method is like `_.sum` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the value to be summed.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	 *
	 * _.sumBy(objects, function(o) { return o.n; });
	 * // => 20
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.sumBy(objects, 'n');
	 * // => 20
	 */
	function sumBy(array, iteratee) {
	  return (array && array.length)
	    ? baseSum(array, baseIteratee(iteratee, 2))
	    : 0;
	}
	
	module.exports = sumBy;


/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(29),
	    isSymbol = __webpack_require__(62);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(43),
	    keysIn = __webpack_require__(73);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

	var baseUniq = __webpack_require__(703);
	
	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurrence of each element
	 * is kept. The order of result values is determined by the order they occur
	 * in the array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 */
	function uniq(array) {
	  return (array && array.length) ? baseUniq(array) : [];
	}
	
	module.exports = uniq;


/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(705),
	    keys = __webpack_require__(53);
	
	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object == null ? [] : baseValues(object, keys(object));
	}
	
	module.exports = values;


/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(188),
	    LodashWrapper = __webpack_require__(313),
	    baseLodash = __webpack_require__(199),
	    isArray = __webpack_require__(18),
	    isObjectLike = __webpack_require__(45),
	    wrapperClone = __webpack_require__(779);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chain sequences. Methods that operate on and return arrays, collections,
	 * and functions can be chained together. Methods that retrieve a single value
	 * or may return a primitive value will automatically end the chain sequence
	 * and return the unwrapped value. Otherwise, the value must be unwrapped
	 * with `_#value`.
	 *
	 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	 * enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion.
	 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	 * the creation of intermediate arrays and can greatly reduce the number of
	 * iteratee executions. Sections of a chain sequence qualify for shortcut
	 * fusion if the section is applied to an array and iteratees accept only
	 * one argument. The heuristic for whether a section qualifies for shortcut
	 * fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	 * `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	 * `upperFirst`, `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}
	
	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	lodash.prototype.constructor = lodash;
	
	module.exports = lodash;


/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createRenderer;
	
	var _marked = __webpack_require__(370);
	
	var _marked2 = _interopRequireDefault(_marked);
	
	var _he = __webpack_require__(654);
	
	var _he2 = _interopRequireDefault(_he);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRenderer(tracker, options) {
	  var overrides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  var renderer = new _marked2.default.Renderer();
	
	  function getTocPosition(toc, level) {
	    var currentLevel = toc.children;
	    while (true) {
	      if (!currentLevel.length || currentLevel[currentLevel.length - 1].level === level) {
	        return currentLevel;
	      } else {
	        currentLevel = currentLevel[currentLevel.length - 1].children;
	      }
	    }
	  }
	
	  function populateInlineContent() {
	    var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	
	    var contentArray = content.split(/(\{\{.*?\}\})/);
	    var extractedElements = contentArray.map(function (text) {
	      var elementIdMatch = text.match(/\{\{(.*)\}\}/);
	      if (elementIdMatch) {
	        tracker.tree.splice(tracker.tree.indexOf(tracker.elements[elementIdMatch[1]]), 1);
	        return tracker.elements[elementIdMatch[1]];
	      } else if (text != '') {
	        return _he2.default.decode(text);
	      }
	
	      return null;
	    });
	
	    return extractedElements;
	  }
	
	  function addElement(tag) {
	    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var children = arguments[2];
	
	    var elementId = tracker.nextElementId++;
	    var inlineContent = null;
	
	    if (children) {
	      inlineContent = Array.isArray(children) ? children.map(populateInlineContent) : populateInlineContent(children);
	    }
	
	    tracker.elements[elementId] = options.createElement(options.elements && options.elements[tag] || tag, Object.assign({
	      key: elementId
	    }, props, options.elements && options.elements[tag] ? { context: tracker.context } : {}), inlineContent);
	
	    tracker.tree.push(tracker.elements[elementId]);
	
	    return '{{' + elementId + '}}';
	  }
	
	  renderer.code = overrides.code || function (code, language) {
	    var elementId = tracker.nextElementId++;
	
	    function CodeComponent() {
	      return options.createElement('pre', null, options.createElement('code', {
	        className: 'language-' + language,
	        dangerouslySetInnerHTML: { __html: options.highlight ? options.highlight(language, code) : code }
	      }));
	    }
	
	    tracker.elements[elementId] = options.createElement(CodeComponent, { key: elementId });
	
	    tracker.tree.push(tracker.elements[elementId]);
	
	    return '{{' + elementId + '}}';
	  };
	
	  renderer.html = overrides.html || function (html) {
	    var elementId = tracker.nextElementId++;
	
	    tracker.tree.push(options.createElement('div', {
	      key: elementId,
	      dangerouslySetInnerHTML: {
	        __html: html
	      }
	    }));
	  };
	
	  renderer.paragraph = overrides.paragraph || function (text) {
	    return addElement('p', null, text);
	  };
	
	  renderer.blockquote = overrides.blockquote || function (text) {
	    return addElement('blockquote', null, text);
	  };
	
	  renderer.link = overrides.link || function (href, title, text) {
	    return addElement('a', { href: href, title: title }, text);
	  };
	
	  renderer.br = overrides.br || function () {
	    return addElement('br');
	  };
	
	  renderer.hr = overrides.hr || function () {
	    return addElement('hr');
	  };
	
	  renderer.strong = overrides.strong || function (text) {
	    return addElement('strong', null, text);
	  };
	
	  renderer.del = overrides.del || function (text) {
	    return addElement('del', null, text);
	  };
	
	  renderer.em = overrides.em || function (text) {
	    return addElement('em', null, text);
	  };
	
	  renderer.heading = overrides.heading || function (text, level) {
	    tracker.currentId = tracker.currentId.slice(0, level - 1);
	    tracker.currentId.push(text.replace(/\s/g, '-').toLowerCase());
	
	    var id = tracker.currentId.join('-');
	    var lastToc = tracker.toc[tracker.toc.length - 1];
	
	    if (!lastToc || lastToc.level > level) {
	      tracker.toc.push({
	        id: id,
	        title: text,
	        level: level,
	        children: []
	      });
	    } else {
	      var tocPosition = getTocPosition(lastToc, level);
	
	      tocPosition.push({
	        id: id,
	        title: text,
	        level: level,
	        children: []
	      });
	    }
	
	    return addElement('h' + level, {
	      id: id
	    }, text);
	  };
	
	  renderer.list = overrides.list || function (body, ordered) {
	    return addElement(ordered ? 'ol' : 'ul', null, body);
	  };
	
	  renderer.listitem = overrides.listitem || function (text) {
	    return addElement('li', null, text);
	  };
	
	  renderer.table = overrides.table || function (header, body) {
	    return addElement('table', null, [addElement('thead', null, header), addElement('tbody', null, body)]);
	  };
	
	  renderer.thead = overrides.thead || function (content) {
	    return addElement('thead', null, content);
	  };
	
	  renderer.tbody = overrides.tbody || function (content) {
	    return addElement('tbody', null, content);
	  };
	
	  renderer.tablerow = overrides.tablerow || function (content) {
	    return addElement('tr', null, content);
	  };
	
	  renderer.tablecell = overrides.tablecell || function (content, flag) {
	    var tag = flag.header ? 'th' : 'td';
	    return addElement(tag, { className: flag.align ? 'text-' + flag.align : undefined }, content);
	  };
	
	  renderer.codespan = overrides.codespan || function (text) {
	    return addElement('code', null, text);
	  };
	
	  renderer.image = overrides.image || function (href, title, text) {
	    return addElement('img', { src: href, alt: text });
	  };
	
	  return renderer;
	}
	//# sourceMappingURL=createRenderer.js.map

/***/ }),
/* 802 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.marksy = marksy;
	
	exports.default = function (options) {
	  return marksy(options);
	};
	
	var _marked = __webpack_require__(370);
	
	var _marked2 = _interopRequireDefault(_marked);
	
	var _createRenderer = __webpack_require__(801);
	
	var _createRenderer2 = _interopRequireDefault(_createRenderer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function marksy() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var tracker = {
	    tree: null,
	    elements: null,
	    nextElementId: null,
	    toc: null,
	    currentIdLevel: 0,
	    currentId: []
	  };
	  var renderer = (0, _createRenderer2.default)(tracker, options);
	
	  return function compile(content) {
	    var markedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    tracker.tree = [];
	    tracker.elements = {};
	    tracker.toc = [];
	    tracker.nextElementId = 0;
	    tracker.context = context;
	    tracker.currentId = [];
	    (0, _marked2.default)(content, Object.assign({ renderer: renderer, smartypants: true }, markedOptions));
	
	    return { tree: tracker.tree, toc: tracker.toc };
	  };
	}
	
	;
	//# sourceMappingURL=index.js.map

/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

	var normalize = __webpack_require__(371);
	
	var absoluteWinRegExp = /^[A-Z]:([\\\/]|$)/i;
	var absoluteNixRegExp = /^\//i;
	
	module.exports = function join(path, request) {
		if(!request) return normalize(path);
		if(absoluteWinRegExp.test(request)) return normalize(request.replace(/\//g, "\\"));
		if(absoluteNixRegExp.test(request)) return normalize(request);
		if(path == "/") return normalize(path + request);
		if(absoluteWinRegExp.test(path)) return normalize(path.replace(/\//g, "\\") + "\\" + request.replace(/\//g, "\\"));
		if(absoluteNixRegExp.test(path)) return normalize(path + "/" + request);
		return normalize(path + "/" + request);
	};


/***/ }),
/* 804 */,
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Rob Ellis, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var _ = __webpack_require__(80)._;
	
	/*
	 Sentences Analizer Class
	 From http://www.writingcentre.uottawa.ca/hypergrammar/sntpurps.html
	
	 Take a POS input and analyse it for
	  - Type of Sentense
	     - Interrogative
	       - Tag Questions
	       - 
	     - Declarative
	     - Exclamatory 
	     - Imperative
	
	  - Parts of a Sentense
	     - Subject
	     - Predicate
	
	  - Show Preposition Phrases
	*/
	
	var Sentences = function(pos, callback) {
	    this.posObj = pos;
	    this.senType = null;
	    callback(this);
	};
	
	Sentences.prototype.part = function(callback) {
	    var subject = [],
		predicat = [],
		verbFound = false;
		
	    this.prepositionPhrases();
		
	    for (var i = 0; i < this.posObj.tags.length; i++) {
	        if (this.posObj.tags[i].pos == "VB") {
	            if (i === 0) {
	                verbFound = true;
	            } else {
	                // We need to Test for any EX before the VB
	                if (this.posObj.tags[i - 1].pos != "EX") {
	                    verbFound = true;
	                } else {
	                    predicat.push(this.posObj.tags[i].token);
	                }					
	            }
	        }
	
	        // Add Pronoun Phrase (pp) Or Subject Phrase (sp)
	        if (!verbFound) {
	            if (this.posObj.tags[i].pp != true)
	                this.posObj.tags[i].spos = "SP";
	            
	            subject.push(this.posObj.tags[i].token);
	        } else {
	            if (this.posObj.tags[i].pp != true)
	                this.posObj.tags[i].spos = "PP";
	            
	            predicat.push(this.posObj.tags[i].token)
	        }
	    }
		
	    if (subject.length == 0) {
		this.posObj.tags.push({token:"You",spos:"SP",pos:"PRP",added:true});
	    }
	    
	    callback(this);	
	};
	
	// Takes POS and removes IN to NN or NNS
	// Adds a PP for each prepositionPhrases
	Sentences.prototype.prepositionPhrases = function() {
	    var remove = false;
	
	    for (var i = 0; i < this.posObj.tags.length; i++) {
	        if (this.posObj.tags[i].pos.match("IN")) {
	            remove = true;
	        }
	    
	        if (remove) {
	            this.posObj.tags[i].pp = true;
	        }
	    
	        if (this.posObj.tags[i].pos.match("NN")) {
	            remove = false;
	        }
	    }	
	};
	
	Sentences.prototype.subjectToString = function() {
	    return this.posObj.tags.map(function(t){ if (t.spos == "SP" || t.spos == "S" ) return t.token }).join(' ');
	};
	
	Sentences.prototype.predicateToString = function() {
	    return this.posObj.tags.map(function(t){ if (t.spos == "PP" || t.spos == "P" ) return t.token }).join(' ');
	};
	
	Sentences.prototype.implicitYou = function() {
	    for (var i = 0; i < this.posObj.tags.length;i++) {
	        if (this.posObj.tags[i].added) {
	            return true;
	        }
	    }
	    
	    return false;
	};
	
	Sentences.prototype.toString = function() {
	    return this.posObj.tags.map(function(t){return t.token}).join(' ');
	};
	
	// This is quick and incomplete.
	Sentences.prototype.type = function(callback) {
	    var callback = callback || false;
	
	    // Check for implicit you before popping a tag.
	    var implicitYou = this.implicitYou();
	
	    // FIXME - punct seems useless
	    var lastElement = this.posObj.punct();
	    lastElement = (lastElement.length != 0) ? lastElement.pop() : this.posObj.tags.pop();
	
	    if (lastElement.pos !== ".") {
	        if (implicitYou) {
	            this.senType = "COMMAND";
	        } else if (_(["WDT","WP","WP$","WRB"]).contains(this.posObj.tags[0].pos)) {
	            // Sentences that start with: who, what where when why and how, then they are questions
	            this.senType = "INTERROGATIVE";
	        } else if (_(["PRP"]).contains(lastElement.pos)) {
	            // Sentences that end in a Personal pronoun are most likely questions
	            // eg. We should run away, should we [?]
	            // eg. You want to see that again, do you [?]
	            this.senType = "INTERROGATIVE";
	        } else {
	            this.senType = "UNKNOWN";
	        }
	            
	    } else {
	        switch(lastElement.token) {
	            case "?": this.senType = "INTERROGATIVE"; break;
	            case "!": this.senType = (implicitYou) ? "COMMAND":"EXCLAMATORY"; break;
	            case ".": this.senType = (implicitYou) ? "COMMAND":"DECLARATIVE";	break;
	        }
	    }
	    
	    if (callback && _(callback).isFunction()) {
	        callback(this);
	    } else {
	        return this.senType;
	    }
	};
	
	module.exports = Sentences;


/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Brill's POS Tagger
	  Copyright (C) 2016 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	var fs = __webpack_require__(37);
	
	var TF_Parser = __webpack_require__(375);
	
	function Brill_POS_Tagger(lexicon, ruleSet) {
	  this.lexicon = lexicon;
	  this.ruleSet = ruleSet;
	}
	
	// Tags a sentence, sentence is an array of words
	// Returns an array of tagged words; a tagged words is an array consisting of
	// the word itself followed by its lexical category
	Brill_POS_Tagger.prototype.tag = function(sentence) {
	  var taggedSentence = this.tagWithLexicon(sentence);
	  return this.applyRules(taggedSentence);
	};
	
	Brill_POS_Tagger.prototype.tagWithLexicon = function(sentence) {
	  var taggedSentence = new Array(sentence.length);
	
	  var that = this;
	  sentence.forEach(function(word, index) {
	    taggedSentence[index] = [];
	    taggedSentence[index][0] = word;
	    var categories = that.lexicon.tagWord(word);
	    taggedSentence[index][1] = categories[0];
	  });
	  return(taggedSentence);
	};
	
	// Applies the transformation rules to an initially tagged sentence.
	// taggedSentence is an array of tagged words.
	// A tagged word is an array consisting of the word itself followed by its lexical category.
	// Returns an array of tagged words as well
	Brill_POS_Tagger.prototype.applyRules = function(taggedSentence) {
	  // Apply transformation rules
	  for (var i = 0, size = taggedSentence.length; i < size; i++) {
	    this.ruleSet.getRules().forEach(function(rule) {
	      rule.apply(taggedSentence, i);
	    });
	  }
	  return(taggedSentence);
	};
	
	module.exports = Brill_POS_Tagger;


/***/ }),
/* 807 */
/***/ (function(module, exports) {

	/*
	  Brill's POS Testing class
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	function Brill_POS_Tester() {
	
	}
	
	Brill_POS_Tester.prototype.test = function(corpus, tagger) {
	  var totalWords = 0;
	  var correctTagsLexicon = 0;
	  var correctTagsAfterRules = 0;
	
	  // Tag the corpus using the tagger
	  corpus.sentences.forEach(function(sentence) {
	    var s = sentence.map(function(token) {
	      return token.token;
	    });
	
	    // Use the lexicon to tag the sentence
	    var taggedSentence = tagger.tagWithLexicon(s);
	    // Count the right tags
	    sentence.forEach(function(token, i) {
	      totalWords++;
	      if (token.tag === taggedSentence[i][1]) {
	        correctTagsLexicon++;
	      }
	    });
	
	    // Use the rule set to tag the sentence
	    var taggedSentenceAfterRules = tagger.applyRules(taggedSentence);
	    // Count the right tags
	    sentence.forEach(function(token, i) {
	      if (token.tag === taggedSentenceAfterRules[i][1]) {
	        correctTagsAfterRules++;
	      }
	    });
	  });
	
	  // Return percentage right
	  return [100 * correctTagsLexicon/ totalWords, 100 * correctTagsAfterRules / totalWords];
	};
	
	module.exports = Brill_POS_Tester;


/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Brill POS Trainer class
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	// Algorithm is based on:
	// Exploring the Statistical Derivation of Transformational Rule Sequences
	// for Part-of-Speech Tagging, Lance A. Ramshaw and Mitchell P. Marcus
	// http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d4/data/pdf/anthology-PDF/W/W94/W94-0111.pdf
	
	//var log4js = require('log4js');
	//var logger = log4js.getLogger('Brill_POS_Trainer');
	//logger.setLevel('OFF');
	
	var TransformationRule = __webpack_require__(376);
	var RuleSet = __webpack_require__(373);
	
	// Training continues as long as there are rules with a positive score
	// that have not been selected before
	var minScore = 0;
	
	// After training rules with a score below scoreThreshold are pruned
	function Brill_POS_Trainer(ruleScoreThreshold) {
	  if (ruleScoreThreshold) {
	    this.ruleScoreThreshold = ruleScoreThreshold;
	  }
	  else {
	    this.ruleScoreThreshold = 1;
	  }
	}
	
	// Return the highest scoring rule from the rule set
	Brill_POS_Trainer.prototype.selectHighRule = function() {
	  var highestRule = null;
	
	  // Walk through the map and find the rule with highest score
	  this.positiveRules.getRules().forEach(function(rule){
	    if (highestRule === null) {
	      if (!rule.hasBeenSelectedAsHighRuleBefore) {
	        highestRule = rule;
	      }
	    }
	    else {
	      if ((rule.score() > highestRule.score()) &&
	        !rule.hasBeenSelectedAsHighRuleBefore) {
	        highestRule = rule;
	      }
	    }
	  });
	
	  if (highestRule !== null) {
	    highestRule.hasBeenSelectedAsHighRuleBefore = true;
	  }
	  // Return the rule with the highest score
	  return highestRule;
	};
	
	Brill_POS_Trainer.prototype.mapRuleToSite = function(rule, i, j) {
	  if (!this.mapRuleToSites[rule.key()]) {
	    this.mapRuleToSites[rule.key()] = {};
	  }
	  if (!this.mapRuleToSites[rule.key()][i]) {
	    this.mapRuleToSites[rule.key()][i] = {};
	  }
	  this.mapRuleToSites[rule.key()][i][j] = true;
	};
	
	Brill_POS_Trainer.prototype.mapSiteToRule = function(i, j, rule) {
	  if (!this.mapSiteToRules[i]) {
	    this.mapSiteToRules[i] = {};
	  }
	  if (!this.mapSiteToRules[i][j]) {
	    this.mapSiteToRules[i][j] = {};
	  }
	  this.mapSiteToRules[i][j][rule.key()] = rule;
	};
	
	Brill_POS_Trainer.prototype.associateSiteWithRule = function(i, j, rule) {
	  this.mapRuleToSite(rule, i, j);
	  this.mapSiteToRule(i, j, rule);
	};
	
	Brill_POS_Trainer.prototype.siteIsAssociatedWithRule = function(i, j, rule) {
	  if (this.mapSiteToRules[i]) {
	    if (this.mapSiteToRules[i][j]) {
	      if (this.mapSiteToRules[i][j][rule.key()]) {
	        return true;
	      }
	    }
	  }
	  return false;
	};
	
	// Returns an array of all sites associated with rule
	Brill_POS_Trainer.prototype.getSites = function(rule) {
	  var that = this;
	  var result = [];
	  Object.keys(this.mapRuleToSites[rule.key()]).forEach(function(i) {
	    Object.keys(that.mapRuleToSites[rule.key()][i]).forEach(function(j) {
	      // Unary plus the convert hash keys i and j to integer
	      result.push([+i, +j]);
	    });
	  });
	  //logger.debug("Brill_POS_Trainer.prototype.getSites: sites " + JSON.stringify(result));
	  return(result);
	};
	
	// Returns an array of all rules associated with the site
	Brill_POS_Trainer.prototype.getRules = function(i, j) {
	  var result = [];
	  var that = this;
	
	  if (this.mapSiteToRules[i]) {
	    if (this.mapSiteToRules[i][j]) {
	      result = Object.keys(this.mapSiteToRules[i][j]).map(function(key) {
	        return that.mapSiteToRules[i][j][key];
	      });
	    }
	  }
	  return result;
	};
	
	Brill_POS_Trainer.prototype.disconnectSiteFromRule = function(i, j, rule) {
	  // mapRuleToSites
	  if (this.mapRuleToSites[rule.key()]) {
	    if (this.mapRuleToSites[rule.key()][i]) {
	      if (this.mapRuleToSites[rule.key()][i][j]) {
	        delete this.mapRuleToSites[rule.key()][i][j];
	      }
	    }
	  }
	
	  // mapSiteToRules
	  if (this.mapSiteToRules[i]) {
	    if (this.mapSiteToRules[i][j]) {
	      if (this.mapSiteToRules[i][j][rule.key()]) {
	        delete this.mapSiteToRules[i][j][rule.key()];
	      }
	    }
	  }
	};
	
	// Adjusts the score of the rule at position i, j of the corpus
	Brill_POS_Trainer.prototype.scoreRule = function(rule, i, j) {
	  //logger.debug("Brill_POS_Trainer.prototype.scoreRule: entry");
	  var token = this.corpus.sentences[i][j];
	  var rightTag = token.tag;
	  var oldTag = token.testTag;
	  var newTag = token.newTag;
	  if (rightTag !== oldTag) {
	    // Old tag is wrong
	    if (newTag === rightTag) {
	      // New tag is right
	      rule.positive++;
	      // If the score changes, it may be selected again as highest scoring rule
	      rule.hasBeenSelectedAsHighRuleBefore = false;
	      //logger.debug("Brill_POS_Trainer.prototype.scoreRule: positive: " + rule.key() + "\t score: " + rule.positive);
	    }
	    else {
	      // New tag is wrong as well --> neutral
	      rule.neutral++;
	      //logger.debug("Brill_POS_Trainer.prototype.scoreRule: neutral: " + rule.key() + "\t score: " + rule.neutral);
	    }
	  }
	  else {
	    // Old tag is right
	    if (newTag === rightTag) {
	      // New tag is right --> neutral
	      rule.neutral++;
	      //logger.debug("Brill_POS_Trainer.prototype.scoreRule: neutral: " + rule.key() + "\t score: " + rule.neutral);
	
	
	    }
	    else {
	      // New tag is false
	      rule.negative++;
	      // If the score changes, it may be selected again as highest scoring rule
	      rule.hasBeenSelectedAsHighRuleBefore = false;
	      //logger.debug("Brill_POS_Trainer.prototype.scoreRule: negative: " + rule.key() + "\t score: " + rule.negative);
	    }
	  }
	  //logger.debug("Brill_POS_Trainer.prototype.scoreRule: exit");
	};
	
	// Generate positive rules for this given site using templates
	Brill_POS_Trainer.prototype.generatePositiveRules = function(i, j) {
	  var sentence = this.corpus.sentences[i];
	  var token = sentence[j];
	  // A positive rule should trigger on the currently assigned testTag
	  var oldTag = token.testTag;
	  //logger.debug("Brill_POS_Trainer.prototype.generatePositiveRules: oldTag " + oldTag);
	  // It should assign the right tag as given by the corpus
	  var newTag = token.tag;
	  //logger.debug("Brill_POS_Trainer.prototype.generatePositiveRules: newTag " + newTag);
	
	  var newRules = new RuleSet();
	  // Exit if testTag already is the right tag --> will not result in positive rules
	  if (oldTag === newTag) {
	    return newRules;
	  }
	
	  this.templates.forEach(function(template) {
	    if (template.windowFitsSite(sentence, j)) {
	      if (template.meta.nrParameters === 1) {
	        template.meta.parameter1Values(sentence, j).forEach(function (value) {
	          newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName, value));
	        });
	      }
	      else {
	        if (template.meta.nrParameters === 2) {
	          template.meta.parameter1Values(sentence, j).forEach(function (value1) {
	            template.meta.parameter2Values(sentence, j).forEach(function (value2) {
	              newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName, value1, value2));
	            });
	          });
	        }
	        else {
	          // 0 paramaters
	          newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName));
	        }
	      }
	    }
	  });
	  return newRules;
	};
	
	// Finds all rules that are applicable at some site
	Brill_POS_Trainer.prototype.scanForPositiveRules = function() {
	  //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: entry");
	  var that = this;
	  this.corpus.sentences.forEach(function(sentence, i) {
	    sentence.forEach(function(token, j) {
	      //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: sentence no " + i);
	      var newRules = that.generatePositiveRules(i, j);
	      newRules.getRules().forEach(function(rule) {
	        that.positiveRules.addRule(rule);
	        //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: nrRules " + that.positiveRules.nrRules());
	      });
	    });
	  });
	  //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: exit, number of rules: " + this.positiveRules.nrRules());
	};
	
	// Find all sites where the rules can be applied, register these sites and
	// update the scores
	Brill_POS_Trainer.prototype.scanForSites = function() {
	  //logger.debug("Brill_POS_Trainer.prototype.scanForSites: entry");
	  var that = this;
	
	  // Scan the corpus
	  this.corpus.sentences.forEach(function(sentence, i) {
	    if (i % 100 === 0) {
	      //logger.info("Brill_POS_Trainer.prototype.scanForSites: sentence " + i);
	    }
	    var taggedSentence = sentence.map(function(token) {
	      return [token.token, token.testTag];
	    });
	    sentence.forEach(function(token, j) {
	      that.positiveRules.getRules().forEach(function(rule) {
	        if (rule.isApplicableAt(sentence, taggedSentence, j)) {
	          that.associateSiteWithRule(i, j, rule);
	          that.scoreRule(rule, i, j);
	          //logger.debug("Brill_POS_Trainer.prototype.scanForSites: (sentence, token, rule): (" + i + ", " + j + ", " + rule.prettyPrint() + ")");
	        }
	      });
	    });
	  });
	
	  //logger.debug("Brill_POS_Trainer.prototype.scanForSites: exit");
	};
	
	// Returns a list of sites that may have been touched by a changing tag
	Brill_POS_Trainer.prototype.neighbourhood = function(i, j) {
	  var sentenceLength = this.corpus.sentences[i].length;
	  var list = [];
	
	  if (this.index > 2) {
	    list.push([i, j - 3]);
	  }
	  if (this.index > 1) {
	    list.push([i, j - 2]);
	  }
	  if (this.index > 0) {
	    list.push([i, j - 1]);
	  }
	  if (this.index < sentenceLength - 1) {
	    list.push([i, j + 1]);
	  }
	  if (this.index < sentenceLength - 2) {
	    list.push([i, j + 2]);
	  }
	  if (this.index > sentenceLength - 3) {
	    list.push([i, j + 3]);
	  }
	  return list;
	};
	
	// corpus: an array of token arrays
	// templates: an array of rule templates
	// lexicon: lexicon that provides method tagWord(word)
	Brill_POS_Trainer.prototype.train = function(corpus, templates, lexicon) {
	  this.corpus = corpus;
	  this.templates = templates;
	  this.positiveRules = new RuleSet();
	  this.mapRuleToSites = {};
	  this.mapSiteToRules = {};
	
	  //logger.debug("Brill_POS_Trainer.prototype.train: entry");
	  this.corpus.tag(lexicon);
	  this.scanForPositiveRules();
	  //logger.info("Brill_POS_Trainer.prototype.train: initial number of rules: " + this.positiveRules.nrRules());
	  this.scanForSites();
	
	  var highRule = this.selectHighRule();
	  var iterationNumber = 0;
	  var that = this;
	  while ((highRule !== null) && (highRule.score() > minScore)) {
	    if ((iterationNumber % 5) === 0) {
	      //logger.info("Brill_POS_Trainer.prototype.train: training iteration: " + iterationNumber);
	    }
	    //logger.debug("Brill_POS_Trainer.prototype.train: highRule selected: " + highRule.key());
	    //logger.debug("Brill_POS_Trainer.prototype.train: number of rules: " + this.positiveRules.nrRules());
	    //logger.debug("Brill_POS_Trainer.prototype.train: score of highRule: " + highRule.score());
	
	    // Apply the high rule to each change site on its site list
	    this.getSites(highRule).forEach(function(site) {
	      //logger.debug("Brill_POS_Trainer.prototype.train: apply highRule to: " + site);
	      //logger.debug("Brill_POS_Trainer.prototype.train: sentence length: " + that.corpus.sentences[site[0]].length);
	      highRule.applyAt(that.corpus.sentences[site[0]], site[1]);
	    });
	
	    var unseenRules = new RuleSet();
	    this.getSites(highRule).forEach(function(site) {
	      that.neighbourhood(site[0], site[1]).forEach(function(testSite) {
	        // Generate positive rules for testSite
	        var newRules = that.generatePositiveRules(testSite[0], testSite[1]);
	
	        // Disconnect test site from its rules
	        // because highrule has been applied
	        that.getRules(testSite[0], testSite[1]).forEach(function(rule) {
	          if (!newRules.hasRule(rule)) {
	            that.disconnectSiteFromRule(testSite[0], testSite[1], rule);
	          }
	        });
	
	        // Connect new rules not already connected to the test site
	        newRules.getRules().forEach(function(rule) {
	          if (!that.siteIsAssociatedWithRule(testSite[0]. testSite[1], rule)) {
	            if (that.positiveRules.hasRule(rule)) {
	              that.associateSiteWithRule(testSite[0], testSite[1], rule);
	            }
	            else {
	              unseenRules.addRule(rule);
	            }
	          }
	        });
	
	        // Process unseen rules
	        if (unseenRules.nrRules() > 0) {
	          unseenRules.getRules().forEach(function(rule) {
	            that.positiveRules.addRule(rule);
	          });
	          that.corpus.sentences.forEach(function (sentence, i) {
	            var taggedSentence = sentence.map(function(token) {
	              return [token.token, token.testTag];
	            });
	            sentence.forEach(function(token, j) {
	              unseenRules.getRules().forEach(function(rule) {
	                if (rule.isApplicableAt(sentence, taggedSentence, j)) {
	                  that.associateSiteWithRule(i, j, rule);
	                  that.scoreRule(rule, i, j);
	                }
	              });
	            });
	          });
	        }
	
	      });
	    });
	
	    // Select next highest scoring rule
	    highRule = this.selectHighRule();
	    iterationNumber++;
	  }
	  //logger.info("Brill_POS_Trainer.prototype.train: number of iterations: " + iterationNumber);
	  //logger.info("Brill_POS_Trainer.prototype.train: number of rules: " + this.positiveRules.nrRules());
	
	  // Remove rules having a non-positive score
	  this.positiveRules.getRules().forEach(function(rule) {
	    if (rule.score() < that.ruleScoreThreshold) {
	      that.positiveRules.removeRule(rule);
	    }
	  });
	
	  //logger.info("Brill_POS_Trainer.prototype.train: number of rules after pruning: " + this.positiveRules.nrRules());
	  //logger.debug("Brill_POS_Trainer.prototype.train: exit");
	  return this.positiveRules;
	};
	
	Brill_POS_Trainer.prototype.printRulesWithScores = function() {
	  var that = this;
	  var result = "";
	
	  function compareRules(a, b) {
	    if (a.score() > b.score()) {
	      return -1;
	    }
	    else {
	      if (a.score() < b.score()) {
	        return 1;
	      }
	      else {
	        return 0;
	      }
	    }
	  }
	
	  var rules = this.positiveRules.getRules();
	  var sortedRules = rules.sort(compareRules);
	
	  sortedRules.forEach(function(rule) {
	    //if (rule.score() > 0) {
	      result += rule.score() + '\t' + rule.positive + '\t' + rule.negative + '\t' + rule.neutral + '\t' + rule.prettyPrint() + "\n";
	    //}
	  });
	  return result;
	};
	
	module.exports = Brill_POS_Trainer;


/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Corpus class for parsing and analysing corpora
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	//var log4js = require('log4js');
	//var logger = log4js.getLogger();
	//logger.setLevel('INFO');
	
	var Lexicon = __webpack_require__(372);
	const BROWN = 1;
	
	// sentences: an array of annotated sentences
	// A sentence is an array of annotated tokens
	// A token is an object with (token, tag, testTag, ruleList)
	function Corpus(data, typeOfCorpus) {
	  this.wordCount = 0;
	  this.sentences = [];
	  if (data && typeOfCorpus) {
	    // For other types of corpora add a case here and supply a parsing method
	    switch (typeOfCorpus) {
	      case BROWN:
	        this.parseBrownCorpus(data);
	        break;
	      default:
	        // Assume it is an array of tagged sentences
	        this.sentences = data;
	    }
	  }
	}
	
	// data is raw text
	// A corpus parsing method should split the corpus in sentences each of which
	// consist of an array of tokens.
	Corpus.prototype.parseBrownCorpus = function(data) {
	  var that = this;
	
	  var lines = data.split('\n');
	  lines.forEach(function(line) {
	    var trimmedLine = line.trim();
	    // Only parse lines that contain characters
	    if (trimmedLine != "") {
	      var taggedSentence = [];
	      var tokens = line.trim().split(/\s+/);
	      tokens.forEach(function (token) {
	        that.wordCount++;
	        // Create a tagged sentences consisting of tokens
	        var wordPlusTag = token.split('_');
	        taggedSentence.push({
	          "token": wordPlusTag[0],
	          "tag": wordPlusTag[1]
	        });
	      });
	
	      // Add the sentence to the corpus
	      that.sentences.push(taggedSentence);
	    }
	  });
	};
	
	// Returns an array of all POS tags used in the corpus
	Corpus.prototype.getTags = function() {
	  return Object.keys(this.posTags);
	};
	
	// Splits the corpus in a training and testing set.
	// percentageTrain is the size of the training corpus in percent
	// Returns an array with two elements: training corpus, testing corpus
	Corpus.prototype.splitInTrainAndTest = function(percentageTrain) {
	  var corpusTrain = new Corpus();
	  var corpusTest = new Corpus();
	
	  var p = percentageTrain / 100;
	  this.sentences.forEach(function(sentence, i) {
	    if (Math.random() < p) {
	      corpusTrain.sentences.push(sentence);
	    }
	    else {
	      corpusTest.sentences.push(sentence);
	    }
	  });
	  return [corpusTrain, corpusTest];
	};
	
	// Analyses the corpus:
	// - registers used PS tags
	// - records the frequency of POS tag for each word
	Corpus.prototype.analyse = function() {
	  this.tagFrequencies = {};
	  this.posTags = {};
	  this.wordCount = 0;
	
	  var that = this;
	  this.sentences.forEach(function(sentence) {
	    sentence.forEach(function(token) {
	      that.wordCount++;
	
	      // Register the tags used in the corpus
	      that.posTags[token.tag] = true;
	
	      // Register the frequency of the tag
	      if (!that.tagFrequencies[token.token]) {
	        that.tagFrequencies[token.token] = {};
	      }
	      if (!that.tagFrequencies[token.token][token.tag]) {
	        that.tagFrequencies[token.token][token.tag] = 0;
	      }
	      that.tagFrequencies[token.token][token.tag]++;
	    });
	  });
	};
	
	// Creates a lexicon by taking the most frequently occurring tag of a word
	// as the right tag
	Corpus.prototype.buildLexicon = function() {
	  var lexicon = new Lexicon();
	  var that = this;
	
	  this.analyse();
	  Object.keys(this.tagFrequencies).forEach(function(token) {
	    var catToFreq = that.tagFrequencies[token];
	    var categories = Object.keys(catToFreq);
	
	    function compareByFrequency(a, b) {
	      if (catToFreq[a] > catToFreq[b]) {
	        return -1;
	      }
	      else {
	        if (catToFreq[a] < catToFreq[b]) {
	          return 1;
	        }
	        else {
	          return 0;
	        }
	      }
	    }
	
	    var sortedCategories = categories.sort(compareByFrequency);
	    lexicon.addWord(token, sortedCategories);
	  });
	  return lexicon;
	};
	
	Corpus.prototype.tag = function(lexicon) {
	  this.sentences.forEach(function(sentence) {
	    sentence.forEach(function(token) {
	      // tagWord returns a list of categories, take the first category
	      token.testTag = lexicon.tagWord(token.token)[0];
	    });
	  });
	};
	
	Corpus.prototype.nrSentences = function() {
	  return this.sentences.length;
	};
	
	Corpus.prototype.nrWords = function() {
	  return this.wordCount;
	};
	
	Corpus.prototype.prettyPrint = function() {
	  this.sentences.forEach(function(sentence, index) {
	    //logger.debug("sentence no " + index + "\n" +
	    //  JSON.stringify(sentence, null, 2));
	  });
	};
	
	module.exports = Corpus;


/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	  Predicates for the Brill tagger
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	//var log4js = require('log4js');
	//var logger = log4js.getLogger();
	//logger.setLevel('INFO');
	
	var predicates = __webpack_require__(374);
	//logger.debug(predicates);
	
	function Predicate(name, parameter1, parameter2) {
	  this.name = name;
	  this.meta = predicates[name];
	  if (!this.meta) {
	    this.meta = predicates["DEFAULT"];
	  }
	  //if (this.meta.nrParameters > 0) {
	    this.parameter1 = parameter1;
	  //}
	  //if (this.meta.nrParameters > 1) {
	    this.parameter2 = parameter2;
	  //}
	  //logger.debug('Predicate\n' + JSON.toString(this.meta, null, 2));
	}
	
	Predicate.prototype.evaluate = function(tagged_sentence, position) {
	  //logger.debug('Predicate.evalute ' + this.name);
	  var predicate = this.meta.function;
	  return (predicate(tagged_sentence, position, this.parameter1, this.parameter2));
	};
	
	module.exports = Predicate;


/***/ }),
/* 811 */
/***/ (function(module, exports) {

	/*
	  Rule Template class for deriving transformation rules.
	  Copyright (C) 2017 Hugo W.L. ter Doest
	
	  This program is free software: you can redistribute it and/or modify
	  it under the terms of the GNU General Public License as published by
	  the Free Software Foundation, either version 3 of the License, or
	  (at your option) any later version.
	
	  This program is distributed in the hope that it will be useful,
	  but WITHOUT ANY WARRANTY; without even the implied warranty of
	  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  GNU General Public License for more details.
	
	  You should have received a copy of the GNU General Public License
	  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	function RuleTemplate(templateName, metadata) {
	  this.predicateName = templateName;
	  this.meta = metadata;
	}
	
	RuleTemplate.prototype.windowFitsSite = function(sentence, i) {
	  return ((i + this.meta.window[0] >= 0) &&
	    (i + this.meta.window[0] < sentence.length) &&
	    (i + this.meta.window[1] >= 0) &&
	    (i + this.meta.window[1] < sentence.length));
	};
	
	module.exports = RuleTemplate;


/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var util = __webpack_require__(12),
	    Classifier = __webpack_require__(377),
	    ApparatusBayesClassifier = __webpack_require__(258).BayesClassifier;
	
	var BayesClassifier = function(stemmer, smoothing) {
	    var abc = new ApparatusBayesClassifier();
	    if (smoothing && isFinite(smoothing)) {
	        abc = new ApparatusBayesClassifier(smoothing);
	    }
	    Classifier.call(this, abc, stemmer);
	};
	
	util.inherits(BayesClassifier, Classifier);
	
	function restore(classifier, stemmer) {
	    classifier = Classifier.restore(classifier, stemmer);
	    classifier.__proto__ = BayesClassifier.prototype;
	    classifier.classifier = ApparatusBayesClassifier.restore(classifier.classifier);
	
	    return classifier;
	}
	
	function load(filename, stemmer, callback) {
	    Classifier.load(filename, function(err, classifier) {
	        if (err) {
	            return callback(err);
	        }
	        else {
	            callback(err, restore(classifier, stemmer));
	        }
	    });
	}
	
	BayesClassifier.restore = restore;
	BayesClassifier.load = load;
	
	module.exports = BayesClassifier;


/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var util = __webpack_require__(12),
	    Classifier = __webpack_require__(377),
	    ApparatusLogisticRegressionClassifier = __webpack_require__(258).LogisticRegressionClassifier;
	
	var LogisticRegressionClassifier = function(stemmer) {
	    Classifier.call(this, new ApparatusLogisticRegressionClassifier(), stemmer);
	};
	
	util.inherits(LogisticRegressionClassifier, Classifier);
	
	function restore(classifier, stemmer) {
	    classifier = Classifier.restore(classifier, stemmer);
	    classifier.__proto__ = LogisticRegressionClassifier.prototype;
	    classifier.classifier = ApparatusLogisticRegressionClassifier.restore(classifier.classifier);
	
	    return classifier;
	}
	
	function load(filename, stemmer, callback) {
	    Classifier.load(filename, function(err, classifier) {
	        if (err) {
	            callback(err);
	        }
	        else {
	            callback(err, restore(classifier, stemmer));
	        }
	    });
	}
	
	function train() {
	    // we need to reset the traning state because logistic regression
	    // needs its matricies to have their widths synced, etc.
	    this.lastAdded = 0;
	    this.classifier = new ApparatusLogisticRegressionClassifier();
	    Classifier.prototype.train.call(this);
	}
	
	LogisticRegressionClassifier.prototype.train = train;
	LogisticRegressionClassifier.restore = restore;
	LogisticRegressionClassifier.load = load;
	
	module.exports = LogisticRegressionClassifier;


/***/ }),
/* 814 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, John Crepezzi, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// Get all of the pairs of letters for a string
	var letterPairs = function (str) {
	  var numPairs = str.length - 1;
	  var pairs = new Array(numPairs);
	  for (var i = 0; i < numPairs; i++) {
	    pairs[i] = str.substring(i, i + 2);
	  }
	  return pairs;
	};
	
	// Get all of the pairs in all of the words for a string
	var wordLetterPairs = function (str) {
	  var allPairs = [], pairs;
	  var words = str.split(/\s+/);
	  for (var i = 0; i < words.length; i++) {
	    pairs = letterPairs(words[i]);
	    allPairs.push.apply(allPairs, pairs);
	  }
	  return allPairs;
	};
	
	// Perform some sanitization steps
	var sanitize = function (str) {
	  return str.toLowerCase().replace(/^\s+|\s+$/g, '');
	};
	
	// Compare two strings, and spit out a number from 0-1
	var compare = function (str1, str2) {
	  var sanitized_str1 = sanitize(str1);
	  var sanitized_str2 = sanitize(str2);
	  var pairs1 = wordLetterPairs(sanitized_str1);
	  var pairs2 = wordLetterPairs(sanitized_str2);
	  var intersection = 0, union = pairs1.length + pairs2.length;
	  if (union === 0) {
	      if (sanitized_str1 === sanitized_str2) {
	          return 1;
	      } else {
	          return 0;
	      }
	  } else {
	    var i, j, pair1, pair2;
	    for (i = 0; i < pairs1.length; i++) {
	      pair1 = pairs1[i];
	      for (j = 0; j < pairs2.length; j++) {
	        pair2 = pairs2[j];
	        if (pair1 == pair2) {
	          intersection ++;
	          delete pairs2[j];
	          break;
	        }
	      }
	    }
	    return 2 * intersection / union;
	  }
	};
	
	module.exports = compare;


/***/ }),
/* 815 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2012, Adam Phillabaum, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	Unless otherwise stated by a specific section of code
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// Computes the Jaro distance between two string -- intrepreted from:
	// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance
	// s1 is the first string to compare
	// s2 is the second string to compare
	function distance(s1, s2) {
	    if (typeof(s1) !== "string" || typeof(s2) !== "string") {
	        return 0;
	    }
	
	    if (s1.length === 0 || s2.length === 0) {
	        return 0;
	    }
	
	    s1 = s1.toLowerCase(), s2 = s2.toLowerCase();
	
	    var matchWindow = (Math.floor(Math.max(s1.length, s2.length) / 2.0)) - 1;
	    var matches1 = new Array(s1.length);
	    var matches2 = new Array(s2.length);
	    var m = 0; // number of matches
	    var t = 0; // number of transpositions
	    var i = 0; // index for string 1
	    var k = 0; // index for string 2
	
	    //debug helpers
	    //console.log("s1: " + s1 + "; s2: " + s2);
	    //console.log(" - matchWindow: " + matchWindow);
	
	    for (i = 0; i < s1.length; i++) { // loop to find matched characters
	        var start = Math.max(0, (i - matchWindow)); // use the higher of the window diff
	        var end = Math.min((i + matchWindow + 1), s2.length); // use the min of the window and string 2 length
	
	        for (k = start; k < end; k++) { // iterate second string index
	            if (matches2[k]) { // if second string character already matched
	                continue;
	            }
	            if (s1[i] !== s2[k]) { // characters don't match
	                continue;
	            }
	
	            // assume match if the above 2 checks don't continue
	            matches1[i] = true;
	            matches2[k] = true;
	            m++;
	            break;
	        }
	    }
	
	    // nothing matched
	    if (m === 0) {
	        return 0.0;
	    }
	
	    k = 0; // reset string 2 index
	    for(i = 0; i < s1.length; i++) { // loop to find transpositions
	        if (!matches1[i]) { // non-matching character
	            continue;
	        }
	        while(!matches2[k]) { // move k index to the next match
	            k++;
	        }
	        if (s1[i] !== s2[k]) { // if the characters don't match, increase transposition
	            t++;
	        }
	        k++; // iterate k index normally
	    }
	
	    // transpositions divided by 2
	    t = t / 2.0;
	
	    return ((m / s1.length) + (m / s2.length) + ((m - t) / m)) / 3.0;
	}
	
	// Computes the Winkler distance between two string -- intrepreted from:
	// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance
	// s1 is the first string to compare
	// s2 is the second string to compare
	// dj is the Jaro Distance (if you've already computed it), leave blank and the method handles it
	function JaroWinklerDistance(s1, s2, dj) {
	    if (s1 === s2) {
	        return 1;
	    } else {
	        var jaro = (typeof(dj) === 'undefined') ? distance(s1,s2) : dj;
	        var p = 0.1; // default scaling factor
	        var l = 0 // length of the matching prefix
	        while(s1[l] === s2[l] && l < 4) {
	            l++;
	        }
	
	        return jaro + l * p * (1 - jaro);
	    }
	}
	module.exports = JaroWinklerDistance;
	


/***/ }),
/* 816 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2012, Sid Nallu, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	/*
	 * contribution by sidred123
	 */
	
	/*
	 * Compute the Levenshtein distance between two strings.
	 * Algorithm based from Speech and Language Processing - Daniel Jurafsky and James H. Martin.
	 */
	
	function LevenshteinDistance (source, target, options) {
	    options = options || {};
	    if(isNaN(options.insertion_cost)) options.insertion_cost = 1;
	    if(isNaN(options.deletion_cost)) options.deletion_cost = 1;
	    if(isNaN(options.substitution_cost)) options.substitution_cost = 1;
	
	    var sourceLength = source.length;
	    var targetLength = target.length;
	    var distanceMatrix = [[0]];
	
	    for (var row =  1; row <= sourceLength; row++) {
	        distanceMatrix[row] = [];
	        distanceMatrix[row][0] = distanceMatrix[row-1][0] + options.deletion_cost;
	    }
	
	    for (var column = 1; column <= targetLength; column++) {
	        distanceMatrix[0][column] = distanceMatrix[0][column-1] + options.insertion_cost;
	    }
	
	    for (var row = 1; row <= sourceLength; row++) {
	        for (var column = 1; column <= targetLength; column++) {
	            var costToInsert = distanceMatrix[row][column-1] + options.insertion_cost;
	            var costToDelete = distanceMatrix[row-1][column] + options.deletion_cost;
	
	            var sourceElement = source[row-1];
	            var targetElement = target[column-1];
	            var costToSubstitute = distanceMatrix[row-1][column-1];
	            if (sourceElement !== targetElement) {
	                costToSubstitute = costToSubstitute + options.substitution_cost;
	            }
	            distanceMatrix[row][column] = Math.min(costToInsert, costToDelete, costToSubstitute);
	        }
	    }
	    return distanceMatrix[sourceLength][targetLength];
	}
	
	module.exports = LevenshteinDistance;


/***/ }),
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	exports.SoundEx = __webpack_require__(831);
	exports.Metaphone = __webpack_require__(830);
	exports.DoubleMetaphone = __webpack_require__(829);
	exports.SoundExDM = __webpack_require__(828);
	exports.PorterStemmer = __webpack_require__(379);
	exports.PorterStemmerFa = __webpack_require__(836);
	exports.PorterStemmerFr = __webpack_require__(837);
	exports.PorterStemmerRu = __webpack_require__(841);
	exports.PorterStemmerEs = __webpack_require__(835);
	exports.PorterStemmerIt = __webpack_require__(838);
	exports.PorterStemmerNo = __webpack_require__(839);
	exports.PorterStemmerPt = __webpack_require__(840);
	exports.LancasterStemmer = __webpack_require__(834);
	exports.StemmerFr = __webpack_require__(381);
	exports.StemmerPl = __webpack_require__(847);
	exports.StemmerJa = __webpack_require__(845);
	exports.AggressiveTokenizerNl = __webpack_require__(852);
	exports.AggressiveTokenizerFa = __webpack_require__(383);
	exports.AggressiveTokenizerFr = __webpack_require__(384);
	exports.AggressiveTokenizerRu = __webpack_require__(389);
	exports.AggressiveTokenizerEs = __webpack_require__(382);
	exports.AggressiveTokenizerIt = __webpack_require__(385);
	exports.AggressiveTokenizerPl = __webpack_require__(387);
	exports.AggressiveTokenizerPt = __webpack_require__(388);
	exports.AggressiveTokenizerNo = __webpack_require__(386);
	exports.AggressiveTokenizer = __webpack_require__(218);
	exports.CaseTokenizer = __webpack_require__(854);
	exports.RegexpTokenizer = __webpack_require__(97).RegexpTokenizer;
	exports.WordTokenizer = __webpack_require__(97).WordTokenizer;
	exports.WordPunctTokenizer = __webpack_require__(97).WordPunctTokenizer;
	exports.TreebankWordTokenizer = __webpack_require__(855);
	exports.TokenizerJa = __webpack_require__(390);
	exports.SentenceTokenizer = __webpack_require__(853);
	exports.BayesClassifier = __webpack_require__(812);
	exports.LogisticRegressionClassifier = __webpack_require__(813);
	exports.NounInflector = __webpack_require__(821);
	exports.NounInflectorFr = __webpack_require__(819);
	exports.NounInflectorJa = __webpack_require__(820);
	exports.PresentVerbInflector = __webpack_require__(822);
	exports.CountInflector = __webpack_require__(818);
	exports.WordNet = __webpack_require__(871);
	exports.TfIdf = __webpack_require__(851);
	exports.Trie = __webpack_require__(391);
	exports.SentenceAnalyzer = __webpack_require__(805);
	exports.stopwords = __webpack_require__(144).words;
	exports.ShortestPathTree = __webpack_require__(859);
	exports.Spellcheck = __webpack_require__(832);
	exports.LongestPathTree = __webpack_require__(858);
	exports.EdgeWeightedDigraph = __webpack_require__(219);
	exports.NGrams = __webpack_require__(823);
	exports.NGramsZH = __webpack_require__(824);
	exports.JaroWinklerDistance = __webpack_require__(815);
	exports.LevenshteinDistance = __webpack_require__(816);
	exports.DiceCoefficient = __webpack_require__(814);
	exports.normalize = __webpack_require__(825).normalize_tokens;
	exports.normalize_ja = __webpack_require__(378).normalize_ja;
	exports.removeDiacritics = __webpack_require__(827);
	exports.transliterate_ja = __webpack_require__(856);
	exports.BrillPOSTagger = __webpack_require__(806);
	exports.BrillPOSTrainer = __webpack_require__(808);
	exports.BrillPOSTester = __webpack_require__(807);
	exports.Lexicon = __webpack_require__(372);
	exports.RuleSet = __webpack_require__(373);
	exports.RuleTemplates = __webpack_require__(374);
	exports.RuleTemplate = __webpack_require__(811);
	exports.Corpus = __webpack_require__(809);
	
	


/***/ }),
/* 818 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	function nthForm(i) {
	    var teenth = (i % 100);
	
	    if(teenth > 10 && teenth < 14)
	        return 'th';
	    else {
	        switch(i % 10) {
	            case 1:
	                return 'st';
	                break;
	            case 2:
	                return 'nd';
	                break;            
	            case 3:
	                return 'rd';
	                break;
	            default:
	                return 'th';
	        }
	    }
	}
	
	function nth(i) {
	    return i.toString() + nthForm(i);
	}
	
	var CountInflector = function() {
	};
	
	CountInflector.nth = nth;
	
	module.exports = CountInflector;


/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * A noun inflector for French.
	 * Compiled from:
	 * \@see http://fr.wiktionary.org/wiki/Annexe:Pluriels_irr%C3%A9guliers_en_fran%C3%A7ais
	 * \@see http://fr.wikipedia.org/wiki/Pluriels_irr%C3%A9guliers_en_fran%C3%A7ais
	 *
	 * \@todo Take compounded noun into account (eaux-fortes, pique-nique...).
	 * \@todo General note: French also requires AdjectiveInflector (femininize...).
	 */
	
	var SingularPluralInflector = __webpack_require__(142),
	    util = __webpack_require__(12),
	    FormSet = __webpack_require__(141);
	
	function attach() {
	  var inflector = this;
	
	  String.prototype.singularizeNoun = function() {
	    return inflector.singularize(this);
	  };
	
	  String.prototype.pluralizeNoun = function() {
	    return inflector.pluralize(this);
	  };
	}
	
	
	
	/**
	 * @constructor
	 */
	var NounInflector = function() {
	  // Ambiguous a.k.a. invariant.
	  // \@todo Expand this list to be as comprehensive as possible.
	  this.ambiguous = [
	    // Nouns ending by -s
	    'à-peu-près', 'à-propos', 'abattis', 'abcès', 'abois', 'abribus', 'abus',
	    'accès', 'acquis', 'adénovirus', 'adonis', 'ados', 'agrès', 'aguets',
	    'ailleurs', 'ais', 'albatros', 'albinos', 'alias', 'aloès', 'amaryllis',
	    'amas', 'ampélopsis', 'ananas', 'anchois', 'angélus', 'anis', 'anticorps',
	    'antihéros', 'antirides', 'anus', 'appas', 'appentis', 'appui-bras',
	    'appuie-bras', 'arcanes', 'argus', 'arrérages', 'arrière-pays', 'as',
	    'ascaris', 'asparagus', 'atlas', 'atours', 'aurochs', 'autobus',
	    'autofocus', 'avant-bras', 'avant-corps', 'avant-propos', 'avers', 'avis',
	    'axis', 'barbouillis', 'bas', 'beaujolais', 'beaux-arts', 'biais',
	    'bibliobus', 'biceps', 'bicross', 'bien-fonds', 'bloc-notes', 'blockhaus',
	    'blocus', 'blues', 'bois', 'bonus', 'bout-dehors', 'bouts-rimés',
	    'branle-bas', 'bras', 'brebis', 'bris', 'brise-lames', 'brise-mottes',
	    'brûlis', 'buis', 'burnous', 'bus', 'business', 'cabas', 'cacatoès',
	    'cacatois', 'cactus', 'cadenas', 'cafouillis', 'caillebotis', 'calvados',
	    'cambouis', 'campus', 'canevas', 'cannabis', 'carquois', 'cas',
	    'casse-noisettes', 'casse-pieds', 'cassis', 'caucus', 'cens', 'cervelas',
	    'chablis', 'chamois', 'chaos', 'chas', 'chasselas', 'châssis',
	    'chatouillis', 'chauffe-assiettes', 'chauve-souris', 'chorus', 'choucas',
	    'circoncis', 'cirrus', 'clafoutis', 'clapotis', 'cliquetis', 'clos',
	    'cochylis', 'colis', 'coloris', 'commis', 'compas', 'compromis',
	    'compte-chèques', 'compte-gouttes', 'compte-tours', 'concours', 'confins',
	    'congrès', 'consensus', 'contrepoids', 'contresens', 'contretemps',
	    'corn flakes', 'corps', 'corps-à-corps', 'corpus', 'cosinus', 'cosmos',
	    'coulis', 'coupe-ongles', 'cours', 'court-jus', 'couscous', 'coutelas',
	    'crocus', 'croquis', 'cross', 'cubitus', 'cumulus', 'cure-dents',
	    'cure-ongles', 'cure-pipes', 'cursus', 'cyclo-cross', 'cyprès', 'dais',
	    'damas', 'débarras', 'débours', 'débris', 'décès', 'dedans', 'dehors',
	    'delirium tremens', 'demi-gros', 'dépens', 'dessous', 'dessus', 'détritus',
	    'deux-mâts', 'deux-pièces', 'deux-points', 'deux-roues', 'deux-temps',
	    'dévers', 'devis', 'diplodocus', 'discours', 'dos', 'ébats', 'éboulis',
	    'échalas', 'edelweiss', 'élaeis', 'éleis', 'éléphantiasis', 'embarras',
	    'empois', 'en-cas', 'encens', 'enclos', 'endos', 'engrais', 'entrelacs',
	    'entremets', 'envers', 'épluche-légumes', 'ers', 'espace-temps',
	    'essuie-mains', 'eucalyptus', 'ex-libris', 'excès', 'express', 'extrados',
	    'faciès', 'fait-divers', 'fatras', 'faux-sens', 'favoris', 'ficus',
	    'fier-à-bras', 'finnois', 'florès', 'focus', 'fœtus', 'fois', 'forceps',
	    'fouillis', 'fracas', 'frais', 'français', 'franglais', 'frimas',
	    'friselis', 'frisottis', 'froncis', 'frottis', 'fucus', 'gâchis', 'galetas',
	    'galimatias', 'garde-à-vous', 'garde-corps', 'gargouillis', 'gars',
	    'gâte-bois', 'gazouillis', 'génois', 'gibus', 'glacis', 'glas', 'gneiss',
	    'gobe-mouches', 'grès', 'gribouillis', 'guet-apens', 'habeas corpus',
	    'hachis', 'haras', 'hardes', 'harnais', 'haut-le-corps', 'hautbois',
	    'herbe-aux-chats', 'héros', 'herpès', 'hiatus', 'hibiscus', 'hors-concours',
	    'hors-pistes', 'hourdis', 'huis-clos', 'humérus', 'humus', 'ibis', 'iléus',
	    'indique-fuites', 'infarctus', 'inlandsis', 'insuccès', 'intercours',
	    'intrados', 'intrus', 'iris', 'isatis', 'jais', 'jars', 'jeans',
	    'jeuconcours', 'judas', 'juliénas', 'jus', 'justaucorps', 'kakatoès',
	    'kermès', 'kriss', 'lacis', 'laïus', 'lambris', 'lapis', 'laps', 'lapsus',
	    'laquais', 'las', 'lattis', 'lave-mains', 'lavis', 'lèche-bottes',
	    'lèche-vitrines', 'legs', 'lias', 'liégeois', 'lilas', 'lis', 'lœss',
	    'logis', 'loris', 'lotus', 'louis', 'lupus', 'lys', 'mâchicoulis', 'madras',
	    'maïs', 'malappris', 'malus', 'mânes', 'maquis', 'marais', 'maroilles',
	    'marquis', 'mas', 'mass-médias', 'matelas', 'matois', 'médius', 'mépris',
	    'mérinos', 'mess', 'mets', 'mi-bas', 'micro-ondes', 'mille-pattes',
	    'millepertuis', 'minibus', 'minois', 'minus', 'mirabilis', 'mois',
	    'monocorps', 'monte-plats', 'mors', 'motocross', 'mots-croisés', 'motus',
	    'mouchetis', 'mucus', 'myosotis', 'nævus', 'négus', 'niais',
	    'nimbo-stratus', 'nimbus', 'norois', 'nounours', 'nu-pieds', 'oasis',
	    'obus', 'olibrius', 'omnibus', 'opus', 'os', 'ours', 'ouvre-boîtes',
	    'ouvre-bouteilles', 'palais', 'palis', 'palmarès', 'palus', 'panais',
	    'panaris', 'pancréas', 'papyrus', 'par-dehors', 'paradis', 'parcours',
	    'pardessus', 'pare-balles', 'pare-chocs', 'parvis', 'pas', 'passe-temps',
	    'pataquès', 'pathos', 'patois', 'pavois', 'pays', 'permis',
	    'petit-bourgeois', 'petit-gris', 'petit-pois', 'phallus', 'phimosis',
	    'pickles', 'pilotis', 'pique-fleurs', 'pis', 'pithiviers', 'pityriasis',
	    'plateau-repas', 'plâtras', 'plein-temps', 'plexiglas', 'plexus', 'plus',
	    'poids', 'pois', 'pont-levis', 'porte-avions', 'porte-bagages',
	    'porte-billets', 'porte-bouteilles', 'porte-clés', 'porte-hélicoptères',
	    'porte-jarretelles', 'porte-revues', 'pouls', 'préavis', 'presse-fruits',
	    'presse-papiers', 'princeps', 'printemps', 'procès', 'processus', 'progrès',
	    'propos', 'prospectus', 'protège-dents', 'psoriasis', 'pubis', 'puits',
	    'pus', 'putois', 'quatre-épices', 'quatre-feuilles', 'quatre-heures',
	    'quatre-mâts', 'quatre-quarts', 'quatre-temps', 'quitus', 'rabais',
	    'rachis', 'radis', 'radius', 'raïs', 'ramassis', 'rébus', 'reclus',
	    'recours', 'refus', 'relais', 'remords', 'remous', 'remue-méninges',
	    'rendez-vous', 'repas', 'répons', 'repos', 'repris', 'reps', 'rétrovirus',
	    'revers', 'rhinocéros', 'rictus', 'rince-doigts', 'ris', 'rollmops',
	    'rosé-des-prés', 'roulis', 'rubis', 'salmigondis', 'salsifis', 'sans-logis',
	    'sas', 'sassafras', 'sauternes', 'schnaps', 'schuss', 'secours', 'semis',
	    'sens', 'serre-fils', 'serre-livres', 'sévices', 'sinus', 'skunks',
	    'souris', 'sournois', 'sous-bois', 'stradivarius', 'stras', 'strass',
	    'strato-cumulus', 'stratus', 'stress', 'succès', 'surdos', 'surplus',
	    'surpoids', 'sursis', 'suspens', 'synopsis', 'syphilis', 'taffetas',
	    'taillis', 'talus', 'tamaris', 'tamis', 'tapis', 'tas', 'taudis', 'temps',
	    'tennis', 'terminus', 'terre-neuvas', 'tétanos', 'tétras', 'thalamus',
	    'thermos', 'thesaurus', 'thésaurus', 'thymus', 'tire-fesses', 'tonus',
	    'torchis', 'torticolis', 'tournedos', 'tournevis', 'tournis', 'tracas',
	    'traîne-savates', 'travers', 'tréfonds', 'treillis', 'trépas', 'trias',
	    'triceps', 'trichomonas', 'trois-étoiles', 'trois-mâts', 'trois-quarts',
	    'trolleybus', 'tumulus', 'typhus', 'univers', 'us', 'utérus', 'vasistas',
	    'vélocross', 'velours', 'verglas', 'verjus', 'vernis', 'vers',
	    'vert-de-gris', 'vide-ordures', 'vide-poches', 'villageois', 'virus',
	    'vis-à-vis', 'volubilis', 'vulgum pecus', 'waters', 'williams', 'xérès',
	
	    // Nouns ending by -x
	    'abat-voix', 'afflux', 'alpax', 'anthrax', 'apex', 'aptéryx',
	    'archéoptéryx', 'arrière-faix', 'bombyx', 'borax', 'bordeaux', 'bouseux',
	    'box', 'carex', 'casse-noix', 'cedex', 'céphalothorax', 'cérambyx', 'chaux',
	    'choix', 'coccyx', 'codex', 'contumax', 'coqueleux', 'cortex', 'courroux',
	    'croix', 'crucifix', 'culex', 'demodex', 'duplex', 'entre-deux', 'époux',
	    'équivaux', 'eux', 'ex', 'faix', 'faucheux', 'faux', 'fax', 'ferreux',
	    'flux', 'fox', 'freux', 'furax', 'hapax', 'harengueux', 'hélix',
	    'horse-pox', 'houx', 'index', 'influx', 'inox', 'juke-box', 'kleenex',
	    'lagothrix', 'larynx', 'lastex', 'latex', 'lux', 'lynx', 'macareux', 'max',
	    'mésothorax', 'mi-voix', 'mirepoix', 'motteux', 'multiplex', 'murex',
	    'narthex', 'noix', 'onyx', 'opopanax', 'oropharynx', 'paix', 'panax',
	    'perdrix', 'pharynx', 'phénix', 'phlox', 'phoenix', 'pneumothorax', 'poix',
	    'portefaix', 'pousse-cailloux', 'preux', 'prix', 'prothorax', 'pucheux',
	    'pyrex', 'pyroligneux', 'quadruplex', 'queux', 'redoux', 'reflex', 'reflux',
	    'relax', 'rhinopharynx', 'rose-croix', 'rouvieux', 'roux', 'rumex',
	    'saindoux', 'sardonyx', 'scolex', 'sèche-cheveux', 'silex', 'simplex',
	    'sioux', 'sirex', 'smilax', 'solex', 'songe-creux', 'spalax', 'sphex',
	    'sphinx', 'storax', 'strix', 'styrax', 'surfaix', 'surtaux', 'syrinx',
	    'tamarix', 'taux', 'télex', 'thorax', 'tord-boyaux', 'toux', 'trionyx',
	    'tripoux', 'tubifex', 'vertex', 'vidéotex', 'vielleux', 'vieux',
	    'violoneux', 'voix', 'volvox', 'vortex',
	
	    // Nouns ending by -z
	    'allume-gaz', 'assez', 'biogaz', 'cache-nez', 'camping-gaz', 'chez',
	    'chintz', 'ersatz', 'fez', 'free-jazz', 'fritz', 'gaz', 'gin-fizz', 'hertz',
	    'jazz', 'jerez', 'kibboutz', 'kilohertz', 'kolkhoz', 'kronprinz', 'lapiaz',
	    'lez', 'mégahertz', 'merguez', 'nez', 'pince-nez', 'quartz', 'quiz', 'ranz',
	    'raz', 'recez', 'rémiz', 'rez', 'riz', 'ruolz', 'seltz', 'serre-nez'
	  ];
	
	  this.customPluralForms = [];
	  this.customSingularForms = [];
	  this.singularForms = new FormSet();
	  this.pluralForms = new FormSet();
	
	  this.attach = attach;
	
	  this.addIrregular('ail', 'aulx');
	  this.addIrregular('bétail', 'bestiaux');
	  this.addIrregular('bonhomme', 'bonshommes');
	  this.addIrregular('ciel', 'cieux');
	  this.addIrregular('monsieur', 'messieurs');
	  this.addIrregular('mafioso', 'mafiosi');
	  this.addIrregular('œil', 'yeux');
	  this.addIrregular('putto', 'putti');
	  this.addIrregular('targui', 'touareg'); // touareg -> touaregs is also OK.
	
	  // Pluralize
	  this.pluralForms.regularForms.push([/^(av|b|c|carnav|cérémoni|chac|corr|emment|emmenth|festiv|fut|gavi|gra|narv|p|récit|rég|rit|rorqu|st)al$/i, '$1als']);
	  this.pluralForms.regularForms.push([/^(aspir|b|cor|ém|ferm|gemm|soupir|trav|vant|vent|vitr)ail$/i, '$1aux']);
	  this.pluralForms.regularForms.push([/^(bij|caill|ch|gen|hib|jouj|p|rip|chouch)ou$/i, '$1oux']);
	  this.pluralForms.regularForms.push([/^(gr|berimb|don|karb|land|pil|rest|sarr|un)au$/i, '$1aus']);
	  this.pluralForms.regularForms.push([/^(bl|ém|enf|pn)eu$/i, '$1eus']);
	  this.pluralForms.regularForms.push([/(au|eau|eu|œu)$/i, '$1x']);
	  this.pluralForms.regularForms.push([/al$/i, 'aux']);
	  this.pluralForms.regularForms.push([/(s|x)$/i, '$1']);
	  this.pluralForms.regularForms.push([/(.*)$/i, '$1s']);
	
	  // Singularize
	  this.singularForms.regularForms.push([/^(aspir|b|cor|ém|ferm|gemm|soupir|trav|vant|vent|vitr)aux$/i, '$1ail']);
	  this.singularForms.regularForms.push([/^(aloy|b|bouc|boy|burg|conoy|coy|cr|esquim|ét|fabli|flé|flûti|glu|gr|gru|hoy|joy|kérab|matéri|nobli|noy|pré|sen|sén|t|touch|tuss|tuy|v|ypré)aux$/i, '$1au']);
	  this.singularForms.regularForms.push([/^(bij|caill|ch|gen|hib|jouj|p|rip|chouch)oux$/i, '$1ou']);
	  this.singularForms.regularForms.push([/^(bis)?aïeux$/i, '$1aïeul']);
	  this.singularForms.regularForms.push([/^apparaux$/i, 'appareil']); // One way transform, don't put on irregular list.
	  this.singularForms.regularForms.push([/^ciels$/i, 'ciel']);
	  this.singularForms.regularForms.push([/^œils$/i, 'œil']);
	  this.singularForms.regularForms.push([/(eau|eu|œu)x$/i, '$1']);
	  this.singularForms.regularForms.push([/aux$/i, 'al']);
	  this.singularForms.regularForms.push([/(.*)s$/i, '$1']);
	
	  this.pluralize = function(token) {
	    return this.ize(token, this.pluralForms, this.customPluralForms);
	  };
	
	  this.singularize = function(token) {
	    return this.ize(token, this.singularForms, this.customSingularForms);
	  };
	};
	
	util.inherits(NounInflector, SingularPluralInflector);
	
	module.exports = NounInflector;


/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * A noun inflector for Japanese.
	 * Compiled from several sources including:
	 * \@see http://answers.yahoo.com/question/index?qid=20080528201740AASBWy6
	 * \@see http://www.excite.co.jp/dictionary/english_japanese/
	 *
	 * This script assumes input is normalized using normalizer_ja().
	 * Pluralizing Japanese has a very limited interest.
	 * Japanese don't usually distinct plural from singular, so even a word looking
	 * like a singular might actually be a plural.
	 *
	 * Singularization of nouns ending by -tachi or -ra is achieved using a
	 * comprehensive black list, while nouns ending by -domo or -gata use a white
	 * list because there are too many exceptions.
	 *
	 * \@todo Singularize nouns ending by -ら, but there are too many exceptions.
	 * \@todo Expand the list of common plurals ending by -domo and -gata.
	 */
	
	var SingularPluralInflector = __webpack_require__(142),
	    util = __webpack_require__(12),
	    FormSet = __webpack_require__(141);
	
	function attach() {
	  var inflector = this;
	
	  String.prototype.singularizeNoun = function() {
	    return inflector.singularize(this);
	  };
	
	  String.prototype.pluralizeNoun = function() {
	    return inflector.pluralize(this);
	  };
	}
	
	
	
	/**
	 * @constructor
	 */
	var NounInflector = function() {
	  // Ambiguous a.k.a. invariant.
	  this.ambiguous = [
	    'ともだち', '友だち', '友達', '遊び友達', '飲み友達', '酒飲み友達', '茶飲み友達',
	    '学校友達', '女友達', '男友達', '幼友達'
	  ];
	
	  this.customPluralForms = [];
	  this.customSingularForms = [];
	  this.singularForms = new FormSet();
	  this.pluralForms = new FormSet();
	
	  this.attach = attach;
	
	  this.addIrregular('神', '神神');
	  this.addIrregular('人', '人人');
	  this.addIrregular('年', '年年');
	  this.addIrregular('月', '月月');
	  this.addIrregular('日', '日日');
	  this.addIrregular('星', '星星');
	  this.addIrregular('島', '島島');
	  this.addIrregular('我', '我我');
	  this.addIrregular('山', '山山');
	  this.addIrregular('国', '国国');
	  this.addIrregular('所', '所所');
	  this.addIrregular('隅', '隅隅');
	
	  /**
	   * Notes:
	   * -たち exceptions: いたち, おいたち, ついたち, かたち, かおかたち, なりかたち, いでたち, はたち, からたち, なりたち
	   * -達 exceptions: 伊達, 男伊達, 栄達, 上意下達, 熟達, 上達, 下意上達, 先達, 送達, 速達, 即日速達, 書留速達, 調達, 通達, 伝達, 到達, 配達, 牛乳配達, 新聞配達, 無料配達, 四通八達, 発達, 未発達, 御用達, 宮内庁御用達, 練達, 闊達
	   * -等 exceptions: 一等, 下等, 何等, 均等, 勲等, 高等, 三等, 初等, 上等, 親等, 二親等, 数等, 対等, 中等, 同等, 特等, 二等, 品等, 不等, 平等, 悪平等, 男女平等, 不平等, 優等, 劣等
	   */
	
	  // Pluralize
	  this.pluralForms.regularForms.push([/^(.+)$/i, '$1たち']);
	
	  // Singularize
	  this.singularForms.regularForms.push([/^(.+)たち$/i, function(a, mask) {
	    if (['い', 'おい', 'つい', 'か', 'かおか', 'なりか', 'いで', 'は', 'から',
	      'なり'].indexOf(mask) >= 0)
	      return mask + 'たち';
	    return mask;
	  }]);
	  this.singularForms.regularForms.push([/^(.+)達$/i, function(a, mask) {
	    if (['伊', '伊', '栄', '上意下', '熟', '上', '下意上', '先', '送', '速',
	      '即日速', '書留速', '調', '通', '伝', '到', '配', '牛乳配', '新聞配', '無料配',
	      '四通八', '発', '未発', '御用', '宮内庁御用', '練', '闊'].indexOf(mask) >= 0)
	      return mask + '達';
	    return mask;
	  }]);  // Singularize nouns ending by -等, but not exceptions.
	  this.singularForms.regularForms.push([/^(.+)等$/i, function(a, mask) {
	    if (['一', '下', '何', '均', '勲', '高', '三', '初', '親', '二親', '数', '対',
	      '中', '同', '特', '二', '品', '不', '平', '悪平', '男女平', '不平', '優',
	      '劣'].indexOf(mask) >= 0)
	      return mask + '等';
	    return mask;
	  }]);
	  this.singularForms.regularForms.push([/^(人間|わたくし|私|てまえ|手前|野郎|やろう|勇者|がき|ガキ|餓鬼|あくとう|悪党|猫|家来)(共|ども)$/i, '$1']);
	  this.singularForms.regularForms.push([/^(神様|先生|あなた|大名|女中|奥様)(方|がた)$/i, '$1']);
	
	  this.pluralize = function(token) {
	    return this.ize(token, this.pluralForms, this.customPluralForms);
	  };
	
	  this.singularize = function(token) {
	    return this.ize(token, this.singularForms, this.customSingularForms);
	  };
	};
	
	util.inherits(NounInflector, SingularPluralInflector);
	
	module.exports = NounInflector;


/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var SingularPluralInflector = __webpack_require__(142),
	    util = __webpack_require__(12),
	    FormSet = __webpack_require__(141);
	
	function attach() {
	    var inflector = this;
	    
	    String.prototype.singularizeNoun = function() {
	        return inflector.singularize(this);
	    }
	    
	    String.prototype.pluralizeNoun = function() {
	        return inflector.pluralize(this);
	    }
	}
	
	var NounInflector = function() {
	    this.ambiguous = [
	        'bison', 'bream', 'carp', 'chassis', 'cod', 'corps', 'debris', 'deer',
	        'diabetes', 'equipment', 'elk', 'fish', 'flounder', 'gallows', 'graffiti',
	        'headquarters', 'herpes', 'highjinks', 'homework', 'information',
	        'mackerel', 'mews', 'money', 'news', 'rice', 'rabies', 'salmon', 'series',
	        'sheep', 'shrimp', 'species', 'swine', 'trout', 'tuna', 'whiting', 'wildebeest'
	    ];
	    
	    this.customPluralForms = [];
	    this.customSingularForms = [];    
	    this.singularForms = new FormSet();
	    this.pluralForms = new FormSet();
	
	    this.attach = attach;
	
	    this.addIrregular("child", "children");
	    this.addIrregular("man", "men");
	    this.addIrregular("person", "people");
	    this.addIrregular("sex", "sexes");
	    this.addIrregular("mouse", "mice");
	    this.addIrregular("ox", "oxen");
	    this.addIrregular("foot", "feet");
	    this.addIrregular("tooth", "teeth");
	    this.addIrregular("goose", "geese");
	    this.addIrregular("ephemeris", "ephemerides");
	    this.addIrregular("cloth", "clothes");
	    
	    // see if it is possible to unify the creation of both the singular and
	    // plural regexes or maybe even just have one list. with a complete list
	    // of rules it may only be possible for some regular forms, but worth a shot    
	    this.pluralForms.regularForms.push([/y$/i, 'ies']);
	    this.pluralForms.regularForms.push([/ife$/i, 'ives']);
	    this.pluralForms.regularForms.push([/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae']);    
	    this.pluralForms.regularForms.push([/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i']);    
	    this.pluralForms.regularForms.push([/(buffal|tomat|tornad)o$/i, '$1oes']);    
	    this.pluralForms.regularForms.push([/(sis)$/i, 'ses']);
	    this.pluralForms.regularForms.push([/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices']);
	    this.pluralForms.regularForms.push([/sses$/i, 'sses']);
	    this.pluralForms.regularForms.push([/(x|ch|ss|sh|s|z)$/i, '$1es']);
	    this.pluralForms.regularForms.push([/^(?!talis|.*hu)(.*)man$/i, '$1men']);
	    this.pluralForms.regularForms.push([/(.*)/i, '$1s']);
	
	    this.singularForms.regularForms.push([/([^v])ies$/i, '$1y']);
	    this.singularForms.regularForms.push([/ives$/i, 'ife']);
	    this.singularForms.regularForms.push([/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a']);
	    this.singularForms.regularForms.push([/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us']);
	    this.singularForms.regularForms.push([/(buffal|tomat|tornad)(oes)$/i, '$1o']);
	    this.singularForms.regularForms.push([/(analy|naly|synop|parenthe|diagno|the)ses$/i, '$1sis']);
	    this.singularForms.regularForms.push([/(vert|ind|cort)(ices)$/i, '$1ex']);
	    // our pluralizer won''t cause this form of appendix (appendicies)
	    // but we should handle it
	    this.singularForms.regularForms.push([/(matr|append)(ices)$/i, '$1ix']);
	    this.singularForms.regularForms.push([/(x|ch|ss|sh|s|z)es$/i, '$1']);
	    this.singularForms.regularForms.push([/men$/i, 'man']);
	    this.singularForms.regularForms.push([/ss$/i, 'ss']);
	    this.singularForms.regularForms.push([/s$/i, '']);
	    
	    this.pluralize = function (token) {
	        return this.ize(token, this.pluralForms, this.customPluralForms);
	    };
	    
	    this.singularize = function(token) {
	        return this.ize(token, this.singularForms, this.customSingularForms);
	    };
	};
	
	util.inherits(NounInflector, SingularPluralInflector);
	    
	module.exports = NounInflector;


/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var util = __webpack_require__(12),
	    SingularPluralInflector = __webpack_require__(142),
	    FormSet = __webpack_require__(141);
	
	function attach() {
	    var inflector = this;
	    
	    String.prototype.singularizePresentVerb = function() {
	        return inflector.singularize(this);
	    }
	    
	    String.prototype.pluralizePresentVerb = function() {
	        return inflector.pluralize(this);
	    }
	}
	
	var VerbInflector = function() {
	    this.ambiguous = [
	        'will'
	    ];
	    
	    this.attach = attach;
	        
	    this.customPluralForms = [];
	    this.customSingularForms = [];    
	    this.singularForms = new FormSet();
	    this.pluralForms = new FormSet();
	
	    this.addIrregular("am", "are");    
	    this.addIrregular("is", "are");
	    this.addIrregular("was", "were");
	    this.addIrregular("has", "have");
	    
	    this.singularForms.regularForms.push([/ed$/i, 'ed']);
	    this.singularForms.regularForms.push([/ss$/i, 'sses']);
	    this.singularForms.regularForms.push([/x$/i, 'xes']);    
	    this.singularForms.regularForms.push([/(h|z|o)$/i, '$1es']);
	    this.singularForms.regularForms.push([/$zz/i, 'zzes']);
	    this.singularForms.regularForms.push([/([^a|e|i|o|u])y$/i, '$1ies']);
	    this.singularForms.regularForms.push([/$/i, 's']);
	
	    this.pluralForms.regularForms.push([/sses$/i, 'ss']);
	    this.pluralForms.regularForms.push([/xes$/i, 'x']);
	    this.pluralForms.regularForms.push([/([cs])hes$/i, '$1h']);
	    this.pluralForms.regularForms.push([/zzes$/i, 'zz']);
	    this.pluralForms.regularForms.push([/([^h|z|o|i])es$/i, '$1e']);
	    this.pluralForms.regularForms.push([/ies$/i, 'y']);//flies->fly
	    this.pluralForms.regularForms.push([/e?s$/i, '']); 
	};
	
	util.inherits(VerbInflector, SingularPluralInflector);
	
	module.exports = VerbInflector;


/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Rob Ellis, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var _ = __webpack_require__(80)._,
	    Tokenizer = __webpack_require__(97).WordTokenizer,
	    tokenizer = new Tokenizer();
	
	exports.setTokenizer = function(t) {
	    if(!_.isFunction(t.tokenize))
	        throw new Error('Expected a valid Tokenizer');
	    tokenizer = t;
	}
	
	exports.ngrams = function(sequence, n, startSymbol, endSymbol) {
	    return ngrams(sequence, n, startSymbol, endSymbol);
	}
	
	exports.bigrams = function(sequence, startSymbol, endSymbol) {
	    return ngrams(sequence, 2, startSymbol, endSymbol);
	}
	
	exports.trigrams = function(sequence, startSymbol, endSymbol) {
	    return ngrams(sequence, 3, startSymbol, endSymbol);
	}
	
	exports.multrigrams = function(sequence, n, startSymbol, endSymbol) {
	    return ngrams(sequence, n, startSymbol, endSymbol);
	}
	
	var ngrams = function(sequence, n, startSymbol, endSymbol) {
	    var result = [];
	    
	    if (!_(sequence).isArray()) {
	        sequence = tokenizer.tokenize(sequence);
	    }
	
	    var count = _.max([0, sequence.length - n + 1]);
	
	    // Check for left padding    
	    if(typeof startSymbol !== "undefined" && startSymbol !== null) {
	        // Create an array of (n) start symbols
	        var blanks = [];
	        for(var i = 0 ; i < n ; i++) {
	            blanks.push(startSymbol);
	        }
	
	        // Create the left padding
	        for(var p = n - 1 ; p > 0 ; p--) {
	            // Create a tuple of (p) start symbols and (n - p) words
	            result.push(blanks.slice(0, p).concat(sequence.slice(0, n - p)));
	        }
	    }
	
	    // Build the complete ngrams
	    for (var i = 0; i < count; i++) {
	        result.push(sequence.slice(i, i + n));
	    }
	
	    // Check for right padding
	    if(typeof endSymbol !== "undefined" && endSymbol !== null) {
	        // Create an array of (n) end symbols
	        var blanks = [];
	        for(var i = 0 ; i < n ; i++) {
	            blanks.push(endSymbol);
	        }
	
	        // create the right padding
	        for(var p = n - 1 ; p > 0 ; p--) {
	            // Create a tuple of (p) start symbols and (n - p) words
	            result.push(sequence.slice(sequence.length - p, sequence.length).concat(blanks.slice(0, n - p)));
	        }
	    }
	    
	    return result;
	}
	


/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Lee Wenzhu
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var _ = __webpack_require__(80)._;
	
	exports.ngrams = function(sequence, n, startSymbol, endSymbol) {
	    return ngrams(sequence, n, startSymbol, endSymbol);
	}
	
	exports.bigrams = function(sequence, startSymbol, endSymbol) {
	    return ngrams(sequence, 2, startSymbol, endSymbol);
	}
	
	exports.trigrams = function(sequence, startSymbol, endSymbol) {
	    return ngrams(sequence, 3, startSymbol, endSymbol);
	}
	
	var ngrams = function(sequence, n, startSymbol, endSymbol) {
	    var result = [], i;
	    
	    if (!_(sequence).isArray()) {
	        sequence = sequence.split('');
	    }
	
	    var count = _.max([0, sequence.length - n + 1]);
	
	    // Check for left padding    
	    if(typeof startSymbol !== "undefined" && startSymbol !== null) {
	        // Create an array of (n) start symbols
	        var blanks = [];
	        for(i = 0 ; i < n ; i++) {
	            blanks.push(startSymbol);
	        }
	
	        // Create the left padding
	        for(var p = n - 1 ; p > 0 ; p--) {
	            // Create a tuple of (p) start symbols and (n - p) words
	            result.push(blanks.slice(0, p).concat(sequence.slice(0, n - p)));
	        }
	    }
	
	    // Build the complete ngrams
	    for (i = 0; i < count; i++) {
	        result.push(sequence.slice(i, i + n));
	    }
	
	    // Check for right padding
	    if(typeof endSymbol !== "undefined" && endSymbol !== null) {
	        // Create an array of (n) end symbols
	        var blanks = [];
	        for(var i = 0 ; i < n ; i++) {
	            blanks.push(endSymbol);
	        }
	
	        // create the right padding
	        for(var p = n - 1 ; p > 0 ; p--) {
	            // Create a tuple of (p) start symbols and (n - p) words
	            result.push(sequence.slice(sequence.length - p, sequence.length).concat(blanks.slice(0, n - p)));
	        }
	    }
	    
	    return result;
	};
	


/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2013, Kenneth Koch
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * The english normalizer will create a string in which all contractions are expanded to their 
	 * full meaning (i.e. "we'll" becomes "we will"). 
	 *
	 * It currently works off a conversion table and falls back to a set of rules.
	 * Since it is applied first, the conversion table provides an "override" for the rules.
	 **/
	var replacer = __webpack_require__(98).replacer;
	
	var conversionTable = {
		"can't":"can not",
		"won't":"will not",
		"couldn't've":"could not have",
		"i'm":"I am",
		"how'd":"how did"
	};
	
	var rules = [
		{ regex: /([azAZ]*)n\'[tT]/g, output: "$1 not" },
		{ regex: /([azAZ]*)\'[sS]/g, output: "$1 is" },
		{ regex: /([azAZ]*)\'[lL][lL]/g, output: "$1 will" },
		{ regex: /([azAZ]*)\'[rR][eE]/g, output: "$1 are" },
		{ regex: /([azAZ]*)\'[vV][eE]/g, output: "$1 have" },
		{ regex: /([azAZ]*)\'[dD]/g, output: "$1 would" }
	];
	
	// Accepts a list of tokens to expand.
	var normalize_tokens = function(tokens) {
		if(typeof tokens === "string") {
			tokens = [tokens];
		}
	        var results = [];
		var rule_count = rules.length;
		var num_tokens = tokens.length;
	        var i, token, r, rule;
	    
	        for (i = 0; i < num_tokens; i++) {
	            token = tokens[i];
	            // Check the conversion table
	            if (conversionTable[token.toLowerCase()]) {
	                results = results.concat(conversionTable[token.toLowerCase()].split(/\W+/));
	            }
	            
	            // Apply the rules
	            else {
	                var matched = false;
	                for ( r = 0; r < rule_count; r++) {
	                    rule = rules[r];
	                    if (token.match(rule.regex)) {
	                        results = results.concat(token.replace(rule.regex, rule.output).split(/\W+/));
	                        matched = true;
	                        break;
	                    }
	                }
	                if (!matched) {
	                    results.push(token);
	                }
	            }
	        }
	
		return results;
	};
	
	
	
	
	
	// export the relevant stuff.
	exports.normalize_tokens = normalize_tokens;
	
	
	
	


/***/ }),
/* 826 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2014, Kristoffer Brabrand
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * Remove commonly used diacritic marks from a string as these
	 * are not used in a consistent manner. Leave only ä, ö, ü.
	 */
	var remove_diacritics = function(text) {
	    text = text.replace('à', 'a');
	    text = text.replace('À', 'A');
	    text = text.replace('á', 'a');
	    text = text.replace('Á', 'A');
	    text = text.replace('â', 'a');
	    text = text.replace('Â', 'A');
	    text = text.replace('ç', 'c');
	    text = text.replace('Ç', 'C');
	    text = text.replace('è', 'e');
	    text = text.replace('È', 'E');
	    text = text.replace('é', 'e');
	    text = text.replace('É', 'E');
	    text = text.replace('ê', 'e');
	    text = text.replace('Ê', 'E');
	    text = text.replace('î', 'i');
	    text = text.replace('Î', 'I');
	    text = text.replace('ñ', 'n');
	    text = text.replace('Ñ', 'N');
	    text = text.replace('ó', 'o');
	    text = text.replace('Ó', 'O');
	    text = text.replace('ô', 'o');
	    text = text.replace('Ô', 'O');
	    text = text.replace('û', 'u');
	    text = text.replace('Û', 'U');
	    text = text.replace('š', 's');
	    text = text.replace('Š', 'S');
	
	    return text;
	};
	
	// export the relevant stuff.
	exports.remove_diacritics = remove_diacritics;

/***/ }),
/* 827 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2012, Alexy Maslennikov
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * Script to remove diacritics. Original source was taken from
	 * http://lehelk.com/2011/05/06/script-to-remove-diacritics/
	 */
	var diacriticsRemovalMap = [
	    {'base':'A', 'letters':/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},
	    {'base':'AA','letters':/[\uA732]/g},
	    {'base':'AE','letters':/[\u00C6\u01FC\u01E2]/g},
	    {'base':'AO','letters':/[\uA734]/g},
	    {'base':'AU','letters':/[\uA736]/g},
	    {'base':'AV','letters':/[\uA738\uA73A]/g},
	    {'base':'AY','letters':/[\uA73C]/g},
	    {'base':'B', 'letters':/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},
	    {'base':'C', 'letters':/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},
	    {'base':'D', 'letters':/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},
	    {'base':'DZ','letters':/[\u01F1\u01C4]/g},
	    {'base':'Dz','letters':/[\u01F2\u01C5]/g},
	    {'base':'E', 'letters':/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},
	    {'base':'F', 'letters':/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},
	    {'base':'G', 'letters':/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},
	    {'base':'H', 'letters':/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},
	    {'base':'I', 'letters':/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},
	    {'base':'J', 'letters':/[\u004A\u24BF\uFF2A\u0134\u0248]/g},
	    {'base':'K', 'letters':/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},
	    {'base':'L', 'letters':/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},
	    {'base':'LJ','letters':/[\u01C7]/g},
	    {'base':'Lj','letters':/[\u01C8]/g},
	    {'base':'M', 'letters':/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},
	    {'base':'N', 'letters':/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},
	    {'base':'NJ','letters':/[\u01CA]/g},
	    {'base':'Nj','letters':/[\u01CB]/g},
	    {'base':'O', 'letters':/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},
	    {'base':'OE','letters':/[\u0152]/g},
	    {'base':'OI','letters':/[\u01A2]/g},
	    {'base':'OO','letters':/[\uA74E]/g},
	    {'base':'OU','letters':/[\u0222]/g},
	    {'base':'P', 'letters':/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},
	    {'base':'Q', 'letters':/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},
	    {'base':'R', 'letters':/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},
	    {'base':'S', 'letters':/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},
	    {'base':'T', 'letters':/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},
	    {'base':'TZ','letters':/[\uA728]/g},
	    {'base':'U', 'letters':/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},
	    {'base':'V', 'letters':/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},
	    {'base':'VY','letters':/[\uA760]/g},
	    {'base':'W', 'letters':/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},
	    {'base':'X', 'letters':/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},
	    {'base':'Y', 'letters':/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},
	    {'base':'Z', 'letters':/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},
	    {'base':'a', 'letters':/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},
	    {'base':'aa','letters':/[\uA733]/g},
	    {'base':'ae','letters':/[\u00E6\u01FD\u01E3]/g},
	    {'base':'ao','letters':/[\uA735]/g},
	    {'base':'au','letters':/[\uA737]/g},
	    {'base':'av','letters':/[\uA739\uA73B]/g},
	    {'base':'ay','letters':/[\uA73D]/g},
	    {'base':'b', 'letters':/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},
	    {'base':'c', 'letters':/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},
	    {'base':'d', 'letters':/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},
	    {'base':'dz','letters':/[\u01F3\u01C6]/g},
	    {'base':'e', 'letters':/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},
	    {'base':'f', 'letters':/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},
	    {'base':'g', 'letters':/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},
	    {'base':'h', 'letters':/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},
	    {'base':'hv','letters':/[\u0195]/g},
	    {'base':'i', 'letters':/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},
	    {'base':'j', 'letters':/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},
	    {'base':'k', 'letters':/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},
	    {'base':'l', 'letters':/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},
	    {'base':'lj','letters':/[\u01C9]/g},
	    {'base':'m', 'letters':/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},
	    {'base':'n', 'letters':/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},
	    {'base':'nj','letters':/[\u01CC]/g},
	    {'base':'o', 'letters':/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},
	    {'base':'oe','letters':/[\u0153]/g},
	    {'base':'oi','letters':/[\u01A3]/g},
	    {'base':'ou','letters':/[\u0223]/g},
	    {'base':'oo','letters':/[\uA74F]/g},
	    {'base':'p','letters':/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},
	    {'base':'q','letters':/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},
	    {'base':'r','letters':/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},
	    {'base':'s','letters':/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},
	    {'base':'t','letters':/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},
	    {'base':'tz','letters':/[\uA729]/g},
	    {'base':'u','letters':/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},
	    {'base':'v','letters':/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},
	    {'base':'vy','letters':/[\uA761]/g},
	    {'base':'w','letters':/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},
	    {'base':'x','letters':/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},
	    {'base':'y','letters':/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},
	    {'base':'z','letters':/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}
	];
	
	
	module.exports = function(str) {
		var rules = diacriticsRemovalMap;
		for (var i = 0; i < rules.length; i++) {
			str = str.replace(rules[i].letters, rules[i].base);
		}
		return str;
	};


/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, Alexy Maslenninkov
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	/*
	 * Daitch-Mokotoff Soundex Coding
	 *
	 * The Daitch-Mokotoff Soundex System was created by Randy Daitch and Gary
	 * Mokotoff of the Jewish Genealogical Society because they concluded the system
	 * developed by Robert Russell in 1918, and in use today by the U.S. National
	 * Archives and Records Administration (NARA) does not apply well to many Slavic
	 * and Yiddish surnames.  It also includes refinements that are independent of
	 * ethnic considerations.
	 *
	 * The rules for converting surnames into D-M Code numbers are listed below.
	 * They are followed by the coding chart.
	 *
	 * 1. Names are coded to six digits, each digit representing a sound listed in
	 * the coding chart (below).
	 *
	 * 2. When a name lacks enough coded sounds for six digits, use zeros to fill to
	 * six digits. GOLDEN which has only four coded sounds [G-L-D-N] is coded as
	 * 583600.
	 *
	 * 3. The letters A, E, I, O, U, J, and Y are always coded at the beginning of a
	 * name as in Alpert 087930. In any other situation, they are ignored except
	 * when two of them form a pair and the pair comes before a vowel, as in Breuer
	 * 791900 but not Freud.
	 *
	 * 4. The letter H is coded at the beginning of a name, as in Haber 579000, or
	 * preceding a vowel, as in Manheim 665600, otherwise it is not coded.
	 *
	 * 5. When adjacent sounds can combine to form a larger sound, they are given
	 * the code number of the larger sound.  Mintz which is not coded MIN-T-Z but
	 * MIN-TZ 664000.
	 *
	 * 6. When adjacent letters have the same code number, they are coded as one
	 * sound, as in TOPF, which is not coded TO-P-F 377000 but TO-PF 370000.
	 * Exceptions to this rule are the letter combinations MN and NM, whose letters
	 * are coded separately, as in Kleinman, which is coded 586660 not 586600.
	 *
	 * 7. When a surname consists or more than one word, it is coded as if one word,
	 * such as Ben Aron which is treated as Benaron.
	 *
	 * 8. Several letter and letter combinations pose the problem that they may
	 * sound in one of two ways.  The letter and letter combinations CH, CK, C, J,
	 * and RS are assigned two possible code numbers.
	 *
	 * For more info, see http://www.jewishgen.org/InfoFiles/soundex.html
	 */
	
	/**
	 * D-M transformation table in the form of finite-state machine.
	 * Every element of the table having member with zero index represents
	 * legal FSM state; every non-zero key is the transition rule.
	 *
	 * Every legal state comprises tree values chosen according to the position
	 * of the letter combination in the word:
	 *   0: start of a word;
	 *   1: before a vowel;
	 *   2: any other situation.
	 */
	var codes = {
	    A: {
	        0: [0, -1, -1],
	        I: [[0, 1, -1]],
	        J: [[0, 1, -1]],
	        Y: [[0, 1, -1]],
	        U: [[0, 7, -1]]},
	    B: [[7, 7, 7]],
	    C: {
	        0: [5, 5, 5],
	        Z: {0: [4, 4, 4], S: [[4, 4, 4]]},
	        S: {0: [4, 4, 4], Z: [[4, 4, 4]]},
	        K: [[5, 5, 5], [45, 45, 45]],
	        H: {0: [5, 5, 5], S: [[5, 54, 54]]}},
	    D: {
	        0: [3, 3, 3],
	        T: [[3, 3, 3]],
	        Z: {0: [4, 4, 4], H: [[4, 4, 4]], S: [[4, 4, 4]]},
	        S: {0: [4, 4, 4], H: [[4, 4, 4]], Z: [[4, 4, 4]]},
	        R: {S: [[4, 4, 4]], Z: [[4, 4, 4]]}},
	    E: {
	        0: [0, -1, -1],
	        I: [[0, 1, -1]],
	        J: [[0, 1, -1]],
	        Y: [[0, 1, -1]],
	        U: [[1, 1, -1]],
	        W: [[1, 1, -1]]},
	    F: {
	        0: [7, 7, 7],
	        B: [[7, 7, 7]]},
	    G: [[5, 5, 5]],
	    H: [[5, 5, -1]],
	    I: {
	        0: [0, -1, -1],
	        A: [[1, -1, -1]],
	        E: [[1, -1, -1]],
	        O: [[1, -1, -1]],
	        U: [[1, -1, -1]]},
	    J: [[4, 4, 4]],
	    K: {
	        0: [5, 5, 5],
	        H: [[5, 5, 5]],
	        S: [[5, 54, 54]]},
	    L: [[8, 8, 8]],
	    M: {
	        0: [6, 6, 6],
	        N: [[66, 66, 66]]},
	    N: {
	        0: [6, 6, 6],
	        M: [[66, 66, 66]]},
	    O: {
	        0: [0, -1, -1],
	        I: [[0, 1, -1]],
	        J: [[0, 1, -1]],
	        Y: [[0, 1, -1]]},
	    P: {
	        0: [7, 7, 7],
	        F: [[7, 7, 7]],
	        H: [[7, 7, 7]]},
	    Q: [[5, 5, 5]],
	    R: {
	        0: [9, 9, 9],
	        Z: [[94, 94, 94], [94, 94, 94]],
	        S: [[94, 94, 94], [94, 94, 94]]},
	    S: {
	        0: [4, 4, 4],
	        Z: {0: [4, 4, 4], T: [[2, 43, 43]], C: {Z: [[2, 4, 4]], S: [[2, 4, 4]]}, D: [[2, 43, 43]]},
	        D: [[2, 43, 43]],
	        T: {0: [2, 43, 43], R: {Z: [[2, 4, 4]], S: [[2, 4, 4]]}, C: {H: [[2, 4, 4]]}, S: {H: [[2, 4, 4]], C: {H: [[2, 4, 4]]}}},
	        C: {0: [2, 4, 4], H: {0: [4, 4, 4], T: {0: [2, 43, 43], S: {C: {H: [[2, 4, 4]]}, H: [[2, 4, 4]]}, C: {H: [[2, 4, 4]]}}, D: [[2, 43, 43]]}},
	        H: {0: [4, 4, 4], T: {0: [2, 43, 43], C: {H: [[2, 4, 4]]}, S: {H: [[2, 4, 4]]}}, C: {H: [[2, 4, 4]]}, D: [[2, 43, 43]]}},
	    T: {
	        0: [3, 3, 3],
	        C: {0: [4, 4, 4], H: [[4, 4, 4]]},
	        Z: {0: [4, 4, 4], S: [[4, 4, 4]]},
	        S: {0: [4, 4, 4], Z: [[4, 4, 4]], H: [[4, 4, 4]], C: {H: [[4, 4, 4]]}},
	        T: {S: {0: [4, 4, 4], Z: [[4, 4, 4]], C: {H: [[4, 4, 4]]}}, C: {H: [[4, 4, 4]]}, Z: [[4, 4, 4]]},
	        H: [[3, 3, 3]],
	        R: {Z: [[4, 4, 4]], S: [[4, 4, 4]]}},
	    U: {
	        0: [0, -1, -1],
	        E: [[0, -1, -1]],
	        I: [[0, 1, -1]],
	        J: [[0, 1, -1]],
	        Y: [[0, 1, -1]]},
	    V: [[7, 7, 7]],
	    W: [[7, 7, 7]],
	    X: [[5, 54, 54]],
	    Y: [[1, -1, -1]],
	    Z: {
	        0: [4, 4, 4],
	        D: {0: [2, 43, 43], Z: {0: [2, 4, 4], H: [[2, 4, 4]]}},
	        H: {0: [4, 4, 4], D: {0: [2, 43, 43], Z: {H: [[2, 4, 4]]}}},
	        S: {0: [4, 4, 4], H: [[4, 4, 4]], C: {H: [[4, 4, 4]]}}}
	};
	
	
	function process(word, codeLength) {
		codeLength = codeLength || 6;
	    word = word.toUpperCase();
	    var output = '';
	
	    var pos = 0, lastCode = -1;
	    while (pos < word.length) {
	        var substr = word.slice(pos);
	        var rules = findRules(substr);
	
	        var code;
	        if (pos == 0) {
	            // at the beginning of the word
	            code = rules.mapping[0];
	        } else if (substr[rules.length] && findRules(substr[rules.length]).mapping[0] == 0) {
	            // before a vowel
	            code = rules.mapping[1];
	        } else {
	            // any other situation
	            code = rules.mapping[2];
	        }
	
	        if ((code != -1) && (code != lastCode)) output += code;
	        lastCode = code;
	        pos += rules.length;
	
	    }
	
	    return normalizeLength(output, codeLength);
	}
	
	
	function findRules(str) {
	    var state = codes[str[0]];
	    var legalState = state || [[-1,-1,-1]],
	        charsInvolved = 1;
	
	    for (var offs = 1; offs < str.length; offs++) {
	        if (!state || !state[str[offs]]) break;
	
	        state = state[str[offs]];
	        if (state[0]) {
	            legalState = state;
	            charsInvolved = offs + 1;
	        }
	    }
	
	    return {
	        length: charsInvolved,
	        mapping: legalState[0]
	    };
	}
	
	
	/**
	 * Pad right with zeroes or cut excess symbols to fit length
	 */
	function normalizeLength(token, length) {
		length = length || 6;
		if (token.length < length) {
			token += (new Array(length - token.length + 1)).join('0');
		}
	    return token.slice(0, length);
	}
	
	var Phonetic = __webpack_require__(143);
	var soundex = new Phonetic();
	soundex.process = process;
	module.exports = soundex;
	


/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Phonetic = __webpack_require__(143);
	
	var DoubleMetaphone = new Phonetic();
	module.exports = DoubleMetaphone;
	
	function isVowel(c) {
		return c && c.match(/[aeiouy]/i);
	}
	
	function truncate(string, length) {
	    if(string.length >= length)
	        string = string.substring(0, length);
	
	    return string;
	}
	
	function process(token, maxLength) {
		token = token.toUpperCase();
		var primary = '', secondary = '';
	    var pos = 0;
	    maxLength == maxLength || 32;
	
	    function subMatch(startOffset, stopOffset, terms) {
	        return subMatchAbsolute(pos + startOffset, pos + stopOffset, terms);
	    }
	
	    function subMatchAbsolute(startOffset, stopOffset, terms) {
	        return terms.indexOf(token.substring(startOffset, stopOffset)) > -1;
	    }
	
	    function addSecondary(primaryAppendage, secondaryAppendage) {
	    	primary += primaryAppendage;
	    	secondary += secondaryAppendage;
	    }
	
	    function add(primaryAppendage) {
	    	addSecondary(primaryAppendage, primaryAppendage);
	    }
	
	    function addCompressedDouble(c, encoded) {
	    	if(token[pos + 1] == c)
	    		pos++;
	    	add(encoded || c);
	    }
	
	    function handleC() {
	
	        if(pos >= 1 && !isVowel(token[pos - 2])
	                && token[pos - 1] == 'A' && token[pos + 1] == 'H'
	                    && token[pos + 2] != 'I'
	                        || subMatch(-2, 4, ['BACHER', 'MACHER'])) {
	            add('K');
	            pos++;
	        } else if(pos == 0 && token.substring(1, 6) == 'EASAR') {
	            add('S');
	            add('S');
	            add('R');
	            pos += 6;
	        } else if(token.substring(pos + 1, pos + 4) == 'HIA') {
	            add('K');
	            pos++;
	        } else if(token[pos + 1] == 'H') {
	            if(pos > 0 && token.substring(pos + 2, pos + 4) == 'AE') {
	                addSecondary('K', 'X');
	                pos++;
	            } else if(pos == 0
	                        && (subMatch(1, 6, ['HARAC', 'HARIS'])
	                            || subMatch(1, 4, ['HOR', 'HUM', 'HIA', 'HEM']))
	                        && token.substring(pos + 1, pos + 5) != 'HORE') {
	                add('K');
	                pos++;
	            } else {
	                if((subMatchAbsolute(0, 3, ['VAN', 'VON']) || token.substring(0,  3) == 'SCH')
	                    || subMatch(-2, 4, ['ORCHES', 'ARCHIT', 'ORCHID'])
	                    || subMatch(2, 3, ['T', 'S'])
	                    || ((subMatch(-1, 0, ['A', 'O', 'U', 'E']) || pos == 0)
	                        && subMatch(2, 3, ['B', 'F', 'H', 'L', 'M', 'N', 'R', 'V', 'W']))) {
	                    add('K');
	                } else if(pos > 0) {
	
	                    if(token.substring(0, 2) == 'MC') {
	                        add('K');
	                    } else {
	                        addSecondary('X', 'K');
	                    }
	                } else {
	                    add('X');
	                }
	
	                pos++;
	            }
	        } else if(token.substring(pos, pos + 2) == 'CZ'
	                && token.substring(pos - 2, pos + 1) != 'WICZ') {
	            addSecondary('S', 'X');
	            pos++;
	        } else if(token.substring(pos, pos + 3) == 'CIA') {
	            add('X');
	            pos += 2;
	        } else if(token[pos + 1] == 'C' && pos != 1 && token[0] != 'M') {
	            if(['I', 'E', 'H'].indexOf(token[pos + 2]) > -1
	                    && token.substring(pos + 2, pos + 4) != 'HU') {
	                if(pos == 1 && token[pos - 1] == 'A'
	                        || subMatch(-1, 4, ['UCCEE', 'UCCES'])) {
	                    add('KS');
	                } else {
	                   add('X');
	                }
	
	               pos +=2;
	            } else {
	                add('K');
	                pos++;
	            }
	        } else if(['K', 'G', 'Q'].indexOf(token[pos + 1]) > -1) {
	            add('K');
	            pos++;
	        } else if(['E', 'I', 'Y'].indexOf(token[pos + 1]) > -1) {
	            if(subMatch(1, 3, ['IA', 'IE', 'IO'])) {
	                addSecondary('S', 'X');
	            } else {
	                add('S');
	            }
	            pos++;
	        } else {
	            add('K');
	            if(token[pos + 1] == ' ' && ['C', 'Q', 'G'].indexOf(token[pos + 2])) {
	                pos += 2;
	            } else if(['C', 'K', 'Q'].indexOf(token[pos + 1]) > -1
	                    && !subMatch(1, 3, ['CE', 'CI'])) {
	                pos++;
	            }
	        }
	    }
	
	    function handleD() {
	    	if(token[pos + 1] == 'G') {
	    		if(['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1)  {
	    			add('J');
	    			pos += 2;
	    		} else {
	    			add('TK');
	    			pos++;
	    		}
		    } else if(token[pos + 1] == 'T') {
	    		add('T');
		    	pos++;
	    	} else
	    		addCompressedDouble('D', 'T');
	    }
	
	    function handleG() {
	        if(token[pos + 1] == 'H') {
	            if(pos > 0 && !isVowel(token[pos - 1])) {
	                add('K');
	                pos++;
	            } else if(pos == 0) {
	                if(token[pos + 2] == 'I') {
	                    add('J');
	                } else {
	                    add('K');
	                }
	                pos++;
	            } else if(pos > 1
	                && (['B', 'H', 'D'].indexOf(token[pos - 2]) > -1
	                    || ['B', 'H', 'D'].indexOf(token[pos - 3]) > -1
	                    || ['B', 'H'].indexOf(token[pos - 4]) > -1)) {
	                pos++;
	            } else {
	                if(pos > 2
	                        && token[pos - 1] == 'U'
	                        && ['C', 'G', 'L', 'R', 'T'].indexOf(token[pos - 3]) > -1) {
	                    add('F');
	                } else if(token[pos - 1] != 'I') {
	                    add('K');
	                }
	
	                pos++;
	            }
	        } else if(token[pos + 1] == 'N') {
	            if(pos == 1 && startsWithVowel && !slavoGermanic) {
	                addSecondary('KN', 'N');
	            } else {
	                if(token.substring(pos + 2, pos + 4) != 'EY'
	                        && (token[pos + 1] != 'Y'
	                            && !slavoGermanic)) {
	                    addSecondary('N', 'KN');
	                } else
	                    add('KN');
	            }
	            pos++;
	        } else if(token.substring(pos + 1, pos + 3) == 'LI' && !slavoGermanic) {
	            addSecondary('KL', 'L');
	            pos++;
	        } else if(pos == 0 && (token[pos + 1] == 'Y'
	                || subMatch(1, 3, ['ES', 'EP', 'EB', 'EL', 'EY', 'IB', 'IL', 'IN', 'IE', 'EI', 'ER']))) {
	            addSecondary('K', 'J')
	        } else {
	            addCompressedDouble('G', 'K');
	        }
	    }
	
	    function handleH() {
			// keep if starts a word or is surrounded by vowels
			if((pos == 0 || isVowel(token[pos - 1])) && isVowel(token[pos + 1])) {
				add('H');
				pos++;
			}
	    }
	
	    function handleJ() {
	        var jose = (token.substring(pos + 1, pos + 4) == 'OSE');
	
	        if(san || jose) {
	            if((pos == 0 && token[pos + 4] == ' ')
	                    || san) {
	                add('H');
	            } else
	                add('J', 'H');
	        } else {
	            if(pos == 0/* && !jose*/) {
	                addSecondary('J', 'A');
	            } else if(isVowel(token[pos - 1]) && !slavoGermanic
	                    && (token[pos + 1] == 'A' || token[pos + 1] == 'O')) {
	                addSecondary('J', 'H');
	            } else if(pos == token.length - 1) {
	                addSecondary('J', ' ');
	            } else
	                addCompressedDouble('J');
	        }
	    }
	
	    function handleL() {
	    	if(token[pos + 1] == 'L') {
	    		if(pos == token.length - 3 && (
	    					subMatch(-1, 3, ['ILLO', 'ILLA', 'ALLE']) || (
	    						token.substring(pos - 1, pos + 3) == 'ALLE' &&
	    						(subMatch(-2, -1, ['AS', 'OS']) > -1 ||
	    						['A', 'O'].indexOf(token[token.length - 1]) > -1)))) {
	    			addSecondary('L', '');
	    			pos++;
	    			return;
	    		}
	    		pos++;
	    	}
	    	add('L');
	    }
	
	    function handleM() {
	    	addCompressedDouble('M');
	    	if(token[pos - 1] == 'U' && token[pos + 1] == 'B' &&
	    			((pos == token.length - 2  || token.substring(pos + 2, pos + 4) == 'ER')))
	    		pos++;
	    }
	
	    function handleP() {
	    	if(token[pos + 1] == 'H') {
	    		add('F');
	    		pos++;
	    	} else {
	    		addCompressedDouble('P');
	
				if(token[pos + 1] == 'B')
	    			pos++;
	    	}
	    }
	
	    function handleR() {
	    	if(pos == token.length - 1 && !slavoGermanic
	    			&& token.substring(pos - 2, pos) == 'IE'
	    			&& !subMatch(-4, -3, ['ME', 'MA'])) {
	    		addSecondary('', 'R');
	    	} else
		    	addCompressedDouble('R');
	    }
	
	    function handleS() {
	        if(pos == 0 && token.substring(0, 5) == 'SUGAR') {
	            addSecondary('X', 'S');
	        } else if(token[pos + 1] == 'H') {
	            if(subMatch(2, 5, ['EIM', 'OEK', 'OLM', 'OLZ'])) {
	                add('S');
	            } else {
	                add('X');
	            }
	            pos++;
	        } else if(subMatch(1, 3, ['IO', 'IA'])) {
	            if(slavoGermanic) {
	                add('S');
	            } else {
	                addSecondary('S', 'X');
	            }
	            pos++;
	        } else if((pos == 0 && ['M', 'N', 'L', 'W'].indexOf(token[pos + 1]) > -1)
	                || token[pos + 1] == 'Z') {
	            addSecondary('S', 'X');
	            if(token[pos + 1] == 'Z')
	                pos++;
	        } else if(token.substring(pos, pos + 2) == 'SC') {
	            if(token[pos + 2] == 'H') {
	                if(subMatch(3, 5, ['ER', 'EN'])) {
	                    addSecondary('X', 'SK');
	                } else if(subMatch(3, 5, ['OO', 'UY', 'ED', 'EM'])) {
	                    add('SK');
	                } else if(pos == 0 && !isVowel(token[3]) && token[3] != 'W') {
	                    addSecondary('X', 'S');
	                } else {
	                    add('X');
	                }
	            } else if(['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {
	                add('S');
	            } else {
	                add('SK');
	            }
	
	            pos += 2;
	        } else if(pos == token.length - 1
	                && subMatch(-2, 0, ['AI', 'OI'])) {
	            addSecondary('', 'S');
	        } else if(token[pos + 1] != 'L' && (
	                token[pos - 1] != 'A' && token[pos - 1] != 'I')) {
	            addCompressedDouble('S');
	            if(token[pos + 1] == 'Z')
	                pos++;
	        }
	    }
	
	    function handleT() {
	        if(token.substring(pos + 1, pos + 4) == 'ION') {
	            add('XN');
	            pos += 3;
	        } else if(subMatch(1, 3, ['IA', 'CH'])) {
	            add('X');
	            pos += 2;
	        } else if(token[pos + 1] == 'H'
	                || token.substring(1, 2) == 'TH') {
	            if(subMatch(2, 4, ['OM', 'AM'])
	                    || ['VAN ', 'VON '].indexOf(token.substring(0, 4)) > -1
	                    || token.substring(0, 3) == 'SCH') {
	                add('T');
	            } else
	                addSecondary('0', 'T');
	            pos++;
	        } else {
	            addCompressedDouble('T');
	
	            if(token[pos + 1] == 'D')
	                pos++;
	        }
	    }
	
	    function handleX() {
	    	if(pos == 0) {
	    		add('S');
	    	} else if(!(pos == token.length - 1
		    		&& (['IAU', 'EAU', 'IEU'].indexOf(token.substring(pos - 3, pos)) > -1
		    			|| ['AU', 'OU'].indexOf(token.substring(pos - 2, pos)) > -1))) {
	    		add('KS');
	    	}
	    }
	
	    function handleW() {
	        if(pos == 0) {
	            if(token[1] == 'H') {
	                add('A');
	            } else if (isVowel(token[1])) {
	                addSecondary('A', 'F');
	            }
	        } else if((pos == token.length - 1 && isVowel(token[pos - 1])
	                    || subMatch(-1, 4, ['EWSKI', 'EWSKY', 'OWSKI', 'OWSKY'])
	                    || token.substring(0, 3) == 'SCH')) {
	                addSecondary('', 'F');
	                pos++;
	        } else if(['ICZ', 'ITZ'].indexOf(token.substring(pos + 1, pos + 4)) > -1) {
	            addSecondary('TS', 'FX');
	            pos += 3;
	        }
	    }
	
	    function handleZ() {
	        if(token[pos + 1] == 'H') {
	            add('J');
	            pos++;
	        } else if(subMatch(1, 3, ['ZO', 'ZI', 'ZA'])
	                || (slavoGermanic && pos > 0 && token[pos - 1] != 'T')) {
	            addSecondary('S', 'TS');
	            pos++;
	        } else
	            addCompressedDouble('Z', 'S');
	    }
	
	    var san = (token.substring(0, 3) == 'SAN');
	    var startsWithVowel = isVowel(token[0]);
	    var slavoGermanic = token.match(/(W|K|CZ|WITZ)/);
	
	    if(subMatch(0, 2, ['GN', 'KN', 'PN', 'WR', 'PS'])) {
	    	pos++;
	    }
	
	    while(pos < token.length) {
	
	    	switch(token[pos]) {
		        case 'A': case 'E': case 'I': case 'O': case 'U': case 'Y':
		        case 'Ê': case 'É': case 'É': case'À':
			        if(pos == 0)
			        	add('A');
			        break;
			    case 'B':
			    	addCompressedDouble('B', 'P');
			    	break;
	            case 'C':
	                handleC();
	                break;
		        case 'Ç':
		            add("S");
		            break;
		        case 'D':
		        	handleD();
		        	break;
		        case 'F': case 'K': case 'N':
		        	addCompressedDouble(token[pos]);
		        	break;
	            case 'G':
	                handleG();
	                break;
		        case 'H':
		        	handleH();
		        	break;
	            case 'J':
	                handleJ();
	                break;
		        case 'L':
		        	handleL();
		        	break;
		        case 'M':
		        	handleM();
		        	break;
		        case 'Ñ':
		        	add('N');
		        	break;
		        case 'P':
		        	handleP();
		        	break;
		        case 'Q':
		        	addCompressedDouble('Q', 'K');
		        	break;
		        case 'R':
		        	handleR();
		        	break;
	            case 'S':
	                handleS();
	                break;
	            case 'T':
	                handleT();
	                break;
		        case 'V':
		        	addCompressedDouble('V', 'F');
		        	break;
	            case 'W':
	                handleW();
	                break;
		        case 'X':
		        	handleX();
		        	break;
		        case 'Z':
		        	handleZ();
		        	break;
	    	}
	
	        if(primary.length >= maxLength && secondary.length >= maxLength) {
	            break;
	        }
	
	    	pos++;
	    }
	
	    return [truncate(primary, maxLength), truncate(secondary, maxLength)];
	}
	
	function compare(stringA, stringB) {
	    var encodingsA = process(stringA),
	        encodingsB = process(stringB);
	
	    return encodingsA[0] == encodingsB[0] ||
	        encodingsA[1] == encodingsB[1];
	};
	
	DoubleMetaphone.compare = compare
	DoubleMetaphone.process = process;
	DoubleMetaphone.isVowel = isVowel;


/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Phonetic = __webpack_require__(143);
	
	function dedup(token) {
	    return token.replace(/([^c])\1/g, '$1');
	}
	
	function dropInitialLetters(token) {
	    if(token.match(/^(kn|gn|pn|ae|wr)/))
	        return token.substr(1, token.length - 1);
	        
	    return token;
	}
	
	function dropBafterMAtEnd(token) {
	    return token.replace(/mb$/, 'm');
	}
	
	function cTransform(token) {
	    
	
	    token = token.replace(/([^s]|^)(c)(h)/g, '$1x$3').trim();
	
	
	    token = token.replace(/cia/g, 'xia');
	    token = token.replace(/c(i|e|y)/g, 's$1');
	    token = token.replace(/c/g, 'k'); 
	    
	    return token;
	}
	
	function dTransform(token) {
	    token = token.replace(/d(ge|gy|gi)/g, 'j$1');
	    token = token.replace(/d/g, 't');
	    
	    return token;
	}
	
	function dropG(token) {
	    token = token.replace(/gh(^$|[^aeiou])/g, 'h$1');
	    token = token.replace(/g(n|ned)$/g, '$1');    
	    
	    return token;
	}
	
	function transformG(token) {
	    token = token.replace(/gh/g, 'f'); 
	    token = token.replace(/([^g]|^)(g)(i|e|y)/g, '$1j$3');
	    token = token.replace(/gg/g, 'g');
	    token = token.replace(/g/g, 'k');    
	    
	    return token;
	}
	
	function dropH(token) {
	    return token.replace(/([aeiou])h([^aeiou]|$)/g, '$1$2');
	}
	
	function transformCK(token) {
	    return token.replace(/ck/g, 'k');
	}
	function transformPH(token) {
	    return token.replace(/ph/g, 'f');
	}
	
	function transformQ(token) {
	    return token.replace(/q/g, 'k');
	}
	
	function transformS(token) {
	    return token.replace(/s(h|io|ia)/g, 'x$1');
	}
	
	function transformT(token) {
	    token = token.replace(/t(ia|io)/g, 'x$1');
	    token = token.replace(/th/, '0');
	    
	    return token;
	}
	
	function dropT(token) {
	    return token.replace(/tch/g, 'ch');
	}
	
	function transformV(token) {
	    return token.replace(/v/g, 'f');
	}
	
	function transformWH(token) {
	    return token.replace(/^wh/, 'w');
	}
	
	function dropW(token) {
	    return token.replace(/w([^aeiou]|$)/g, '$1');
	}
	
	function transformX(token) {
	    token = token.replace(/^x/, 's');
	    token = token.replace(/x/g, 'ks');
	    return token;
	}
	
	function dropY(token) {
	    return token.replace(/y([^aeiou]|$)/g, '$1');
	}
	
	function transformZ(token) {
	    return token.replace(/z/, 's');
	}
	
	function dropVowels(token) {
	    return token.charAt(0) + token.substr(1, token.length).replace(/[aeiou]/g, '');
	}
	
	var Metaphone = new Phonetic();
	module.exports = Metaphone;
	
	Metaphone.process = function(token, maxLength) {
	    maxLength == maxLength || 32;
	    token = token.toLowerCase();
	    token = dedup(token);
	    token = dropInitialLetters(token);
	    token = dropBafterMAtEnd(token);
	    token = transformCK(token);
	    token = cTransform(token);
	    token = dTransform(token);
	    token = dropG(token);
	    token = transformG(token);
	    token = dropH(token);
	    token = transformPH(token);
	    token = transformQ(token);
	    token = transformS(token);
	    token = transformX(token);    
	    token = transformT(token);
	    token = dropT(token);
	    token = transformV(token);
	    token = transformWH(token);
	    token = dropW(token);
	    token = dropY(token);
	    token = transformZ(token);
	    token = dropVowels(token);
	    
	    token.toUpperCase();
	    if(token.length >= maxLength)
	        token = token.substring(0, maxLength);        
	
	    return token.toUpperCase();
	};
	
	// expose functions for testing    
	Metaphone.dedup = dedup;
	Metaphone.dropInitialLetters = dropInitialLetters;
	Metaphone.dropBafterMAtEnd = dropBafterMAtEnd;
	Metaphone.cTransform = cTransform;
	Metaphone.dTransform = dTransform;
	Metaphone.dropG = dropG;
	Metaphone.transformG = transformG;
	Metaphone.dropH = dropH;
	Metaphone.transformCK = transformCK;
	Metaphone.transformPH = transformPH;
	Metaphone.transformQ = transformQ;
	Metaphone.transformS = transformS;
	Metaphone.transformT = transformT;
	Metaphone.dropT = dropT;
	Metaphone.transformV = transformV;
	Metaphone.transformWH = transformWH;
	Metaphone.dropW = dropW;
	Metaphone.transformX = transformX;
	Metaphone.dropY = dropY;
	Metaphone.transformZ = transformZ;
	Metaphone.dropVowels = dropVowels;


/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Phonetic = __webpack_require__(143);
	
	function transformLipps(token) {
	    return token.replace(/[bfpv]/g, '1');
	}
	
	function transformThroats(token) {
	    return token.replace(/[cgjkqsxz]/g, '2');
	}
	
	function transformToungue(token) {
	    return token.replace(/[dt]/g, '3');
	}
	
	function transformL(token) {
	    return token.replace(/l/g, '4');
	}
	
	function transformHum(token) {
	    return token.replace(/[mn]/g, '5');
	}
	
	function transformR(token) {
	    return token.replace(/r/g, '6');
	}
	
	function condense(token) {
	    return token.replace(/(\d)?\1+/g, '$1');
	}
	
	function padRight0(token) {
	    if(token.length < 4)
	        return token + Array(4 - token.length).join('0');
	    else
	        return token;
	}
	
	function transform(token) {
	    return transformLipps(transformThroats(
	        transformToungue(transformL(transformHum(transformR(token))))));
	}
	
	var SoundEx = new Phonetic();
	module.exports = SoundEx;
	
	SoundEx.process = function(token, maxLength) {
	    token = token.toLowerCase();    
	    var transformed = condense(transform(token.substr(1, token.length - 1))); // anything that isn't a digit goes
	    // deal with duplicate INITIAL consonant SOUNDS
	    transformed = transformed.replace(new RegExp("^" + transform(token.charAt(0))), '');
	    return token.charAt(0).toUpperCase() + padRight0(transformed.replace(/\D/g, '')).substr(0, (maxLength && maxLength - 1) || 3);
	};
	
	// export for tests;
	SoundEx.transformLipps = transformLipps;
	SoundEx.transformThroats = transformThroats;
	SoundEx.transformToungue = transformToungue;
	SoundEx.transformL = transformL;
	SoundEx.transformHum = transformHum;
	SoundEx.transformR = transformR;
	SoundEx.condense = condense;
	SoundEx.padRight0 = padRight0;


/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

	
	var Trie = __webpack_require__(391);
	
	// Probabilistic spellchecker based on http://norvig.com/spell-correct.html
	// The general idea is simple. Given a word, the spellchecker calculates all strings that are some user-defined edit distance away. Of those many candidates, it filters the ones that are not words and then returns an array of possible corrections in order of decreasing probability, based on the edit distance and the candidate's frequency in the input corpus
	// Words that are an edit distance of n away from the mispelled word are considered infinitely more probable than words that are of an edit distance >n
	
	// wordlist is a corpus (an array) from which word probabilities are calculated (so something like /usr/share/dict/words (on OSX) will work okay, but real world text will work better)
	function Spellcheck(wordlist) {
	    this.trie = new Trie();
	    this.trie.addStrings(wordlist);
	    this.word2frequency = {};
	    for(var i in wordlist) {
	        if(!this.word2frequency[wordlist[i]]) {
	            this.word2frequency[wordlist[i]] = 0;
	        }
	        this.word2frequency[wordlist[i]]++;
	    }
	}
	
	Spellcheck.prototype.isCorrect = function(word) {
	    return this.trie.contains(word);
	}
	
	// Returns a list of suggested corrections, from highest to lowest probability 
	// maxDistance is the maximum edit distance 
	// According to Norvig, literature suggests that 80% to 95% of spelling errors are an edit distance of 1 away from the correct word. This is good, because there are roughly 54n+25 strings 1 edit distance away from any given string of length n. So after maxDistance = 2, this becomes very slow.
	Spellcheck.prototype.getCorrections = function(word, maxDistance) {
	    var self = this;
	    if(!maxDistance) maxDistance = 1;
	    var edits = this.editsWithMaxDistance(word, maxDistance);
	    edits = edits.slice(1,edits.length);
	    edits = edits.map(function(editList) {
	       return editList.filter(function(word) { return self.isCorrect(word); })
	                      .map(function(word) { return [word, self.word2frequency[word]]; })
	                      .sort(function(a,b) { return a[1] > b[1] ? -1 : 1; })
	                      .map(function(wordscore) { return wordscore[0]; });
	    });
	    var flattened = [];
	    for(var i in edits) {
	        if(edits[i].length) flattened = flattened.concat(edits[i]);
	    }
	    return flattened.filter(function (v, i, a) { return a.indexOf(v) == i });
	}
	
	// Returns all edits that are 1 edit-distance away from the input word
	Spellcheck.prototype.edits = function(word) {
	    var alphabet = 'abcdefghijklmnopqrstuvwxyz';
	    var edits = [];
	    for(var i=0; i<word.length+1; i++) {
	        if(i>0) edits.push(word.slice(0,i-1)+word.slice(i,word.length)); // deletes
	        if(i>0 && i<word.length+1) edits.push(word.slice(0,i-1) + word.slice(i,i+1) + word.slice(i-1, i) + word.slice(i+1,word.length)); // transposes
	        for(var k=0; k<alphabet.length; k++) {
	            if(i>0) edits.push(word.slice(0,i-1)+alphabet[k]+word.slice(i,word.length)); // replaces
	            edits.push(word.slice(0,i)+alphabet[k]+word.slice(i,word.length)); // inserts
	        }
	    }
	    // Deduplicate edits
	    edits = edits.filter(function (v, i, a) { return a.indexOf(v) == i });
	    return edits;
	}
	
	// Returns all edits that are up to "distance" edit distance away from the input word
	Spellcheck.prototype.editsWithMaxDistance = function(word, distance) { 
	    return this.editsWithMaxDistanceHelper(distance, [[word]]);
	}
	
	Spellcheck.prototype.editsWithMaxDistanceHelper = function(distanceCounter, distance2edits) {
	    if(distanceCounter == 0) return distance2edits;
	    var currentDepth = distance2edits.length-1;
	    var words = distance2edits[currentDepth];
	    var edits = this.edits(words[0]);
	    distance2edits[currentDepth+1] = [];
	    for(var i in words) {
	        distance2edits[currentDepth+1] = distance2edits[currentDepth+1].concat(this.edits(words[i]));
	    }
	    return this.editsWithMaxDistanceHelper(distanceCounter-1, distance2edits);
	}
	
	module.exports = Spellcheck;


/***/ }),
/* 833 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	exports.rules = {
	    "a": [
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "ia", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "a", 
	            "size": "1"
	        }
	    ], 
	    "b": [
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "bb", 
	            "size": "1"
	        }
	    ], 
	    "c": [
	        {
	            "appendage": "s", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ytic", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ic", 
	            "size": "2"
	       }, 
	        {
	            "appendage": "t", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "nc", 
	            "size": "1"
	        }
	    ], 
	    "d": [
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "dd", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ied", 
	            "size": "3"
	        }, 
	        {
	            "appendage": "ss", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ceed", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "eed", 
	            "size": "1"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ed", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "hood", 
	            "size": "4"
	        }
	    ], 
	    "e": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "e", 
	            "size": "1"
	        }
	    ], 
	    "f": [
	        {
	            "appendage": "v", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "lief", 
	            "size": "1"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "if", 
	            "size": "2"
	        }
	    ], 
	    "g": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ing", 
	            "size": "3"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "iag", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ag", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "gg", 
	            "size": "1"
	        }
	    ], 
	    "h": [
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "th", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "ct", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "guish", 
	            "size": "5"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ish", 
	            "size": "3"
	        }
	    ], 
	    "i": [
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "i", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "i", 
	            "size": "1"
	        }
	    ], 
	    "j": [
	        {
	            "appendage": "d", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ij", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "s", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "fuj", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "d", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "uj", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "d", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "oj", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "r", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "hej", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "t", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "verj", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "t", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "misj", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "d", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "nj", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "s", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "j", 
	            "size": "1"
	        }
	    ], 
	    "l": [
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ifiabl", 
	            "size": "6"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "iabl", 
	            "size": "4"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "abl", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ibl", 
	            "size": "3"
	        }, 
	        {
	            "appendage": "l", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "bil", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "cl", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "iful", 
	            "size": "4"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ful", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ul", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ial", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ual", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "al", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ll", 
	            "size": "1"
	        }
	    ], 
	    "m": [
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ium", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "um", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ism", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "mm", 
	            "size": "1"
	        }
	    ], 
	    "n": [
	        {
	            "appendage": "j", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "sion", 
	            "size": "4"
	        }, 
	        {
	            "appendage": "ct", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "xion", 
	            "size": "4"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ion", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ian", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "an", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "een", 
	            "size": "0"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "en", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "nn", 
	            "size": "1"
	        }
	    ], 
	    "p": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ship", 
	            "size": "4"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "pp", 
	            "size": "1"
	        }
	    ], 
	    "r": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "er", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ear", 
	            "size": "0"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ar", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "or", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ur", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "rr", 
	            "size": "1"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "tr", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ier", 
	            "size": "3"
	        }
	    ], 
	    "s": [
	        {
	            "appendage": "y", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ies", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "sis", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "is", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ness", 
	            "size": "4"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ss", 
	            "size": "0"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ous", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": true, 
	            "pattern": "us", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": true, 
	            "pattern": "s", 
	            "size": "1"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "s", 
	            "size": "0"
	        }
	    ], 
	    "t": [
	        {
	            "appendage": "y", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "plicat", 
	            "size": "4"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "at", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ment", 
	            "size": "4"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ent", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ant", 
	            "size": "3"
	        }, 
	        {
	            "appendage": "b", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ript", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "b", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "orpt", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "duct", 
	            "size": "1"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "sumpt", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "iv", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "cept", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "v", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "olut", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "sist", 
	            "size": "0"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ist", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "tt", 
	            "size": "1"
	        }
	    ], 
	    "u": [
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "iqu", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ogu", 
	            "size": "1"
	        }
	    ], 
	    "v": [
	        {
	            "appendage": "j", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "siv", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "eiv", 
	            "size": "0"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "iv", 
	            "size": "2"
	        }
	    ], 
	    "y": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "bly", 
	            "size": "1"
	        }, 
	        {
	            "appendage": "y", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ily", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ply", 
	            "size": "0"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ly", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ogy", 
	            "size": "1"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "phy", 
	            "size": "1"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "omy", 
	            "size": "1"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "opy", 
	            "size": "1"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ity", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ety", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "lty", 
	            "size": "2"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "istry", 
	            "size": "5"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ary", 
	            "size": "3"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ory", 
	            "size": "3"
	        }, 
	        {
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "ify", 
	            "size": "3"
	        }, 
	        {
	            "appendage": "t", 
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "ncy", 
	            "size": "2"
	        }, 
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "acy", 
	            "size": "3"
	        }
	    ], 
	    "z": [
	        {
	            "continuation": true, 
	            "intact": false, 
	            "pattern": "iz", 
	            "size": "2"
	        }, 
	        {
	            "appendage": "s", 
	            "continuation": false, 
	            "intact": false, 
	            "pattern": "yz", 
	            "size": "1"
	        }
	    ]
	};
	


/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(380);
	var ruleTable = __webpack_require__(833).rules;
	
	function acceptable(candidate) {
	    if (candidate.match(/^[aeiou]/))
	        return (candidate.length > 1);
	    else
	        return (candidate.length > 2 && candidate.match(/[aeiouy]/));
	}
	
	// take a token, look up the applicatble rule section and attempt some stemming!
	function applyRuleSection(token, intact) {
	    var section = token.substr( - 1);
	    var rules = ruleTable[section];
	
	    if (rules) {
	        for (var i = 0; i < rules.length; i++) {
	            if ((intact || !rules[i].intact)
	            // only apply intact rules to intact tokens
	            && token.substr(0 - rules[i].pattern.length) == rules[i].pattern) {
	                // hack off only as much as the rule indicates
	                var result = token.substr(0, token.length - rules[i].size);
	
	                // if the rules wants us to apply an appendage do so
	                if (rules[i].appendage)
	                    result += rules[i].appendage;
	
	                if (acceptable(result)) {
	                    token = result;
	
	                    // see what the rules wants to do next
	                    if (rules[i].continuation) {
	                        // this rule thinks there still might be stem left. keep at it.
	                        // since we've applied a change we'll pass false in for intact
	                        return applyRuleSection(result, false);
	                    } else {
	                        // the rule thinks we're done stemming. drop out.
	                        return result;
	                    }
	                }
	            }
	        }
	    }
	
	    return token;
	}
	
	var LancasterStemmer = new Stemmer();
	module.exports = LancasterStemmer;
	
	LancasterStemmer.stem = function(token) {
	    return applyRuleSection(token.toLowerCase(), true);
	}

/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, David Przybilla, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(842);
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	
	function isVowel(letter){
		return (letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' || letter == 'á' || letter == 'é' ||
				letter == 'í' || letter == 'ó' || letter == 'ú');
	};
	
	function getNextVowelPos(token,start){
		length=token.length
				for (var i = start; i < length; i++)
					if (isVowel(token[i])) return i;
				return length;
	};
	
	function getNextConsonantPos(token,start){
		length=token.length
				for (var i = start; i < length; i++)
					if (!isVowel(token[i])) return i;
				return length;
	};
	
	
	function endsin(token, suffix) {
		if (token.length < suffix.length) return false;
		return (token.slice(-suffix.length) == suffix);
	};
	
	function endsinArr(token, suffixes) {
		for(var i=0;i<suffixes.length;i++){
			if (endsin(token, suffixes[i])) return suffixes[i];
		}
		return '';
	};
	
	function removeAccent(token) {
		var str=token.replace(/á/gi,'a');
		str=str.replace(/é/gi,'e');
		str=str.replace(/í/gi,'i');
		str=str.replace(/ó/gi,'o');
		str=str.replace(/ú/gi,'u');
		return str;
	};
	
	// perform full stemming algorithm on a single word
	PorterStemmer.stem = function(token) {
		token = token.toLowerCase();
	
		if (token.length<3){
			return token;
		}
	
		var r1,r2,rv,len= token.length;
		//looking for regions after vowels
	
		for(var i=0; i< token.length-1 && r1==len;i++){
	 		if(isVowel(token[i]) && !isVowel(token[i+1]) ){
	 			r1=i+2;
	 		}
	
		}
	
		for(var i=r1; i< token.length-1 && r2==len;i++){
			if(isVowel(token[i]) && !isVowel(token[i+1])){
				r2=i+2;
			}
		}
	
		if (len > 3) {
				if(isVowel(token[1])) {
					// If the second letter is a consonant, RV is the region after the next following vowel
					rv = getNextVowelPos(token, 2) +1;
				} else if (isVowel(token[0]) && isVowel(token[1])) {
					// or if the first two letters are vowels, RV is the region after the next consonant
					rv = getNextConsonantPos(token, 2) + 1;
				} else {
					//otherwise (consonant-vowel case) RV is the region after the third letter. But RV is the end of the word if these positions cannot be found.
					rv = 3;
				}
			}
	
		var r1_txt = token.substring(r1-1);
		var r2_txt = token.substring(r2-1);
		var rv_txt = token.substring(rv-1);
	
	
		var token_orig = token;
	
		// Step 0: Attached pronoun
		var pronoun_suf = new Array('me', 'se', 'sela', 'selo', 'selas', 'selos', 'la', 'le', 'lo', 'las', 'les', 'los', 'nos');
		var pronoun_suf_pre1 = new Array('éndo', 'ándo', 'ár', 'ér', 'ír');
		var pronoun_suf_pre2 = new Array('ando', 'iendo', 'ar', 'er', 'ir');
		var suf = endsinArr(token, pronoun_suf);
	
	
		if (suf!='') {
	
			var pre_suff = endsinArr(rv_txt.slice(0,-suf.length),pronoun_suf_pre1);
	
			if (pre_suff != '') {
	
					token = removeAccent(token.slice(0,-suf.length));
			} else {
				var pre_suff = endsinArr(rv_txt.slice(0,-suf.length),pronoun_suf_pre2);
	
				if (pre_suff != '' ||
					(endsin(token, 'yendo' ) &&
					(token.slice(-suf.length-6,1) == 'u'))) {
					token = token.slice(0,-suf.length);
				}
			}
		}
	
			if (token != token_orig) {
				r1_txt = token.substring(r1-1);
				r2_txt = token.substring(r2-1);
				rv_txt = token.substring(rv-1);
			}
			var token_after0 = token;
	
			if ((suf = endsinArr(r2_txt, new Array('anza', 'anzas', 'ico', 'ica', 'icos', 'icas', 'ismo', 'ismos', 'able', 'ables', 'ible', 'ibles', 'ista', 'istas', 'oso', 'osa', 'osos', 'osas', 'amiento', 'amientos', 'imiento', 'imientos'))) != '') {
				token = token.slice(0, -suf.length);
			} else if ((suf = endsinArr(r2_txt, new  Array('icadora', 'icador', 'icación', 'icadoras', 'icadores', 'icaciones', 'icante', 'icantes', 'icancia', 'icancias', 'adora', 'ador', 'ación', 'adoras', 'adores', 'aciones', 'ante', 'antes', 'ancia', 'ancias'))) != '') {
				token = token.slice(0,  -suf.length);
			} else if ((suf = endsinArr(r2_txt, new  Array('logía', 'logías'))) != '') {
				token = token.slice(0,  -suf.length)+ 'log';
			} else if ((suf =endsinArr(r2_txt, new  Array('ución', 'uciones'))) != '') {
				token = token.slice(0,  -suf.length) + 'u';
			} else if ((suf = endsinArr(r2_txt, new  Array('encia', 'encias'))) != '') {
				token = token.slice(0,  -suf.length)+ 'ente';
			} else if ((suf = endsinArr(r2_txt, new  Array('ativamente', 'ivamente', 'osamente', 'icamente', 'adamente'))) != '') {
				token = token.slice(0,  -suf.length);
			} else if ((suf = endsinArr(r1_txt, new  Array('amente'))) != '') {
				token = token.slice(0,  -suf.length);
			} else if ((suf = endsinArr(r2_txt, new  Array('antemente', 'ablemente', 'iblemente', 'mente'))) != '') {
				token = token.slice(0,  -suf.length);
			} else if ((suf = endsinArr(r2_txt, new  Array('abilidad', 'abilidades', 'icidad', 'icidades', 'ividad', 'ividades', 'idad', 'idades'))) != '') {
				token = token.slice(0,  -suf.length);
			} else if ((suf = endsinArr(r2_txt, new  Array('ativa', 'ativo', 'ativas', 'ativos', 'iva', 'ivo', 'ivas', 'ivos'))) != '') {
				token = token.slice(0,  -suf.length);
			}
	
			if (token != token_after0) {
				r1_txt = token.substring(r1-1);
				r2_txt = token.substring(r2-1);
				rv_txt = token.substring(rv-1);
			}
			var token_after1 = token;
	
			if (token_after0 == token_after1) {
				// Do step 2a if no ending was removed by step 1.
				if ((suf = endsinArr(rv_txt, new Array('ya', 'ye', 'yan', 'yen', 'yeron', 'yendo', 'yo', 'yó', 'yas', 'yes', 'yais', 'yamos'))) != '' && (token.substring(suf.length-1,1) == 'u')) {
					token = token.slice(0, -suf.length);
				}
	
				if (token != token_after1) {
					r1_txt = token.substring(r1-1);
					r2_txt = token.substring(r2-1);
					rv_txt = token.substring(rv-1);
				}
				var token_after2a = token;
	
				// Do Step 2b if step 2a was done, but failed to remove a suffix.
				if (token_after2a == token_after1) {
	
					if ((suf = endsinArr(rv_txt,new Array('en', 'es', 'éis', 'emos'))) != '') {
						token = token.slice(0,-suf.length);
						if (endsin(token, 'gu')) {
							token = token.slice(0,-1);
						}
					} else if ((suf = endsinArr(rv_txt, new Array('arían', 'arías', 'arán', 'arás', 'aríais', 'aría', 'aréis', 'aríamos', 'aremos', 'ará', 'aré', 'erían', 'erías', 'erán', 'erás', 'eríais', 'ería', 'eréis', 'eríamos', 'eremos', 'erá', 'eré', 'irían', 'irías', 'irán', 'irás', 'iríais', 'iría', 'iréis', 'iríamos', 'iremos', 'irá', 'iré', 'aba', 'ada', 'ida', 'ía', 'ara', 'iera', 'ad', 'ed', 'id', 'ase', 'iese', 'aste', 'iste', 'an', 'aban', 'ían', 'aran', 'ieran', 'asen', 'iesen', 'aron', 'ieron', 'ado', 'ido', 'ando', 'iendo', 'ió', 'ar', 'er', 'ir', 'as', 'abas', 'adas', 'idas', 'ías', 'aras', 'ieras', 'ases', 'ieses', 'ís', 'áis', 'abais', 'íais', 'arais', 'ierais', '  aseis', 'ieseis', 'asteis', 'isteis', 'ados', 'idos', 'amos', 'ábamos', 'íamos', 'imos', 'áramos', 'iéramos', 'iésemos', 'ásemos'))) != '') {
	
						token = token.slice(0, -suf.length);
	
					}
				}
			}
	
			// Always do step 3.
			r1_txt = token.substring(r1-1);
			r2_txt = token.substring(r2-1);
			rv_txt = token.substring(rv-1);
	
			if ((suf = endsinArr(rv_txt, new Array('os', 'a', 'o', 'á', 'í', 'ó'))) != '') {
				token = token.slice(0, -suf.length);
			} else if ((suf = endsinArr(rv_txt ,new Array('e','é'))) != '') {
				token = token.slice(0,-1);
				rv_txt = token.substring(rv-1);
				if (endsin(rv_txt,'u') && endsin(token,'gu')) {
					token = token.slice(0,-1);
				}
			}
	
			return removeAccent(token);
	
	};


/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	Farsi Porter Stemmer by Fardin Koochaki <me@fardinak.com>
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(843);
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	// disabled stemming for Farsi
	// Farsi stemming will be supported soon
	PorterStemmer.stem = function(token) {
	    return token;
	};

/***/ }),
/* 837 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/*
	Copyright (c) 2014, Ismaël Héry
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	/*
	 * Spec for the French Porter Stemmer can be found at:
	 * http://snowball.tartarus.org/algorithms/french/stemmer.html
	 */
	
	var Stemmer = __webpack_require__(381);
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	// Export
	PorterStemmer.stem = stem;
	
	// Exports for test purpose
	PorterStemmer.prelude = prelude;
	PorterStemmer.regions = regions;
	PorterStemmer.endsinArr = endsinArr;
	
	/**
	 * Stem a word thanks to Porter Stemmer rules
	 * @param  {String} token Word to be stemmed
	 * @return {String}       Stemmed word
	 */
	function stem(token) {
	  token = prelude(token.toLowerCase());
	
	  if (token.length == 1)
	    return token;
	
	  var regs = regions(token);
	
	  var r1_txt, r2_txt, rv_txt;
	  r1_txt = token.substring(regs.r1);
	  r2_txt = token.substring(regs.r2);
	  rv_txt = token.substring(regs.rv);
	
	  // Step 1
	  var beforeStep1 = token;
	  var suf, pref2, pref3, letterBefore, letter2Before, i;
	  var doStep2a = false;
	
	  if ((suf = endsinArr(r2_txt, ['ance', 'iqUe', 'isme', 'able', 'iste', 'eux', 'ances', 'iqUes', 'ismes', 'ables', 'istes'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(token, ['icatrice', 'icateur', 'ication', 'icatrices', 'icateurs', 'ications'])) != '') {
	    if (endsinArr(r2_txt, ['icatrice', 'icateur', 'ication', 'icatrices', 'icateurs', 'ications']) != '') {
	      token = token.slice(0, -suf.length); // delete
	    } else {
	      token = token.slice(0, -suf.length) + 'iqU'; // replace by iqU
	    }
	  } else if ((suf = endsinArr(r2_txt, ['atrice', 'ateur', 'ation', 'atrices', 'ateurs', 'ations'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(r2_txt, ['logie', 'logies'])) != '') {
	    token = token.slice(0, -suf.length) + 'log'; // replace with log
	  } else if ((suf = endsinArr(r2_txt, ['usion', 'ution', 'usions', 'utions'])) != '') {
	    token = token.slice(0, -suf.length) + 'u'; // replace with u
	  } else if ((suf = endsinArr(r2_txt, ['ence', 'ences'])) != '') {
	    token = token.slice(0, -suf.length) + 'ent'; // replace with ent
	  }
	  // ement(s)
	  else if ((suf = endsinArr(r1_txt, ['issement', 'issements'])) != '') {
	    if (!isVowel(token[token.length - suf.length - 1])) {
	      token = token.slice(0, -suf.length); // delete
	      r1_txt = token.substring(regs.r1);
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	  } else if ((suf = endsinArr(r2_txt, ['ativement', 'ativements'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(r2_txt, ['ivement', 'ivements'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(token, ['eusement', 'eusements'])) != '') {
	    if ((suf = endsinArr(r2_txt, ['eusement', 'eusements'])) != '')
	      token = token.slice(0, -suf.length); // delete
	    else if ((suf = endsinArr(r1_txt, ['eusement', 'eusements'])) != '')
	      token = token.slice(0, -suf.length) + 'eux'; // replace by eux
	    else if ((suf = endsinArr(rv_txt, ['ement', 'ements'])) != '')
	      token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(r2_txt, ['ablement', 'ablements', 'iqUement', 'iqUements'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(rv_txt, ['ièrement', 'ièrements', 'Ièrement', 'Ièrements'])) != '') {
	    token = token.slice(0, -suf.length) + 'i'; // replace by i
	  } else if ((suf = endsinArr(rv_txt, ['ement', 'ements'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  }
	  // ité(s)
	  else if ((suf = endsinArr(token, ['icité', 'icités'])) != '') {
	    if (endsinArr(r2_txt, ['icité', 'icités']) != '')
	      token = token.slice(0, -suf.length); // delete
	    else
	      token = token.slice(0, -suf.length) + 'iqU'; // replace by iqU
	  } else if ((suf = endsinArr(token, ['abilité', 'abilités'])) != '') {
	    if (endsinArr(r2_txt, ['abilité', 'abilités']) != '')
	      token = token.slice(0, -suf.length); // delete
	    else
	      token = token.slice(0, -suf.length) + 'abl'; // replace by abl
	  } else if ((suf = endsinArr(r2_txt, ['ité', 'ités'])) != '') {
	    token = token.slice(0, -suf.length); // delete if in R2
	  } else if ((suf = endsinArr(token, ['icatif', 'icative', 'icatifs', 'icatives'])) != '') {
	    if ((suf = endsinArr(r2_txt, ['icatif', 'icative', 'icatifs', 'icatives'])) != '') {
	      token = token.slice(0, -suf.length); // delete
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	    if ((suf = endsinArr(r2_txt, ['atif', 'ative', 'atifs', 'atives'])) != '') {
	      token = token.slice(0, -suf.length - 2) + 'iqU'; // replace with iqU
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	  } else if ((suf = endsinArr(r2_txt, ['atif', 'ative', 'atifs', 'atives'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(r2_txt, ['if', 'ive', 'ifs', 'ives'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(token, ['eaux'])) != '') {
	    token = token.slice(0, -suf.length) + 'eau'; // replace by eau
	  } else if ((suf = endsinArr(r1_txt, ['aux'])) != '') {
	    token = token.slice(0, -suf.length) + 'al'; // replace by al
	  } else if ((suf = endsinArr(r2_txt, ['euse', 'euses'])) != '') {
	    token = token.slice(0, -suf.length); // delete
	  } else if ((suf = endsinArr(r1_txt, ['euse', 'euses'])) != '') {
	    token = token.slice(0, -suf.length) + 'eux'; // replace by eux
	  } else if ((suf = endsinArr(rv_txt, ['amment'])) != '') {
	    token = token.slice(0, -suf.length) + 'ant'; // replace by ant
	    doStep2a = true;
	  } else if ((suf = endsinArr(rv_txt, ['emment'])) != '') {
	    token = token.slice(0, -suf.length) + 'ent'; // replace by ent
	    doStep2a = true;
	  } else if ((suf = endsinArr(rv_txt, ['ment', 'ments'])) != '') {
	    // letter before must be a vowel in RV
	    letterBefore = token[token.length - suf.length - 1];
	    if (isVowel(letterBefore) && endsin(rv_txt, letterBefore + suf)) {
	      token = token.slice(0, -suf.length); // delete
	      doStep2a = true;
	    }
	  }
	
	  // re compute regions
	  r1_txt = token.substring(regs.r1);
	  r2_txt = token.substring(regs.r2);
	  rv_txt = token.substring(regs.rv);
	
	  // Step 2a
	  var beforeStep2a = token;
	  var step2aDone = false;
	  if (beforeStep1 === token || doStep2a) {
	    step2aDone = true;
	    if ((suf = endsinArr(rv_txt, ['îmes', 'ît', 'îtes', 'i', 'ie', 'Ie', 'ies', 'ir', 'ira', 'irai', 'iraIent', 'irais', 'irait', 'iras', 'irent', 'irez', 'iriez', 'irions', 'irons', 'iront', 'is', 'issaIent', 'issais', 'issait', 'issant', 'issante', 'issantes', 'issants', 'isse', 'issent', 'isses', 'issez', 'issiez', 'issions', 'issons', 'it'])) != '') {
	      letterBefore = token[token.length - suf.length - 1];
	      if (!isVowel(letterBefore) && endsin(rv_txt, letterBefore + suf))
	        token = token.slice(0, -suf.length); // delete
	    }
	  }
	
	  // Step 2b
	  if (step2aDone && token === beforeStep2a) {
	    if ((suf = endsinArr(rv_txt, ['é', 'ée', 'ées', 'és', 'èrent', 'er', 'era', 'erai', 'eraIent', 'erais', 'erait', 'eras', 'erez', 'eriez', 'erions', 'erons', 'eront', 'ez', 'iez', 'Iez'])) != '') {
	      token = token.slice(0, -suf.length); // delete
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    } else if ((suf = endsinArr(rv_txt, ['ions'])) != '' && endsinArr(r2_txt, ['ions'])) {
	      token = token.slice(0, -suf.length); // delete
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	    // add 'Ie' suffix to pass test for 'évanouie'
	    else if ((suf = endsinArr(rv_txt, ['âmes', 'ât', 'âtes', 'a', 'ai', 'aIent', 'ais', 'ait', 'ant', 'ante', 'antes', 'ants', 'as', 'asse', 'assent', 'asses', 'assiez', 'assions'])) != '') {
	      token = token.slice(0, -suf.length); // delete
	
	      letterBefore = token[token.length - 1];
	      if (letterBefore === 'e' && endsin(rv_txt, 'e' + suf))
	        token = token.slice(0, -1);
	
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	  }
	
	  // Step 3
	  if (!(token === beforeStep1)) {
	    if (token[token.length - 1] === 'Y')
	      token = token.slice(0, -1) + 'i';
	    if (token[token.length - 1] === 'ç')
	      token = token.slice(0, -1) + 'c';
	  } // Step 4
	  else {
	    letterBefore = token[token.length - 1];
	    letter2Before = token[token.length - 2];
	
	    if (letterBefore === 's' && ['a', 'i', 'o', 'u', 'è', 's'].indexOf(letter2Before) == -1) {
	      token = token.slice(0, -1);
	      r1_txt = token.substring(regs.r1);
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	
	    if ((suf = endsinArr(r2_txt, ['ion'])) != '') {
	      letterBefore = token[token.length - suf.length - 1];
	      if (letterBefore === 's' || letterBefore === 't') {
	        token = token.slice(0, -suf.length); // delete
	        r1_txt = token.substring(regs.r1);
	        r2_txt = token.substring(regs.r2);
	        rv_txt = token.substring(regs.rv);
	      }
	    }
	
	    if ((suf = endsinArr(rv_txt, ['ier', 'ière', 'Ier', 'Ière'])) != '') {
	      token = token.slice(0, -suf.length) + 'i'; // replace by i
	      r1_txt = token.substring(regs.r1);
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	    if ((suf = endsinArr(rv_txt, 'e')) != '') {
	      token = token.slice(0, -suf.length); // delete
	      r1_txt = token.substring(regs.r1);
	      r2_txt = token.substring(regs.r2);
	      rv_txt = token.substring(regs.rv);
	    }
	    if ((suf = endsinArr(rv_txt, 'ë')) != '') {
	      if (token.slice(token.length - 3, -1) === 'gu')
	        token = token.slice(0, -suf.length); // delete
	    }
	  }
	
	  // Step 5
	  if ((suf = endsinArr(token, ['enn', 'onn', 'ett', 'ell', 'eill'])) != '') {
	    token = token.slice(0, -1); // delete last letter
	  }
	
	  // Step 6
	  i = token.length - 1;
	  while (i > 0) {
	    if (!isVowel(token[i])) {
	      i--;
	    } else if (i !== token.length - 1 && (token[i] === 'é' || token[i] === 'è')) {
	      token = token.substring(0, i) + 'e' + token.substring(i + 1, token.length);
	      break;
	    } else {
	      break;
	    }
	  }
	
	  return token.toLowerCase();
	
	};
	
	/**
	 * Compute r1, r2, rv regions as required by french porter stemmer algorithm
	 * @param  {String} token Word to compute regions on
	 * @return {Object}       Regions r1, r2, rv as offsets from the begining of the word
	 */
	function regions(token) {
	  var r1, r2, rv, len;
	  var i;
	
	  r1 = r2 = rv = len = token.length;
	
	  // R1 is the region after the first non-vowel following a vowel,
	  for (var i = 0; i < len - 1 && r1 == len; i++) {
	    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
	      r1 = i + 2;
	    }
	  }
	  // Or is the null region at the end of the word if there is no such non-vowel.
	
	  // R2 is the region after the first non-vowel following a vowel in R1
	  for (i = r1; i < len - 1 && r2 == len; i++) {
	    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
	      r2 = i + 2;
	    }
	  }
	  // Or is the null region at the end of the word if there is no such non-vowel.
	
	  // RV region
	  var three = token.slice(0, 3);
	  if (isVowel(token[0]) && isVowel(token[1])) {
	    rv = 3;
	  }
	  if (three === 'par' || three == 'col' || three === 'tap')
	    rv = 3;
	  // the region after the first vowel not at the beginning of the word or null
	  else {
	    for (i = 1; i < len - 1 && rv == len; i++) {
	      if (isVowel(token[i])) {
	        rv = i + 1;
	      }
	    }
	  }
	
	  return {
	    r1: r1,
	    r2: r2,
	    rv: rv
	  };
	};
	
	/**
	 * Pre-process/prepare words as required by french porter stemmer algorithm
	 * @param  {String} token Word to be prepared
	 * @return {String}       Prepared word
	 */
	function prelude(token) {
	  token = token.toLowerCase();
	
	  var result = '';
	  var i = 0;
	
	  // special case for i = 0 to avoid '-1' index
	  if (token[i] === 'y' && isVowel(token[i + 1])) {
	    result += token[i].toUpperCase();
	  } else {
	    result += token[i];
	  }
	
	  for (i = 1; i < token.length; i++) {
	    if ((token[i] === 'u' || token[i] === 'i') && isVowel(token[i - 1]) && isVowel(token[i + 1])) {
	      result += token[i].toUpperCase();
	    } else if (token[i] === 'y' && (isVowel(token[i - 1]) || isVowel(token[i + 1]))) {
	      result += token[i].toUpperCase();
	    } else if (token[i] === 'u' && token[i - 1] === 'q') {
	      result += token[i].toUpperCase();
	    } else {
	      result += token[i];
	    }
	  }
	
	  return result;
	};
	
	/**
	 * Return longest matching suffixes for a token or '' if no suffix match
	 * @param  {String} token    Word to find matching suffix
	 * @param  {Array} suffixes  Array of suffixes to test matching
	 * @return {String}          Longest found matching suffix or ''
	 */
	function endsinArr(token, suffixes) {
	  var i, longest = '';
	  for (i = 0; i < suffixes.length; i++) {
	    if (endsin(token, suffixes[i]) && suffixes[i].length > longest.length)
	      longest = suffixes[i];
	  }
	
	  return longest;
	};
	
	
	function isVowel(letter) {
	  return (letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' || letter == 'y' || letter == 'â' || letter == 'à' || letter == 'ë' ||
	    letter == 'é' || letter == 'ê' || letter == 'è' || letter == 'ï' || letter == 'î' || letter == 'ô' || letter == 'û' || letter == 'ù');
	};
	
	function endsin(token, suffix) {
	  if (token.length < suffix.length) return false;
	  return (token.slice(-suffix.length) == suffix);
	};

/***/ }),
/* 838 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, Leonardo Fenu, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(844);
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	
	function isVowel(letter){
		return (letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' || letter == 'à' ||
				letter == 'è' || letter == 'ì' || letter == 'ò' || letter == 'ù');
	};
	
	function getNextVowelPos(token,start){
		start = start + 1;
		var length = token.length;
		for (var i = start; i < length; i++) {
			if (isVowel(token[i])) {
				return i;
			}
		}
		return length;
	};
	
	function getNextConsonantPos(token,start){
		length=token.length
				for (var i = start; i < length; i++)
					if (!isVowel(token[i])) return i;
				return length;
	};
	
	
	function endsin(token, suffix) {
		if (token.length < suffix.length) return false;
		return (token.slice(-suffix.length) == suffix);
	};
	
	function endsinArr(token, suffixes) {
		for(var i=0;i<suffixes.length;i++){
			if (endsin(token, suffixes[i])) return suffixes[i];
		}
		return '';
	};
	
	function replaceAcute(token) {
		var str=token.replace(/á/gi,'à');
		str=str.replace(/é/gi,'è');
		str=str.replace(/í/gi,'ì');
		str=str.replace(/ó/gi,'ò');
		str=str.replace(/ú/gi,'ù');
		return str;
	};
	
	function vowelMarking(token) {
		function replacer(match, p1, p2, p3){
	  		return p1+p2.toUpperCase()+p3;
		};	
		str=token.replace(/([aeiou])(i|u)([aeiou])/g, replacer);	
		return str;
	}
	
	
	// perform full stemming algorithm on a single word
	PorterStemmer.stem = function(token) {
		
		token = token.toLowerCase();
		token = replaceAcute(token);
		token = token.replace(/qu/g,'qU');	
		token = vowelMarking(token);
		
		if (token.length<3){
			return token;
		}
	
		var r1 = r2 = rv = len = token.length;
		// R1 is the region after the first non-vowel following a vowel, 
		for(var i=0; i < token.length-1 && r1==len;i++){
	 		if(isVowel(token[i]) && !isVowel(token[i+1]) ){
	 			r1=i+2;
	 		}
		}
		// Or is the null region at the end of the word if there is no such non-vowel.  
	
		// R2 is the region after the first non-vowel following a vowel in R1
		for(var i=r1; i< token.length-1 && r2==len;i++){
			if(isVowel(token[i]) && !isVowel(token[i+1])){
				r2=i+2;
			}
		}
	
		// Or is the null region at the end of the word if there is no such non-vowel. 
	
		// If the second letter is a consonant, RV is the region after the next following vowel, 
		
		// RV as follow
	
		if (len > 3) {
			if(!isVowel(token[1])) {
				// If the second letter is a consonant, RV is the region after the next following vowel
				rv = getNextVowelPos(token, 1) +1;
			} else if (isVowel(token[0]) && isVowel(token[1])) { 
				// or if the first two letters are vowels, RV is the region after the next consonant
				rv = getNextConsonantPos(token, 2) + 1;
			} else {
				//otherwise (consonant-vowel case) RV is the region after the third letter. But RV is the end of the word if these positions cannot be found.
				rv = 3;
			}
		}
	
		var r1_txt = token.substring(r1);
		var r2_txt = token.substring(r2);
		var rv_txt = token.substring(rv);
	
		var token_orig = token;
	
		// Step 0: Attached pronoun
	
		var pronoun_suf = new Array('glieli','glielo','gliene','gliela','gliele','sene','tene','cela','cele','celi','celo','cene','vela','vele','veli','velo','vene','mela','mele','meli','melo','mene','tela','tele','teli','telo','gli','ci', 'la','le','li','lo','mi','ne','si','ti','vi');	
		var pronoun_suf_pre1 = new Array('ando','endo');	
		var pronoun_suf_pre2 = new Array('ar', 'er', 'ir');
		var suf = endsinArr(token, pronoun_suf);
	
		if (suf!='') {
			var pre_suff1 = endsinArr(rv_txt.slice(0,-suf.length),pronoun_suf_pre1);
			var pre_suff2 = endsinArr(rv_txt.slice(0,-suf.length),pronoun_suf_pre2);	
			
			if (pre_suff1 != '') {
				token = token.slice(0,-suf.length);
			}
			if (pre_suff2 != '') {
				token = token.slice(0,  -suf.length)+ 'e';
			}
		}
	
		if (token != token_orig) {
			r1_txt = token.substring(r1);
			r2_txt = token.substring(r2);
			rv_txt = token.substring(rv);
		}
	
		var token_after0 = token;
	
		// Step 1:  Standard suffix removal
		
		if ((suf = endsinArr(r2_txt, new  Array('ativamente','abilamente','ivamente','osamente','icamente'))) != '') {
			token = token.slice(0, -suf.length);	// delete
		} else if ((suf = endsinArr(r2_txt, new  Array('icazione','icazioni','icatore','icatori','azione','azioni','atore','atori'))) != '') {
			token = token.slice(0,  -suf.length);	// delete
		} else if ((suf = endsinArr(r2_txt, new  Array('logia','logie'))) != '') {
			token = token.slice(0,  -suf.length)+ 'log'; // replace with log
		} else if ((suf =endsinArr(r2_txt, new  Array('uzione','uzioni','usione','usioni'))) != '') {
			token = token.slice(0,  -suf.length) + 'u'; // replace with u
		} else if ((suf = endsinArr(r2_txt, new  Array('enza','enze'))) != '') {
			token = token.slice(0,  -suf.length)+ 'ente'; // replace with ente
		} else if ((suf = endsinArr(rv_txt, new  Array('amento', 'amenti', 'imento', 'imenti'))) != '') {
			token = token.slice(0,  -suf.length);	// delete
		} else if ((suf = endsinArr(r1_txt, new  Array('amente'))) != '') {
			token = token.slice(0,  -suf.length); // delete
		} else if ((suf = endsinArr(r2_txt, new Array('atrice','atrici','abile','abili','ibile','ibili','mente','ante','anti','anza','anze','iche','ichi','ismo','ismi','ista','iste','isti','istà','istè','istì','ico','ici','ica','ice','oso','osi','osa','ose'))) != '') {
			token = token.slice(0,  -suf.length); // delete
		} else if ((suf = endsinArr(r2_txt, new  Array('abilità', 'icità', 'ività', 'ità'))) != '') {
			token = token.slice(0,  -suf.length); // delete
		} else if ((suf = endsinArr(r2_txt, new  Array('icativa','icativo','icativi','icative','ativa','ativo','ativi','ative','iva','ivo','ivi','ive'))) != '') {
			token = token.slice(0,  -suf.length);
		}
		
		
		if (token != token_after0) {
			r1_txt = token.substring(r1);
			r2_txt = token.substring(r2);
			rv_txt = token.substring(rv);
		}
		
	
		var token_after1 = token;
		
		// Step 2:  Verb suffixes
	
		if (token_after0 == token_after1) {
			if ((suf = endsinArr(rv_txt, new Array('erebbero','irebbero','assero','assimo','eranno','erebbe','eremmo','ereste','eresti','essero','iranno','irebbe','iremmo','ireste','iresti','iscano','iscono','issero','arono','avamo','avano','avate','eremo','erete','erono','evamo','evano','evate','iremo','irete','irono','ivamo','ivano','ivate','ammo','ando','asse','assi','emmo','enda','ende','endi','endo','erai','Yamo','iamo','immo','irai','irei','isca','isce','isci','isco','erei','uti','uto','ita','ite','iti','ito','iva','ivi','ivo','ono','uta','ute','ano','are','ata','ate','ati','ato','ava','avi','avo','erà','ere','erò','ete','eva','evi','evo','irà','ire','irò','ar','ir'))) != '') {
				token = token.slice(0, -suf.length);
			}
		}
	
		
		r1_txt = token.substring(r1);
		r2_txt = token.substring(r2);
		rv_txt = token.substring(rv);
	
		// Always do step 3. 
	
		if ((suf = endsinArr(rv_txt, new Array('ia', 'ie', 'ii', 'io', 'ià', 'iè','iì', 'iò','a','e','i','o','à','è','ì','ò'))) != '') {
			token = token.slice(0, -suf.length);
		} 
	
		r1_txt = token.substring(r1);
		r2_txt = token.substring(r2);
		rv_txt = token.substring(rv);
		
		if ((suf =endsinArr(rv_txt, new  Array('ch'))) != '') {
			token = token.slice(0,  -suf.length) + 'c'; // replace with c
		} else if ((suf =endsinArr(rv_txt, new  Array('gh'))) != '') {
			token = token.slice(0,  -suf.length) + 'g'; // replace with g
		}
	
		
		r1_txt = token.substring(r1);
		r2_txt = token.substring(r2);
		rv_txt = token.substring(rv);
	
		return token.toLowerCase();
	
	};

/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Kristoffer Brabrand
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(846);
	
	// Get the part of the token after the first non-vowel following a vowel
	function getR1(token) {
	    var match = token.match(/[aeiouyæåø]{1}[^aeiouyæåø]([A-Za-z0-9_æøåÆØÅäÄöÖüÜ]+)/);
	
	    if (match) {
	        var preR1Length = match.index + 2;
	
	        if (preR1Length < 3 && preR1Length > 0) {
	            return token.slice(3);
	        } else if (preR1Length >= 3) {
	            return match[1];
	        } else {
	            return token;
	        }
	    }
	
	    return null;
	}
	
	function step1(token) {
	    // Perform step 1a-c
	    var step1aResult = step1a(token),
	        step1bResult = step1b(token),
	        step1cResult = step1c(token);
	
	    // Returne the shortest result string (from 1a, 1b and 1c)
	    if (step1aResult.length < step1bResult.length) {
	        return (step1aResult.length < step1cResult.length) ? step1aResult : step1cResult;
	    } else {
	        return (step1bResult.length < step1cResult.length) ? step1bResult : step1cResult;
	    }
	}
	
	// step 1a as defined for the porter stemmer algorithm.
	function step1a(token) {
	    var r1 = getR1(token);
	
	    if (!r1) {
	        return token;
	    }
	
	    var r1Match = r1.match(/(a|e|ede|ande|ende|ane|ene|hetene|en|heten|ar|er|heter|as|es|edes|endes|enes|hetenes|ens|hetens|ers|ets|et|het|ast)$/);
	
	    if (r1Match) {
	        return token.replace(new RegExp(r1Match[1] + '$'), '');
	    }
	
	    return token;
	}
	
	// step 1b as defined for the porter stemmer algorithm.
	function step1b(token) {
	    var r1 = getR1(token);
	
	    if (!r1) {
	        return token;
	    }
	
	    if (token.match(/(b|c|d|f|g|h|j|l|m|n|o|p|r|t|v|y|z)s$/)) {
	        return token.slice(0, -1);
	    }
	
	    if (token.match(/([^aeiouyæåø]k)s$/)) {
	        return token.slice(0, -1);
	    }
	
	    return token;
	}
	
	// step 1c as defined for the porter stemmer algorithm.
	function step1c(token) {
	    var r1 = getR1(token);
	
	    if (!r1) {
	        return token;
	    }
	
	    if (r1.match(/(erte|ert)$/)) {
	        return token.replace(/(erte|ert)$/, 'er');
	    }
	
	    return token;
	}
	
	// step 2 as defined for the porter stemmer algorithm.
	function step2(token) {
	    var r1 = getR1(token);
	
	    if (!r1) {
	        return token;
	    }
	
	    if (r1.match(/(d|v)t$/)) {
	        return token.slice(0, -1);
	    }
	
	    return token;
	}
	
	// step 3 as defined for the porter stemmer algorithm.
	function step3(token) {
	    var r1 = getR1(token);
	
	    if (!r1)
	        return token;
	
	    var r1Match = r1.match(/(leg|eleg|ig|eig|lig|elig|els|lov|elov|slov|hetslov)$/);
	
	    if (r1Match) {
	        return token.replace(new RegExp(r1Match[1] + '$'), '');
	    }
	
	    return token;
	}
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	// perform full stemming algorithm on a single word
	PorterStemmer.stem = function(token) {
	    return step3(step2(step1(token.toLowerCase()))).toString();
	};
	
	//exports for tests
	PorterStemmer.getR1  = getR1;
	PorterStemmer.step1  = step1;
	PorterStemmer.step1a = step1a;
	PorterStemmer.step1b = step1b;
	PorterStemmer.step1c = step1c;
	PorterStemmer.step2  = step2;
	PorterStemmer.step3  = step3;

/***/ }),
/* 840 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2015, Luís Rodrigues
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	module.exports = (function () {
	  'use strict';
	
	  var Stemmer     = __webpack_require__(848),
	    Token         = __webpack_require__(850),
	    PorterStemmer = new Stemmer();
	
	  /**
	   * Marks a region after the first non-vowel following a vowel, or the
	   * null region at the end of the word if there is no such non-vowel.
	   *
	   * @param {Object} token Token to stem.
	   * @param {Number} start Start index (defaults to 0).
	   * @param {Number}       Region start index.
	   */
	   var markRegionN = function (start) {
	    var index = start || 0,
	      length = this.string.length,
	      region = length;
	
	    while (index < length - 1 && region === length) {
	      if (this.hasVowelAtIndex(index) && !this.hasVowelAtIndex(index + 1)) {
	        region = index + 2;
	      }
	      index++;
	    }
	
	    return region;
	  };
	
	  /**
	   * Mark RV.
	   *
	   * @param  {Object} token Token to stem.
	   * @return {Number}       Region start index.
	   */
	  var markRegionV = function () {
	    var rv = this.string.length;
	
	    if (rv > 3) {
	      if (!this.hasVowelAtIndex(1)) {
	        rv = this.nextVowelIndex(2) + 1;
	
	      } else if (this.hasVowelAtIndex(0) && this.hasVowelAtIndex(1)) {
	        rv = this.nextConsonantIndex(2) + 1;
	
	      } else {
	        rv = 3;
	      }
	    }
	
	    return rv;
	  };
	
	  /**
	   * Prelude.
	   *
	   * Nasalised vowel forms should be treated as a vowel followed by a consonant.
	   *
	   * @param  {String} token Word to stem.
	   * @return {String}       Stemmed token.
	   */
	  function prelude (token) {
	    return token
	    .replaceAll('ã', 'a~')
	    .replaceAll('õ', 'o~');
	  }
	
	  /**
	   * Step 1: Standard suffix removal.
	   *
	   * This step should always be performed.
	   *
	   * @param  {Token} token Word to stem.
	   * @return {Token}       Stemmed token.
	   */
	  function standardSuffix (token) {
	
	    token.replaceSuffixInRegion([
	      'amentos', 'imentos', 'aço~es', 'adoras', 'adores', 'amento', 'imento',
	
	      'aça~o', 'adora', 'ância', 'antes', 'ismos', 'istas',
	
	      'ador', 'ante', 'ável', 'ezas', 'icas', 'icos', 'ismo', 'ista', 'ível',
	      'osas', 'osos',
	
	      'eza', 'ica', 'ico', 'osa', 'oso'
	
	      ], '', 'r2');
	
	    token.replaceSuffixInRegion(['logias', 'logia'], 'log', 'r2');
	
	    // token.replaceSuffixInRegion(['uço~es', 'uça~o'], 'u', 'r1');
	
	    token.replaceSuffixInRegion(['ências', 'ência'], 'ente', 'r2');
	
	    token.replaceSuffixInRegion([
	      'ativamente', 'icamente', 'ivamente', 'osamente', 'adamente'
	    ], '', 'r2');
	
	    token.replaceSuffixInRegion('amente', '', 'r1');
	
	    token.replaceSuffixInRegion([
	      'antemente', 'avelmente', 'ivelmente', 'mente'
	    ], '', 'r2');
	
	    token.replaceSuffixInRegion([
	      'abilidades', 'abilidade',
	      'icidades', 'icidade',
	      'ividades', 'ividade',
	      'idades', 'idade'
	    ], '', 'r2');
	
	    token.replaceSuffixInRegion([
	      'ativas', 'ativos', 'ativa', 'ativo',
	      'ivas', 'ivos', 'iva', 'ivo'
	    ], '', 'r2');
	
	    if (token.hasSuffix('eiras') || token.hasSuffix('eira')) {
	      token.replaceSuffixInRegion(['iras', 'ira'], 'ir', 'rv');
	    }
	
	    return token;
	  }
	
	  /**
	   * Step 2: Verb suffix removal.
	   *
	   * Perform this step if no ending was removed in step 1.
	   *
	   * @param  {Token} token   Token to stem.
	   * @return {Token}         Stemmed token.
	   */
	  function verbSuffix (token) {
	
	    token.replaceSuffixInRegion([
	      'aríamos', 'ássemos', 'eríamos', 'êssemos', 'iríamos', 'íssemos',
	
	      'áramos', 'aremos', 'aríeis', 'ásseis', 'ávamos', 'éramos', 'eremos',
	      'eríeis', 'ésseis', 'íramos', 'iremos', 'iríeis', 'ísseis',
	
	      'ara~o', 'ardes', 'areis', 'áreis', 'ariam', 'arias', 'armos', 'assem',
	      'asses', 'astes', 'áveis', 'era~o', 'erdes', 'ereis', 'éreis', 'eriam',
	      'erias', 'ermos', 'essem', 'esses', 'estes', 'íamos', 'ira~o', 'irdes',
	      'ireis', 'íreis', 'iriam', 'irias', 'irmos', 'issem', 'isses', 'istes',
	
	      'adas', 'ados', 'amos', 'ámos', 'ando', 'aram', 'aras', 'arás', 'arei',
	      'arem', 'ares', 'aria', 'asse', 'aste', 'avam', 'avas', 'emos', 'endo',
	      'eram', 'eras', 'erás', 'erei', 'erem', 'eres', 'eria', 'esse', 'este',
	      'idas', 'idos', 'íeis', 'imos', 'indo', 'iram', 'iras', 'irás', 'irei',
	      'irem', 'ires', 'iria', 'isse', 'iste',
	
	      'ada', 'ado', 'ais', 'ara', 'ará', 'ava', 'eis', 'era', 'erá', 'iam',
	      'ias', 'ida', 'ido', 'ira', 'irá',
	
	      'am', 'ar', 'as', 'ei', 'em', 'er', 'es', 'eu', 'ia', 'ir', 'is', 'iu', 'ou'
	
	    ], '', 'rv');
	
	    return token;
	  }
	
	  /**
	   * Step 3: Delete suffix i.
	   *
	   * Perform this step if the word was changed, in RV and preceded by c.
	   *
	   * @param  {Token} token   Token to stem.
	   * @return {Token}         Stemmed token.
	   */
	  function iPrecededByCSuffix (token) {
	
	    if (token.hasSuffix('ci')) {
	      token.replaceSuffixInRegion('i', '', 'rv');
	    }
	
	    return token;
	  }
	
	  /**
	   * Step 4: Residual suffix.
	   *
	   * Perform this step if steps 1 and 2 did not alter the word.
	   *
	   * @param  {Token} token Token to stem.
	   * @return {Token}       Stemmed token.
	   */
	  function residualSuffix (token) {
	
	    token.replaceSuffixInRegion(['os', 'a', 'i', 'o', 'á', 'í', 'ó'], '', 'rv');
	
	    return token;
	  }
	
	  /**
	   * Step 5: Residual form.
	   *
	   * This step should always be performed.
	   *
	   * @param  {Token} token Token to stem.
	   * @return {Token}       Stemmed token.
	   */
	  function residualForm (token) {
	
	    var tokenString = token.string;
	
	    if (token.hasSuffix('gue') || token.hasSuffix('gué') || token.hasSuffix('guê')) {
	      token.replaceSuffixInRegion(['ue', 'ué', 'uê'], '', 'rv');
	    }
	
	    if (token.hasSuffix('cie') || token.hasSuffix('cié') || token.hasSuffix('ciê')) {
	      token.replaceSuffixInRegion(['ie', 'ié', 'iê'], '', 'rv');
	    }
	
	    if (tokenString === token.string) {
	      token.replaceSuffixInRegion(['e', 'é', 'ê'], '', 'rv');
	    }
	
	    token.replaceSuffixInRegion('ç', 'c', 'all');
	
	    return token;
	  }
	
	  /**
	   * Postlude.
	   *
	   * Turns a~, o~ back into ã, õ.
	   *
	   * @param  {String} token Word to stem.
	   * @return {String}       Stemmed token.
	   */
	  function postlude (token) {
	    return token
	      .replaceAll('a~', 'ã')
	      .replaceAll('o~', 'õ');
	  }
	
	  /**
	   * Stems a word using a Porter stemmer algorithm.
	   *
	   * @param  {String} word Word to stem.
	   * @return {String}      Stemmed token.
	   */
	  PorterStemmer.stem = function (word) {
	    var token = new Token(word.toLowerCase()),
	      original;
	
	    token = prelude(token);
	
	    token.usingVowels('aeiouáéíóúâêôàãõ')
	      .markRegion('all', 0)
	      .markRegion('r1', null, markRegionN)
	      .markRegion('r2', token.regions.r1, markRegionN)
	      .markRegion('rv', null, markRegionV);
	
	    original = token.string;
	
	    // Always do step 1.
	    token = standardSuffix(token);
	
	    // Do step 2 if no ending was removed by step 1.
	    if (token.string === original) {
	      token = verbSuffix(token);
	    }
	
	    // If the last step to be obeyed — either step 1 or 2 — altered the word,
	    // do step 3. Alternatively, if neither steps 1 nor 2 altered the word, do
	    // step 4.
	    token = token.string !== original ? iPrecededByCSuffix(token) : residualSuffix(token);
	
	    // Always do step 5.
	    token = residualForm(token);
	
	    token = postlude(token);
	
	    return token.string;
	  };
	
	  return PorterStemmer;
	})();


/***/ }),
/* 841 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, Polyakov Vladimir, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Stemmer = __webpack_require__(849);
	
	var PorterStemmer = new Stemmer();
	module.exports = PorterStemmer;
	
	function attemptReplacePatterns(token, patterns) {
		var replacement = null;
		var i = 0, isReplaced = false;
		while ((i < patterns.length) && !isReplaced) {
			if (patterns[i][0].test(token)) {
				replacement = token.replace(patterns[i][0], patterns[i][1]);
				isReplaced = true;
			}
			i++;
		}
		return replacement;
	};
	
	function perfectiveGerund(token) {
		var result = attemptReplacePatterns(token, [
				[/[ая]в(ши|шись)$/g, ''],
				[/(ив|ивши|ившись|ывши|ывшись|ыв)$/g, '']
			]);
		return result;
	};
	
	function adjectival(token) {
		var result = adjective(token);
		if (result != null) {
			var pariticipleResult = participle(result);
			result = pariticipleResult ? pariticipleResult : result;
		}
		return result;
	};
	
	function adjective(token) {
		var result = attemptReplacePatterns(token, [
				[/(ее|ие|ые|ое|ими|ыми|ей|ий|ый|ой|ем|им|ым|ом|его|ого|ему|ому|их|ых|ую|юю|ая|яя|ою|ею)$/g, '']
			]);
		return result;
	};
	
	function participle(token) {
		var result = attemptReplacePatterns(token, [
			[/([ая])(ем|нн|вш|ющ|щ)$/g, '$1'],
			[/(ивш|ывш|ующ)$/g, '']
		]);
		return result;
	};
	
	function reflexive(token) {
		var result = attemptReplacePatterns(token, [
			[/(ся|сь)$/g, '']
		]);
		return result;
	};
	
	function verb(token) {
		var result = attemptReplacePatterns(token, [
			[/([ая])(ла|на|ете|йте|ли|й|л|ем|н|ло|но|ет|ют|ны|ть|ешь|нно)$/g, '$1'],
			[/(ила|ыла|ена|ейте|уйте|ите|или|ыли|ей|уй|ил|ыл|им|ым|ен|ило|ыло|ено|ят|ует|ит|ыт|ены|ить|ыть|ишь|ую|ю)$/g, '']
		]);
		return result;
	};
	
	function noun(token) {
		var result = attemptReplacePatterns(token, [
			[/(а|ев|ов|ие|ье|е|иями|ями|ами|еи|ии|и|ией|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я)$/g, '']
		]);
		return result;
	};
	
	function superlative (token) {
		var result = attemptReplacePatterns(token, [
			[/(ейш|ейше)$/g, '']
		]);
		return result;
	};
	
	function derivational (token) {
		var result = attemptReplacePatterns(token, [
			[/(ост|ость)$/g, '']
		]);
		return result;
	};
	
	// perform full stemming algorithm on a single word
	PorterStemmer.stem = function(token) {
		token = token.toLowerCase().replace(/ё/g, 'е');
		var volwesRegexp = /^(.*?[аеиоюяуыиэ])(.*)$/g;
		var RV = volwesRegexp.exec(token);
		if (!RV || RV.length < 3) {
			return token;
		}
		var head = RV[1];
		RV = RV[2];
		volwesRegexp.lastIndex = 0;
		var R2 = volwesRegexp.exec(RV);
		var result = perfectiveGerund(RV);
		if (result === null) {
			var resultReflexive = reflexive(RV) || RV;
			result = adjectival(resultReflexive);
			if (result === null) {
				result = verb(resultReflexive);
				if (result === null) {
					result = noun(resultReflexive);
					if (result === null) {
						result = resultReflexive;
					}
				}
			}
		}
		result = result.replace(/и$/g, '');
		var derivationalResult = result
		if (R2 && R2[2]) {
			derivationalResult = derivational(R2[2]);
			if (derivationalResult != null) {
				derivationalResult = derivational(result);
			} else {
				derivationalResult = result;
			}
		}
	
		var superlativeResult = superlative(derivationalResult) || derivationalResult;
	
		superlativeResult = superlativeResult.replace(/(н)н/g, '$1');
		superlativeResult = superlativeResult.replace(/ь$/g, '');
		return head + superlativeResult;
	};


/***/ }),
/* 842 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, David Przybilla, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(860);
	var Tokenizer = __webpack_require__(382);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	        
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if (keepStops || stopwords.words.indexOf(token) == -1) {
	                var resultToken = token.toLowerCase();
	                if (resultToken.match(new RegExp('[a-záéíóúüñ0-9]+', 'gi'))) {
	                    resultToken = stemmer.stem(resultToken);
	                }
	                stemmedTokens.push(resultToken);
	            }
	        });
	        
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	        
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	Farsi Stemmer by Fardin Koochaki <me@fardinak.com>
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(861);
	var Tokenizer = __webpack_require__(383);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	        
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if(keepStops || stopwords.words.indexOf(token) == -1)
	                stemmedTokens.push(stemmer.stem(token));
	        });
	        
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	        
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 844 */
/***/ (function(module, exports, __webpack_require__) {

	var stopwords = __webpack_require__(863);
	var Tokenizer = __webpack_require__(385);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	        
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if (keepStops || stopwords.words.indexOf(token) == -1) {
	                var resultToken = token.toLowerCase();
	                if (resultToken.match(/[a-zàèìòù0-9]/gi)) {
	                    resultToken = stemmer.stem(resultToken);
	                }
	                stemmedTokens.push(resultToken);
	            }
	        });
	        
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	        
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}

/***/ }),
/* 845 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * A very basic stemmer that performs the following steps:
	 * * Stem katakana.
	 * Inspired by:
	 * http://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseKatakanaStemFilter.java
	 *
	 * This script assumes input is normalized using normalizer_ja().
	 *
	 * \@todo Use .bind() in StemmerJa.prototype.attach().
	 */
	
	var Tokenizer = __webpack_require__(390);
	var stopwords = __webpack_require__(864);
	
	
	
	/**
	 * @constructor
	 */
	var StemmerJa = function() {
	};
	
	
	/**
	 * Tokenize and stem a text.
	 * Stop words are excluded except if the second argument is true.
	 *
	 * @param {string} text
	 * @param {boolean} keepStops Whether to keep stop words from the output or not.
	 * @return {Array.<string>}
	 */
	StemmerJa.prototype.tokenizeAndStem = function(text, keepStops) {
	  var self = this;
	  var stemmedTokens = [];
	  var tokens = new Tokenizer().tokenize(text);
	
	  // This is probably faster than an if at each iteration.
	  if (keepStops) {
	    tokens.forEach(function(token) {
	      var resultToken = token.toLowerCase();
	      resultToken = self.stem(resultToken);
	      stemmedTokens.push(resultToken);
	    });
	  } else {
	    tokens.forEach(function(token) {
	      if (stopwords.indexOf(token) == -1) {
	        var resultToken = token.toLowerCase();
	        resultToken = self.stem(resultToken);
	        stemmedTokens.push(resultToken);
	      }
	    });
	  }
	
	  return stemmedTokens;
	};
	
	
	/**
	 * Stem a term.
	 *
	 * @param {string} token
	 * @return {string}
	 */
	StemmerJa.prototype.stem = function(token) {
	  token = this.stemKatakana(token);
	
	  return token;
	};
	
	
	/**
	 * Remove the final prolonged sound mark on katakana if length is superior to
	 * a threshold.
	 *
	 * @param {string} token A katakana string to stem.
	 * @return {string} A katakana string stemmed.
	 */
	StemmerJa.prototype.stemKatakana = function(token) {
	  var HIRAGANA_KATAKANA_PROLONGED_SOUND_MARK = 'ー';
	  var DEFAULT_MINIMUM_LENGTH = 4;
	
	  if (token.length >= DEFAULT_MINIMUM_LENGTH
	      && token.slice(-1) === HIRAGANA_KATAKANA_PROLONGED_SOUND_MARK
	      && this.isKatakana(token)) {
	    token = token.slice(0, token.length - 1);
	  }
	  return token;
	};
	
	
	/**
	 * Is a string made of fullwidth katakana only?
	 * This implementation is the fastest I know:
	 * http://jsperf.com/string-contain-katakana-only/2
	 *
	 * @param {string} str A string.
	 * @return {boolean} True if the string has katakana only.
	 */
	StemmerJa.prototype.isKatakana = function(str) {
	  return !!str.match(/^[゠-ヿ]+$/);
	};
	
	// Expose an attach function that will patch String with new methods.
	StemmerJa.prototype.attach = function() {
	  var self = this;
	
	  String.prototype.stem = function() {
	    return self.stem(this);
	  };
	
	  String.prototype.tokenizeAndStem = function(keepStops) {
	    return self.tokenizeAndStem(this, keepStops);
	  };
	};
	
	module.exports = StemmerJa;


/***/ }),
/* 846 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Kristoffer Brabrand
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(865);
	var Tokenizer = __webpack_require__(386);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.addStopWord = function(stopWord) {
	        stopwords.words.push(stopWord);
	    };
	
	    stemmer.addStopWords = function(moreStopWords) {
	        stopwords.words = stopwords.words.concat(moreStopWords);
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if(keepStops || stopwords.words.indexOf(token.toLowerCase()) == -1)
	                stemmedTokens.push(stemmer.stem(token));
	        });
	
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 847 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2013, Paweł Łaskarzewski
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(866);
	var Tokenizer = __webpack_require__(387);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if (keepStops || stopwords.words.indexOf(token) == -1) {
	                var resultToken = token.toLowerCase();
	                if (resultToken.match(new RegExp('[a-zążśźęćńół0-9]+', 'gi'))) {
	                    resultToken = stemmer.stem(resultToken);
	                }
	                stemmedTokens.push(resultToken);
	            }
	        });
	
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 848 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Ismaël Héry
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	module.exports = function () {
	  'use strict';
	
	  var Stemmer = this,
	    stopwords = __webpack_require__(867),
	    Tokenizer = __webpack_require__(388);
	
	  Stemmer.stem = function (token) {
	    return token;
	  };
	
	  Stemmer.addStopWords = function (word) {
	    stopwords.words.push(word);
	  };
	
	  Stemmer.addStopWords = function (words) {
	    stopwords.words = stopwords.words.concat(words);
	  };
	
	  Stemmer.tokenizeAndStem = function(text, keepStops) {
	    var stemmedTokens = [];
	
	    var tokenStemmer = function (token) {
	      if (keepStops || stopwords.words.indexOf(token.toLowerCase()) === -1) {
	        stemmedTokens.push(Stemmer.stem(token));
	      }
	    };
	
	    new Tokenizer().tokenize(text).forEach(tokenStemmer);
	
	    return stemmedTokens;
	  };
	
	  Stemmer.attach = function () {
	    String.prototype.stem = function () {
	      return Stemmer.stem(this);
	    };
	
	    String.prototype.tokenizeAndStem = function (keepStops) {
	      return Stemmer.tokenizeAndStem(this, keepStops);
	    };
	  };
	};


/***/ }),
/* 849 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2012, Polyakov Vladimir, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var stopwords = __webpack_require__(868);
	var Tokenizer = __webpack_require__(389);
	
	module.exports = function() {
	    var stemmer = this;
	
	    stemmer.stem = function(token) {
	        return token;
	    };
	
	    stemmer.tokenizeAndStem = function(text, keepStops) {
	        var stemmedTokens = [];
	        
	        new Tokenizer().tokenize(text).forEach(function(token) {
	            if (keepStops || stopwords.words.indexOf(token) == -1) {
	                var resultToken = token.toLowerCase();
	                if (resultToken.match(new RegExp('[а-яё0-9]+', 'gi'))) {
	                    resultToken = stemmer.stem(resultToken);
	                }
	                stemmedTokens.push(resultToken);
	            }
	        });
	        
	        return stemmedTokens;
	    };
	
	    stemmer.attach = function() {
	        String.prototype.stem = function() {
	            return stemmer.stem(this);
	        };
	        
	        String.prototype.tokenizeAndStem = function(keepStops) {
	            return stemmer.tokenizeAndStem(this, keepStops);
	        };
	    };
	}


/***/ }),
/* 850 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2015, Luís Rodrigues
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	module.exports = (function () {
	  'use strict';
	
	  /**
	   * Stemmer token constructor.
	   *
	   * @param {String} string Token string.
	   */
	  var Token = function (string) {
	    this.vowels   = '';
	    this.regions  = {};
	    this.string   = string;
	    this.original = string;
	  }
	
	  /**
	   * Set vowels.
	   *
	   * @param  {String|Array} vowels List of vowels.
	   * @return {Token}               Token instance.
	   */
	  Token.prototype.usingVowels = function (vowels) {
	    this.vowels = vowels;
	    return this;
	  };
	
	  /**
	   * Marks a region by defining its starting index or providing a callback
	   * function that does.
	   *
	   * @param  {String}       region   Region name.
	   * @param  {Array|Number} args     Callback arguments or region start index.
	   * @param  {Function}     callback Function that determines the start index (optional).
	   * @param  {Object}       context  Callback context (optional, defaults to this).
	   * @return {Token}                 Token instance.
	   */
	  Token.prototype.markRegion = function (region, args, callback, context) {
	    if (typeof callback === 'function') {
	      this.regions[region] = callback.apply(context || this, [].concat(args));
	
	    } else if (!isNaN(args)) {
	      this.regions[region] = args;
	    }
	
	    return this;
	  };
	
	  /**
	   * Replaces all instances of a string with another.
	   *
	   * @param  {String} find    String to be replaced.
	   * @param  {String} replace Replacement string.
	   * @return {Token}          Token instance.
	   */
	  Token.prototype.replaceAll = function (find, replace) {
	    this.string = this.string.split(find).join(replace);
	    return this;
	  };
	
	  /**
	   * Replaces the token suffix if in a region.
	   *
	   * @param  {String} suffix  Suffix to replace.
	   * @param  {String} replace Replacement string.
	   * @param  {String} region  Region name.
	   * @return {Token}          Token instance.
	   */
	  Token.prototype.replaceSuffixInRegion = function (suffix, replace, region) {
	    var suffixes = [].concat(suffix);
	    for (var i = 0; i < suffixes.length; i++) {
	      if (this.hasSuffixInRegion(suffixes[i], region)) {
	        this.string = this.string.slice(0, -suffixes[i].length) + replace;
	        return this;
	      }
	    }
	    return this;
	  };
	
	  /**
	   * Determines whether the token has a vowel at the provided index.
	   *
	   * @param  {Integer} index Character index.
	   * @return {Boolean}       Whether the token has a vowel at the provided index.
	   */
	  Token.prototype.hasVowelAtIndex = function (index) {
	    return this.vowels.indexOf(this.string[index]) !== -1;
	  };
	
	  /**
	   * Finds the next vowel in the token.
	   *
	   * @param  {Integer} start Starting index offset.
	   * @return {Integer}       Vowel index, or the end of the string.
	   */
	  Token.prototype.nextVowelIndex = function (start) {
	    var index = (start >= 0 && start < this.string.length) ? start : this.string.length;
	    while (index < this.string.length && !this.hasVowelAtIndex(index)) {
	      index++;
	    }
	    return index;
	  };
	
	  /**
	   * Finds the next consonant in the token.
	   *
	   * @param  {Integer} start Starting index offset.
	   * @return {Integer}       Consonant index, or the end of the string.
	   */
	  Token.prototype.nextConsonantIndex = function (start) {
	    var index = (start >= 0 && start < this.string.length) ? start : this.string.length;
	    while (index < this.string.length && this.hasVowelAtIndex(index)) {
	      index++;
	    }
	    return index;
	  };
	
	  /**
	   * Determines whether the token has the provided suffix.
	   * @param  {String}  suffix Suffix to match.
	   * @return {Boolean}        Whether the token string ends in suffix.
	   */
	  Token.prototype.hasSuffix = function (suffix) {
	    return this.string.slice(-suffix.length) === suffix;
	  };
	
	  /**
	   * Determines whether the token has the provided suffix within the specified
	   * region.
	   *
	   * @param  {String}  suffix Suffix to match.
	   * @param  {String}  region Region name.
	   * @return {Boolean}        Whether the token string ends in suffix.
	   */
	  Token.prototype.hasSuffixInRegion = function (suffix, region) {
	    var regionStart = this.regions[region] || 0,
	      suffixStart   = this.string.length - suffix.length;
	    return this.hasSuffix(suffix) && suffixStart >= regionStart;
	  };
	
	  return Token;
	})();


/***/ }),
/* 851 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	Copyright (c) 2011, Rob Ellis, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var _ = __webpack_require__(80)._,
	    Tokenizer = __webpack_require__(97).WordTokenizer,
	    tokenizer = new Tokenizer(),
	    stopwords = __webpack_require__(144).words,
	    fs = __webpack_require__(37);
	
	function buildDocument(text, key) {
	    var stopOut;
	
	    if(typeof text === 'string') {
	        text = tokenizer.tokenize(text.toLowerCase());
	        stopOut = true;
	    } else if(!_.isArray(text)) {
	        stopOut = false;
	        return text;
	    }
	
	    return text.reduce(function(document, term) {
	        // next line solves https://github.com/NaturalNode/natural/issues/119
	        if(typeof document[term] === 'function') document[term] = 0;
	        if(!stopOut || stopwords.indexOf(term) < 0)
	            document[term] = (document[term] ? document[term] + 1 : 1);
	        return document;
	    }, {__key: key});
	}
	
	function tf(term, document) {
	    return document[term] ? document[term]: 0;
	}
	
	function documentHasTerm(term, document) {
	    return document[term] && document[term] > 0;
	}
	
	function TfIdf(deserialized) {
	    if(deserialized)
	        this.documents = deserialized.documents;
	    else
	        this.documents = [];
	
	    this._idfCache = {};
	}
	
	// backwards compatibility for < node 0.10
	function isEncoding(encoding) {
	    if (typeof Buffer.isEncoding !== 'undefined')
	        return Buffer.isEncoding(encoding);
	    switch ((encoding + '').toLowerCase()) {
	        case 'hex':
	        case 'utf8':
	        case 'utf-8':
	        case 'ascii':
	        case 'binary':
	        case 'base64':
	        case 'ucs2':
	        case 'ucs-2':
	        case 'utf16le':
	        case 'utf-16le':
	        case 'raw':
	            return true;
	    }
	    return false;
	}
	
	module.exports = TfIdf;
	TfIdf.tf = tf;
	
	TfIdf.prototype.idf = function(term, force) {
	
	    // Lookup the term in the New term-IDF caching,
	    // this will cut search times down exponentially on large document sets.
	    if(this._idfCache[term] && this._idfCache.hasOwnProperty(term) && force !== true)
	        return this._idfCache[term];
	
	    var docsWithTerm = this.documents.reduce(function(count, document) {
	        return count + (documentHasTerm(term, document) ? 1 : 0);
	    }, 0);
	
	    var idf = 1 + Math.log((this.documents.length) / ( 1 + docsWithTerm ));
	
	    // Add the idf to the term cache and return it
	    this._idfCache[term] = idf;
	    return idf;
	};
	
	// If restoreCache is set to true, all terms idf scores currently cached will be recomputed.
	// Otherwise, the cache will just be wiped clean
	TfIdf.prototype.addDocument = function(document, key, restoreCache) {
	    this.documents.push(buildDocument(document, key));
	
	    // make sure the cache is invalidated when new documents arrive
	    if(restoreCache === true) {
	        for(var term in this._idfCache) {
	            // invoking idf with the force option set will
	            // force a recomputation of the idf, and it will
	            // automatically refresh the cache value.
	            this.idf(term, true);
	        }
	    }   else {
	        this._idfCache = {};
	    }
	};
	
	// If restoreCache is set to true, all terms idf scores currently cached will be recomputed.
	// Otherwise, the cache will just be wiped clean
	TfIdf.prototype.addFileSync = function(path, encoding, key, restoreCache) {
	    if(!encoding)
	        encoding = 'utf8';
	    if(!isEncoding(encoding))
	        throw new Error('Invalid encoding: ' + encoding);
	
	    var document = fs.readFileSync(path, encoding);
	    this.documents.push(buildDocument(document, key));
	
	    // make sure the cache is invalidated when new documents arrive
	    if(restoreCache === true) {
	        for(var term in this._idfCache) {
	            // invoking idf with the force option set will
	            // force a recomputation of the idf, and it will
	            // automatically refresh the cache value.
	            this.idf(term, true);
	        }
	    }
	    else {
	        this._idfCache = {};
	    }
	};
	
	TfIdf.prototype.tfidf = function(terms, d) {
	    var _this = this;
	
	    if(!_.isArray(terms))
	        terms = tokenizer.tokenize(terms.toString().toLowerCase());
	
	    return terms.reduce(function(value, term) {
	        var idf = _this.idf(term);
	        idf = idf === Infinity ? 0 : idf;
	        return value + (tf(term, _this.documents[d]) * idf);
	    }, 0.0);
	};
	
	TfIdf.prototype.listTerms = function(d) {
	    var terms = [];
	
	    for(var term in this.documents[d]) {
	        if(term != '__key')
	           terms.push({term: term, tfidf: this.tfidf(term, d)});
	    }
	
	    return terms.sort(function(x, y) { return y.tfidf - x.tfidf; });
	};
	
	TfIdf.prototype.tfidfs = function(terms, callback) {
	    var tfidfs = new Array(this.documents.length);
	
	    for(var i = 0; i < this.documents.length; i++) {
	        tfidfs[i] = this.tfidf(terms, i);
	
	        if(callback)
	            callback(i, tfidfs[i], this.documents[i].__key);
	    }
	
	    return tfidfs;
	};
	
	// Define a tokenizer other than the default "WordTokenizer"
	TfIdf.prototype.setTokenizer = function(t) {
	    if(!_.isFunction(t.tokenize))
	        throw new Error('Expected a valid Tokenizer');
	    tokenizer = t;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ }),
/* 852 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel, Martijn de Boer
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var AggressiveTokenizer = function() {
	    Tokenizer.call(this);
	};
	util.inherits(AggressiveTokenizer, Tokenizer);
	
	module.exports = AggressiveTokenizer;
	
	AggressiveTokenizer.prototype.tokenize = function(text) {
	    // break a string up into an array of tokens by anything non-word
	    return this.trim(text.split(/[^a-zA-Z0-9_']+/));
	};


/***/ }),
/* 853 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12);
	
	var SentenceTokenizer = function() {
	    Tokenizer.call(this);
	};
	util.inherits(SentenceTokenizer, Tokenizer);
	
	SentenceTokenizer.prototype.tokenize = function(text) {
	    // break string up in to sentences based on punctation and quotation marks
	    var tokens = text.match(/([\"\'\‘\“\'\"\[\(\{\⟨][^\.\?\!]+[\.\?\!][\"\'\’\”\'\"\]\)\}\⟩]|[^\.\?\!]+[\.\?\!])\s?/g);
	
	    // remove unecessary white space
	    tokens = tokens.map(Function.prototype.call, String.prototype.trim);
	
	    return this.trim(tokens);
	};
	
	module.exports = SentenceTokenizer;


/***/ }),
/* 854 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2011, Chris Umbel, Alex Langberg
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	var Tokenizer = __webpack_require__(22),
	  util = __webpack_require__(12),
	  CaseTokenizer = function() {
	    Tokenizer.call(this);
	  };
	
	util.inherits(CaseTokenizer, Tokenizer);
	
	CaseTokenizer.prototype.attach = function() {
	  var self = this;
	
	  String.prototype.tokenize = function(preserveApostrophe) {
	    return self.tokenize(this, preserveApostrophe);
	  }
	};
	
	// Idea from Seagull: http://stackoverflow.com/a/26482650
	CaseTokenizer.prototype.tokenize = function(text, preserveApostrophe) {
	  var whitelist = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
	  var lower = text.toLowerCase();
	  var upper = text.toUpperCase();
	  var result = '';
	  var i;
	
	  for (i = 0; i < lower.length; ++i) {
	    if (lower[i] !== upper[i] || whitelist.indexOf(lower[i]) > -1 || (text[i] === '\'' && preserveApostrophe)) {
	      result += text[i];
	    } else {
	      result += ' ';
	    }
	  }
	
	  return this.trim(result.replace(/\s+/g, ' ').split(' '));
	};
	
	module.exports = CaseTokenizer;


/***/ }),
/* 855 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Rob Ellis, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var Tokenizer = __webpack_require__(22),
	    util = __webpack_require__(12),
	    _ = __webpack_require__(80)._;
	
	var contractions2 = [
	    /(.)('ll|'re|'ve|n't|'s|'m|'d)\b/ig,
	    /\b(can)(not)\b/ig,
	    /\b(D)('ye)\b/ig,
	    /\b(Gim)(me)\b/ig,
	    /\b(Gon)(na)\b/ig,
	    /\b(Got)(ta)\b/ig,
	    /\b(Lem)(me)\b/ig,
	    /\b(Mor)('n)\b/ig,
	    /\b(T)(is)\b/ig,
	    /\b(T)(was)\b/ig,
	    /\b(Wan)(na)\b/ig];
	
	var contractions3 = [
	    /\b(Whad)(dd)(ya)\b/ig,
	    /\b(Wha)(t)(cha)\b/ig
	];
	
	var TreebankWordTokenizer = function() {
	};
	
	util.inherits(TreebankWordTokenizer, Tokenizer);
	
	TreebankWordTokenizer.prototype.tokenize = function(text) {
	    contractions2.forEach(function(regexp) {
		text = text.replace(regexp,"$1 $2");
	    });
	    
	    contractions3.forEach(function(regexp) {
		text = text.replace(regexp,"$1 $2 $3");
	    });
	
	    // most punctuation
	    text = text.replace(/([^\w\.\'\-\/\+\<\>,&])/g, " $1 ");
	
	    // commas if followed by space
	    text = text.replace(/(,\s)/g, " $1");
	
	    // single quotes if followed by a space
	    text = text.replace(/('\s)/g, " $1");
	
	    // periods before newline or end of string
	    text = text.replace(/\. *(\n|$)/g, " . ");
	    
	    return  _.without(text.split(/\s+/), '');	
	};
	
	module.exports = TreebankWordTokenizer;


/***/ }),
/* 856 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2012, Guillaume Marty
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	/**
	 * A transliteration of Katakana & Hiragana to roman characters using the
	 * modified Hepburn system.
	 * Rules based on CLDR transform rule set `Katakana-Latin-BGN.xml` but with
	 * several bugs fixed:
	 *  * Missing ū
	 *  * Missing tsu + voiced kana
	 *  * typos on my~ transliterations
	 *  * support for long vowel sign
	 *  * support for final small tsu
	 *  * support for u + small vowels
	 *  * support for su/shi/ji + small vowels
	 *  * support for tchi/tsu/te/to + small vowels
	 *  * support for fu + small vowels
	 *  * support for katakana middle dot
	 *
	 * \@todo Take iteration marks into account.
	 */
	
	var replacer = __webpack_require__(98).replacer;
	
	var transliterationTable1 = {
	  'ウァ': 'wa', // KATAKANA LETTER U + SMALL A
	  'ウィ': 'wi', // KATAKANA LETTER U + SMALL I
	  'ウェ': 'we', // KATAKANA LETTER U + SMALL E
	  'ウォ': 'wo', // KATAKANA LETTER U + SMALL O
	  'ウー': 'ū', // KATAKANA LETTER VU + PROLONGED SOUND MARK
	
	  'ヴァ': 'va', // KATAKANA LETTER VU + SMALL A
	  'ヴィ': 'vi', // KATAKANA LETTER VU + SMALL I
	  'ヴェ': 've', // KATAKANA LETTER VU + SMALL E
	  'ヴォ': 'vo', // KATAKANA LETTER VU + SMALL O
	  'ヴュ': 'vyu', // KATAKANA LETTER VU + SMALL YU
	
	  'うぁ': 'wa', // HIRAGANA LETTER U + SMALL A
	  'うぃ': 'wi', // HIRAGANA LETTER U + SMALL I
	  'うぇ': 'we', // HIRAGANA LETTER U + SMALL E
	  'うぉ': 'wo', // HIRAGANA LETTER U + SMALL O
	  'うー': 'ū', // HIRAGANA LETTER VU + PROLONGED SOUND MARK
	
	  'ゔぁ': 'va', // HIRAGANA LETTER VU + SMALL A
	  'ゔぃ': 'vi', // HIRAGANA LETTER VU + SMALL I
	  'ゔぇ': 've', // HIRAGANA LETTER VU + SMALL E
	  'ゔぉ': 'vo', // HIRAGANA LETTER VU + SMALL O
	  'ゔゅ': 'vyu' // HIRAGANA LETTER VU + SMALL YU
	};
	
	var transliterationTable2 = {
	  'イェ': 'ye', // KATAKANA LETTER I + SMALL E
	
	  'ア': 'a', // KATAKANA LETTER A
	  'イ': 'i', // KATAKANA LETTER I
	  'ウウ': 'ū', // KATAKANA LETTER U + U
	  'ウ': 'u', // KATAKANA LETTER U
	  'エ': 'e', // KATAKANA LETTER E
	  'オウ': 'ō', // KATAKANA LETTER O + U
	  'オ': 'o', // KATAKANA LETTER O
	
	  'クァ': 'kwa', // KATAKANA LETTER KU + SMALL A
	  'クィ': 'kwi', // KATAKANA LETTER KU + SMALL I
	  'クェ': 'kwe', // KATAKANA LETTER KU + SMALL E
	  'クォ': 'kwo', // KATAKANA LETTER KU + SMALL O
	
	  'カ': 'ka', // KATAKANA LETTER KA
	  'キョウ': 'kyō', // KATAKANA LETTER KI + SMALL YO + U
	  'キュウ': 'kyū', // KATAKANA LETTER KI + SMALL YU + U
	  'キャ': 'kya', // KATAKANA LETTER KI + SMALL YA
	  'キョ': 'kyo', // KATAKANA LETTER KI + SMALL YO
	  'キュ': 'kyu', // KATAKANA LETTER KI + SMALL YU
	  'キ': 'ki', // KATAKANA LETTER KI
	  'ク': 'ku', // KATAKANA LETTER KU
	  'ケ': 'ke', // KATAKANA LETTER KE
	  'コウ': 'kō', // KATAKANA LETTER KO + U
	  'コ': 'ko', // KATAKANA LETTER KO
	
	  'シェ': 'she', // KATAKANA LETTER SI + SMALL E
	  'スィ': 'si', // KATAKANA LETTER SU + SMALL I
	
	  'サ': 'sa', // KATAKANA LETTER SA
	  'ショウ': 'shō', // KATAKANA LETTER SI + SMALL YO + U
	  'シュウ': 'shū', // KATAKANA LETTER SI + SMALL YU + U
	  'シャ': 'sha', // KATAKANA LETTER SI + SMALL YA
	  'ショ': 'sho', // KATAKANA LETTER SI + SMALL YO
	  'シュ': 'shu', // KATAKANA LETTER SI + SMALL YU
	  'シ': 'shi', // KATAKANA LETTER SI
	  'スウ': 'sū', // KATAKANA LETTER SU + U
	  'ス': 'su', // KATAKANA LETTER SU
	  'セ': 'se', // KATAKANA LETTER SE
	  'ソウ': 'sō', // KATAKANA LETTER SO + U
	  'ソ': 'so', // KATAKANA LETTER SO
	
	  'チェ': 'che', // KATAKANA LETTER TI + SMALL E
	  'ツァ': 'tsa', // KATAKANA LETTER TU + SMALL A
	  'ツィ': 'tsi', // KATAKANA LETTER TU + SMALL I
	  'ツェ': 'tse', // KATAKANA LETTER TU + SMALL E
	  'ツォ': 'tso', // KATAKANA LETTER TU + SMALL O
	  'ティ': 'ti', // KATAKANA LETTER TE + SMALL I
	  'ディ': 'di', // KATAKANA LETTER DE + SMALL I
	  'テュ': 'tyu', // KATAKANA LETTER TE + SMALL YU
	  'デュ': 'dyu', // KATAKANA LETTER DE + SMALL YU
	  'トィ': 'twi', // KATAKANA LETTER TO + SMALL I
	  'トゥ': 'tu', // KATAKANA LETTER TO + SMALL U
	  'ドィ': 'dwi', // KATAKANA LETTER DO + SMALL I
	  'ドゥ': 'du', // KATAKANA LETTER DO + SMALL U
	
	  'タ': 'ta', // KATAKANA LETTER TA
	  'チョウ': 'chō', // KATAKANA LETTER TI + SMALL YO + U
	  'チュウ': 'chū', // KATAKANA LETTER TI + SMALL YU + U
	  'チャ': 'cha', // KATAKANA LETTER TI + SMALL YA
	  'チョ': 'cho', // KATAKANA LETTER TI + SMALL YO
	  'チュ': 'chu', // KATAKANA LETTER TI + SMALL YU
	  'チ': 'chi', // KATAKANA LETTER TI
	  'ツウ': 'tsū', // KATAKANA LETTER TU + U
	  'ツ': 'tsu', // KATAKANA LETTER TU
	  'テ': 'te', // KATAKANA LETTER TE
	  'トウ': 'tō', // KATAKANA LETTER TO + U
	  'ト': 'to', // KATAKANA LETTER TO
	
	  'ナ': 'na', // KATAKANA LETTER NA
	  'ニョウ': 'nyō', // KATAKANA LETTER NI + SMALL YO + U
	  'ニュウ': 'nyū', // KATAKANA LETTER NI + SMALL YU + U
	  'ニャ': 'nya', // KATAKANA LETTER NI + SMALL YA
	  'ニョ': 'nyo', // KATAKANA LETTER NI + SMALL YO
	  'ニュ': 'nyu', // KATAKANA LETTER NI + SMALL YU
	  'ニ': 'ni', // KATAKANA LETTER NI
	  'ヌウ': 'nū', // KATAKANA LETTER NU + U
	  'ヌ': 'nu', // KATAKANA LETTER NU
	  'ネ': 'ne', // KATAKANA LETTER NE
	  'ノウ': 'nō', // KATAKANA LETTER NO + U
	  'ノ': 'no', // KATAKANA LETTER NO
	
	  'ファ': 'fa', // KATAKANA LETTER HU + SMALL A
	  'フィ': 'fi', // KATAKANA LETTER HU + SMALL I
	  //'フゥ': 'fu', // KATAKANA LETTER HU + SMALL U
	  'フェ': 'fe', // KATAKANA LETTER HU + SMALL E
	  'フォ': 'fo', // KATAKANA LETTER HU + SMALL O
	  'フュ': 'fyu', // KATAKANA LETTER HU + SMALL YU
	  'ホェ': 'hwe', // KATAKANA LETTER HO + SMALL E
	
	  'ハ': 'ha', // KATAKANA LETTER HA
	  'ヒョウ': 'hyō', // KATAKANA LETTER HI + SMALL YO + U
	  'ヒュウ': 'hyū', // KATAKANA LETTER HI + SMALL YU + U
	  'ヒャ': 'hya', // KATAKANA LETTER HI + SMALL YA
	  'ヒョ': 'hyo', // KATAKANA LETTER HI + SMALL YO
	  'ヒュ': 'hyu', // KATAKANA LETTER HI + SMALL YU
	  'ヒ': 'hi', // KATAKANA LETTER HI
	  'フウ': 'fū', // KATAKANA LETTER HU + U
	  'フ': 'fu', // KATAKANA LETTER HU
	  'ヘ': 'he', // KATAKANA LETTER HE
	  'ホウ': 'hō', // KATAKANA LETTER HO + U
	  'ホ': 'ho', // KATAKANA LETTER HO
	
	  'マ': 'ma', // KATAKANA LETTER MA
	  'ミョウ': 'myō', // KATAKANA LETTER MI + SMALL YO + U
	  'ミュウ': 'myū', // KATAKANA LETTER MI + SMALL YU + U
	  'ミャ': 'mya', // KATAKANA LETTER MI + SMALL YA
	  'ミョ': 'myo', // KATAKANA LETTER MI + SMALL YO
	  'ミュ': 'myu', // KATAKANA LETTER MI + SMALL YU
	  'ミ': 'mi', // KATAKANA LETTER MI
	  'ムウ': 'mū', // KATAKANA LETTER MU + U
	  'ム': 'mu', // KATAKANA LETTER MU
	  'メ': 'me', // KATAKANA LETTER ME
	  'モウ': 'mō', // KATAKANA LETTER MO + U
	  'モ': 'mo', // KATAKANA LETTER MO
	
	  'ヤ': 'ya', // KATAKANA LETTER YA
	  'ユウ': 'yū', // KATAKANA LETTER YU + U
	  'ユ': 'yu', // KATAKANA LETTER YU
	  'ヨウ': 'yō', // KATAKANA LETTER YO + U
	  'ヨ': 'yo', // KATAKANA LETTER YO
	
	  'リェ': 'rye', // KATAKANA LETTER RI + SMALL E
	
	  'ラ': 'ra', // KATAKANA LETTER RA
	  'リョウ': 'ryō', // KATAKANA LETTER RI + SMALL YO + U
	  'リュウ': 'ryū', // KATAKANA LETTER RI + SMALL YU + U
	  'リャ': 'rya', // KATAKANA LETTER RI + SMALL YA
	  'リョ': 'ryo', // KATAKANA LETTER RI + SMALL YO
	  'リュ': 'ryu', // KATAKANA LETTER RI + SMALL YU
	  'リ': 'ri', // KATAKANA LETTER RI
	  'ルウ': 'rū', // KATAKANA LETTER RU + U
	  'ル': 'ru', // KATAKANA LETTER RU
	  'レ': 're', // KATAKANA LETTER RE
	  'ロウ': 'rō', // KATAKANA LETTER RO + U
	  'ロ': 'ro', // KATAKANA LETTER RO
	
	  'ワ': 'wa', // KATAKANA LETTER WA
	  'ヰ': 'i', // KATAKANA LETTER WI
	  'ヱ': 'e', // KATAKANA LETTER WE
	  'ヲ': 'o', // KATAKANA LETTER WO
	
	  'ン': 'n', // KATAKANA LETTER N
	
	  'グァ': 'gwa', // KATAKANA LETTER GU + SMALL A
	  'グィ': 'gwi', // KATAKANA LETTER GU + SMALL I
	  'グェ': 'gwe', // KATAKANA LETTER GU + SMALL E
	  'グォ': 'gwo', // KATAKANA LETTER GU + SMALL O
	
	  'ガ': 'ga', // KATAKANA LETTER GA
	  'ギョウ': 'gyō', // KATAKANA LETTER GI + SMALL YO + U
	  'ギュウ': 'gyū', // KATAKANA LETTER GI + SMALL YU + U
	  'ギャ': 'gya', // KATAKANA LETTER GI + SMALL YA
	  'ギョ': 'gyo', // KATAKANA LETTER GI + SMALL YO
	  'ギュ': 'gyu', // KATAKANA LETTER GI + SMALL YU
	  'ギ': 'gi', // KATAKANA LETTER GI
	  'グウ': 'gū', // KATAKANA LETTER GU + U
	  'グ': 'gu', // KATAKANA LETTER GU
	  'ゲ': 'ge', // KATAKANA LETTER GE
	  'ゴウ': 'gō', // KATAKANA LETTER GO + U
	  'ゴ': 'go', // KATAKANA LETTER GO
	
	  'ジェ': 'je', // KATAKANA LETTER ZI + SMALL E
	  'ズィ': 'zi', // KATAKANA LETTER ZU + SMALL I
	
	  'ザ': 'za', // KATAKANA LETTER ZA
	  'ジョウ': 'jō', // KATAKANA LETTER ZI + SMALL YO + U
	  'ジュウ': 'jū', // KATAKANA LETTER ZI + SMALL YU + U
	  'ジャ': 'ja', // KATAKANA LETTER ZI + SMALL YA
	  'ジョ': 'jo', // KATAKANA LETTER ZI + SMALL YO
	  'ジュ': 'ju', // KATAKANA LETTER ZI + SMALL YU
	  'ジ': 'ji', // KATAKANA LETTER ZI
	  'ズウ': 'zū', // KATAKANA LETTER ZU + U
	  'ズ': 'zu', // KATAKANA LETTER ZU
	  'ゼ': 'ze', // KATAKANA LETTER ZE
	  'ゾウ': 'zō', // KATAKANA LETTER ZO + U
	  'ゾ': 'zo', // KATAKANA LETTER ZO
	
	  'ダ': 'da', // KATAKANA LETTER DA
	  'ヂ': 'ji', // KATAKANA LETTER DI
	  'ヅウ': 'zū', // KATAKANA LETTER DU + U
	  'ヅ': 'zu', // KATAKANA LETTER DU
	  'デ': 'de', // KATAKANA LETTER DE
	  'ドウ': 'dō', // KATAKANA LETTER DO + U
	  'ド': 'do', // KATAKANA LETTER DO
	
	  'ブュ': 'byu', // KATAKANA LETTER BU + SMALL YU
	
	  'バ': 'ba', // KATAKANA LETTER BA
	  'ビョウ': 'byō', // KATAKANA LETTER BI + SMALL YO + U
	  'ビュウ': 'byū', // KATAKANA LETTER BI + SMALL YU + U
	  'ビャ': 'bya', // KATAKANA LETTER BI + SMALL YA
	  'ビョ': 'byo', // KATAKANA LETTER BI + SMALL YO
	  'ビュ': 'byu', // KATAKANA LETTER BI + SMALL YU
	  'ビ': 'bi', // KATAKANA LETTER BI
	  'ブウ': 'bū', // KATAKANA LETTER BU + U
	  'ブ': 'bu', // KATAKANA LETTER BU
	  'ベ': 'be', // KATAKANA LETTER BE
	  'ボウ': 'bō', // KATAKANA LETTER BO + U
	  'ボ': 'bo', // KATAKANA LETTER BO
	
	  'パ': 'pa', // KATAKANA LETTER PA
	  'ピョウ': 'pyō', // KATAKANA LETTER PI + SMALL YO + U
	  'ピュウ': 'pyū', // KATAKANA LETTER PI + SMALL YU + U
	  'ピャ': 'pya', // KATAKANA LETTER PI + SMALL YA
	  'ピョ': 'pyo', // KATAKANA LETTER PI + SMALL YO
	  'ピュ': 'pyu', // KATAKANA LETTER PI + SMALL YU
	  'ピ': 'pi', // KATAKANA LETTER PI
	  'プウ': 'pū', // KATAKANA LETTER PU + U
	  'プ': 'pu', // KATAKANA LETTER PU
	  'ペ': 'pe', // KATAKANA LETTER PE
	  'ポウ': 'pō', // KATAKANA LETTER PO + U
	  'ポ': 'po', // KATAKANA LETTER PO
	
	  'ヴ': 'v', // KATAKANA LETTER VU
	
	  '・': ' ', // KATAKANA MIDDLE DOT
	
	  'いぇ': 'ye', // HIRAGANA LETTER I + SMALL E
	
	  'あ': 'a', // HIRAGANA LETTER A
	  'い': 'i', // HIRAGANA LETTER I
	  'うう': 'ū', // HIRAGANA LETTER U + U
	  'う': 'u', // HIRAGANA LETTER U
	  'え': 'e', // HIRAGANA LETTER E
	  'おう': 'ō', // HIRAGANA LETTER O + U
	  'お': 'o', // HIRAGANA LETTER O
	
	  'くぁ': 'kwa', // HIRAGANA LETTER KU + SMALL A
	  'くぃ': 'kwi', // HIRAGANA LETTER KU + SMALL I
	  'くぇ': 'kwe', // HIRAGANA LETTER KU + SMALL E
	  'くぉ': 'kwo', // HIRAGANA LETTER KU + SMALL O
	
	  'か': 'ka', // HIRAGANA LETTER KA
	  'きょう': 'kyō', // HIRAGANA LETTER KI + SMALL YO + U
	  'きゅう': 'kyū', // HIRAGANA LETTER KI + SMALL YU + U
	  'きゃ': 'kya', // HIRAGANA LETTER KI + SMALL YA
	  'きょ': 'kyo', // HIRAGANA LETTER KI + SMALL YO
	  'きゅ': 'kyu', // HIRAGANA LETTER KI + SMALL YU
	  'き': 'ki', // HIRAGANA LETTER KI
	  'くう': 'kū', // HIRAGANA LETTER KU + U
	  'く': 'ku', // HIRAGANA LETTER KU
	  'け': 'ke', // HIRAGANA LETTER KE
	  'こう': 'kō', // HIRAGANA LETTER KO + U
	  'こ': 'ko', // HIRAGANA LETTER KO
	
	  'しぇ': 'she', // HIRAGANA LETTER SI + SMALL E
	  'すぃ': 'si', // HIRAGANA LETTER SU + SMALL I
	
	  'さ': 'sa', // HIRAGANA LETTER SA
	  'しょう': 'shō', // HIRAGANA LETTER SI + SMALL YO + U
	  'しゅう': 'shū', // HIRAGANA LETTER SI + SMALL YU + U
	  'しゃ': 'sha', // HIRAGANA LETTER SI + SMALL YA
	  'しょ': 'sho', // HIRAGANA LETTER SI + SMALL YO
	  'しゅ': 'shu', // HIRAGANA LETTER SI + SMALL YU
	  'し': 'shi', // HIRAGANA LETTER SI
	  'すう': 'sū', // HIRAGANA LETTER SU + U
	  'す': 'su', // HIRAGANA LETTER SU
	  'せ': 'se', // HIRAGANA LETTER SE
	  'そう': 'sō', // HIRAGANA LETTER SO + U
	  'そ': 'so', // HIRAGANA LETTER SO
	
	  'ちぇ': 'che', // HIRAGANA LETTER TI + SMALL E
	  'つぁ': 'tsa', // HIRAGANA LETTER TU + SMALL A
	  'つぃ': 'tsi', // HIRAGANA LETTER TU + SMALL I
	  'つぇ': 'tse', // HIRAGANA LETTER TU + SMALL E
	  'つぉ': 'tso', // HIRAGANA LETTER TU + SMALL O
	  'てぃ': 'ti', // HIRAGANA LETTER TE + SMALL I
	  'でぃ': 'di', // HIRAGANA LETTER DE + SMALL I
	  'てゅ': 'tyu', // HIRAGANA LETTER TE + SMALL YU
	  'でゅ': 'dyu', // HIRAGANA LETTER DE + SMALL YU
	  'とぃ': 'twi', // HIRAGANA LETTER TO + SMALL I
	  'とぅ': 'tu', // HIRAGANA LETTER TO + SMALL U
	  'どぃ': 'dwi', // HIRAGANA LETTER DO + SMALL I
	  'どぅ': 'du', // HIRAGANA LETTER DO + SMALL U
	
	  'た': 'ta', // HIRAGANA LETTER TA
	  'ちょう': 'chō', // HIRAGANA LETTER TI + SMALL YO + U
	  'ちゅう': 'chū', // HIRAGANA LETTER TI + SMALL YU + U
	  'ちゃ': 'cha', // HIRAGANA LETTER TI + SMALL YA
	  'ちょ': 'cho', // HIRAGANA LETTER TI + SMALL YO
	  'ちゅ': 'chu', // HIRAGANA LETTER TI + SMALL YU
	  'ち': 'chi', // HIRAGANA LETTER TI
	  'つう': 'tsū', // HIRAGANA LETTER TU + U
	  'つ': 'tsu', // HIRAGANA LETTER TU
	  'て': 'te', // HIRAGANA LETTER TE
	  'とう': 'tō', // HIRAGANA LETTER TO + U
	  'と': 'to', // HIRAGANA LETTER TO
	
	  'な': 'na', // HIRAGANA LETTER NA
	  'にょう': 'nyō', // HIRAGANA LETTER NI + SMALL YO + U
	  'にゅう': 'nyū', // HIRAGANA LETTER NI + SMALL YU + U
	  'にゃ': 'nya', // HIRAGANA LETTER NI + SMALL YA
	  'にょ': 'nyo', // HIRAGANA LETTER NI + SMALL YO
	  'にゅ': 'nyu', // HIRAGANA LETTER NI + SMALL YU
	  'に': 'ni', // HIRAGANA LETTER NI
	  'ぬう': 'nū', // HIRAGANA LETTER NU + U
	  'ぬ': 'nu', // HIRAGANA LETTER NU
	  'ね': 'ne', // HIRAGANA LETTER NE
	  'のう': 'nō', // HIRAGANA LETTER NO + U
	  'の': 'no', // HIRAGANA LETTER NO
	
	  'ふぁ': 'fa', // HIRAGANA LETTER HU + SMALL A
	  'ふぃ': 'fi', // HIRAGANA LETTER HU + SMALL I
	  //'ふぅ': 'fu', // HIRAGANA LETTER HU + SMALL U
	  'ふぇ': 'fe', // HIRAGANA LETTER HU + SMALL E
	  'ふぉ': 'fo', // HIRAGANA LETTER HU + SMALL O
	  'ふゅ': 'fyu', // HIRAGANA LETTER HU + SMALL YU
	  'ほぇ': 'hwe', // HIRAGANA LETTER HO + SMALL E
	
	  'は': 'ha', // HIRAGANA LETTER HA
	  'ひょう': 'hyō', // HIRAGANA LETTER HI + SMALL YO + U
	  'ひゅう': 'hyū', // HIRAGANA LETTER HI + SMALL YU + U
	  'ひゃ': 'hya', // HIRAGANA LETTER HI + SMALL YA
	  'ひょ': 'hyo', // HIRAGANA LETTER HI + SMALL YO
	  'ひゅ': 'hyu', // HIRAGANA LETTER HI + SMALL YU
	  'ひ': 'hi', // HIRAGANA LETTER HI
	  'ふう': 'fū', // HIRAGANA LETTER HU + U
	  'ふ': 'fu', // HIRAGANA LETTER HU
	  'へ': 'he', // HIRAGANA LETTER HE
	  'ほう': 'hō', // HIRAGANA LETTER HO + U
	  'ほ': 'ho', // HIRAGANA LETTER HO
	
	  'ま': 'ma', // HIRAGANA LETTER MA
	  'みょう': 'myō', // HIRAGANA LETTER MI + SMALL YO + U
	  'みゅう': 'myū', // HIRAGANA LETTER MI + SMALL YU + U
	  'みゃ': 'mya', // HIRAGANA LETTER MI + SMALL YA
	  'みょ': 'myo', // HIRAGANA LETTER MI + SMALL YO
	  'みゅ': 'myu', // HIRAGANA LETTER MI + SMALL YU
	  'み': 'mi', // HIRAGANA LETTER MI
	  'むう': 'mū', // HIRAGANA LETTER MU + U
	  'む': 'mu', // HIRAGANA LETTER MU
	  'め': 'me', // HIRAGANA LETTER ME
	  'もう': 'mō', // HIRAGANA LETTER MO + U
	  'も': 'mo', // HIRAGANA LETTER MO
	
	  'や': 'ya', // HIRAGANA LETTER YA
	  'ゆう': 'yū', // HIRAGANA LETTER YU + U
	  'ゆ': 'yu', // HIRAGANA LETTER YU
	  'よう': 'yō', // HIRAGANA LETTER YO + U
	  'よ': 'yo', // HIRAGANA LETTER YO
	
	  'りぇ': 'rye', // HIRAGANA LETTER RI + SMALL E
	
	  'ら': 'ra', // HIRAGANA LETTER RA
	  'りょう': 'ryō', // HIRAGANA LETTER RI + SMALL YO + U
	  'りゅう': 'ryū', // HIRAGANA LETTER RI + SMALL YU + U
	  'りゃ': 'rya', // HIRAGANA LETTER RI + SMALL YA
	  'りょ': 'ryo', // HIRAGANA LETTER RI + SMALL YO
	  'りゅ': 'ryu', // HIRAGANA LETTER RI + SMALL YU
	  'り': 'ri', // HIRAGANA LETTER RI
	  'るう': 'rū', // HIRAGANA LETTER RU + U
	  'る': 'ru', // HIRAGANA LETTER RU
	  'れ': 're', // HIRAGANA LETTER RE
	  'ろう': 'rō', // HIRAGANA LETTER RO + U
	  'ろ': 'ro', // HIRAGANA LETTER RO
	
	  'わ': 'wa', // HIRAGANA LETTER WA
	  'ゐ': 'i', // HIRAGANA LETTER WI
	  'ゑ': 'e', // HIRAGANA LETTER WE
	  'を': 'o', // HIRAGANA LETTER WO
	
	  'ん': 'n', // HIRAGANA LETTER N
	
	  'ぐぁ': 'gwa', // HIRAGANA LETTER GU + SMALL A
	  'ぐぃ': 'gwi', // HIRAGANA LETTER GU + SMALL I
	  'ぐぇ': 'gwe', // HIRAGANA LETTER GU + SMALL E
	  'ぐぉ': 'gwo', // HIRAGANA LETTER GU + SMALL O
	
	  'が': 'ga', // HIRAGANA LETTER GA
	  'ぎょう': 'gyō', // HIRAGANA LETTER GI + SMALL YO + U
	  'ぎゅう': 'gyū', // HIRAGANA LETTER GI + SMALL YU + U
	  'ぎゃ': 'gya', // HIRAGANA LETTER GI + SMALL YA
	  'ぎょ': 'gyo', // HIRAGANA LETTER GI + SMALL YO
	  'ぎゅ': 'gyu', // HIRAGANA LETTER GI + SMALL YU
	  'ぎ': 'gi', // HIRAGANA LETTER GI
	  'ぐう': 'gū', // HIRAGANA LETTER GU + U
	  'ぐ': 'gu', // HIRAGANA LETTER GU
	  'げ': 'ge', // HIRAGANA LETTER GE
	  'ごう': 'gō', // HIRAGANA LETTER GO + U
	  'ご': 'go', // HIRAGANA LETTER GO
	
	  'じぇ': 'je', // HIRAGANA LETTER ZI + SMALL E
	  'ずぃ': 'zi', // HIRAGANA LETTER ZU + SMALL I
	
	  'ざ': 'za', // HIRAGANA LETTER ZA
	  'じょう': 'jō', // HIRAGANA LETTER ZI + SMALL YO + U
	  'じゅう': 'jū', // HIRAGANA LETTER ZI + SMALL YU + U
	  'じゃ': 'ja', // HIRAGANA LETTER ZI + SMALL YA
	  'じょ': 'jo', // HIRAGANA LETTER ZI + SMALL YO
	  'じゅ': 'ju', // HIRAGANA LETTER ZI + SMALL YU
	  'じ': 'ji', // HIRAGANA LETTER ZI
	  'ずう': 'zū', // HIRAGANA LETTER ZU + U
	  'ず': 'zu', // HIRAGANA LETTER ZU
	  'ぜ': 'ze', // HIRAGANA LETTER ZE
	  'ぞう': 'zō', // HIRAGANA LETTER ZO + U
	  'ぞ': 'zo', // HIRAGANA LETTER ZO
	
	  'だ': 'da', // HIRAGANA LETTER DA
	  'ぢ': 'ji', // HIRAGANA LETTER DI
	  'づう': 'zū', // HIRAGANA LETTER DU + U
	  'づ': 'zu', // HIRAGANA LETTER DU
	  'で': 'de', // HIRAGANA LETTER DE
	  'どう': 'dō', // HIRAGANA LETTER DO + U
	  'ど': 'do', // HIRAGANA LETTER DO
	
	  'ぶゅ': 'byu', // HIRAGANA LETTER BU + SMALL YU
	
	  'ば': 'ba', // HIRAGANA LETTER BA
	  'びょう': 'byō', // HIRAGANA LETTER BI + SMALL YO + U
	  'びゅう': 'byū', // HIRAGANA LETTER BI + SMALL YU + U
	  'びゃ': 'bya', // HIRAGANA LETTER BI + SMALL YA
	  'びょ': 'byo', // HIRAGANA LETTER BI + SMALL YO
	  'びゅ': 'byu', // HIRAGANA LETTER BI + SMALL YU
	  'び': 'bi', // HIRAGANA LETTER BI
	  'ぶう': 'bū', // HIRAGANA LETTER BU + U
	  'ぶ': 'bu', // HIRAGANA LETTER BU
	  'べ': 'be', // HIRAGANA LETTER BE
	  'ぼう': 'bō', // HIRAGANA LETTER BO + U
	  'ぼ': 'bo', // HIRAGANA LETTER BO
	
	  'ぱ': 'pa', // HIRAGANA LETTER PA
	  'ぴょう': 'pyō', // HIRAGANA LETTER PI + SMALL YO + U
	  'ぴゅう': 'pyū', // HIRAGANA LETTER PI + SMALL YU + U
	  'ぴゃ': 'pya', // HIRAGANA LETTER PI + SMALL YA
	  'ぴょ': 'pyo', // HIRAGANA LETTER PI + SMALL YO
	  'ぴゅ': 'pyu', // HIRAGANA LETTER PI + SMALL YU
	  'ぴ': 'pi', // HIRAGANA LETTER PI
	  'ぷう': 'pū', // HIRAGANA LETTER PU + U
	  'ぷ': 'pu', // HIRAGANA LETTER PU
	  'ぺ': 'pe', // HIRAGANA LETTER PE
	  'ぽう': 'pō', // HIRAGANA LETTER PO + U
	  'ぽ': 'po', // HIRAGANA LETTER PO
	
	  'ゔ': 'v' // HIRAGANA LETTER VU
	};
	
	var transliterationTable3 = {
	  'aァ': 'ā',
	  'aぁ': 'ā',
	  'iィー': 'ī',
	  'iィ': 'ī',
	  'iぃー': 'ī',
	  'iぃ': 'ī',
	  'aー': 'ā',
	  'iー': 'ī',
	  'uー': 'ū',
	  'eー': 'ē',
	  'oー': 'ō',
	
	  // Fallback for small vowels
	  'ァ': 'a',
	  'ィ': 'i',
	  'ゥ': 'u',
	  'ェ': 'e',
	  'ォ': 'o',
	  'ぁ': 'a',
	  'ぃ': 'i',
	  'ぅ': 'u',
	  'ぇ': 'e',
	  'ぉ': 'o'
	};
	
	var replace1 = replacer(transliterationTable1);
	var replace2 = replacer(transliterationTable2);
	var replace3 = replacer(transliterationTable3);
	
	module.exports = function(str) {
	  str = replace1(str);
	
	  str = str
	    .replace(/ッ(?=[ン])/g, 'n')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[ん])/g, 'n')// HIRAGANA LETTER SMALL TU
	    .replace(/ン(?=[バビブベボパピプペポマミムメモ])/g, 'm')// KATAKANA LETTER N
	    .replace(/ん(?=[ばびぶべぼぱぴぷぺぽまみむめも])/g, 'm')// HIRAGANA LETTER N
	    .replace(/ン(?=[ヤユヨアイウエオ])/g, "n'")// KATAKANA LETTER N
	    .replace(/ん(?=[やゆよあいうえお])/g, "n'");// HIRAGANA LETTER N
	  str = str
	    .replace(/ッ(?=[カキクケコ])/g, 'k')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[かきくけこ])/g, 'k')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ガギグゲゴ])/g, 'g')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[がぎぐげご])/g, 'g')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[サシスセソ])/g, 's')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[さしすせそ])/g, 's')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ザズゼゾ])/g, 'z')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[ざずぜぞ])/g, 'z')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ジ])/g, 'j')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[じ])/g, 'j')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[タチツテト])/g, 't')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[たちつてと])/g, 't')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ダヂヅデド])/g, 't')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[だぢづでど])/g, 't')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ハヒヘホ])/g, 'h')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[はひへほ])/g, 'h')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[フ])/g, 'f')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[ふ])/g, 'f')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[バビブベボ])/g, 'b')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[ばびぶべぼ])/g, 'b')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[パピプペポ])/g, 'p')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[ぱぴぷぺぽ])/g, 'p')// HIRAGANA LETTER SMALL TU
	    .replace(/ッ(?=[ラリルレロ])/g, 'r')// KATAKANA LETTER SMALL TU
	    .replace(/っ(?=[らりるれろ])/g, 'r');// HIRAGANA LETTER SMALL TU
	
	  str = replace2(str);
	  str = replace3(str);
	
	  str = str
	    .replace(/(ッ|っ)\B/g, 't');// FINAL KATAKANA LETTER SMALL TU
	
	  return str;
	};


/***/ }),
/* 857 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2014, Lee Wenzhu
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	'use strict';
	
	function Bag() {
	    this.dictionary = [];
	    this.nElement = 0;
	};
	
	Bag.prototype.add = function(element) {
	    this.dictionary.push(element);
	    this.nElement++;
	    return this;
	};
	
	Bag.prototype.isEmpty = function() {
	    return this.nElement > 0;
	};
	
	Bag.prototype.contains = function(item) {
	    return this.dictionary.indexOf(item) >= 0;
	};
	
	/**
	 * unpack the bag , and get all items
	 */
	Bag.prototype.unpack = function() {
	    // return a copy is better than original
	    return this.dictionary.slice();
	};
	
	module.exports = Bag;


/***/ }),
/* 858 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2014, Lee Wenzhu
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	'use strict';
	
	var EdgeWeightedDigraph = __webpack_require__(219),
	    Topological = __webpack_require__(392);
	
	/**
	  *  The LongestPathTree represents a data type for solving the
	  *  single-source longest paths problem in edge-weighted directed
	  *  acyclic graphs (DAGs). The edge weights can be positive, negative, or zero.
	  *  This implementation uses a topological-sort based algorithm.
	  *  the distTo() and hasPathTo() methods take
	  *  constant time and the pathTo() method takes time proportional to the
	  *  number of edges in the longest path returned.
	  */
	var LongestPathTree = function(digraph, start) {
	    var _this = this;
	    this.edgeTo = [];
	    this.distTo = [];
	    this.distTo[start] = 0.0;
	    this.start = start;
	    this.top = new Topological(digraph);
	    this.top.order().forEach(function(vertex){
	        _this.relaxVertex(digraph, vertex, _this);
	    });
	};
	
	LongestPathTree.prototype.relaxEdge = function(e) {
	    var distTo = this.distTo,
	        edgeTo = this.edgeTo;
	    var v = e.from(), w = e.to();
	    if (distTo[w] < distTo[v] + e.weight) {
	        distTo[w] = distTo[v] + e.weight;
	        edgeTo[w] = e;
	    }
	};
	
	/**
	 * relax a vertex v in the specified digraph g
	 * @param {EdgeWeightedDigraph} the apecified digraph
	 * @param {Vertex} v vertex to be relaxed
	 */
	LongestPathTree.prototype.relaxVertex = function(digraph, vertex, tree) {
	    var distTo = tree.distTo;
	    var edgeTo = tree.edgeTo;
	
	    digraph.getAdj(vertex).forEach(function(edge){
	        var w = edge.to();
	        distTo[w] = distTo[w] || 0.0;
	        distTo[vertex] = distTo[vertex] || 0.0;
	        if (distTo[w] < distTo[vertex] + edge.weight) {
	            // in case of the result of 0.28+0.34 is 0.62000001
	            distTo[w] = parseFloat((distTo[vertex] + edge.weight).toFixed(2));
	            edgeTo[w] = edge;
	        }
	    });
	
	};
	
	LongestPathTree.prototype.getDistTo = function(v) {
	    return this.distTo[v];
	};
	
	LongestPathTree.prototype.hasPathTo = function(v) {
	    return !!this.distTo[v];
	};
	
	LongestPathTree.prototype.pathTo = function(v) {
	    if (!this.hasPathTo(v)) return [];
	    var path = [];
	    var edgeTo = this.edgeTo;
	    for (var e = edgeTo[v]; !!e; e = edgeTo[e.from()]) {
	        path.push(e.to());
	    }
	    path.push(this.start);
	    return path.reverse();
	};
	
	module.exports = LongestPathTree;


/***/ }),
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 Copyright (c) 2014, Lee Wenzhu
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	'use strict';
	
	var EdgeWeightedDigraph = __webpack_require__(219),
	    Topological = __webpack_require__(392);
	
	/**
	  *  The ShortestPathTree represents a data type for solving the
	  *  single-source shortest paths problem in edge-weighted directed
	  *  acyclic graphs (DAGs). The edge weights can be positive, negative, or zero.
	  *  This implementation uses a topological-sort based algorithm.
	  *  the distTo() and hasPathTo() methods take
	  *  constant time and the pathTo() method takes time proportional to the
	  *  number of edges in the longest path returned.
	  */
	var ShortestPathTree = function(digraph, start) {
	    var _this = this;
	    this.edgeTo = [];
	    this.distTo = [];
	    this.distTo[start] = 0.0;
	    this.start = start;
	    this.top = new Topological(digraph);
	    this.top.order().forEach(function(vertex){
	        _this.relaxVertex(digraph, vertex, _this);
	    });
	};
	
	ShortestPathTree.prototype.relaxEdge = function(e) {
	    var distTo = this.distTo,
	        edgeTo = this.edgeTo;
	    var v = e.from(), w = e.to();
	    if (distTo[w] > distTo[v] + e.weight) {
	        distTo[w] = distTo[v] + e.weight;
	        edgeTo[w] = e;
	    }
	};
	
	/**
	 * relax a vertex v in the specified digraph g
	 * @param {EdgeWeightedDigraph} the apecified digraph
	 * @param {Vertex} v vertex to be relaxed
	 */
	ShortestPathTree.prototype.relaxVertex = function(digraph, vertex, tree) {
	    var distTo = tree.distTo;
	    var edgeTo = tree.edgeTo;
	    digraph.getAdj(vertex).forEach(function(edge){
	        var w = edge.to();
	        distTo[w] = /\d/.test(distTo[w]) ? distTo[w] : Number.MAX_VALUE;
	        distTo[vertex] = distTo[vertex] || 0;
	        if (distTo[w] > distTo[vertex] + edge.weight) {
	            // in case of the result of 0.28+0.34 is 0.62000001
	            distTo[w] = parseFloat((distTo[vertex] + edge.weight).toFixed(2));
	            edgeTo[w] = edge;
	        }
	    });
	
	};
	
	ShortestPathTree.prototype.getDistTo = function(v) {
	    return this.distTo[v];
	};
	
	ShortestPathTree.prototype.hasPathTo = function(v) {
	    var dist = this.distTo[v];
	    if(v == this.start) return false;
	    return /\d/.test(dist) ? dist != Number.MAX_VALUE : false;
	};
	
	ShortestPathTree.prototype.pathTo = function(v) {
	    if (!this.hasPathTo(v) || v == this.start) return [];
	    var path = [];
	    var edgeTo = this.edgeTo;
	    for (var e = edgeTo[v]; !!e; e = edgeTo[e.from()]) {
	        path.push(e.to());
	    }
	    path.push(this.start);
	    return path.reverse();
	};
	
	module.exports = ShortestPathTree;


/***/ }),
/* 860 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, David Przybilla, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    'a','un','el','ella','y','sobre','de','la','que','en',
	    'los','del','se','las','por','un','para','con','no',
	    'una','su','al','lo','como','más','pero','sus','le',
	    'ya','o','porque','cuando','muy','sin','sobre','también',
	    'me','hasta','donde','quien','desde','nos','durante','uno',
	    'ni','contra','ese','eso','mí','qué','otro','él','cual',
	    'poco','mi','tú','te','ti','sí',
	     '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	    
	// tell the world about the noise words.    
	exports.words = words;


/***/ }),
/* 861 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Chris Umbel
	Farsi Stop Words by Fardin Koochaki <me@fardinak.com>
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    // Words
	    'از', 'با', 'یه', 'برای', 'و', 'باید', 'شاید',
	
	    // Symbols
	    '؟', '!', '٪', '.', '،', '؛', ':', ';', ',',
	    
	    // Numbers
	    '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹', '۰'
	];
	    
	// tell the world about the noise words.    
	exports.words = words;


/***/ }),
/* 862 */
/***/ (function(module, exports) {

	/*
	 Copyright (c) 2014, Ismaël Héry
	
	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:
	
	 The above copyright notice and this permission notice shall be included in
	 all copies or substantial portions of the Software.
	
	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 THE SOFTWARE.
	 */
	
	// A list of commonly used french words that have little meaning and can be excluded
	// from analysis.
	
	var words = ['être', 'avoir', 'faire',
	    'a',
	    'au',
	    'aux',
	    'avec',
	    'ce',
	    'ces',
	    'dans',
	    'de',
	    'des',
	    'du',
	    'elle',
	    'en',
	    'et',
	    'eux',
	    'il',
	    'je',
	    'la',
	    'le',
	    'leur',
	    'lui',
	    'ma',
	    'mais',
	    'me',
	    'même',
	    'mes',
	    'moi',
	    'mon',
	    'ne',
	    'nos',
	    'notre',
	    'nous',
	    'on',
	    'ou',
	    'où',
	    'par',
	    'pas',
	    'pour',
	    'qu',
	    'que',
	    'qui',
	    'sa',
	    'se',
	    'ses',
	    'son',
	    'sur',
	    'ta',
	    'te',
	    'tes',
	    'toi',
	    'ton',
	    'tu',
	    'un',
	    'une',
	    'vos',
	    'votre',
	    'vous',
	    'c',
	    'd',
	    'j',
	    'l',
	    'à',
	    'm',
	    'n',
	    's',
	    't',
	    'y',
	    'été',
	    'étée',
	    'étées',
	    'étés',
	    'étant',
	    'suis',
	    'es',
	    'est',
	    'sommes',
	    'êtes',
	    'sont',
	    'serai',
	    'seras',
	    'sera',
	    'serons',
	    'serez',
	    'seront',
	    'serais',
	    'serait',
	    'serions',
	    'seriez',
	    'seraient',
	    'étais',
	    'était',
	    'étions',
	    'étiez',
	    'étaient',
	    'fus',
	    'fut',
	    'fûmes',
	    'fûtes',
	    'furent',
	    'sois',
	    'soit',
	    'soyons',
	    'soyez',
	    'soient',
	    'fusse',
	    'fusses',
	    'fût',
	    'fussions',
	    'fussiez',
	    'fussent',
	    'ayant',
	    'eu',
	    'eue',
	    'eues',
	    'eus',
	    'ai',
	    'as',
	    'avons',
	    'avez',
	    'ont',
	    'aurai',
	    'auras',
	    'aura',
	    'aurons',
	    'aurez',
	    'auront',
	    'aurais',
	    'aurait',
	    'aurions',
	    'auriez',
	    'auraient',
	    'avais',
	    'avait',
	    'avions',
	    'aviez',
	    'avaient',
	    'eut',
	    'eûmes',
	    'eûtes',
	    'eurent',
	    'aie',
	    'aies',
	    'ait',
	    'ayons',
	    'ayez',
	    'aient',
	    'eusse',
	    'eusses',
	    'eût',
	    'eussions',
	    'eussiez',
	    'eussent',
	    'ceci',
	    'cela',
	    'cet',
	    'cette',
	    'ici',
	    'ils',
	    'les',
	    'leurs',
	    'quel',
	    'quels',
	    'quelle',
	    'quelles',
	    'sans',
	    'soi'
	];
	
	exports.words = words;


/***/ }),
/* 863 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, David Przybilla, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    'ad','al','allo','ai','agli','all','agl','alla','alle','con','col','coi','da','dal','dallo',
	    'dai','dagli','dall','dagl','dalla','dalle','di','del','dello','dei','degli','dell','degl',
	    'della','delle','in','nel','nello','nei','negli','nell','negl','nella','nelle','su','sul',
	    'sullo','sui','sugli','sull','sugl','sulla','sulle','per','tra','contro','io','tu','lui',
	    'lei','noi','voi','loro','mio','mia','miei','mie','tuo','tua','tuoi','tue','suo','sua','suoi',
	    'sue','nostro','nostra','nostri','nostre','vostro','vostra','vostri','vostre','mi','ti','ci',
	    'vi','lo','la','li','le','gli','ne','il','un','uno','una','ma','ed','se','perché','anche','come',
	    'dov','dove','che','chi','cui','non','più','quale','quanto','quanti','quanta','quante','quello',
	    'quelli','quella','quelle','questo','questi','questa','queste','si','tutto','tutti','a','c','e',
	    'i','l','o','ho','hai','ha','abbiamo','avete','hanno','abbia','abbiate','abbiano','avrò','avrai',
	    'avrà','avremo','avrete','avranno','avrei','avresti','avrebbe','avremmo','avreste','avrebbero',
	    'avevo','avevi','aveva','avevamo','avevate','avevano','ebbi','avesti','ebbe','avemmo','aveste',
	    'ebbero','avessi','avesse','avessimo','avessero','avendo','avuto','avuta','avuti','avute','sono',
	    'sei','è','siamo','siete','sia','siate','siano','sarò','sarai','sarà','saremo','sarete','saranno',
	    'sarei','saresti','sarebbe','saremmo','sareste','sarebbero','ero','eri','era','eravamo','eravate',
	    'erano','fui','fosti','fu','fummo','foste','furono','fossi','fosse','fossimo','fossero','essendo',
	    'faccio','fai','facciamo','fanno','faccia','facciate','facciano','farò','farai','farà','faremo',
	    'farete','faranno','farei','faresti','farebbe','faremmo','fareste','farebbero','facevo','facevi',
	    'faceva','facevamo','facevate','facevano','feci','facesti','fece','facemmo','faceste','fecero',
	    'facessi','facesse','facessimo','facessero','facendo','sto','stai','sta','stiamo','stanno','stia',
	    'stiate','stiano','starò','starai','starà','staremo','starete','staranno','starei','staresti',
	    'starebbe','staremmo','stareste','starebbero','stavo','stavi','stava','stavamo','stavate','stavano',
	    'stetti','stesti','stette','stemmo','steste','stettero','stessi','stesse','stessimo','stessero','stando',
	     '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	    
	// tell the world about the noise words.    
	exports.words = words;


/***/ }),
/* 864 */
/***/ (function(module, exports) {

	// Original copyright:
	/*
	 Licensed to the Apache Software Foundation (ASF) under one or more
	 contributor license agreements.  See the NOTICE file distributed with
	 this work for additional information regarding copyright ownership.
	 The ASF licenses this file to You under the Apache License, Version 2.0
	 the "License"); you may not use this file except in compliance with
	 the License.  You may obtain a copy of the License at
	
	 http://www.apache.org/licenses/LICENSE-2.0
	
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	*/
	
	// This version:
	/*
	Copyright (c) 2012, Guillaume Marty
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	// Original location:
	// http://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/analysis/kuromoji/src/resources/org/apache/lucene/analysis/ja/stopwords.txt
	var words = ['の', 'に', 'は', 'を', 'た', 'が', 'で', 'て', 'と', 'し', 'れ', 'さ',
	  'ある', 'いる', 'も', 'する', 'から', 'な', 'こと', 'として', 'い', 'や', 'れる',
	  'など', 'なっ', 'ない', 'この', 'ため', 'その', 'あっ', 'よう', 'また', 'もの',
	  'という', 'あり', 'まで', 'られ', 'なる', 'へ', 'か', 'だ', 'これ', 'によって',
	  'により', 'おり', 'より', 'による', 'ず', 'なり', 'られる', 'において', 'ば', 'なかっ',
	  'なく', 'しかし', 'について', 'せ', 'だっ', 'その後', 'できる', 'それ', 'う', 'ので',
	  'なお', 'のみ', 'でき', 'き', 'つ', 'における', 'および', 'いう', 'さらに', 'でも',
	  'ら', 'たり', 'その他', 'に関する', 'たち', 'ます', 'ん', 'なら', 'に対して', '特に',
	  'せる', '及び', 'これら', 'とき', 'では', 'にて', 'ほか', 'ながら', 'うち', 'そして',
	  'とともに', 'ただし', 'かつて', 'それぞれ', 'または', 'お', 'ほど', 'ものの', 'に対する',
	  'ほとんど', 'と共に', 'といった', 'です', 'とも', 'ところ', 'ここ'];
	
	// tell the world about the noise words.
	module.exports = words;


/***/ }),
/* 865 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2014, Kristoffer Brabrand
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    'og','i','jeg','det','at','en','et','den','til','er','som',
	    'på','de','med','han','av','ikke','der','så','var','meg',
	    'seg','men','ett','har','om','vi','min','mitt','ha','hadde',
	    'hun','nå','over','da','ved','fra','du','ut','sin','dem',
	    'oss','opp','man','kan','hans','hvor','eller','hva','skal',
	    'selv','sjøl','her','alle','vil','bli','ble','blitt','kunne',
	    'inn','når','være','kom','noen','noe','ville','dere','som',
	    'deres','kun','ja','etter','ned','skulle','denne','for','deg',
	    'si','sine','sitt','mot','å','meget','hvorfor','dette','disse',
	    'uten','hvordan','ingen','din','ditt','blir','samme','hvilken',
	    'hvilke','sånn','inni','mellom','vår','hver','hvem','vors',
	    'hvis','både','bare','enn','fordi','før','mange','også','slik',
	    'vært','være','begge','siden','henne','hennar','hennes',
	    '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	
	// tell the world about the noise words.
	exports.words = words;

/***/ }),
/* 866 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2013, Paweł Łaskarzewski
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	// list based on: http://pl.wikipedia.org/wiki/Wikipedia:Stopwords
	var words = [
	    'a', 'aby', 'ach', 'acz', 'aczkolwiek', 'aj', 'albo', 'ale', 'ależ', 'ani',
	    'aż', 'bardziej', 'bardzo', 'bo', 'bowiem', 'by', 'byli', 'bynajmniej',
	    'być', 'był', 'była', 'było', 'były', 'będzie', 'będą', 'cali', 'cała',
	    'cały', 'ci', 'cię', 'ciebie', 'co', 'cokolwiek', 'coś', 'czasami',
	    'czasem', 'czemu', 'czy', 'czyli', 'daleko', 'dla', 'dlaczego', 'dlatego',
	    'do', 'dobrze', 'dokąd', 'dość', 'dużo', 'dwa', 'dwaj', 'dwie', 'dwoje',
	    'dziś', 'dzisiaj', 'gdy', 'gdyby', 'gdyż', 'gdzie', 'gdziekolwiek',
	    'gdzieś', 'i', 'ich', 'ile', 'im', 'inna', 'inne', 'inny', 'innych', 'iż',
	    'ja', 'ją', 'jak', 'jakaś', 'jakby', 'jaki', 'jakichś', 'jakie', 'jakiś',
	    'jakiż', 'jakkolwiek', 'jako', 'jakoś', 'je', 'jeden', 'jedna', 'jedno',
	    'jednak', 'jednakże', 'jego', 'jej', 'jemu', 'jest', 'jestem', 'jeszcze',
	    'jeśli', 'jeżeli', 'już', 'ją', 'każdy', 'kiedy', 'kilka', 'kimś', 'kto',
	    'ktokolwiek', 'ktoś', 'która', 'które', 'którego', 'której', 'który',
	    'których', 'którym', 'którzy', 'ku', 'lat', 'lecz', 'lub', 'ma', 'mają',
	    'mało', 'mam', 'mi', 'mimo', 'między', 'mną', 'mnie', 'mogą', 'moi', 'moim',
	    'moja', 'moje', 'może', 'możliwe', 'można', 'mój', 'mu', 'musi', 'my', 'na',
	    'nad', 'nam', 'nami', 'nas', 'nasi', 'nasz', 'nasza', 'nasze', 'naszego',
	    'naszych', 'natomiast', 'natychmiast', 'nawet', 'nią', 'nic', 'nich', 'nie',
	    'niech', 'niego', 'niej', 'niemu', 'nigdy', 'nim', 'nimi', 'niż', 'no', 'o',
	    'obok', 'od', 'około', 'on', 'ona', 'one', 'oni', 'ono', 'oraz', 'oto',
	    'owszem', 'pan', 'pana', 'pani', 'po', 'pod', 'podczas', 'pomimo', 'ponad',
	    'ponieważ', 'powinien', 'powinna', 'powinni', 'powinno', 'poza', 'prawie',
	    'przecież', 'przed', 'przede', 'przedtem', 'przez', 'przy', 'roku',
	    'również', 'sam', 'sama', 'są', 'się', 'skąd', 'sobie', 'sobą', 'sposób',
	    'swoje', 'ta', 'tak', 'taka', 'taki', 'takie', 'także', 'tam', 'te', 'tego',
	    'tej', 'temu', 'ten', 'teraz', 'też', 'to', 'tobą', 'tobie', 'toteż',
	    'trzeba', 'tu', 'tutaj', 'twoi', 'twoim', 'twoja', 'twoje', 'twym', 'twój',
	    'ty', 'tych', 'tylko', 'tym', 'u', 'w', 'wam', 'wami', 'was', 'wasz', 'zaś',
	    'wasza', 'wasze', 'we', 'według', 'wiele', 'wielu', 'więc', 'więcej', 'tę',
	    'wszyscy', 'wszystkich', 'wszystkie', 'wszystkim', 'wszystko', 'wtedy',
	    'wy', 'właśnie', 'z', 'za', 'zapewne', 'zawsze', 'ze', 'zł', 'znowu',
	    'znów', 'został', 'żaden', 'żadna', 'żadne', 'żadnych', 'że', 'żeby',
	    '$', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	
	// tell the world about the noise words.
	exports.words = words;


/***/ }),
/* 867 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Luís Rodrigues
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	  'a',
	  'à',
	  'ao',
	  'aos',
	  'aquela',
	  'aquelas',
	  'aquele',
	  'aqueles',
	  'aquilo',
	  'as',
	  'às',
	  'até',
	  'com',
	  'como',
	  'da',
	  'das',
	  'de',
	  'dela',
	  'delas',
	  'dele',
	  'deles',
	  'depois',
	  'do',
	  'dos',
	  'e',
	  'ela',
	  'elas',
	  'ele',
	  'eles',
	  'em',
	  'entre',
	  'essa',
	  'essas',
	  'esse',
	  'esses',
	  'esta',
	  'estas',
	  'este',
	  'estes',
	  'eu',
	  'isso',
	  'isto',
	  'já',
	  'lhe',
	  'lhes',
	  'mais',
	  'mas',
	  'me',
	  'mesmo',
	  'meu',
	  'meus',
	  'minha',
	  'minhas',
	  'muito',
	  'muitos',
	  'na',
	  'não',
	  'nas',
	  'nem',
	  'no',
	  'nos',
	  'nós',
	  'nossa',
	  'nossas',
	  'nosso',
	  'nossos',
	  'num',
	  'nuns',
	  'numa',
	  'numas',
	  'o',
	  'os',
	  'ou',
	  'para',
	  'pela',
	  'pelas',
	  'pelo',
	  'pelos',
	  'por',
	  'quais',
	  'qual',
	  'quando',
	  'que',
	  'quem',
	  'se',
	  'sem',
	  'seu',
	  'seus',
	  'só',
	  'sua',
	  'suas',
	  'também',
	  'te',
	  'teu',
	  'teus',
	  'tu',
	  'tua',
	  'tuas',
	  'um',
	  'uma',
	  'umas',
	  'você',
	  'vocês',
	  'vos',
	  'vosso',
	  'vossos',
	  '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'
	];
	
	// tell the world about the noise words.
	exports.words = words;


/***/ }),
/* 868 */
/***/ (function(module, exports) {

	/*
	Copyright (c) 2011, Polyakov Vladimir, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	// a list of commonly used words that have little meaning and can be excluded
	// from analysis.
	var words = [
	    'о', 'после', 'все', 'также', 'и', 'другие', 'все', 'как', 'во', 'быть',
	    'потому', 'был', 'до', 'являюсь', 'между', 'все', 'но', 'от', 'иди', 'могу',
	    'подойди', 'мог', 'делал', 'делаю', 'каждый', 'для', 'откуда', 'иметь', 'имел',
	    'он', 'имеет', 'её', 'здесь', 'его', 'как', 'если', 'в', 'оно', 'за',
	    'делать', 'много', 'я', 'может быть', 'более', 'самый', 'должен',
	    'мой', 'никогда', 'сейчас', 'из', 'на', 'только', 'или', 'другой', 'другая',
	    'другое', 'наше', 'вне', 'конец', 'сказал', 'сказала', 'также', 'видел', 'c',
	    'немного', 'все еще', 'так', 'затем', 'тот', 'их', 'там', 'этот', 'они', 'те',
	    'через', 'тоже', 'под', 'над', 'очень', 'был', 'путь', 'мы', 'хорошо',
	    'что', 'где', 'который', 'пока', 'кто', 'с кем', 'хотел бы', 'ты', 'твои',
	    'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н',
	    'o', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь',
	    'э', 'ю', 'я','$', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_'];
	    
	// tell the world about the noise words.    
	exports.words = words;


/***/ }),
/* 869 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var WordNetFile = __webpack_require__(393),
	  fs = __webpack_require__(37),
	  util = __webpack_require__(12);
	
	function get(location, callback) {
	  var buff = new Buffer(4096);
	
	  this.open(function(err, fd, done) {
	    WordNetFile.appendLineChar(fd, location, 0, buff, function(line) {
	      done();
	      var data = line.split('| ');
	      var tokens = data[0].split(/\s+/);
	      var ptrs = [];
	      var wCnt = parseInt(tokens[3], 16);
	      var synonyms = [];
	
	      for(var i = 0; i < wCnt; i++) {
	        synonyms.push(tokens[4 + i * 2]);
	      }
	
	      var ptrOffset = (wCnt - 1) * 2 + 6;
	      for(var i = 0; i < parseInt(tokens[ptrOffset], 10); i++) {
	        ptrs.push({
	          pointerSymbol: tokens[ptrOffset + 1 + i * 4],
	          synsetOffset: parseInt(tokens[ptrOffset + 2 + i * 4], 10),
	          pos: tokens[ptrOffset + 3 + i * 4],
	          sourceTarget: tokens[ptrOffset + 4 + i * 4]
	        });
	      }
	
	      // break "gloss" into definition vs. examples
	      var glossArray = data[1].split("; ");
	      var definition = glossArray[0];
	      var examples = glossArray.slice(1);    
	
	      for (var k=0; k < examples.length; k++) {
	        examples[k] = examples[k].replace(/\"/g,'').replace(/\s\s+/g,'');
	      }
	      
	      callback({
	        synsetOffset: parseInt(tokens[0], 10),
	        lexFilenum: parseInt(tokens[1], 10),
	        pos: tokens[2],
	        wCnt: wCnt,
	        lemma: tokens[4],
	        synonyms: synonyms,
	        lexId: tokens[5],
	        ptrs: ptrs,
	        gloss: data[1],
	        def: definition,
	        exp: examples
	      });
	    });
	  });
	}
	
	var DataFile = function(dataDir, name) {
	  WordNetFile.call(this, dataDir, 'data.' + name);
	};
	
	util.inherits(DataFile, WordNetFile);
	DataFile.prototype.get = get;
	
	module.exports = DataFile;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ }),
/* 870 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var WordNetFile = __webpack_require__(393),
	  fs = __webpack_require__(37),
	  util = __webpack_require__(12);
	
	function getFileSize(path) {
	  var stat = fs.statSync(path);
	  return stat.size;
	}
	
	function findPrevEOL(fd, pos, callback) {
	  var buff = new Buffer(1024);
	  if(pos == 0)
	    callback(0);
	  else {
	    fs.read(fd, buff, 0, 1, pos, function(err, count) {
	      if(buff[0] == 10)
	        callback(pos + 1);
	      else
	        findPrevEOL(fd, pos - 1, callback);
	    });
	  }
	}
	
	function readLine(fd, pos, callback) {
	  var buff = new Buffer(1024);
	  findPrevEOL(fd, pos, function(pos) {
	    WordNetFile.appendLineChar(fd, pos, 0, buff, callback);
	  });
	}
	
	function miss(callback) {
	  callback({status: 'miss'});
	}
	
	function findAt(fd, size, pos, lastPos, adjustment, searchKey, callback, lastKey) {
	  if (lastPos == pos || pos >= size) {
	    miss(callback);
	  } else {
	    readLine(fd, pos, function(line) {
	      var tokens = line.split(/\s+/);
	      var key = tokens[0];
	
	    if(key == searchKey) {
	        callback({status: 'hit', key: key, 'line': line, tokens: tokens});
	      } else if(adjustment == 1 || key == lastKey)  {
	        miss(callback);
	      } else {
	        adjustment = Math.ceil(adjustment * 0.5);
	
	        if (key < searchKey) {
	          findAt(fd, size, pos + adjustment, pos, adjustment, searchKey, callback, key);
	        } else {
	          findAt(fd, size, pos - adjustment, pos, adjustment, searchKey, callback, key);
	        }
	      }
	    });
	  }
	}
	
	function find(searchKey, callback) {
	  var indexFile = this;
	
	  indexFile.open(function(err, fd, done) {
	    if(err) {
	      console.log(err);
	    } else {
	      var size = getFileSize(indexFile.filePath) - 1;
	      var pos = Math.ceil(size / 2);
	      findAt(fd, size, pos, null, pos, searchKey,
	        function(result) { callback(result); done(); });
	    }
	  });
	}
	
	function lookupFromFile(word, callback) {
	  this.find(word, function(record) {
	    var indexRecord = null;
	
	    if(record.status == 'hit') {
	      var ptrs = [], offsets = [];
	
	      for(var i = 0; i < parseInt(record.tokens[3]); i++)
	        ptrs.push(record.tokens[i]);
	
	      for(var i = 0; i < parseInt(record.tokens[2]); i++)
	        offsets.push(parseInt(record.tokens[ptrs.length + 6 + i], 10));
	
	      indexRecord = {
	        lemma: record.tokens[0],
	        pos: record.tokens[1],
	        ptrSymbol: ptrs,
	        senseCnt:  parseInt(record.tokens[ptrs.length + 4], 10),
	        tagsenseCnt:  parseInt(record.tokens[ptrs.length + 5], 10),
	        synsetOffset:  offsets
	      };
	    }
	
	    callback(indexRecord);
	  });
	}
	
	function lookup(word, callback) {
	  this.lookupFromFile(word, callback);
	}
	
	var IndexFile = function(dataDir, name) {
	  WordNetFile.call(this, dataDir, 'index.' + name);
	};
	
	util.inherits(IndexFile, WordNetFile);
	
	IndexFile.prototype.lookupFromFile = lookupFromFile;
	IndexFile.prototype.lookup = lookup;
	IndexFile.prototype.find = find;
	
	IndexFile.prototype._findAt = findAt;
	
	module.exports = IndexFile;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ }),
/* 871 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2011, Chris Umbel
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/
	
	var IndexFile = __webpack_require__(870),
	  DataFile = __webpack_require__(869);
	
	function pushResults(data, results, offsets, callback) {
	  var wordnet = this;
	
	  if(offsets.length == 0) {
	    callback(results);
	  } else {
	    data.get(offsets.pop(), function(record) {
	      results.push(record);
	      wordnet.pushResults(data, results, offsets, callback);
	    });
	  }
	}
	
	function lookupFromFiles(files, results, word, callback) {
	  var wordnet = this;
	
	  if(files.length == 0)
	    callback(results);
	  else {
	    var file = files.pop();
	
	    file.index.lookup(word, function(record) {
	      if(record) {
	        wordnet.pushResults(file.data, results, record.synsetOffset, function() {
	          wordnet.lookupFromFiles(files, results, word, callback);
	        });
	      } else {
	        wordnet.lookupFromFiles(files, results, word, callback);
	      }
	    });
	  }
	}
	
	function lookup(word, callback) {
	  word = word.toLowerCase().replace(/\s+/g, '_');
	
	  this.lookupFromFiles([
	    {index: this.nounIndex, data: this.nounData},
	    {index: this.verbIndex, data: this.verbData},
	    {index: this.adjIndex, data: this.adjData},
	    {index: this.advIndex, data: this.advData},
	  ], [], word, callback);
	}
	
	function get(synsetOffset, pos, callback) {
	  var dataFile = this.getDataFile(pos);
	  var wordnet = this;
	
	  dataFile.get(synsetOffset, function(result) {
	    callback(result);
	  });
	}
	
	function getDataFile(pos) {
	    switch(pos) {
	      case 'n':
	        return this.nounData;
	      case 'v':
	        return this.verbData;
	      case 'a': case 's':
	        return this.adjData;
	      case 'r':
	        return this.advData;
	    }
	}
	
	function loadSynonyms(synonyms, results, ptrs, callback) {
	  var wordnet = this;
	
	  if(ptrs.length > 0) {
	    var ptr = ptrs.pop();
	
	    this.get(ptr.synsetOffset, ptr.pos, function(result) {
	      synonyms.push(result);
	      wordnet.loadSynonyms(synonyms, results, ptrs, callback);
	    });
	  } else {
	    wordnet.loadResultSynonyms(synonyms, results, callback);
	  }
	}
	
	function loadResultSynonyms(synonyms, results, callback) {
	  var wordnet = this;
	
	  if(results.length > 0) {
	    var result = results.pop();
	    wordnet.loadSynonyms(synonyms, results, result.ptrs, callback);
	  } else
	    callback(synonyms);
	}
	
	function lookupSynonyms(word, callback) {
	  var wordnet = this;
	
	  wordnet.lookup(word, function(results) {
	    wordnet.loadResultSynonyms([], results, callback);
	  });
	}
	
	function getSynonyms() {
	  var wordnet = this;
	  var callback = arguments[2] ? arguments[2] : arguments[1];
	  var pos = arguments[0].pos ? arguments[0].pos : arguments[1];
	  var synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0];
	
	  this.get(synsetOffset, pos, function(result) {
	    wordnet.loadSynonyms([], [], result.ptrs, callback);
	  });
	}
	
	function WordNet(dataDir) {
	
	  if (!dataDir) {
	    try {
	      var WNdb = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"wordnet-db\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	    } catch(e) {
	      console.error("Please 'npm install wordnet-db' before using WordNet module or specify a dict directory.");
	      throw e;
	    }
	    dataDir = WNdb.path;
	  }
	
	  this.nounIndex = new IndexFile(dataDir, 'noun');
	  this.verbIndex = new IndexFile(dataDir, 'verb');
	  this.adjIndex = new IndexFile(dataDir, 'adj');
	  this.advIndex = new IndexFile(dataDir, 'adv');
	
	  this.nounData = new DataFile(dataDir, 'noun');
	  this.verbData = new DataFile(dataDir, 'verb');
	  this.adjData = new DataFile(dataDir, 'adj');
	  this.advData = new DataFile(dataDir, 'adv');
	
	  this.get = get;
	  this.lookup = lookup;
	  this.lookupFromFiles = lookupFromFiles;
	  this.pushResults = pushResults;
	  this.loadResultSynonyms = loadResultSynonyms;
	  this.loadSynonyms = loadSynonyms;
	  this.lookupSynonyms = lookupSynonyms;
	  this.getSynonyms = getSynonyms;
	  this.getDataFile = getDataFile;
	}
	
	module.exports = WordNet;


/***/ }),
/* 872 */
/***/ (function(module, exports) {

	// empty (null-loader)

/***/ }),
/* 873 */
/***/ (function(module, exports) {

	Prism.languages.actionscript = Prism.languages.extend('javascript',  {
		'keyword': /\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\b/,
		'operator': /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
	});
	Prism.languages.actionscript['class-name'].alias = 'function';
	
	if (Prism.languages.markup) {
		Prism.languages.insertBefore('actionscript', 'string', {
			'xml': {
				pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
				lookbehind: true,
				inside: {
					rest: Prism.languages.markup
				}
			}
		});
	}

/***/ }),
/* 874 */
/***/ (function(module, exports) {

	Prism.languages.c = Prism.languages.extend('clike', {
		'keyword': /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,
		'operator': /-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/]/,
		'number': /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)[ful]*\b/i
	});
	
	Prism.languages.insertBefore('c', 'string', {
		'macro': {
			// allow for multiline macro definitions
			// spaces after the # character compile fine with gcc
			pattern: /(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
			lookbehind: true,
			alias: 'property',
			inside: {
				// highlight the path of the include statement as a string
				'string': {
					pattern: /(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,
					lookbehind: true
				},
				// highlight macro directives as keywords
				'directive': {
					pattern: /(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,
					lookbehind: true,
					alias: 'keyword'
				}
			}
		},
		// highlight predefined macros as constants
		'constant': /\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/
	});
	
	delete Prism.languages.c['class-name'];
	delete Prism.languages.c['boolean'];


/***/ }),
/* 875 */
/***/ (function(module, exports) {

	(function(Prism) {
	
	// Ignore comments starting with { to privilege string interpolation highlighting
	var comment = /#(?!\{).+/,
	    interpolation = {
	    	pattern: /#\{[^}]+\}/,
	    	alias: 'variable'
	    };
	
	Prism.languages.coffeescript = Prism.languages.extend('javascript', {
		'comment': comment,
		'string': [
	
			// Strings are multiline
			{
				pattern: /'(?:\\[\s\S]|[^\\'])*'/,
				greedy: true
			},
	
			{
				// Strings are multiline
				pattern: /"(?:\\[\s\S]|[^\\"])*"/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			}
		],
		'keyword': /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
		'class-member': {
			pattern: /@(?!\d)\w+/,
			alias: 'variable'
		}
	});
	
	Prism.languages.insertBefore('coffeescript', 'comment', {
		'multiline-comment': {
			pattern: /###[\s\S]+?###/,
			alias: 'comment'
		},
	
		// Block regexp can contain comments and interpolation
		'block-regex': {
			pattern: /\/{3}[\s\S]*?\/{3}/,
			alias: 'regex',
			inside: {
				'comment': comment,
				'interpolation': interpolation
			}
		}
	});
	
	Prism.languages.insertBefore('coffeescript', 'string', {
		'inline-javascript': {
			pattern: /`(?:\\[\s\S]|[^\\`])*`/,
			inside: {
				'delimiter': {
					pattern: /^`|`$/,
					alias: 'punctuation'
				},
				rest: Prism.languages.javascript
			}
		},
	
		// Block strings
		'multiline-string': [
			{
				pattern: /'''[\s\S]*?'''/,
				greedy: true,
				alias: 'string'
			},
			{
				pattern: /"""[\s\S]*?"""/,
				greedy: true,
				alias: 'string',
				inside: {
					interpolation: interpolation
				}
			}
		]
	
	});
	
	Prism.languages.insertBefore('coffeescript', 'keyword', {
		// Object property
		'property': /(?!\d)\w+(?=\s*:(?!:))/
	});
	
	delete Prism.languages.coffeescript['template-string'];
	
	}(Prism));

/***/ }),
/* 876 */
/***/ (function(module, exports) {

	Prism.languages.cpp = Prism.languages.extend('c', {
		'keyword': /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,
		'boolean': /\b(?:true|false)\b/,
		'operator': /--?|\+\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/
	});
	
	Prism.languages.insertBefore('cpp', 'keyword', {
		'class-name': {
			pattern: /(class\s+)\w+/i,
			lookbehind: true
		}
	});

/***/ }),
/* 877 */
/***/ (function(module, exports) {

	Prism.languages.css.selector = {
		pattern: /[^{}\s][^{}]*(?=\s*\{)/,
		inside: {
			'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
			'pseudo-class': /:[-\w]+(?:\(.*\))?/,
			'class': /\.[-:.\w]+/,
			'id': /#[-:.\w]+/,
			'attribute': /\[[^\]]+\]/
		}
	};
	
	Prism.languages.insertBefore('css', 'function', {
		'hexcode': /#[\da-f]{3,8}/i,
		'entity': /\\[\da-f]{1,8}/i,
		'number': /[\d%.]+/
	});

/***/ }),
/* 878 */
/***/ (function(module, exports) {

	Prism.languages.css = {
		'comment': /\/\*[\s\S]*?\*\//,
		'atrule': {
			pattern: /@[\w-]+?.*?(?:;|(?=\s*\{))/i,
			inside: {
				'rule': /@[\w-]+/
				// See rest below
			}
		},
		'url': /url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
		'selector': /[^{}\s][^{};]*?(?=\s*\{)/,
		'string': {
			pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
		'property': /[\w-]+(?=\s*:)/i,
		'important': /\B!important\b/i,
		'function': /[-a-z0-9]+(?=\()/i,
		'punctuation': /[(){};:]/
	};
	
	Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);
	
	if (Prism.languages.markup) {
		Prism.languages.insertBefore('markup', 'tag', {
			'style': {
				pattern: /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,
				lookbehind: true,
				inside: Prism.languages.css,
				alias: 'language-css'
			}
		});
		
		Prism.languages.insertBefore('inside', 'attr-value', {
			'style-attr': {
				pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
				inside: {
					'attr-name': {
						pattern: /^\s*style/i,
						inside: Prism.languages.markup.tag.inside
					},
					'punctuation': /^\s*=\s*['"]|['"]\s*$/,
					'attr-value': {
						pattern: /.+/i,
						inside: Prism.languages.css
					}
				},
				alias: 'language-css'
			}
		}, Prism.languages.markup.tag);
	}

/***/ }),
/* 879 */
/***/ (function(module, exports) {

	Prism.languages.diff = {
		'coord': [
			// Match all kinds of coord lines (prefixed by "+++", "---" or "***").
			/^(?:\*{3}|-{3}|\+{3}).*$/m,
			// Match "@@ ... @@" coord lines in unified diff.
			/^@@.*@@$/m,
			// Match coord lines in normal diff (starts with a number).
			/^\d+.*$/m
		],
	
		// Match inserted and deleted lines. Support both +/- and >/< styles.
		'deleted': /^[-<].*$/m,
		'inserted': /^[+>].*$/m,
	
		// Match "different" lines (prefixed with "!") in context diff.
		'diff': {
			'pattern': /^!(?!!).+$/m,
			'alias': 'important'
		}
	};


/***/ }),
/* 880 */
/***/ (function(module, exports) {

	Prism.languages.docker = {
		'keyword': {
			pattern: /(^\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)/mi,
			lookbehind: true
		},
		'string': /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
		'comment': /#.*/,
		'punctuation': /---|\.\.\.|[:[\]{}\-,|>?]/
	};
	
	Prism.languages.dockerfile = Prism.languages.docker;


/***/ }),
/* 881 */
/***/ (function(module, exports) {

	Prism.languages.elixir = {
		// Negative look-ahead is needed for string interpolation
		// Negative look-behind is needed to avoid highlighting markdown headers in
		// multi-line doc strings
		'comment': {
			pattern: /(^|[^#])#(?![{#]).*/m,
			lookbehind: true
		},
		// ~r"""foo""" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r"foo", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>
		'regex': /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
		'string': [
			{
				// ~s"""foo""" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s"foo", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>
				pattern: /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
				greedy: true,
				inside: {
					// See interpolation below
				}
			},
			{
				pattern: /("""|''')[\s\S]*?\1/,
				greedy: true,
				inside: {
					// See interpolation below
				}
			},
			{
				// Multi-line strings are allowed
				pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
				greedy: true,
				inside: {
					// See interpolation below
				}
			}
		],
		'atom': {
			// Look-behind prevents bad highlighting of the :: operator
			pattern: /(^|[^:]):\w+/,
			lookbehind: true,
			alias: 'symbol'
		},
		// Look-ahead prevents bad highlighting of the :: operator
		'attr-name': /\w+:(?!:)/,
		'capture': {
			// Look-behind prevents bad highlighting of the && operator
			pattern: /(^|[^&])&(?:[^&\s\d()][^\s()]*|(?=\())/,
			lookbehind: true,
			alias: 'function'
		},
		'argument': {
			// Look-behind prevents bad highlighting of the && operator
			pattern: /(^|[^&])&\d+/,
			lookbehind: true,
			alias: 'variable'
		},
		'attribute': {
			pattern: /@[\S]+/,
			alias: 'variable'
		},
		'number': /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
		'keyword': /\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\b/,
		'boolean': /\b(?:true|false|nil)\b/,
		'operator': [
			/\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
			{
				// We don't want to match <<
				pattern: /([^<])<(?!<)/,
				lookbehind: true
			},
			{
				// We don't want to match >>
				pattern: /([^>])>(?!>)/,
				lookbehind: true
			}
		],
		'punctuation': /<<|>>|[.,%\[\]{}()]/
	};
	
	Prism.languages.elixir.string.forEach(function(o) {
		o.inside = {
			'interpolation': {
				pattern: /#\{[^}]+\}/,
				inside: {
					'delimiter': {
						pattern: /^#\{|\}$/,
						alias: 'punctuation'
					},
					rest: Prism.util.clone(Prism.languages.elixir)
				}
			}
		};
	});
	


/***/ }),
/* 882 */
/***/ (function(module, exports) {

	Prism.languages.erlang = {
		'comment': /%.+/,
		'string': {
			pattern: /"(?:\\.|[^\\"\r\n])*"/,
			greedy: true
		},
		'quoted-function': {
			pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
			alias: 'function'
		},
		'quoted-atom': {
			pattern: /'(?:\\.|[^\\'\r\n])+'/,
			alias: 'atom'
		},
		'boolean': /\b(?:true|false)\b/,
		'keyword': /\b(?:fun|when|case|of|end|if|receive|after|try|catch)\b/,
		'number': [
			/\$\\?./,
			/\d+#[a-z0-9]+/i,
			/(?:\b|-)\d*\.?\d+([Ee][+-]?\d+)?\b/
		],
		'function': /\b[a-z][\w@]*(?=\()/,
		'variable': {
			// Look-behind is used to prevent wrong highlighting of atoms containing "@"
			pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
			lookbehind: true
		},
		'operator': [
			/[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\b/,
			{
				// We don't want to match <<
				pattern: /(^|[^<])<(?!<)/,
				lookbehind: true
			},
			{
				// We don't want to match >>
				pattern: /(^|[^>])>(?!>)/,
				lookbehind: true
			}
		],
		'atom': /\b[a-z][\w@]*/,
		'punctuation': /[()[\]{}:;,.#|]|<<|>>/
	
	};

/***/ }),
/* 883 */
/***/ (function(module, exports) {

	Prism.languages.git = {
		/*
		 * A simple one line comment like in a git status command
		 * For instance:
		 * $ git status
		 * # On branch infinite-scroll
		 * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
		 * # and have 1 and 2 different commits each, respectively.
		 * nothing to commit (working directory clean)
		 */
		'comment': /^#.*/m,
	
		/*
		 * Regexp to match the changed lines in a git diff output. Check the example below.
		 */
		'deleted': /^[-–].*/m,
		'inserted': /^\+.*/m,
	
		/*
		 * a string (double and simple quote)
		 */
		'string': /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,
	
		/*
		 * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
		 * For instance:
		 * $ git add file.txt
		 */
		'command': {
			pattern: /^.*\$ git .*$/m,
			inside: {
				/*
				 * A git command can contain a parameter starting by a single or a double dash followed by a string
				 * For instance:
				 * $ git diff --cached
				 * $ git log -p
				 */
				'parameter': /\s--?\w+/m
			}
		},
	
		/*
		 * Coordinates displayed in a git diff command
		 * For instance:
		 * $ git diff
		 * diff --git file.txt file.txt
		 * index 6214953..1d54a52 100644
		 * --- file.txt
		 * +++ file.txt
		 * @@ -1 +1,2 @@
		 * -Here's my tetx file
		 * +Here's my text file
		 * +And this is the second line
		 */
		'coord': /^@@.*@@$/m,
	
		/*
		 * Match a "commit [SHA1]" line in a git log output.
		 * For instance:
		 * $ git log
		 * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
		 * Author: lgiraudel
		 * Date:   Mon Feb 17 11:18:34 2014 +0100
		 *
		 *     Add of a new line
		 */
		'commit_sha1': /^commit \w{40}$/m
	};


/***/ }),
/* 884 */
/***/ (function(module, exports) {

	Prism.languages.go = Prism.languages.extend('clike', {
		'keyword': /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
		'builtin': /\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,
		'boolean': /\b(?:_|iota|nil|true|false)\b/,
		'operator': /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
		'number': /\b(-?(0x[a-f\d]+|(\d+\.?\d*|\.\d+)(e[-+]?\d+)?)i?)\b/i,
		'string': {
			pattern: /(["'`])(\\[\s\S]|(?!\1)[^\\])*\1/,
			greedy: true
		}
	});
	delete Prism.languages.go['class-name'];


/***/ }),
/* 885 */
/***/ (function(module, exports) {

	Prism.languages.graphql = {
		'comment': /#.*/,
		'string': {
			pattern: /"(?:\\.|[^\\"\r\n])*"/,
			greedy: true
		},
		'number': /(?:\B-|\b)\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b/,
		'boolean': /\b(?:true|false)\b/,
		'variable': /\$[a-z_]\w*/i,
		'directive': {
			pattern: /@[a-z_]\w*/i,
			alias: 'function'
		},
		'attr-name': /[a-z_]\w*(?=\s*:)/i,
		'keyword': [
			{
				pattern: /(fragment\s+(?!on)[a-z_]\w*\s+|\.{3}\s*)on\b/,
				lookbehind: true
			},
			/\b(?:query|fragment|mutation)\b/
		],
		'operator': /!|=|\.{3}/,
		'punctuation': /[!(){}\[\]:=,]/
	};

/***/ }),
/* 886 */
/***/ (function(module, exports) {

	(function(Prism) {
	
		var handlebars_pattern = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/;
	
		Prism.languages.handlebars = Prism.languages.extend('markup', {
			'handlebars': {
				pattern: handlebars_pattern,
				inside: {
					'delimiter': {
						pattern: /^\{\{\{?|\}\}\}?$/i,
						alias: 'punctuation'
					},
					'string': /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
					'number': /\b-?(?:0x[\dA-Fa-f]+|\d*\.?\d+(?:[Ee][+-]?\d+)?)\b/,
					'boolean': /\b(?:true|false)\b/,
					'block': {
						pattern: /^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,
						lookbehind: true,
						alias: 'keyword'
					},
					'brackets': {
						pattern: /\[[^\]]+\]/,
						inside: {
							punctuation: /\[|\]/,
							variable: /[\s\S]+/
						}
					},
					'punctuation': /[!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]/,
					'variable': /[^!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~\s]+/
				}
			}
		});
	
		// Comments are inserted at top so that they can
		// surround markup
		Prism.languages.insertBefore('handlebars', 'tag', {
			'handlebars-comment': {
				pattern: /\{\{![\s\S]*?\}\}/,
				alias: ['handlebars','comment']
			}
		});
	
		// Tokenize all inline Handlebars expressions that are wrapped in {{ }} or {{{ }}}
		// This allows for easy Handlebars + markup highlighting
		Prism.hooks.add('before-highlight', function(env) {
			if (env.language !== 'handlebars') {
				return;
			}
	
			env.tokenStack = [];
	
			env.backupCode = env.code;
			env.code = env.code.replace(handlebars_pattern, function(match) {
				var i = env.tokenStack.length;
				// Check for existing strings
				while (env.backupCode.indexOf('___HANDLEBARS' + i + '___') !== -1)
					++i;
	
				// Create a sparse array
				env.tokenStack[i] = match;
	
				return '___HANDLEBARS' + i + '___';
			});
		});
	
		// Restore env.code for other plugins (e.g. line-numbers)
		Prism.hooks.add('before-insert', function(env) {
			if (env.language === 'handlebars') {
				env.code = env.backupCode;
				delete env.backupCode;
			}
		});
	
		// Re-insert the tokens after highlighting
		// and highlight them with defined grammar
		Prism.hooks.add('after-highlight', function(env) {
			if (env.language !== 'handlebars') {
				return;
			}
	
			for (var i = 0, keys = Object.keys(env.tokenStack); i < keys.length; ++i) {
				var k = keys[i];
				var t = env.tokenStack[k];
	
				// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns
				env.highlightedCode = env.highlightedCode.replace('___HANDLEBARS' + k + '___', Prism.highlight(t, env.grammar, 'handlebars').replace(/\$/g, '$$$$'));
			}
	
			env.element.innerHTML = env.highlightedCode;
		});
	
	}(Prism));


/***/ }),
/* 887 */
/***/ (function(module, exports) {

	Prism.languages.haskell= {
		'comment': {
			pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\/].*|{-[\s\S]*?-})/m,
			lookbehind: true
		},
		'char': /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
		'string': {
			pattern: /"(?:[^\\"]|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\s+\\)*"/,
			greedy: true
		},
		'keyword' : /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
		'import_statement' : {
			// The imported or hidden names are not included in this import
			// statement. This is because we want to highlight those exactly like
			// we do for the names in the program.
			pattern: /((?:\r?\n|\r|^)\s*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
			lookbehind: true,
			inside: {
				'keyword': /\b(?:import|qualified|as|hiding)\b/
			}
		},
		// These are builtin variables only. Constructors are highlighted later as a constant.
		'builtin': /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
		// decimal integers and floating point numbers | octal integers | hexadecimal integers
		'number' : /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
		// Most of this is needed because of the meaning of a single '.'.
		// If it stands alone freely, it is the function composition.
		// It may also be a separator between a module name and an identifier => no
		// operator. If it comes together with other special characters it is an
		// operator too.
		'operator' : /\s\.\s|[-!#$%*+=?&@|~.:<>^\\\/]*\.[-!#$%*+=?&@|~.:<>^\\\/]+|[-!#$%*+=?&@|~.:<>^\\\/]+\.[-!#$%*+=?&@|~.:<>^\\\/]*|[-!#$%*+=?&@|~:<>^\\\/]+|`([A-Z][\w']*\.)*[_a-z][\w']*`/,
		// In Haskell, nearly everything is a variable, do not highlight these.
		'hvariable': /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*\b/,
		'constant': /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*\b/,
		'punctuation' : /[{}[\];(),.:]/
	};


/***/ }),
/* 888 */
/***/ (function(module, exports) {

	Prism.languages.java = Prism.languages.extend('clike', {
		'keyword': /\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\b/,
		'number': /\b0b[01]+\b|\b0x[\da-f]*\.?[\da-fp\-]+\b|\b\d*\.?\d+(?:e[+-]?\d+)?[df]?\b/i,
		'operator': {
			pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\|[|=]?|\*=?|\/=?|%=?|\^=?|[?:~])/m,
			lookbehind: true
		}
	});
	
	Prism.languages.insertBefore('java','function', {
		'annotation': {
			alias: 'punctuation',
			pattern: /(^|[^.])@\w+/,
			lookbehind: true
		}
	});


/***/ }),
/* 889 */
/***/ (function(module, exports) {

	Prism.languages.json = {
		'property': /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/i,
		'string': {
			pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
			greedy: true
		},
		'number': /\b-?(?:0x[\dA-Fa-f]+|\d*\.?\d+(?:[Ee][+-]?\d+)?)\b/,
		'punctuation': /[{}[\]);,]/,
		'operator': /:/g,
		'boolean': /\b(?:true|false)\b/i,
		'null': /\bnull\b/i
	};
	
	Prism.languages.jsonp = Prism.languages.json;


/***/ }),
/* 890 */
/***/ (function(module, exports) {

	(function(Prism) {
		var funcPattern = /\\(?:[^a-z()[\]]|[a-z*]+)/i,
		    insideEqu = {
			    'equation-command': {
				    pattern: funcPattern,
				    alias: 'regex'
			    }
		    };
	
		Prism.languages.latex = {
			'comment': /%.*/m,
			// the verbatim environment prints whitespace to the document
			'cdata':  {
				pattern: /(\\begin\{((?:verbatim|lstlisting)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
				lookbehind: true
			},
			/*
			 * equations can be between $ $ or \( \) or \[ \]
			 * (all are multiline)
			 */
			'equation': [
				{
					pattern: /\$(?:\\[\s\S]|[^\\$])*\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
					inside: insideEqu,
					alias: 'string'
				},
				{
					pattern: /(\\begin\{((?:equation|math|eqnarray|align|multline|gather)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
					lookbehind: true,
					inside: insideEqu,
					alias: 'string'
				}
			],
			/*
			 * arguments which are keywords or references are highlighted
			 * as keywords
			 */
			'keyword': {
				pattern: /(\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
				lookbehind: true
			},
			'url': {
				pattern: /(\\url\{)[^}]+(?=\})/,
				lookbehind: true
			},
			/*
			 * section or chapter headlines are highlighted as bold so that
			 * they stand out more
			 */
			'headline': {
				pattern: /(\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\}(?:\[[^\]]+\])?)/,
				lookbehind: true,
				alias: 'class-name'
			},
			'function': {
				pattern: funcPattern,
				alias: 'selector'
			},
			'punctuation': /[[\]{}&]/
		};
	})(Prism);


/***/ }),
/* 891 */
/***/ (function(module, exports) {

	/* FIXME :
	 :extend() is not handled specifically : its highlighting is buggy.
	 Mixin usage must be inside a ruleset to be highlighted.
	 At-rules (e.g. import) containing interpolations are buggy.
	 Detached rulesets are highlighted as at-rules.
	 A comment before a mixin usage prevents the latter to be properly highlighted.
	 */
	
	Prism.languages.less = Prism.languages.extend('css', {
		'comment': [
			/\/\*[\s\S]*?\*\//,
			{
				pattern: /(^|[^\\])\/\/.*/,
				lookbehind: true
			}
		],
		'atrule': {
			pattern: /@[\w-]+?(?:\([^{}]+\)|[^(){};])*?(?=\s*\{)/i,
			inside: {
				'punctuation': /[:()]/
			}
		},
		// selectors and mixins are considered the same
		'selector': {
			pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\([^{}]*\)|[^{};@])*?(?=\s*\{)/,
			inside: {
				// mixin parameters
				'variable': /@+[\w-]+/
			}
		},
	
		'property': /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,
		'punctuation': /[{}();:,]/,
		'operator': /[+\-*\/]/
	});
	
	// Invert function and punctuation positions
	Prism.languages.insertBefore('less', 'punctuation', {
		'function': Prism.languages.less.function
	});
	
	Prism.languages.insertBefore('less', 'property', {
		'variable': [
			// Variable declaration (the colon must be consumed!)
			{
				pattern: /@[\w-]+\s*:/,
				inside: {
					"punctuation": /:/
				}
			},
	
			// Variable usage
			/@@?[\w-]+/
		],
		'mixin-usage': {
			pattern: /([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/,
			lookbehind: true,
			alias: 'function'
		}
	});


/***/ }),
/* 892 */
/***/ (function(module, exports) {

	Prism.languages.makefile = {
		'comment': {
			pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
			lookbehind: true
		},
		'string': {
			pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
	
		// Built-in target names
		'builtin': /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
	
		// Targets
		'symbol': {
			pattern: /^[^:=\r\n]+(?=\s*:(?!=))/m,
			inside: {
				'variable': /\$+(?:[^(){}:#=\s]+|(?=[({]))/
			}
		},
		'variable': /\$+(?:[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
	
		'keyword': [
			// Directives
			/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
			// Functions
			{
				pattern: /(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,
				lookbehind: true
			}
		],
		'operator': /(?:::|[?:+!])?=|[|@]/,
		'punctuation': /[:;(){}]/
	};

/***/ }),
/* 893 */
/***/ (function(module, exports) {

	Prism.languages.markdown = Prism.languages.extend('markup', {});
	Prism.languages.insertBefore('markdown', 'prolog', {
		'blockquote': {
			// > ...
			pattern: /^>(?:[\t ]*>)*/m,
			alias: 'punctuation'
		},
		'code': [
			{
				// Prefixed by 4 spaces or 1 tab
				pattern: /^(?: {4}|\t).+/m,
				alias: 'keyword'
			},
			{
				// `code`
				// ``code``
				pattern: /``.+?``|`[^`\n]+`/,
				alias: 'keyword'
			}
		],
		'title': [
			{
				// title 1
				// =======
	
				// title 2
				// -------
				pattern: /\w+.*(?:\r?\n|\r)(?:==+|--+)/,
				alias: 'important',
				inside: {
					punctuation: /==+$|--+$/
				}
			},
			{
				// # title 1
				// ###### title 6
				pattern: /(^\s*)#+.+/m,
				lookbehind: true,
				alias: 'important',
				inside: {
					punctuation: /^#+|#+$/
				}
			}
		],
		'hr': {
			// ***
			// ---
			// * * *
			// -----------
			pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
			lookbehind: true,
			alias: 'punctuation'
		},
		'list': {
			// * item
			// + item
			// - item
			// 1. item
			pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
			lookbehind: true,
			alias: 'punctuation'
		},
		'url-reference': {
			// [id]: http://example.com "Optional title"
			// [id]: http://example.com 'Optional title'
			// [id]: http://example.com (Optional title)
			// [id]: <http://example.com> "Optional title"
			pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
			inside: {
				'variable': {
					pattern: /^(!?\[)[^\]]+/,
					lookbehind: true
				},
				'string': /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
				'punctuation': /^[\[\]!:]|[<>]/
			},
			alias: 'url'
		},
		'bold': {
			// **strong**
			// __strong__
	
			// Allow only one line break
			pattern: /(^|[^\\])(\*\*|__)(?:(?:\r?\n|\r)(?!\r?\n|\r)|.)+?\2/,
			lookbehind: true,
			inside: {
				'punctuation': /^\*\*|^__|\*\*$|__$/
			}
		},
		'italic': {
			// *em*
			// _em_
	
			// Allow only one line break
			pattern: /(^|[^\\])([*_])(?:(?:\r?\n|\r)(?!\r?\n|\r)|.)+?\2/,
			lookbehind: true,
			inside: {
				'punctuation': /^[*_]|[*_]$/
			}
		},
		'url': {
			// [example](http://example.com "Optional title")
			// [example] [id]
			pattern: /!?\[[^\]]+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[[^\]\n]*\])/,
			inside: {
				'variable': {
					pattern: /(!?\[)[^\]]+(?=\]$)/,
					lookbehind: true
				},
				'string': {
					pattern: /"(?:\\.|[^"\\])*"(?=\)$)/
				}
			}
		}
	});
	
	Prism.languages.markdown['bold'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);
	Prism.languages.markdown['italic'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);
	Prism.languages.markdown['bold'].inside['italic'] = Prism.util.clone(Prism.languages.markdown['italic']);
	Prism.languages.markdown['italic'].inside['bold'] = Prism.util.clone(Prism.languages.markdown['bold']);

/***/ }),
/* 894 */
/***/ (function(module, exports) {

	Prism.languages.objectivec = Prism.languages.extend('c', {
		'keyword': /\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
		'string': /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
		'operator': /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
	});


/***/ }),
/* 895 */
/***/ (function(module, exports) {

	Prism.languages.ocaml = {
		'comment': /\(\*[\s\S]*?\*\)/,
		'string': [
			{
				pattern: /"(?:\\.|[^\\\r\n"])*"/,
				greedy: true
			},
			{
				pattern: /(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,
				greedy: true
			}
		],
		'number': /\b-?(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,
		'type': {
			pattern: /\B['`]\w*/,
			alias: 'variable'
		},
		'directive': {
			pattern: /\B#\w+/,
			alias: 'function'
		},
		'keyword': /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\b/,
		'boolean': /\b(?:false|true)\b/,
		// Custom operators are allowed
		'operator': /:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\b/,
		'punctuation': /[(){}\[\]|_.,:;]/
	};

/***/ }),
/* 896 */
/***/ (function(module, exports) {

	Prism.languages.insertBefore('php', 'variable', {
		'this': /\$this\b/,
		'global': /\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\b/,
		'scope': {
			pattern: /\b[\w\\]+::/,
			inside: {
				keyword: /static|self|parent/,
				punctuation: /::|\\/
			}
		}
	});

/***/ }),
/* 897 */
/***/ (function(module, exports) {

	/**
	 * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/
	 * Modified by Miles Johnson: http://milesj.me
	 *
	 * Supports the following:
	 * 		- Extends clike syntax
	 * 		- Support for PHP 5.3+ (namespaces, traits, generators, etc)
	 * 		- Smarter constant and function matching
	 *
	 * Adds the following new token classes:
	 * 		constant, delimiter, variable, function, package
	 */
	
	Prism.languages.php = Prism.languages.extend('clike', {
		'keyword': /\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/i,
		'constant': /\b[A-Z0-9_]{2,}\b/,
		'comment': {
			pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
			lookbehind: true
		}
	});
	
	// Shell-like comments are matched after strings, because they are less
	// common than strings containing hashes...
	Prism.languages.insertBefore('php', 'class-name', {
		'shell-comment': {
			pattern: /(^|[^\\])#.*/,
			lookbehind: true,
			alias: 'comment'
		}
	});
	
	Prism.languages.insertBefore('php', 'keyword', {
		'delimiter': {
			pattern: /\?>|<\?(?:php|=)?/i,
			alias: 'important'
		},
		'variable': /\$\w+\b/i,
		'package': {
			pattern: /(\\|namespace\s+|use\s+)[\w\\]+/,
			lookbehind: true,
			inside: {
				punctuation: /\\/
			}
		}
	});
	
	// Must be defined after the function pattern
	Prism.languages.insertBefore('php', 'operator', {
		'property': {
			pattern: /(->)[\w]+/,
			lookbehind: true
		}
	});
	
	// Add HTML support if the markup language exists
	if (Prism.languages.markup) {
	
		// Tokenize all inline PHP blocks that are wrapped in <?php ?>
		// This allows for easy PHP + markup highlighting
		Prism.hooks.add('before-highlight', function(env) {
			if (env.language !== 'php' || !/(?:<\?php|<\?)/ig.test(env.code)) {
				return;
			}
	
			env.tokenStack = [];
	
			env.backupCode = env.code;
			env.code = env.code.replace(/(?:<\?php|<\?)[\s\S]*?(?:\?>|$)/ig, function(match) {
				var i = env.tokenStack.length;
				// Check for existing strings
				while (env.backupCode.indexOf('___PHP' + i + '___') !== -1)
					++i;
	
				// Create a sparse array
				env.tokenStack[i] = match;
	
				return '___PHP' + i + '___';
			});
	
			// Switch the grammar to markup
			env.grammar = Prism.languages.markup;
		});
	
		// Restore env.code for other plugins (e.g. line-numbers)
		Prism.hooks.add('before-insert', function(env) {
			if (env.language === 'php' && env.backupCode) {
				env.code = env.backupCode;
				delete env.backupCode;
			}
		});
	
		// Re-insert the tokens after highlighting
		Prism.hooks.add('after-highlight', function(env) {
			if (env.language !== 'php' || !env.tokenStack) {
				return;
			}
	
			// Switch the grammar back
			env.grammar = Prism.languages.php;
	
			for (var i = 0, keys = Object.keys(env.tokenStack); i < keys.length; ++i) {
				var k = keys[i];
				var t = env.tokenStack[k];
	
				// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns
				env.highlightedCode = env.highlightedCode.replace('___PHP' + k + '___',
						"<span class=\"token php language-php\">" +
						Prism.highlight(t, env.grammar, 'php').replace(/\$/g, '$$$$') +
						"</span>");
			}
	
			env.element.innerHTML = env.highlightedCode;
		});
	}


/***/ }),
/* 898 */
/***/ (function(module, exports) {

	Prism.languages.python = {
		'comment': {
			pattern: /(^|[^\\])#.*/,
			lookbehind: true
		},
		'triple-quoted-string': {
			pattern: /("""|''')[\s\S]+?\1/,
			greedy: true,
			alias: 'string'
		},
		'string': {
			pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
		'function': {
			pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
			lookbehind: true
		},
		'class-name': {
			pattern: /(\bclass\s+)\w+/i,
			lookbehind: true
		},
		'keyword': /\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\b/,
		'builtin':/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
		'boolean': /\b(?:True|False|None)\b/,
		'number': /\b-?(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,
		'operator': /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:or|and|not)\b/,
		'punctuation': /[{}[\];(),.:]/
	};


/***/ }),
/* 899 */
/***/ (function(module, exports) {

	Prism.languages.reason = Prism.languages.extend('clike', {
		'comment': {
			pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
			lookbehind: true
		},
		'string': {
			pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
			greedy: true
		},
		// 'class-name' must be matched *after* 'constructor' defined below
		'class-name': /\b[A-Z]\w*/,
		'keyword': /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
		'operator': /\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/
	});
	Prism.languages.insertBefore('reason', 'class-name', {
		'character': {
			pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
			alias: 'string'
		},
		'constructor': {
			// Negative look-ahead prevents from matching things like String.capitalize
			pattern: /\b[A-Z]\w*\b(?!\s*\.)/,
			alias: 'variable'
		},
		'label': {
			pattern: /\b[a-z]\w*(?=::)/,
			alias: 'symbol'
		}
	});
	
	// We can't match functions property, so let's not even try.
	delete Prism.languages.reason.function;

/***/ }),
/* 900 */
/***/ (function(module, exports) {

	/**
	 * Original by Samuel Flores
	 *
	 * Adds the following new token classes:
	 * 		constant, builtin, variable, symbol, regex
	 */
	(function(Prism) {
		Prism.languages.ruby = Prism.languages.extend('clike', {
			'comment': [
				/#(?!\{[^\r\n]*?\}).*/,
				/^=begin(?:\r?\n|\r)(?:.*(?:\r?\n|\r))*?=end/m
			],
			'keyword': /\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\b/
		});
	
		var interpolation = {
			pattern: /#\{[^}]+\}/,
			inside: {
				'delimiter': {
					pattern: /^#\{|\}$/,
					alias: 'tag'
				},
				rest: Prism.util.clone(Prism.languages.ruby)
			}
		};
	
		Prism.languages.insertBefore('ruby', 'keyword', {
			'regex': [
				{
					pattern: /%r([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[gim]{0,3}/,
					greedy: true,
					inside: {
						'interpolation': interpolation
					}
				},
				{
					pattern: /%r\((?:[^()\\]|\\[\s\S])*\)[gim]{0,3}/,
					greedy: true,
					inside: {
						'interpolation': interpolation
					}
				},
				{
					// Here we need to specifically allow interpolation
					pattern: /%r\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}[gim]{0,3}/,
					greedy: true,
					inside: {
						'interpolation': interpolation
					}
				},
				{
					pattern: /%r\[(?:[^\[\]\\]|\\[\s\S])*\][gim]{0,3}/,
					greedy: true,
					inside: {
						'interpolation': interpolation
					}
				},
				{
					pattern: /%r<(?:[^<>\\]|\\[\s\S])*>[gim]{0,3}/,
					greedy: true,
					inside: {
						'interpolation': interpolation
					}
				},
				{
					pattern: /(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/,
					lookbehind: true,
					greedy: true
				}
			],
			'variable': /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
			'symbol': /:[a-zA-Z_]\w*(?:[?!]|\b)/
		});
	
		Prism.languages.insertBefore('ruby', 'number', {
			'builtin': /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,
			'constant': /\b[A-Z]\w*(?:[?!]|\b)/
		});
	
		Prism.languages.ruby.string = [
			{
				pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			},
			{
				pattern: /%[qQiIwWxs]?\((?:[^()\\]|\\[\s\S])*\)/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			},
			{
				// Here we need to specifically allow interpolation
				pattern: /%[qQiIwWxs]?\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			},
			{
				pattern: /%[qQiIwWxs]?\[(?:[^\[\]\\]|\\[\s\S])*\]/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			},
			{
				pattern: /%[qQiIwWxs]?<(?:[^<>\\]|\\[\s\S])*>/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			},
			{
				pattern: /("|')(?:#\{[^}]+\}|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
				greedy: true,
				inside: {
					'interpolation': interpolation
				}
			}
		];
	}(Prism));

/***/ }),
/* 901 */
/***/ (function(module, exports) {

	/* TODO
		Add support for Markdown notation inside doc comments
		Add support for nested block comments...
		Match closure params even when not followed by dash or brace
		Add better support for macro definition
	*/
	
	Prism.languages.rust = {
		'comment': [
			{
				pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
				lookbehind: true
			},
			{
				pattern: /(^|[^\\:])\/\/.*/,
				lookbehind: true
			}
		],
		'string': [
			{
				pattern: /b?r(#*)"(?:\\.|(?!"\1)[^\\\r\n])*"\1/,
				greedy: true
			},
			{
				pattern: /b?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
				greedy: true
			}
		],
		'keyword': /\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\b/,
	
		'attribute': {
			pattern: /#!?\[.+?\]/,
			greedy: true,
			alias: 'attr-name'
		},
	
		'function': [
			/\w+(?=\s*\()/,
			// Macros can use parens or brackets
			/\w+!(?=\s*\(|\[)/
		],
		'macro-rules': {
			pattern: /\w+!/,
			alias: 'function'
		},
	
		// Hex, oct, bin, dec numbers with visual separators and type suffix
		'number': /\b-?(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\d(?:_?\d)*)?\.?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\b/,
	
		// Closure params should not be confused with bitwise OR |
		'closure-params': {
			pattern: /\|[^|]*\|(?=\s*[{-])/,
			inside: {
				'punctuation': /[|:,]/,
				'operator': /[&*]/
			}
		},
		'punctuation': /[{}[\];(),:]|\.+|->/,
		'operator': /[-+*\/%!^=]=?|@|&[&=]?|\|[|=]?|<<?=?|>>?=?/
	};

/***/ }),
/* 902 */
/***/ (function(module, exports) {

	(function(Prism) {
		Prism.languages.sass = Prism.languages.extend('css', {
			// Sass comments don't need to be closed, only indented
			'comment': {
				pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,
				lookbehind: true
			}
		});
	
		Prism.languages.insertBefore('sass', 'atrule', {
			// We want to consume the whole line
			'atrule-line': {
				// Includes support for = and + shortcuts
				pattern: /^(?:[ \t]*)[@+=].+/m,
				inside: {
					'atrule': /(?:@[\w-]+|[+=])/m
				}
			}
		});
		delete Prism.languages.sass.atrule;
	
	
		var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
		var operator = [
			/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/,
			{
				pattern: /(\s+)-(?=\s)/,
				lookbehind: true
			}
		];
	
		Prism.languages.insertBefore('sass', 'property', {
			// We want to consume the whole line
			'variable-line': {
				pattern: /^[ \t]*\$.+/m,
				inside: {
					'punctuation': /:/,
					'variable': variable,
					'operator': operator
				}
			},
			// We want to consume the whole line
			'property-line': {
				pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,
				inside: {
					'property': [
						/[^:\s]+(?=\s*:)/,
						{
							pattern: /(:)[^:\s]+/,
							lookbehind: true
						}
					],
					'punctuation': /:/,
					'variable': variable,
					'operator': operator,
					'important': Prism.languages.sass.important
				}
			}
		});
		delete Prism.languages.sass.property;
		delete Prism.languages.sass.important;
	
		// Now that whole lines for other patterns are consumed,
		// what's left should be selectors
		delete Prism.languages.sass.selector;
		Prism.languages.insertBefore('sass', 'punctuation', {
			'selector': {
				pattern: /([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,
				lookbehind: true
			}
		});
	
	}(Prism));

/***/ }),
/* 903 */
/***/ (function(module, exports) {

	Prism.languages.scss = Prism.languages.extend('css', {
		'comment': {
			pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
			lookbehind: true
		},
		'atrule': {
			pattern: /@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,
			inside: {
				'rule': /@[\w-]+/
				// See rest below
			}
		},
		// url, compassified
		'url': /(?:[-a-z]+-)*url(?=\()/i,
		// CSS selector regex is not appropriate for Sass
		// since there can be lot more things (var, @ directive, nesting..)
		// a selector must start at the end of a property or after a brace (end of other rules or nesting)
		// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
		// the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
		// can "pass" as a selector- e.g: proper#{$erty})
		// this one was hard to do, so please be careful if you edit this one :)
		'selector': {
			// Initial look-ahead is used to prevent matching of blank selectors
			pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()]|&|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,
			inside: {
				'parent': {
					pattern: /&/,
					alias: 'important'
				},
				'placeholder': /%[-\w]+/,
				'variable': /\$[-\w]+|#\{\$[-\w]+\}/
			}
		}
	});
	
	Prism.languages.insertBefore('scss', 'atrule', {
		'keyword': [
			/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,
			{
				pattern: /( +)(?:from|through)(?= )/,
				lookbehind: true
			}
		]
	});
	
	Prism.languages.scss.property = {
		pattern: /(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/i,
		inside: {
			'variable': /\$[-\w]+|#\{\$[-\w]+\}/
		}
	};
	
	Prism.languages.insertBefore('scss', 'important', {
		// var and interpolated vars
		'variable': /\$[-\w]+|#\{\$[-\w]+\}/
	});
	
	Prism.languages.insertBefore('scss', 'function', {
		'placeholder': {
			pattern: /%[-\w]+/,
			alias: 'selector'
		},
		'statement': {
			pattern: /\B!(?:default|optional)\b/i,
			alias: 'keyword'
		},
		'boolean': /\b(?:true|false)\b/,
		'null': /\bnull\b/,
		'operator': {
			pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,
			lookbehind: true
		}
	});
	
	Prism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);

/***/ }),
/* 904 */
/***/ (function(module, exports) {

	Prism.languages.sql= {
		'comment': {
			pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
			lookbehind: true
		},
		'string' : {
			pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\])*\2/,
			greedy: true,
			lookbehind: true
		},
		'variable': /@[\w.$]+|@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
		'function': /\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\s*\()/i, // Should we highlight user defined functions too?
		'keyword': /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATE(?:TIME)?|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITER(?:S)?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\b/i,
		'boolean': /\b(?:TRUE|FALSE|NULL)\b/i,
		'number': /\b-?(?:0x)?\d*\.?[\da-f]+\b/,
		'operator': /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
		'punctuation': /[;[\]()`,.]/
	};

/***/ }),
/* 905 */
/***/ (function(module, exports) {

	(function (Prism) {
		var inside = {
			'url': /url\((["']?).*?\1\)/i,
			'string': {
				pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
				greedy: true
			},
			'interpolation': null, // See below
			'func': null, // See below
			'important': /\B!(?:important|optional)\b/i,
			'keyword': {
				pattern: /(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,
				lookbehind: true
			},
			'hexcode': /#[\da-f]{3,6}/i,
			'number': /\b\d+(?:\.\d+)?%?/,
			'boolean': /\b(?:true|false)\b/,
			'operator': [
				// We want non-word chars around "-" because it is
				// accepted in property names.
				/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.+|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
			],
			'punctuation': /[{}()\[\];:,]/
		};
	
		inside['interpolation'] = {
			pattern: /\{[^\r\n}:]+\}/,
			alias: 'variable',
			inside: Prism.util.clone(inside)
		};
		inside['func'] = {
			pattern: /[\w-]+\([^)]*\).*/,
			inside: {
				'function': /^[^(]+/,
				rest: Prism.util.clone(inside)
			}
		};
	
		Prism.languages.stylus = {
			'comment': {
				pattern: /(^|[^\\])(\/\*[\s\S]*?\*\/|\/\/.*)/,
				lookbehind: true
			},
			'atrule-declaration': {
				pattern: /(^\s*)@.+/m,
				lookbehind: true,
				inside: {
					'atrule': /^@[\w-]+/,
					rest: inside
				}
			},
			'variable-declaration': {
				pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:(?:\{[^}]*\}|.+)|$)/m,
				lookbehind: true,
				inside: {
					'variable': /^\S+/,
					rest: inside
				}
			},
	
			'statement': {
				pattern: /(^[ \t]*)(?:if|else|for|return|unless)[ \t]+.+/m,
				lookbehind: true,
				inside: {
					keyword: /^\S+/,
					rest: inside
				}
			},
	
			// A property/value pair cannot end with a comma or a brace
			// It cannot have indented content unless it ended with a semicolon
			'property-declaration': {
				pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(\r?\n|\r)(?:\{|\2[ \t]+)))/m,
				lookbehind: true,
				inside: {
					'property': {
						pattern: /^[^\s:]+/,
						inside: {
							'interpolation': inside.interpolation
						}
					},
					rest: inside
				}
			},
	
	
	
			// A selector can contain parentheses only as part of a pseudo-element
			// It can span multiple lines.
			// It must end with a comma or an accolade or have indented content.
			'selector': {
				pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,
				lookbehind: true,
				inside: {
					'interpolation': inside.interpolation,
					'punctuation': /[{},]/
				}
			},
	
			'func': inside.func,
			'string': inside.string,
			'interpolation': inside.interpolation,
			'punctuation': /[{}()\[\];:.]/
		};
	}(Prism));

/***/ }),
/* 906 */
/***/ (function(module, exports) {

	// issues: nested multiline comments
	Prism.languages.swift = Prism.languages.extend('clike', {
		'string': {
			pattern: /("|')(\\(?:\((?:[^()]|\([^)]+\))+\)|\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
			greedy: true,
			inside: {
				'interpolation': {
					pattern: /\\\((?:[^()]|\([^)]+\))+\)/,
					inside: {
						delimiter: {
							pattern: /^\\\(|\)$/,
							alias: 'variable'
						}
						// See rest below
					}
				}
			}
		},
		'keyword': /\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\b/,
		'number': /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
		'constant': /\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
		'atrule': /@\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\b/,
		'builtin': /\b(?:[A-Z]\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\b/
	});
	Prism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.util.clone(Prism.languages.swift);

/***/ }),
/* 907 */
/***/ (function(module, exports) {

	Prism.languages.typescript = Prism.languages.extend('javascript', {
		// From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words
		'keyword': /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|false|true|module|declare|constructor|string|Function|any|number|boolean|Array|symbol|namespace|abstract|require|type)\b/
	});
	
	Prism.languages.ts = Prism.languages.typescript;

/***/ }),
/* 908 */
/***/ (function(module, exports) {

	Prism.languages.vim = {
		'string': /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
		'comment': /".*/,
		'function': /\w+(?=\()/,
		'keyword': /\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
		'builtin': /\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\b/,
		'number': /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
		'operator': /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
		'punctuation': /[{}[\](),;:]/
	};

/***/ }),
/* 909 */
/***/ (function(module, exports) {

	Prism.languages.yaml = {
		'scalar': {
			pattern: /([\-:]\s*(?:![^\s]+)?[ \t]*[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/,
			lookbehind: true,
			alias: 'string'
		},
		'comment': /#.*/,
		'key': {
			pattern: /(\s*(?:^|[:\-,[{\r\n?])[ \t]*(?:![^\s]+)?[ \t]*)[^\r\n{[\]},#\s]+?(?=\s*:\s)/,
			lookbehind: true,
			alias: 'atrule'
		},
		'directive': {
			pattern: /(^[ \t]*)%.+/m,
			lookbehind: true,
			alias: 'important'
		},
		'datetime': {
			pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?)(?=[ \t]*(?:$|,|]|}))/m,
			lookbehind: true,
			alias: 'number'
		},
		'boolean': {
			pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:true|false)[ \t]*(?=$|,|]|})/im,
			lookbehind: true,
			alias: 'important'
		},
		'null': {
			pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:null|~)[ \t]*(?=$|,|]|})/im,
			lookbehind: true,
			alias: 'important'
		},
		'string': {
			pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)("|')(?:(?!\2)[^\\\r\n]|\\.)*\2(?=[ \t]*(?:$|,|]|}))/m,
			lookbehind: true,
			greedy: true
		},
		'number': {
			pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)[+\-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)[ \t]*(?=$|,|]|})/im,
			lookbehind: true
		},
		'tag': /![^\s]+/,
		'important': /[&*][\w]+/,
		'punctuation': /---|[:[\]{}\-,|>?]|\.\.\./
	};


/***/ }),
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */
/***/ (function(module, exports) {

	/*!
	  * prr
	  * (c) 2013 Rod Vagg <rod@vagg.org>
	  * https://github.com/rvagg/prr
	  * License: MIT
	  */
	
	(function (name, context, definition) {
	  if (typeof module != 'undefined' && module.exports)
	    module.exports = definition()
	  else
	    context[name] = definition()
	})('prr', this, function() {
	
	  var setProperty = typeof Object.defineProperty == 'function'
	      ? function (obj, key, options) {
	          Object.defineProperty(obj, key, options)
	          return obj
	        }
	      : function (obj, key, options) { // < es5
	          obj[key] = options.value
	          return obj
	        }
	
	    , makeOptions = function (value, options) {
	        var oo = typeof options == 'object'
	          , os = !oo && typeof options == 'string'
	          , op = function (p) {
	              return oo
	                ? !!options[p]
	                : os
	                  ? options.indexOf(p[0]) > -1
	                  : false
	            }
	
	        return {
	            enumerable   : op('enumerable')
	          , configurable : op('configurable')
	          , writable     : op('writable')
	          , value        : value
	        }
	      }
	
	    , prr = function (obj, key, value, options) {
	        var k
	
	        options = makeOptions(value, options)
	
	        if (typeof key == 'object') {
	          for (k in key) {
	            if (Object.hasOwnProperty.call(key, k)) {
	              options.value = key[k]
	              setProperty(obj, k, options)
	            }
	          }
	          return obj
	        }
	
	        return setProperty(obj, key, options)
	      }
	
	  return prr
	})

/***/ }),
/* 914 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createAsyncContext = __webpack_require__(402);
	
	var _createAsyncContext2 = _interopRequireDefault(_createAsyncContext);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AsyncComponentProvider = function (_React$Component) {
	  _inherits(AsyncComponentProvider, _React$Component);
	
	  function AsyncComponentProvider() {
	    _classCallCheck(this, AsyncComponentProvider);
	
	    return _possibleConstructorReturn(this, (AsyncComponentProvider.__proto__ || Object.getPrototypeOf(AsyncComponentProvider)).apply(this, arguments));
	  }
	
	  _createClass(AsyncComponentProvider, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.asyncContext = this.props.asyncContext || (0, _createAsyncContext2.default)();
	      this.rehydrateState = this.props.rehydrateState;
	    }
	  }, {
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var _this2 = this;
	
	      return {
	        asyncComponents: {
	          getNextId: this.asyncContext.getNextId,
	          resolved: this.asyncContext.resolved,
	          shouldRehydrate: function shouldRehydrate(id) {
	            var resolved = _this2.rehydrateState.resolved[id];
	            delete _this2.rehydrateState.resolved[id];
	            return resolved;
	          }
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.Children.only(this.props.children);
	    }
	  }]);
	
	  return AsyncComponentProvider;
	}(_react2.default.Component);
	
	AsyncComponentProvider.propTypes = {
	  children: _propTypes2.default.node.isRequired,
	  asyncContext: _propTypes2.default.shape({
	    getNextId: _propTypes2.default.func.isRequired,
	    resolved: _propTypes2.default.func.isRequired,
	    getState: _propTypes2.default.func.isRequired
	  }),
	  rehydrateState: _propTypes2.default.shape({
	    resolved: _propTypes2.default.object
	  })
	};
	
	AsyncComponentProvider.defaultProps = {
	  asyncContext: undefined,
	  rehydrateState: {
	    resolved: {}
	  }
	};
	
	AsyncComponentProvider.childContextTypes = {
	  asyncComponents: _propTypes2.default.shape({
	    getNextId: _propTypes2.default.func.isRequired,
	    resolved: _propTypes2.default.func.isRequired,
	    shouldRehydrate: _propTypes2.default.func.isRequired
	  }).isRequired
	};
	
	exports.default = AsyncComponentProvider;

/***/ }),
/* 915 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var validSSRModes = ['resolve', 'defer', 'boundary'];
	
	function asyncComponent(config) {
	  var name = config.name,
	      resolve = config.resolve,
	      _config$autoResolveES = config.autoResolveES2015Default,
	      autoResolveES2015Default = _config$autoResolveES === undefined ? true : _config$autoResolveES,
	      _config$serverMode = config.serverMode,
	      serverMode = _config$serverMode === undefined ? 'resolve' : _config$serverMode,
	      LoadingComponent = config.LoadingComponent,
	      ErrorComponent = config.ErrorComponent;
	
	
	  if (validSSRModes.indexOf(serverMode) === -1) {
	    throw new Error('Invalid serverMode provided to asyncComponent');
	  }
	
	  var env = ['node', 'browser'].indexOf(config.env) > -1 ? config.env : typeof window === 'undefined' ? 'node' : 'browser';
	
	  var sharedState = {
	    // A unique id we will assign to our async component which is especially
	    // useful when rehydrating server side rendered async components.
	    id: null,
	    // This will be use to hold the resolved module allowing sharing across
	    // instances.
	    // NOTE: When using React Hot Loader this reference will become null.
	    module: null,
	    // If an error occurred during a resolution it will be stored here.
	    error: null,
	    // Allows us to share the resolver promise across instances.
	    resolver: null
	
	    // Takes the given module and if it has a ".default" the ".default" will
	    // be returned. i.e. handy when you could be dealing with es6 imports.
	  };var es6Resolve = function es6Resolve(x) {
	    return autoResolveES2015Default && x != null && (typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object') && x.default ? x.default : x;
	  };
	
	  var getResolver = function getResolver() {
	    if (sharedState.resolver == null) {
	      try {
	        // Wrap whatever the user returns in Promise.resolve to ensure a Promise
	        // is always returned.
	        var resolver = resolve();
	        sharedState.resolver = Promise.resolve(resolver);
	      } catch (err) {
	        sharedState.resolver = Promise.reject(err);
	      }
	    }
	    return sharedState.resolver;
	  };
	
	  var AsyncComponent = function (_React$Component) {
	    _inherits(AsyncComponent, _React$Component);
	
	    function AsyncComponent(props, context) {
	      _classCallCheck(this, AsyncComponent);
	
	      // We have to set the id in the constructor because a RHL seems
	      // to recycle the module and therefore the id closure will be null.
	      // We can't put it in componentWillMount as RHL hot swaps the new code
	      // so the mount call will not happen (but the ctor does).
	      var _this = _possibleConstructorReturn(this, (AsyncComponent.__proto__ || Object.getPrototypeOf(AsyncComponent)).call(this, props, context));
	
	      if (_this.context.asyncComponents != null && !sharedState.id) {
	        sharedState.id = _this.context.asyncComponents.getNextId();
	      }
	      return _this;
	    }
	
	    // @see react-async-bootstrapper
	
	
	    _createClass(AsyncComponent, [{
	      key: 'asyncBootstrap',
	      value: function asyncBootstrap() {
	        var _this2 = this;
	
	        var _context = this.context,
	            asyncComponents = _context.asyncComponents,
	            asyncComponentsAncestor = _context.asyncComponentsAncestor;
	        var shouldRehydrate = asyncComponents.shouldRehydrate;
	
	
	        var doResolve = function doResolve() {
	          return _this2.resolveModule().then(function (module) {
	            return module !== undefined;
	          });
	        };
	
	        if (env === 'browser') {
	          return shouldRehydrate(sharedState.id) ? doResolve() : false;
	        }
	
	        // node
	        var isChildOfBoundary = asyncComponentsAncestor != null && asyncComponentsAncestor.isBoundary;
	        return serverMode === 'defer' || isChildOfBoundary ? false : doResolve();
	      }
	    }, {
	      key: 'getChildContext',
	      value: function getChildContext() {
	        if (this.context.asyncComponents == null) {
	          return {
	            asyncComponentsAncestor: null
	          };
	        }
	
	        return {
	          asyncComponentsAncestor: {
	            isBoundary: serverMode === 'boundary'
	          }
	        };
	      }
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        this.setState({
	          module: sharedState.module
	        });
	        if (sharedState.error) {
	          this.registerErrorState(sharedState.error);
	        }
	      }
	    }, {
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (this.shouldResolve()) {
	          this.resolveModule();
	        }
	      }
	    }, {
	      key: 'shouldResolve',
	      value: function shouldResolve() {
	        return sharedState.module == null && sharedState.error == null && !this.resolving && typeof window !== 'undefined';
	      }
	    }, {
	      key: 'resolveModule',
	      value: function resolveModule() {
	        var _this3 = this;
	
	        this.resolving = true;
	
	        return getResolver().then(function (module) {
	          if (_this3.unmounted) {
	            return undefined;
	          }
	          if (_this3.context.asyncComponents != null) {
	            _this3.context.asyncComponents.resolved(sharedState.id);
	          }
	          sharedState.module = module;
	          if (env === 'browser') {
	            _this3.setState({
	              module: module
	            });
	          }
	          _this3.resolving = false;
	          return module;
	        }).catch(function (error) {
	          if (_this3.unmounted) {
	            return undefined;
	          }
	          if (env === 'node' || env === 'browser' && !ErrorComponent) {
	            // We will at least log the error so that user isn't completely
	            // unaware of an error occurring.
	            // eslint-disable-next-line no-console
	            console.warn('Failed to resolve asyncComponent');
	            // eslint-disable-next-line no-console
	            console.warn(error);
	          }
	          sharedState.error = error;
	          _this3.registerErrorState(error);
	          _this3.resolving = false;
	          return undefined;
	        });
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        this.unmounted = true;
	      }
	    }, {
	      key: 'registerErrorState',
	      value: function registerErrorState(error) {
	        var _this4 = this;
	
	        if (env === 'browser') {
	          setTimeout(function () {
	            if (!_this4.unmounted) {
	              _this4.setState({
	                error: error
	              });
	            }
	          }, 16);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _state = this.state,
	            module = _state.module,
	            error = _state.error;
	
	        if (error) {
	          return ErrorComponent ? _react2.default.createElement(ErrorComponent, _extends({}, this.props, { error: error })) : null;
	        }
	
	        // This is as workaround for React Hot Loader support.  When using
	        // RHL the local component reference will be killed by any change
	        // to the component, this will be our signal to know that we need to
	        // re-resolve it.
	        if (this.shouldResolve()) {
	          this.resolveModule();
	        }
	
	        var Component = es6Resolve(module);
	        return Component ? _react2.default.createElement(Component, this.props) : LoadingComponent ? _react2.default.createElement(LoadingComponent, this.props) : null;
	      }
	    }]);
	
	    return AsyncComponent;
	  }(_react2.default.Component);
	
	  AsyncComponent.displayName = name || 'AsyncComponent';
	
	  AsyncComponent.contextTypes = {
	    asyncComponentsAncestor: _propTypes2.default.shape({
	      isBoundary: _propTypes2.default.bool
	    }),
	    asyncComponents: _propTypes2.default.shape({
	      getNextId: _propTypes2.default.func.isRequired,
	      resolved: _propTypes2.default.func.isRequired,
	      shouldRehydrate: _propTypes2.default.func.isRequired
	    })
	  };
	
	  AsyncComponent.childContextTypes = {
	    asyncComponentsAncestor: _propTypes2.default.shape({
	      isBoundary: _propTypes2.default.bool
	    })
	  };
	
	  return AsyncComponent;
	}
	
	exports.default = asyncComponent;

/***/ }),
/* 916 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.asyncComponent = exports.createAsyncContext = exports.AsyncComponentProvider = undefined;
	
	var _AsyncComponentProvider = __webpack_require__(914);
	
	var _AsyncComponentProvider2 = _interopRequireDefault(_AsyncComponentProvider);
	
	var _createAsyncContext = __webpack_require__(402);
	
	var _createAsyncContext2 = _interopRequireDefault(_createAsyncContext);
	
	var _asyncComponent = __webpack_require__(915);
	
	var _asyncComponent2 = _interopRequireDefault(_asyncComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.AsyncComponentProvider = _AsyncComponentProvider2.default;
	exports.createAsyncContext = _createAsyncContext2.default;
	exports.asyncComponent = _asyncComponent2.default;

/***/ }),
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _css = __webpack_require__(988);
	
	var _css2 = _interopRequireDefault(_css);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var prismStyling = _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: _css2.default } });
	
	exports.default = function () {
	  return prismStyling;
	};
	
	module.exports = exports['default'];

/***/ }),
/* 985 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _LiveProvider = __webpack_require__(103);
	
	var _Editor = __webpack_require__(425);
	
	var _Editor2 = _interopRequireDefault(_Editor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LiveEditor = function LiveEditor(props, _ref) {
	  var live = _ref.live;
	  return _react2.default.createElement(_Editor2.default, _extends({}, props, {
	    code: live.code,
	    onChange: function onChange(code) {
	      live.onChange(code);
	
	      if (typeof props.onChange === 'function') {
	        props.onChange(code);
	      }
	    }
	  }));
	};
	
	LiveEditor.contextTypes = _LiveProvider.LiveContextTypes;
	LiveEditor.propTypes = { onChange: _propTypes2.default.func };
	
	exports.default = LiveEditor;
	module.exports = exports['default'];

/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LiveProvider = __webpack_require__(103);
	
	var _cn = __webpack_require__(152);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var LiveError = function LiveError(_ref, _ref2) {
	  var live = _ref2.live;
	
	  var className = _ref.className,
	      rest = _objectWithoutProperties(_ref, ['className']);
	
	  return live.error ? _react2.default.createElement(
	    'div',
	    _extends({}, rest, {
	      className: (0, _cn2.default)('react-live-error', className)
	    }),
	    live.error
	  ) : null;
	};
	
	LiveError.contextTypes = _LiveProvider.LiveContextTypes;
	
	exports.default = LiveError;
	module.exports = exports['default'];

/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LiveProvider = __webpack_require__(103);
	
	var _cn = __webpack_require__(152);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var LivePreview = function LivePreview(_ref, _ref2) {
	  var element = _ref2.live.element;
	
	  var className = _ref.className,
	      rest = _objectWithoutProperties(_ref, ['className']);
	
	  return _react2.default.createElement(
	    'div',
	    _extends({}, rest, {
	      className: (0, _cn2.default)('react-live-preview', className)
	    }),
	    typeof element === 'function' ? (0, _react.createElement)(element) : element
	  );
	};
	
	LivePreview.contextTypes = _LiveProvider.LiveContextTypes;
	
	exports.default = LivePreview;
	module.exports = exports['default'];

/***/ }),
/* 988 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = "\n.prism-code {\n  display: block;\n  white-space: pre;\n\n  background-color: #1D1F21;\n  color: #C5C8C6;\n\n  padding: 0.5rem;\n  margin: 0;\n\n  box-sizing: border-box;\n  vertical-align: baseline;\n  outline: none;\n  text-shadow: none;\n  -webkit-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n  word-wrap: normal;\n  word-break: normal;\n  text-align: left;\n  word-spacing: normal;\n  -moz-tab-size: 2;\n  -o-tab-size: 2;\n  tab-size: 2;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: hsl(30, 20%, 50%);\n}\n\n.token.punctuation {\n  opacity: .7;\n}\n\n.namespace {\n  opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol {\n  color: hsl(350, 40%, 70%);\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: hsl(75, 70%, 60%);\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n  color: hsl(40, 90%, 60%);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: hsl(350, 40%, 70%);\n}\n\n.token.regex,\n.token.important {\n  color: #e90;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n\n.token.deleted {\n  color: red;\n}\n";
	module.exports = exports["default"];

/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LiveProvider = __webpack_require__(103);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var withLive = function withLive(WrappedComponent) {
	  var WithLive = function (_Component) {
	    _inherits(WithLive, _Component);
	
	    function WithLive() {
	      _classCallCheck(this, WithLive);
	
	      return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	    }
	
	    WithLive.prototype.render = function render() {
	      var live = this.context.live;
	
	      return _react2.default.createElement(WrappedComponent, { live: live });
	    };
	
	    return WithLive;
	  }(_react.Component);
	
	  WithLive.contextTypes = _LiveProvider.LiveContextTypes;
	
	
	  return WithLive;
	};
	
	exports.default = withLive;
	module.exports = exports['default'];

/***/ }),
/* 990 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var getLine = function getLine(plain, cursorPos) {
	  var startSlice = plain.slice(0, cursorPos);
	  var lastNewline = startSlice.lastIndexOf('\n') + 1;
	  var lineSlice = startSlice.slice(lastNewline);
	  return lineSlice;
	};
	
	var indentRe = /^\s+/;
	
	var getIndent = exports.getIndent = function getIndent(plain, cursorPos) {
	  var line = getLine(plain, cursorPos);
	  var matches = line.match(indentRe);
	  if (matches === null) {
	    return '';
	  }
	
	  return matches[0] || '';
	};
	
	var deindentSpacesRe = /^(\t|  )*  $/;
	
	var getDeindentLevel = exports.getDeindentLevel = function getDeindentLevel(plain, cursorPos) {
	  var line = getLine(plain, cursorPos);
	  if (!deindentSpacesRe.test(line)) {
	    return 0; // Doesn't match regex, so normal behaviour can apply
	  }
	
	  // The line contains only whitespace indentation
	  // thus two characters must be deleted
	  return 2;
	};

/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _unescape = __webpack_require__(1110);
	
	var _unescape2 = _interopRequireDefault(_unescape);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var htmlToPlain = function htmlToPlain(html) {
	  return (0, _unescape2.default)(html.replace(/<br>/gm, '\n').replace(/<\/?[^>]*>/gm, ''));
	};
	
	exports.default = htmlToPlain;
	module.exports = exports['default'];

/***/ }),
/* 992 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var indentRe = /^((\t|  )+)/mg;
	var tabRe = /\t/g;
	
	var normalizeCode = function normalizeCode(code) {
	  return code.replace(indentRe, function (_, indentation) {
	    return indentation.replace(tabRe, '  ');
	  });
	};
	
	exports.default = normalizeCode;
	module.exports = exports['default'];

/***/ }),
/* 993 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var normalizeHtml = function normalizeHtml(html) {
	  return html.replace('\n', '<br>');
	};
	
	exports.default = normalizeHtml;
	module.exports = exports['default'];

/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _prismCore = __webpack_require__(396);
	
	__webpack_require__(395);
	
	__webpack_require__(397);
	
	__webpack_require__(399);
	
	__webpack_require__(398);
	
	var prism = function prism(code) {
	  var language = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'jsx';
	  return (0, _prismCore.highlight)(code, _prismCore.languages[language]);
	};
	
	exports.default = prism;
	module.exports = exports['default'];

/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var errorBoundary = function errorBoundary(element, errorCallback) {
	  var isEvalFunc = typeof element === 'function';
	
	  if (isEvalFunc && _react.Component.isPrototypeOf(element)) {
	    var originalRender = element.prototype.render;
	    element.prototype.render = function render() {
	      try {
	        return originalRender.apply(this, arguments);
	      } catch (err) {
	        setTimeout(function () {
	          errorCallback(err);
	        });
	
	        return null;
	      }
	    };
	  } else if (isEvalFunc) {
	    return function wrappedPFC() {
	      try {
	        return element();
	      } catch (err) {
	        setTimeout(function () {
	          errorCallback(err);
	        });
	
	        return null;
	      }
	    };
	  }
	
	  return element;
	};
	
	exports.default = errorBoundary;
	module.exports = exports['default'];

/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _transform = __webpack_require__(428);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var evalCode = function evalCode(code, scope) {
	  var scopeKeys = Object.keys(scope);
	  var scopeValues = scopeKeys.map(function (key) {
	    return scope[key];
	  });
	  var res = new (Function.prototype.bind.apply(Function, [null].concat(['_poly', 'React'], scopeKeys, [code])))();
	  return res.apply(undefined, [_transform._poly, _react2.default].concat(scopeValues));
	};
	
	exports.default = evalCode;
	module.exports = exports['default'];

/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _domIterator = __webpack_require__(627);
	
	var _domIterator2 = _interopRequireDefault(_domIterator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function position(el, pos) {
	  var selection = window.getSelection();
	
	  if (1 == arguments.length) {
	    if (!selection.rangeCount) return;
	    var indexes = {};
	    var range = selection.getRangeAt(0);
	    var clone = range.cloneRange();
	    clone.selectNodeContents(el);
	    clone.setEnd(range.endContainer, range.endOffset);
	    indexes.end = clone.toString().length;
	    clone.setStart(range.startContainer, range.startOffset);
	    indexes.start = indexes.end - clone.toString().length;
	    indexes.atStart = clone.startOffset === 0;
	    indexes.commonAncestorContainer = clone.commonAncestorContainer;
	    indexes.endContainer = clone.endContainer;
	    indexes.startContainer = clone.startContainer;
	    return indexes;
	  }
	
	  var setSelection = pos.end && pos.end !== pos.start;
	  var length = 0;
	  var range = document.createRange();
	  var it = (0, _domIterator2.default)(el).select(Node.TEXT_NODE).revisit(false);
	  var next;
	  var startindex;
	  var start = pos.start > el.textContent.length ? el.textContent.length : pos.start;
	  var end = pos.end > el.textContent.length ? el.textContent.length : pos.end;
	  var atStart = pos.atStart;
	
	  while (next = it.next()) {
	    var olen = length;
	    length += next.textContent.length;
	
	    // Set start point of selection
	    var atLength = atStart ? length > start : length >= start;
	    if (!startindex && atLength) {
	      startindex = true;
	      range.setStart(next, start - olen);
	      if (!setSelection) {
	        range.collapse(true);
	        makeSelection(el, range);
	        break;
	      }
	    }
	
	    // Set end point of selection
	    if (setSelection && length >= end) {
	      range.setEnd(next, end - olen);
	      makeSelection(el, range);
	      break;
	    }
	  }
	}
	
	function makeSelection(el, range) {
	  var selection = window.getSelection();
	  el.focus();
	  selection.removeAllRanges();
	  selection.addRange(range);
	}
	
	exports.default = position;
	module.exports = exports['default'];

/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createProvider = createProvider;
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _PropTypes = __webpack_require__(431);
	
	var _warning = __webpack_require__(237);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	function createProvider() {
	  var _Provider$childContex;
	
	  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
	  var subKey = arguments[1];
	
	  var subscriptionKey = subKey || storeKey + 'Subscription';
	
	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);
	
	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };
	
	    function Provider(props, context) {
	      _classCallCheck(this, Provider);
	
	      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	      _this[storeKey] = props.store;
	      return _this;
	    }
	
	    Provider.prototype.render = function render() {
	      return _react.Children.only(this.props.children);
	    };
	
	    return Provider;
	  }(_react.Component);
	
	  if (false) {
	    Provider.prototype.componentWillReceiveProps = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }
	
	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes2.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);
	
	  return Provider;
	}
	
	exports.default = createProvider();

/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createConnect = createConnect;
	
	var _connectAdvanced = __webpack_require__(429);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _shallowEqual = __webpack_require__(1006);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _mapDispatchToProps = __webpack_require__(1000);
	
	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);
	
	var _mapStateToProps = __webpack_require__(1001);
	
	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);
	
	var _mergeProps = __webpack_require__(1002);
	
	var _mergeProps2 = _interopRequireDefault(_mergeProps);
	
	var _selectorFactory = __webpack_require__(1003);
	
	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	}
	
	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);
	
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	
	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',
	
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },
	
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	
	    }, extraOptions));
	  };
	}
	
	exports.default = createConnect();

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	
	var _redux = __webpack_require__(243);
	
	var _wrapMapToProps = __webpack_require__(430);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	
	var _wrapMapToProps = __webpack_require__(430);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	
	var _verifyPlainObject = __webpack_require__(432);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	
	    var hasRunOnce = false;
	    var mergedProps = void 0;
	
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	
	        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

/***/ }),
/* 1003 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _verifySubselectors = __webpack_require__(1004);
	
	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	
	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}
	
	// TODO: Add more comments
	
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);
	
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (false) {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = __webpack_require__(237);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ }),
/* 1005 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);
	
	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ }),
/* 1006 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) return false;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ }),
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _chainFunction = __webpack_require__(526);
	
	var _chainFunction2 = _interopRequireDefault(_chainFunction);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(25);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _ChildMapping = __webpack_require__(1026);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  component: _propTypes2.default.any,
	  childFactory: _propTypes2.default.func,
	  children: _propTypes2.default.node
	};
	
	var defaultProps = {
	  component: 'span',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	};
	
	var TransitionGroup = function (_React$Component) {
	  _inherits(TransitionGroup, _React$Component);
	
	  function TransitionGroup(props, context) {
	    _classCallCheck(this, TransitionGroup);
	
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));
	
	    _this.performAppear = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      if (component.componentWillAppear) {
	        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));
	      } else {
	        _this._handleDoneAppearing(key, component);
	      }
	    };
	
	    _this._handleDoneAppearing = function (key, component) {
	      if (component.componentDidAppear) {
	        component.componentDidAppear();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully appeared. Remove it.
	        _this.performLeave(key, component);
	      }
	    };
	
	    _this.performEnter = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      if (component.componentWillEnter) {
	        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));
	      } else {
	        _this._handleDoneEntering(key, component);
	      }
	    };
	
	    _this._handleDoneEntering = function (key, component) {
	      if (component.componentDidEnter) {
	        component.componentDidEnter();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully entered. Remove it.
	        _this.performLeave(key, component);
	      }
	    };
	
	    _this.performLeave = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      if (component.componentWillLeave) {
	        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));
	      } else {
	        // Note that this is somewhat dangerous b/c it calls setState()
	        // again, effectively mutating the component before all the work
	        // is done.
	        _this._handleDoneLeaving(key, component);
	      }
	    };
	
	    _this._handleDoneLeaving = function (key, component) {
	      if (component.componentDidLeave) {
	        component.componentDidLeave();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);
	
	      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	        // This entered again before it fully left. Add it again.
	        _this.keysToEnter.push(key);
	      } else {
	        _this.setState(function (state) {
	          var newChildren = _extends({}, state.children);
	          delete newChildren[key];
	          return { children: newChildren };
	        });
	      }
	    };
	
	    _this.childRefs = Object.create(null);
	
	    _this.state = {
	      children: (0, _ChildMapping.getChildMapping)(props.children)
	    };
	    return _this;
	  }
	
	  TransitionGroup.prototype.componentWillMount = function componentWillMount() {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  };
	
	  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key, this.childRefs[key]);
	      }
	    }
	  };
	
	  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
	    var prevChildMapping = this.state.children;
	
	    this.setState({
	      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)
	    });
	
	    for (var key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }
	
	    for (var _key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);
	      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {
	        this.keysToLeave.push(_key);
	      }
	    }
	
	    // If we want to someday check for reordering, we could do it here.
	  };
	
	  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this2 = this;
	
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(function (key) {
	      return _this2.performEnter(key, _this2.childRefs[key]);
	    });
	
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(function (key) {
	      return _this2.performLeave(key, _this2.childRefs[key]);
	    });
	  };
	
	  TransitionGroup.prototype.render = function render() {
	    var _this3 = this;
	
	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];
	
	    var _loop = function _loop(key) {
	      var child = _this3.state.children[key];
	      if (child) {
	        var isCallbackRef = typeof child.ref !== 'string';
	        var factoryChild = _this3.props.childFactory(child);
	        var ref = function ref(r) {
	          _this3.childRefs[key] = r;
	        };
	
	         false ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;
	
	        // Always chaining the refs leads to problems when the childFactory
	        // wraps the child. The child ref callback gets called twice with the
	        // wrapper and the child. So we only need to chain the ref if the
	        // factoryChild is not different from child.
	        if (factoryChild === child && isCallbackRef) {
	          ref = (0, _chainFunction2.default)(child.ref, ref);
	        }
	
	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(_react2.default.cloneElement(factoryChild, {
	          key: key,
	          ref: ref
	        }));
	      }
	    };
	
	    for (var key in this.state.children) {
	      _loop(key);
	    }
	
	    // Do not forward TransitionGroup props to primitive DOM nodes
	    var props = _extends({}, this.props);
	    delete props.transitionLeave;
	    delete props.transitionName;
	    delete props.transitionAppear;
	    delete props.transitionEnter;
	    delete props.childFactory;
	    delete props.transitionLeaveTimeout;
	    delete props.transitionEnterTimeout;
	    delete props.transitionAppearTimeout;
	    delete props.component;
	
	    return _react2.default.createElement(this.props.component, props, childrenToRender);
	  };
	
	  return TransitionGroup;
	}(_react2.default.Component);
	
	TransitionGroup.displayName = 'TransitionGroup';
	
	
	TransitionGroup.propTypes =  false ? propTypes : {};
	TransitionGroup.defaultProps = defaultProps;
	
	exports.default = TransitionGroup;
	module.exports = exports['default'];

/***/ }),
/* 1026 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.getChildMapping = getChildMapping;
	exports.mergeChildMappings = mergeChildMappings;
	
	var _react = __webpack_require__(1);
	
	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children) {
	  if (!children) {
	    return children;
	  }
	  var result = {};
	  _react.Children.map(children, function (child) {
	    return child;
	  }).forEach(function (child) {
	    result[child.key] = child;
	  });
	  return result;
	}
	
	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */
	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};
	
	  function getValueForKey(key) {
	    if (next.hasOwnProperty(key)) {
	      return next[key];
	    }
	
	    return prev[key];
	  }
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextKeysPending = {};
	
	  var pendingKeys = [];
	  for (var prevKey in prev) {
	    if (next.hasOwnProperty(prevKey)) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }
	
	  var i = void 0;
	  var childMapping = {};
	  for (var nextKey in next) {
	    if (nextKeysPending.hasOwnProperty(nextKey)) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	    childMapping[nextKey] = getValueForKey(nextKey);
	  }
	
	  // Finally, add the keys which didn't appear before any key in `next`
	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }
	
	  return childMapping;
	}

/***/ }),
/* 1027 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var GoogleFont = function GoogleFont(props) {
	  // Create family + styles string
	  var fontsStr = '';
	  if (props.typography.options.googleFonts) {
	    var fonts = props.typography.options.googleFonts.map(function (font) {
	      var str = '';
	      str += font.name.split(' ').join('+');
	      str += ':';
	      str += font.styles.join(',');
	
	      return str;
	    });
	
	    fontsStr = fonts.join('|');
	
	    if (fontsStr) {
	      return _react2.default.createElement('link', {
	        href: '//fonts.googleapis.com/css?family=' + fontsStr,
	        rel: 'stylesheet',
	        type: 'text/css'
	      });
	    }
	    return null;
	  }
	};
	
	GoogleFont.propTypes = {
	  typography: _propTypes2.default.object.isRequired
	};
	
	GoogleFont.displayName = 'GoogleFont';
	
	module.exports = GoogleFont;

/***/ }),
/* 1028 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TypographyStyle = function TypographyStyle(props) {
	  return _react2.default.createElement('style', {
	    id: 'typography.js',
	    dangerouslySetInnerHTML: {
	      __html: props.typography.toString()
	    }
	  });
	};
	
	TypographyStyle.propTypes = {
	  typography: _propTypes2.default.object.isRequired
	};
	
	TypographyStyle.displayName = 'TypographyStyle';
	
	module.exports = TypographyStyle;

/***/ }),
/* 1029 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _GoogleFont = __webpack_require__(1027);
	
	var _GoogleFont2 = _interopRequireDefault(_GoogleFont);
	
	var _TypographyStyle = __webpack_require__(1028);
	
	var _TypographyStyle2 = _interopRequireDefault(_TypographyStyle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = {
	  GoogleFont: _GoogleFont2.default,
	  TypographyStyle: _TypographyStyle2.default
	};

/***/ }),
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.
	
	'use strict';
	
	module.exports = PassThrough;
	
	var Transform = __webpack_require__(442);
	
	/*<replacement>*/
	var util = __webpack_require__(89);
	util.inherits = __webpack_require__(90);
	/*</replacement>*/
	
	util.inherits(PassThrough, Transform);
	
	function PassThrough(options) {
	  if (!(this instanceof PassThrough)) return new PassThrough(options);
	
	  Transform.call(this, options);
	}
	
	PassThrough.prototype._transform = function (chunk, encoding, cb) {
	  cb(null, chunk);
	};

/***/ }),
/* 1043 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/*<replacement>*/
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Buffer = __webpack_require__(244).Buffer;
	/*</replacement>*/
	
	function copyBuffer(src, target, offset) {
	  src.copy(target, offset);
	}
	
	module.exports = function () {
	  function BufferList() {
	    _classCallCheck(this, BufferList);
	
	    this.head = null;
	    this.tail = null;
	    this.length = 0;
	  }
	
	  BufferList.prototype.push = function push(v) {
	    var entry = { data: v, next: null };
	    if (this.length > 0) this.tail.next = entry;else this.head = entry;
	    this.tail = entry;
	    ++this.length;
	  };
	
	  BufferList.prototype.unshift = function unshift(v) {
	    var entry = { data: v, next: this.head };
	    if (this.length === 0) this.tail = entry;
	    this.head = entry;
	    ++this.length;
	  };
	
	  BufferList.prototype.shift = function shift() {
	    if (this.length === 0) return;
	    var ret = this.head.data;
	    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
	    --this.length;
	    return ret;
	  };
	
	  BufferList.prototype.clear = function clear() {
	    this.head = this.tail = null;
	    this.length = 0;
	  };
	
	  BufferList.prototype.join = function join(s) {
	    if (this.length === 0) return '';
	    var p = this.head;
	    var ret = '' + p.data;
	    while (p = p.next) {
	      ret += s + p.data;
	    }return ret;
	  };
	
	  BufferList.prototype.concat = function concat(n) {
	    if (this.length === 0) return Buffer.alloc(0);
	    if (this.length === 1) return this.head.data;
	    var ret = Buffer.allocUnsafe(n >>> 0);
	    var p = this.head;
	    var i = 0;
	    while (p) {
	      copyBuffer(p.data, ret, i);
	      i += p.data.length;
	      p = p.next;
	    }
	    return ret;
	  };
	
	  return BufferList;
	}();

/***/ }),
/* 1044 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(441);
	exports.Stream = exports;
	exports.Readable = exports;
	exports.Writable = __webpack_require__(443);
	exports.Duplex = __webpack_require__(79);
	exports.Transform = __webpack_require__(442);
	exports.PassThrough = __webpack_require__(1042);


/***/ }),
/* 1045 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = reduceReducers;
	
	function reduceReducers() {
	  for (var _len = arguments.length, reducers = Array(_len), _key = 0; _key < _len; _key++) {
	    reducers[_key] = arguments[_key];
	  }
	
	  return function (previous, current) {
	    return reducers.reduce(function (p, r) {
	      return r(p, current);
	    }, previous);
	  };
	}
	
	module.exports = exports["default"];

/***/ }),
/* 1046 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (array, callback) {
	  return array.reduce(function (partialObject, element) {
	    return callback(partialObject, element);
	  }, {});
	};

/***/ }),
/* 1047 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createActions;
	
	var _camelCase = __webpack_require__(446);
	
	var _camelCase2 = _interopRequireDefault(_camelCase);
	
	var _identity = __webpack_require__(44);
	
	var _identity2 = _interopRequireDefault(_identity);
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _isArray = __webpack_require__(18);
	
	var _isArray2 = _interopRequireDefault(_isArray);
	
	var _last = __webpack_require__(214);
	
	var _last2 = _interopRequireDefault(_last);
	
	var _isString = __webpack_require__(138);
	
	var _isString2 = _interopRequireDefault(_isString);
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	var _isNil = __webpack_require__(359);
	
	var _isNil2 = _interopRequireDefault(_isNil);
	
	var _createAction = __webpack_require__(448);
	
	var _createAction2 = _interopRequireDefault(_createAction);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _arrayToObject = __webpack_require__(1046);
	
	var _arrayToObject2 = _interopRequireDefault(_arrayToObject);
	
	var _flattenUtils = __webpack_require__(449);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function createActions(actionMap) {
	  for (var _len = arguments.length, identityActions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    identityActions[_key - 1] = arguments[_key];
	  }
	
	  var _ref = (0, _isPlainObject2.default)((0, _last2.default)(identityActions)) ? identityActions.pop() : {};
	
	  var namespace = _ref.namespace;
	
	  (0, _invariant2.default)(identityActions.every(_isString2.default) && ((0, _isString2.default)(actionMap) || (0, _isPlainObject2.default)(actionMap)), 'Expected optional object followed by string action types');
	  if ((0, _isString2.default)(actionMap)) {
	    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions));
	  }
	  return _extends({}, actionCreatorsFromActionMap(actionMap, namespace), actionCreatorsFromIdentityActions(identityActions));
	}
	
	function actionCreatorsFromActionMap(actionMap, namespace) {
	  var flatActionMap = (0, _flattenUtils.flattenActionMap)(actionMap, namespace);
	  var flatActionCreators = actionMapToActionCreators(flatActionMap);
	  return (0, _flattenUtils.unflattenActionCreators)(flatActionCreators, namespace);
	}
	
	function actionMapToActionCreators(actionMap) {
	  function isValidActionMapValue(actionMapValue) {
	    if ((0, _isFunction2.default)(actionMapValue) || (0, _isNil2.default)(actionMapValue)) {
	      return true;
	    } else if ((0, _isArray2.default)(actionMapValue)) {
	      var _actionMapValue = _slicedToArray(actionMapValue, 2);
	
	      var _actionMapValue$ = _actionMapValue[0];
	      var payload = _actionMapValue$ === undefined ? _identity2.default : _actionMapValue$;
	      var meta = _actionMapValue[1];
	
	      return (0, _isFunction2.default)(payload) && (0, _isFunction2.default)(meta);
	    }
	    return false;
	  }
	
	  return (0, _arrayToObject2.default)(Object.keys(actionMap), function (partialActionCreators, type) {
	    var actionMapValue = actionMap[type];
	    (0, _invariant2.default)(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + ('functions for ' + type));
	    var actionCreator = (0, _isArray2.default)(actionMapValue) ? _createAction2.default.apply(undefined, [type].concat(_toConsumableArray(actionMapValue))) : (0, _createAction2.default)(type, actionMapValue);
	    return _extends({}, partialActionCreators, _defineProperty({}, type, actionCreator));
	  });
	}
	
	function actionCreatorsFromIdentityActions(identityActions) {
	  var actionMap = (0, _arrayToObject2.default)(identityActions, function (partialActionMap, type) {
	    return _extends({}, partialActionMap, _defineProperty({}, type, _identity2.default));
	  });
	  var actionCreators = actionMapToActionCreators(actionMap);
	  return (0, _arrayToObject2.default)(Object.keys(actionCreators), function (partialActionCreators, type) {
	    return _extends({}, partialActionCreators, _defineProperty({}, (0, _camelCase2.default)(type), actionCreators[type]));
	  });
	}

/***/ }),
/* 1048 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = handleActions;
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _reduceReducers = __webpack_require__(1045);
	
	var _reduceReducers2 = _interopRequireDefault(_reduceReducers);
	
	var _invariant = __webpack_require__(19);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _handleAction = __webpack_require__(450);
	
	var _handleAction2 = _interopRequireDefault(_handleAction);
	
	var _ownKeys = __webpack_require__(242);
	
	var _ownKeys2 = _interopRequireDefault(_ownKeys);
	
	var _flattenUtils = __webpack_require__(449);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function handleActions(handlers, defaultState) {
	  var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	
	  var namespace = _ref.namespace;
	
	  (0, _invariant2.default)((0, _isPlainObject2.default)(handlers), 'Expected handlers to be an plain object.');
	  var flattenedReducerMap = (0, _flattenUtils.flattenReducerMap)(handlers, namespace);
	  var reducers = (0, _ownKeys2.default)(flattenedReducerMap).map(function (type) {
	    return (0, _handleAction2.default)(type, flattenedReducerMap[type], defaultState);
	  });
	  var reducer = _reduceReducers2.default.apply(undefined, _toConsumableArray(reducers));
	  return function () {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];
	    var action = arguments[1];
	    return reducer(state, action);
	  };
	}

/***/ }),
/* 1049 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hasGeneratorInterface;
	
	var _ownKeys = __webpack_require__(242);
	
	var _ownKeys2 = _interopRequireDefault(_ownKeys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasGeneratorInterface(handler) {
	  var keys = (0, _ownKeys2.default)(handler);
	  var hasOnlyInterfaceNames = keys.every(function (ownKey) {
	    return ownKey === 'next' || ownKey === 'throw';
	  });
	  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;
	}

/***/ }),
/* 1050 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = applyMiddleware;
	
	var _compose = __webpack_require__(451);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ }),
/* 1051 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ }),
/* 1052 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = combineReducers;
	
	var _createStore = __webpack_require__(452);
	
	var _isPlainObject = __webpack_require__(33);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(453);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var unexpectedKeyCache = void 0;
	  if (false) {
	    unexpectedKeyCache = {};
	  }
	
	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ }),
/* 1053 */,
/* 1054 */,
/* 1055 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";
	
	    if (global.setImmediate) {
	        return;
	    }
	
	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;
	
	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }
	
	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }
	
	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }
	
	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }
	
	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }
	
	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }
	
	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
	
	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };
	
	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }
	
	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }
	
	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };
	
	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }
	
	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }
	
	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }
	
	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;
	
	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();
	
	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();
	
	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();
	
	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();
	
	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }
	
	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(38)))

/***/ }),
/* 1056 */,
/* 1057 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactDom = __webpack_require__(146);
	
	var _findKey = __webpack_require__(786);
	
	var _findKey2 = _interopRequireDefault(_findKey);
	
	var _reactRedux = __webpack_require__(236);
	
	var _victoryCore = __webpack_require__(491);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* eslint-disable react/no-did-mount-set-state */
	
	var Appear = function (_Component) {
	  (0, _inherits3.default)(Appear, _Component);
	
	  function Appear() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Appear);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      active: false
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Appear.prototype.componentDidMount = function componentDidMount() {
	    var shouldDisableAnimation = this.props.route.params.indexOf('export') !== -1 || this.props.route.params.indexOf('overview') !== -1;
	
	    if (shouldDisableAnimation) {
	      this.setState({ active: true });
	      return;
	    }
	
	    var order = this.props.order || 0;
	    var node = (0, _reactDom.findDOMNode)(this.fragmentRef);
	    if (!node.dataset) {
	      node.dataset = {};
	    }
	    node.dataset.order = order;
	  };
	
	  Appear.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var state = nextProps.fragment;
	    var slide = this.props.route.slide;
	    var fragment = (0, _reactDom.findDOMNode)(this.fragmentRef);
	    var slideHash = parseInt(this.context.slideHash);
	    var key = (0, _findKey2.default)(state.fragments[slide], {
	      id: slideHash + '-' + parseInt(fragment.dataset.fid)
	    });
	
	    var shouldDisableAnimation = nextProps.route.params.indexOf('export') !== -1 || nextProps.route.params.indexOf('overview') !== -1;
	
	    if (shouldDisableAnimation) {
	      this.setState({ active: true });
	      return;
	    }
	
	    if (slide in state.fragments && state.fragments[slide].hasOwnProperty(key)) {
	      var active = state.fragments[slide][key].visible;
	      this.context.stepCounter.setFragments(state.fragments[slide], slide);
	      this.setState({ active: active });
	    }
	  };
	
	  Appear.prototype.render = function render() {
	    var _this2 = this;
	
	    var child = _react2.default.Children.only(this.props.children);
	    var endValue = this.state.active ? 1 : 0;
	    var transitionDuration = this.props.transitionDuration;
	    return (0, _jsx3.default)(_victoryCore.VictoryAnimation, {
	      data: { opacity: endValue },
	      duration: transitionDuration,
	      easing: 'quadInOut'
	    }, void 0, function (_ref) {
	      var opacity = _ref.opacity;
	      return _react2.default.cloneElement(child, {
	        className: ('fragment ' + child.props.className).trim(),
	        style: (0, _extends3.default)({}, child.props.style, _this2.props.style, { opacity: opacity }),
	        ref: function ref(f) {
	          _this2.fragmentRef = f;
	        }
	      });
	    });
	  };
	
	  return Appear;
	}(_react.Component);
	
	Appear.defaultProps = {
	  transitionDuration: 300
	};
	
	Appear.contextTypes = {
	  export: _propTypes2.default.bool,
	  overview: _propTypes2.default.bool,
	  slide: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  slideHash: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  stepCounter: _propTypes2.default.shape({
	    setFragments: _propTypes2.default.func
	  })
	};
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return state;
	})(Appear);

/***/ }),
/* 1058 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AutoplayButton = /*#__PURE__*/(0, _reactEmotion2.default)('button')(function (_ref) {
	  var styles = _ref.styles;
	  return [{
	    opacity: 0,
	    cursor: 'pointer',
	    transition: '300ms opacity ease',
	    ':hover': {
	      opacity: 1
	    }
	  }, styles.context];
	});
	
	var _ref2 = (0, _jsx3.default)('path', {
	  d: 'M23.5,4V26h-6V4ZM6.5,26h6V4h-6Z'
	});
	
	var _ref3 = (0, _jsx3.default)('path', {
	  d: 'M26,15,6,25V5Z'
	});
	
	var AutoplayControls = function (_Component) {
	  (0, _inherits3.default)(AutoplayControls, _Component);
	
	  function AutoplayControls() {
	    (0, _classCallCheck3.default)(this, AutoplayControls);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  AutoplayControls.prototype.render = function render() {
	    var pauseBtn = (0, _jsx3.default)(AutoplayButton, {
	      type: 'button',
	      onClick: this.props.onPause,
	      styles: {
	        context: this.context.styles.autoplay.pause
	      }
	    }, 'pause', (0, _jsx3.default)('svg', {
	      style: this.context.styles.autoplay.pauseIcon,
	      xmlns: 'http://www.w3.org/2000/svg',
	      width: '30px',
	      height: '30px',
	      viewBox: '0 0 30 30'
	    }, void 0, _ref2));
	
	    var playBtn = (0, _jsx3.default)(AutoplayButton, {
	      type: 'button',
	      onClick: this.props.onPlay,
	      styles: {
	        context: this.context.styles.autoplay.play
	      }
	    }, 'play', (0, _jsx3.default)('svg', {
	      style: this.context.styles.autoplay.playIcon,
	      xmlns: 'http://www.w3.org/2000/svg',
	      width: '30px',
	      height: '30px',
	      viewBox: '0 0 30 30'
	    }, void 0, _ref3));
	
	    return this.props.autoplaying ? pauseBtn : playBtn;
	  };
	
	  return AutoplayControls;
	}(_react.Component);
	
	exports.default = AutoplayControls;
	
	
	AutoplayControls.contextTypes = {
	  styles: _propTypes2.default.object
	};

/***/ }),
/* 1059 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledCite = /*#__PURE__*/(0, _reactEmotion2.default)('cite')(function (props) {
	  return props.styles;
	});
	
	var Cite = function (_Component) {
	  (0, _inherits3.default)(Cite, _Component);
	
	  function Cite() {
	    (0, _classCallCheck3.default)(this, Cite);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Cite.prototype.render = function render() {
	    var styles = [this.context.styles.components.cite, _base.getStyles.call(this), this.context.typeface || {}, this.props.style];
	    return (0, _jsx3.default)(StyledCite, {
	      className: this.props.className,
	      styles: styles
	    }, void 0, '- ', this.props.children);
	  };
	
	  return Cite;
	}(_react.Component);
	
	exports.default = Cite;
	
	
	Cite.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object,
	  typeface: _propTypes2.default.object
	};

/***/ }),
/* 1060 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _timeComponents = __webpack_require__(246);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var startTime = function startTime(date) {
	  var hours = date.getHours();
	  var minutes = date.getMinutes();
	  var seconds = date.getSeconds();
	  var ampm = hours >= 12 ? 'PM' : 'AM';
	  hours %= 12;
	  hours = hours ? hours : 12;
	  minutes = minutes < 10 ? '0' + minutes : minutes;
	  seconds = seconds < 10 ? '0' + seconds : seconds;
	  var strTime = hours + ' : ' + minutes + ' : ' + seconds + ' ' + ampm;
	  return strTime;
	};
	
	var Clock = function (_Component) {
	  (0, _inherits3.default)(Clock, _Component);
	
	  function Clock() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Clock);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = { time: new Date(Date.now()) }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Clock.prototype.componentDidMount = function componentDidMount() {
	    var _this2 = this;
	
	    this.interval = setInterval(function () {
	      _this2.setState({
	        time: new Date()
	      });
	    }, 1000);
	  };
	
	  Clock.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearInterval(this.interval);
	  };
	
	  Clock.prototype.render = function render() {
	    return (0, _jsx3.default)(_timeComponents.Clock, {}, void 0, startTime(this.state.time));
	  };
	
	  return Clock;
	}(_react.Component);
	
	exports.default = Clock;

/***/ }),
/* 1061 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PlaygroundProvider = undefined;
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _objectWithoutProperties2 = __webpack_require__(157);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _playground = __webpack_require__(1093);
	
	var _fullscreenButton = __webpack_require__(457);
	
	var _fullscreenButton2 = _interopRequireDefault(_fullscreenButton);
	
	var _fullscreen = __webpack_require__(478);
	
	var _reactLive = __webpack_require__(426);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PlaygroundProvider = /*#__PURE__*/exports.PlaygroundProvider = (0, _reactEmotion2.default)(_reactLive.LiveProvider)('border-radius:0 0 6px 6px;height:100%;width:100%;border-radius:6px;overflow:hidden;');
	
	var PlaygroundPreview = /*#__PURE__*/(0, _reactEmotion2.default)(function (_ref) {
	  var className = _ref.className;
	  return (0, _jsx3.default)(_reactLive.LivePreview, {
	    className: className
	  });
	})('padding:0.5rem;min-height:100%;background:', function (p) {
	  return p.previewBackgroundColor || '#fff';
	}, ';');
	
	var PlaygroundEditor = /*#__PURE__*/(0, _reactEmotion2.default)(function (_ref2) {
	  var _ = _ref2.syntaxStyles,
	      __ = _ref2.prismTheme,
	      rest = (0, _objectWithoutProperties3.default)(_ref2, ['syntaxStyles', 'prismTheme']);
	  return _react2.default.createElement(_reactLive.LiveEditor, rest);
	})('&&{', function (props) {
	  return props.syntaxStyles;
	}, '\n    min-height:100%;font-size:1.25vw;}', function (props) {
	  return props.prismTheme;
	});
	
	var PlaygroundRow = /*#__PURE__*/(0, _reactEmotion2.default)('div')('display:flex;justify-content:stretch;align-items:center;width:100%;/* NOTE:Comma separation doesn\'t seem to work here */\n\n  &:-webkit-full-screen { height: 100%; }\n  &:-moz-full-screen { height: 100%; }\n  &:-ms-fullscreen { height: 100%; }\n  &:fullscreen { height: 100%; }\n\n  &:-webkit-full-screen > * { height: 100%; }\n  &:-moz-full-screen > * { height: 100%; }\n  &:-ms-fullscreen > * { height: 100%; }\n  &:fullscreen > * { height: 100%; }');
	
	var Title = /*#__PURE__*/(0, _reactEmotion2.default)('div')('position:relative;flex:1;background:#ddd;border-bottom:1px solid #999;color:#424242;display:block;font-family:\'Roboto Mono\',\'Menlo\',\'Andale Mono\',monospace;font-size:1.15vw;padding:0.4rem 0;text-transform:uppercase;&:last-child{border-left:1px solid #999;}> button{position:absolute;right:1em;margin-top:-0.1em;}', function (props) {
	  return props.useDarkTheme && /*#__PURE__*/(0, _reactEmotion.css)('background:#272822;border-bottom:1px solid #000;color:#fff;');
	});
	
	var PlaygroundColumn = /*#__PURE__*/(0, _reactEmotion2.default)('div')('flex:1;font-size:1.25vw;margin:0;position:relative;height:60vh;overflow-y:scroll;&:last-child{border-left:1px solid #999;}');
	
	var PlaygroundError = /*#__PURE__*/(0, _reactEmotion2.default)(_reactLive.LiveError)('position:absolute;bottom:0;width:100%;text-align:left;white-space:pre-wrap;background:rgba(255,35,36,0.8);color:white;padding:0.5rem;');
	
	var STORAGE_KEY = 'spectacle-playground';
	
	var _ref4 = (0, _jsx3.default)(Title, {}, void 0, 'Live Preview');
	
	var _ref5 = (0, _jsx3.default)(PlaygroundError, {});
	
	var ComponentPlayground = function (_Component) {
	  (0, _inherits3.default)(ComponentPlayground, _Component);
	
	  function ComponentPlayground(props) {
	    (0, _classCallCheck3.default)(this, ComponentPlayground);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
	    _this.onRef = _this.onRef.bind(_this);
	    _this.onEditorChange = _this.onEditorChange.bind(_this);
	    _this.requestFullscreen = _this.requestFullscreen.bind(_this);
	    _this.syncCode = _this.syncCode.bind(_this);
	
	    _this.state = {
	      code: (_this.props.code || _playground.defaultCode).trim()
	    };
	    return _this;
	  }
	
	  ComponentPlayground.prototype.componentDidMount = function componentDidMount() {
	    localStorage.setItem(STORAGE_KEY, this.state.code);
	    window.addEventListener('storage', this.syncCode);
	  };
	
	  ComponentPlayground.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.code !== this.props.code) {
	      var code = (this.props.code || _playground.defaultCode).trim();
	      this.setState({ code: code });
	    }
	  };
	
	  ComponentPlayground.prototype.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('storage', this.syncCode);
	  };
	
	  ComponentPlayground.prototype.onKeyUp = function onKeyUp(evt) {
	    evt.stopPropagation();
	
	    // Esc: When entering the editor or an input element the default esc-to-exit might not work anymore
	    if (evt.keyCode === 27 && (0, _fullscreen.getFullscreenElement)()) {
	      (0, _fullscreen.exitFullscreen)();
	    }
	  };
	
	  ComponentPlayground.prototype.onKeyDown = function onKeyDown(evt) {
	    evt.stopPropagation();
	  };
	
	  ComponentPlayground.prototype.onRef = function onRef(node) {
	    this.node = node;
	  };
	
	  ComponentPlayground.prototype.onEditorChange = function onEditorChange(code) {
	    this.setState({ code: code });
	    localStorage.setItem(STORAGE_KEY, code);
	  };
	
	  ComponentPlayground.prototype.requestFullscreen = function requestFullscreen() {
	    (0, _fullscreen.requestFullscreen)(this.node);
	  };
	
	  ComponentPlayground.prototype.syncCode = function syncCode(_ref3) {
	    var key = _ref3.key,
	        newValue = _ref3.newValue;
	
	    if (key === STORAGE_KEY) {
	      this.setState({ code: newValue });
	    }
	  };
	
	  ComponentPlayground.prototype.render = function render() {
	    var _props = this.props,
	        previewBackgroundColor = _props.previewBackgroundColor,
	        _props$scope = _props.scope,
	        scope = _props$scope === undefined ? {} : _props$scope,
	        _props$theme = _props.theme,
	        theme = _props$theme === undefined ? 'dark' : _props$theme;
	
	
	    var useDarkTheme = theme === 'dark';
	
	    return (0, _jsx3.default)(PlaygroundProvider, {
	      mountStylesheet: false,
	      code: this.state.code,
	      scope: (0, _extends3.default)({ Component: _react.Component }, scope),
	      noInline: true
	    }, void 0, (0, _jsx3.default)(PlaygroundRow, {}, void 0, _ref4, (0, _jsx3.default)(Title, {
	      useDarkTheme: useDarkTheme
	    }, void 0, 'Source Code', (0, _jsx3.default)(_fullscreenButton2.default, {
	      onClick: this.requestFullscreen
	    }))), (0, _jsx3.default)(PlaygroundRow, {
	      innerRef: this.onRef,
	      onKeyUp: this.onKeyUp,
	      onKeyDown: this.onKeyDown
	    }, void 0, (0, _jsx3.default)(PlaygroundColumn, {}, void 0, (0, _jsx3.default)(PlaygroundPreview, {
	      previewBackgroundColor: previewBackgroundColor
	    }), _ref5), (0, _jsx3.default)(PlaygroundColumn, {}, void 0, (0, _jsx3.default)(PlaygroundEditor, {
	      className: 'language-prism',
	      syntaxStyles: this.context.styles.components.syntax,
	      prismTheme: this.context.styles.prism[useDarkTheme ? 'dark' : 'light'],
	      onChange: this.onEditorChange
	    }))));
	  };
	
	  return ComponentPlayground;
	}(_react.Component);
	
	ComponentPlayground.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object
	};
	
	exports.default = ComponentPlayground;

/***/ }),
/* 1062 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _ref = (0, _jsx3.default)('path', {
	  d: 'M512,97.707L414.293,0L0,414.293l414.293,414.293L512,730.88L195.414,414.293L512,97.707z'
	});
	
	var _ref2 = (0, _jsx3.default)('path', {
	  d: 'M97.707,0L0,97.707l316.586,316.586L0,730.88l97.707,97.706L512,414.293L97.707,0z'
	});
	
	var Controls = function (_Component) {
	  (0, _inherits3.default)(Controls, _Component);
	
	  function Controls() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Controls);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.resolveFillStyle = function (name) {
	      var color = void 0;
	      var controlColor = _this.props.controlColor;
	
	      if (controlColor) {
	        if (!_this.context.styles.colors.hasOwnProperty(controlColor)) {
	          color = controlColor;
	        } else {
	          color = _this.context.styles.colors[controlColor];
	        }
	        return {
	          fill: color
	        };
	      }
	      return _this.context.styles.controls[name];
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Controls.prototype.render = function render() {
	    return (0, _jsx3.default)('div', {}, void 0, this.props.currentSlideIndex !== 0 && (0, _jsx3.default)('button', {
	      type: 'button',
	      'aria-label': 'Previous slide',
	      onClick: this.props.onPrev,
	      style: this.context.styles.controls.prev
	    }, 'prev', (0, _jsx3.default)('svg', {
	      style: this.resolveFillStyle('prevIcon'),
	      width: '32px',
	      height: '32px',
	      viewBox: '0 0 512 828.586',
	      role: 'presentation',
	      focusable: 'false'
	    }, 'prevIcon', _ref)), this.props.currentSlideIndex < this.props.totalSlides - 1 && (0, _jsx3.default)('button', {
	      type: 'button',
	      'aria-label': 'Next slide',
	      onClick: this.props.onNext,
	      style: this.context.styles.controls.next
	    }, 'next', (0, _jsx3.default)('svg', {
	      style: this.resolveFillStyle('nextIcon'),
	      width: '32px',
	      height: '32px',
	      viewBox: '0 0 512 828.586',
	      role: 'presentation',
	      focusable: 'false'
	    }, 'nextIcon', _ref2)));
	  };
	
	  return Controls;
	}(_react.Component);
	
	exports.default = Controls;
	
	
	Controls.contextTypes = {
	  styles: _propTypes2.default.object
	};

/***/ }),
/* 1063 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactRedux = __webpack_require__(236);
	
	var _store = __webpack_require__(1087);
	
	var _store2 = _interopRequireDefault(_store);
	
	var _controller = __webpack_require__(1091);
	
	var _controller2 = _interopRequireDefault(_controller);
	
	var _manager = __webpack_require__(1071);
	
	var _manager2 = _interopRequireDefault(_manager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var store = (0, _store2.default)();
	
	var Deck = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Deck, _Component);
	
	  function Deck() {
	    (0, _classCallCheck3.default)(this, Deck);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Deck.prototype.render = function render() {
	    return (0, _jsx3.default)(_reactRedux.Provider, {
	      store: store
	    }, void 0, (0, _jsx3.default)(_controller2.default, {
	      theme: this.props.theme,
	      store: store,
	      history: this.props.history
	    }, void 0, _react2.default.createElement(
	      _manager2.default,
	      this.props,
	      this.props.children
	    )));
	  };
	
	  return Deck;
	}(_react.Component), _class.displayName = 'Deck', _temp);
	exports.default = Deck;

/***/ }),
/* 1064 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _slides = __webpack_require__(105);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledExport = /*#__PURE__*/(0, _reactEmotion2.default)('div')('height:100%;width:100%;');
	
	var Export = function (_Component) {
	  (0, _inherits3.default)(Export, _Component);
	
	  function Export() {
	    (0, _classCallCheck3.default)(this, Export);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Export.prototype._renderSlides = function _renderSlides() {
	    var _this2 = this;
	
	    return this.props.slideReference.map(function (reference, index) {
	      var slide = (0, _slides.getSlideByIndex)(_this2.props.slides, _this2.props.slideReference, index);
	      return (0, _react.cloneElement)(slide, {
	        key: index,
	        slideIndex: index,
	        export: _this2.props.route.params.indexOf('export') !== -1,
	        print: _this2.props.route.params.indexOf('print') !== -1,
	        transition: [],
	        transitionIn: [],
	        transitionOut: [],
	        transitionDuration: 0
	      });
	    });
	  };
	
	  Export.prototype.render = function render() {
	    return (0, _jsx3.default)(StyledExport, {}, void 0, this._renderSlides());
	  };
	
	  return Export;
	}(_react.Component);
	
	exports.default = Export;
	
	
	Export.contextTypes = {
	  styles: _propTypes2.default.object
	};

/***/ }),
/* 1065 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Fill = undefined;
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Fill = /*#__PURE__*/exports.Fill = (0, _reactEmotion2.default)('div')('flex:1;');
	
	Fill.propTypes = {
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.string,
	  style: _propTypes2.default.object
	};

/***/ }),
/* 1066 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Fit = undefined;
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Fit = /*#__PURE__*/exports.Fit = (0, _reactEmotion2.default)('div')('flex:0;');
	
	Fit.propTypes = {
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.string,
	  style: _propTypes2.default.object
	};

/***/ }),
/* 1067 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Fullscreen = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _fullscreenButton = __webpack_require__(457);
	
	var _fullscreenButton2 = _interopRequireDefault(_fullscreenButton);
	
	var _fullscreen = __webpack_require__(478);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledFullscreen = /*#__PURE__*/(0, _reactEmotion2.default)(_fullscreenButton2.default)('position:absolute;bottom:10px;right:20px;opacity:0;transition:300ms opacity ease;font-size:30px;color:#fff;&:hover{opacity:1;}');
	
	var Fullscreen = exports.Fullscreen = function (_Component) {
	  (0, _inherits3.default)(Fullscreen, _Component);
	
	  function Fullscreen() {
	    (0, _classCallCheck3.default)(this, Fullscreen);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Fullscreen.prototype.toggleFullscreen = function toggleFullscreen() {
	    if (!(0, _fullscreen.getFullscreenElement)()) {
	      (0, _fullscreen.requestFullscreen)(document.documentElement);
	    } else {
	      (0, _fullscreen.exitFullscreen)();
	    }
	  };
	
	  Fullscreen.prototype.render = function render() {
	    var _this2 = this;
	
	    return (0, _jsx3.default)(StyledFullscreen, {
	      onClick: function onClick() {
	        return _this2.toggleFullscreen();
	      },
	      style: this.context.styles.fullscreen,
	      viewBox: '0 0 512 512'
	    });
	  };
	
	  return Fullscreen;
	}(_react.Component);
	
	Fullscreen.contextTypes = {
	  styles: _propTypes2.default.object
	};
	
	exports.default = Fullscreen;

/***/ }),
/* 1068 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _base = __webpack_require__(16);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _isFunction = __webpack_require__(15);
	
	var _isFunction2 = _interopRequireDefault(_isFunction);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var GoToActionButton = /*#__PURE__*/(0, _reactEmotion2.default)('button')(function (_ref) {
	  var styles = _ref.styles;
	  return [styles.context, styles.base, styles.user];
	});
	
	var _ref2 = (0, _jsx3.default)('div', {});
	
	var GoToAction = function (_React$Component) {
	  (0, _inherits3.default)(GoToAction, _React$Component);
	
	  function GoToAction() {
	    (0, _classCallCheck3.default)(this, GoToAction);
	    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
	  }
	
	  GoToAction.prototype.render = function render() {
	    var _props = this.props,
	        render = _props.render,
	        children = _props.children,
	        style = _props.style,
	        slide = _props.slide,
	        goToSlide = this.context.goToSlide;
	
	    if (render && (0, _isFunction2.default)(render)) {
	      return render(goToSlide);
	    } else if (slide) {
	      return (0, _jsx3.default)(GoToActionButton, {
	        onClick: function onClick() {
	          return goToSlide(slide);
	        },
	        styles: {
	          context: this.context.styles.components.goToAction,
	          base: _base.getStyles.call(this),
	          user: style
	        }
	      }, void 0, children);
	    }
	    // eslint-disable-next-line no-console
	    console.warn('<GoToAction /> must have a render or slide prop.');
	    return _ref2;
	  };
	
	  return GoToAction;
	}(_react2.default.Component);
	
	GoToAction.contextTypes = {
	  styles: _propTypes2.default.object,
	  goToSlide: _propTypes2.default.func
	};
	
	exports.default = GoToAction;

/***/ }),
/* 1069 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StyledLayout = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	  return [{ display: 'flex' }, props.styles];
	});
	
	var Layout = function (_Component) {
	  (0, _inherits3.default)(Layout, _Component);
	
	  function Layout() {
	    (0, _classCallCheck3.default)(this, Layout);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Layout.prototype.render = function render() {
	    return (0, _jsx3.default)(StyledLayout, {
	      styles: this.props.style
	    }, void 0, this.props.children);
	  };
	
	  return Layout;
	}(_react.Component);
	
	exports.default = Layout;

/***/ }),
/* 1070 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _keys = __webpack_require__(110);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp, _class2, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(146);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _deepObjectDiff = __webpack_require__(621);
	
	var _magic = __webpack_require__(1092);
	
	var _get = __webpack_require__(209);
	
	var _get2 = _interopRequireDefault(_get);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Deck = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function () {
	  return {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    width: '100%',
	    height: '100%'
	  };
	});
	
	var Context = (_temp = _class = function (_React$Component) {
	  (0, _inherits3.default)(Context, _React$Component);
	
	  function Context() {
	    (0, _classCallCheck3.default)(this, Context);
	    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
	  }
	
	  Context.prototype.getChildContext = function getChildContext() {
	    return {
	      contentHeight: this.props.context.contentHeight,
	      contentWidth: this.props.context.contentWidth,
	      export: this.props.context.export,
	      overview: this.props.context.overview,
	      print: this.props.context.print,
	      store: this.props.context.store,
	      styles: this.props.context.styles
	    };
	  };
	
	  Context.prototype.render = function render() {
	    return this.props.children;
	  };
	
	  return Context;
	}(_react2.default.Component), _class.contextTypes = {
	  contentHeight: _propTypes2.default.number,
	  contentWidth: _propTypes2.default.number,
	  export: _propTypes2.default.bool,
	  overview: _propTypes2.default.bool,
	  print: _propTypes2.default.bool,
	  store: _propTypes2.default.object,
	  styles: _propTypes2.default.object
	}, _class.childContextTypes = {
	  contentHeight: _propTypes2.default.number,
	  contentWidth: _propTypes2.default.number,
	  export: _propTypes2.default.bool,
	  overview: _propTypes2.default.bool,
	  print: _propTypes2.default.bool,
	  store: _propTypes2.default.object,
	  styles: _propTypes2.default.object
	}, _temp);
	var MagicText = (_temp2 = _class2 = function (_React$Component2) {
	  (0, _inherits3.default)(MagicText, _React$Component2);
	
	  function MagicText(props) {
	    (0, _classCallCheck3.default)(this, MagicText);
	
	    var _this2 = (0, _possibleConstructorReturn3.default)(this, _React$Component2.call(this, props));
	
	    _this2.makePortal = function () {
	      var p = document.createElement('div');
	      p.id = 'portal';
	      p.style.position = 'absolute';
	      p.style.width = '100%';
	      p.style.height = '100%';
	      p.style.top = 0;
	      p.style.left = 0;
	      p.style.visibility = 'hidden';
	      document.body.append(p);
	      return p;
	    };
	
	    _this2.container = null;
	    _this2.styleMap = {};
	    _this2.lastPortalMap = {};
	    _this2.portalMap = {};
	    _this2.diffs = {};
	    _this2.lastDiffs = null;
	    _this2.state = {
	      renderedChildren: props.children
	    };
	    return _this2;
	  }
	
	  MagicText.prototype.componentDidMount = function componentDidMount() {
	    var _this3 = this;
	
	    this.mounted = true;
	    this.portal = document.getElementById('portal');
	    if (!this.props.presenter) {
	      this.container.animate([{ opacity: 0 }, { opacity: 1 }], {
	        duration: 500,
	        easing: 'ease-in'
	      });
	      this.props.exitSubscription(function () {
	        _this3.container.animate([{ opacity: 1 }, { opacity: 0 }], {
	          duration: 500,
	          easing: 'ease-in'
	        });
	      });
	    }
	    if (!this.portal) {
	      this.portal = this.makePortal();
	    }
	    _reactDom2.default.render((0, _jsx3.default)(Context, {
	      context: this.context
	    }, void 0, (0, _jsx3.default)(Deck, {}, void 0, this.props.children)), this.portal, function () {
	      _this3.timeout = setTimeout(function () {
	        var containerRoot = (0, _get2.default)(_this3.container, 'childNodes[0]');
	        var portalRoot = (0, _get2.default)(_this3.portal, 'childNodes[0].childNodes[0]');
	        if (containerRoot && portalRoot) {
	          (0, _magic.updateChildren)(containerRoot);
	          (0, _magic.updateChildren)(portalRoot);
	          (0, _magic.buildStyleMap)(_this3.portalMap, portalRoot);
	        }
	      }, 300);
	    });
	  };
	
	  MagicText.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this4 = this;
	
	    if (this.props.magicIndex === nextProps.magicIndex) {
	      return;
	    }
	    _reactDom2.default.render((0, _jsx3.default)(Context, {
	      context: this.context
	    }, void 0, (0, _jsx3.default)(Deck, {}, void 0, nextProps.children)), this.portal, function () {
	      var styles = {};
	      var portalRoot = (0, _get2.default)(_this4.portal, 'childNodes[0].childNodes[0]');
	      if (portalRoot) {
	        (0, _magic.updateChildren)(portalRoot);
	        (0, _magic.buildStyleMap)(styles, portalRoot);
	        _this4.diffs = (0, _deepObjectDiff.detailedDiff)(_this4.portalMap, styles);
	        _this4.lastPortalMap = _this4.portalMap;
	        _this4.portalMap = styles;
	        if (_this4.mounted) {
	          _this4.setState({
	            renderedChildren: nextProps.children
	          }, function () {
	            _this4.forceUpdate();
	          });
	        }
	      }
	    });
	  };
	
	  MagicText.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	    return false;
	  };
	
	  MagicText.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this5 = this;
	
	    var containerRoot = (0, _get2.default)(this.container, 'childNodes[0]');
	    if (containerRoot) {
	      (0, _magic.updateChildren)(containerRoot);
	    }
	    if (this.diffs.added) {
	      (0, _keys2.default)(this.diffs.added).forEach(function (m) {
	        var el = document.querySelector('[data-key=\'' + m + '\']');
	        if (el) {
	          el.animate([{ opacity: 0 }, { opacity: 1 }], {
	            duration: 500,
	            easing: 'ease-in'
	          });
	        }
	      });
	    }
	    if (this.diffs.updated) {
	      (0, _keys2.default)(this.diffs.updated).forEach(function (m) {
	        var props = (0, _extends3.default)({}, _this5.diffs.added[m] || {}, _this5.diffs.updated[m] || {});
	        var last = (0, _extends3.default)({}, _this5.lastPortalMap[m] || {});
	        if (last) {
	          var start = {};
	          var end = {};
	          var xdiff = props.x - last.x || 0;
	          var ydiff = props.y - last.y || 0;
	          start.transform = 'translate(' + xdiff * -1 + 'px, ' + ydiff * -1 + 'px)';
	          end.transform = 'translate(0, 0)';
	          var el = document.querySelector('[data-key=\'' + m + '\']');
	          if (el && !el.classList.contains('spectacle-content')) {
	            el.animate([start, end], {
	              duration: 500,
	              easing: 'ease-in'
	            });
	          }
	        }
	      });
	    }
	    this.lastDiffs = this.diffs;
	  };
	
	  MagicText.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearTimeout(this.timeout);
	    this.mounted = false;
	  };
	
	  MagicText.prototype.render = function render() {
	    var _this6 = this;
	
	    return _react2.default.createElement(
	      'div',
	      {
	        style: {
	          height: '100%',
	          width: '100%'
	        },
	        ref: function ref(c) {
	          _this6.container = c;
	        }
	      },
	      this.state.renderedChildren
	    );
	  };
	
	  return MagicText;
	}(_react2.default.Component), _class2.contextTypes = {
	  contentHeight: _propTypes2.default.number,
	  contentWidth: _propTypes2.default.number,
	  export: _propTypes2.default.bool,
	  overview: _propTypes2.default.bool,
	  print: _propTypes2.default.bool,
	  store: _propTypes2.default.object,
	  styles: _propTypes2.default.object
	}, _temp2);
	exports.default = MagicText;

/***/ }),
/* 1071 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Manager = undefined;
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _isFinite = __webpack_require__(518);
	
	var _isFinite2 = _interopRequireDefault(_isFinite);
	
	var _from = __webpack_require__(517);
	
	var _from2 = _interopRequireDefault(_from);
	
	var _stringify = __webpack_require__(260);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _set = __webpack_require__(521);
	
	var _set2 = _interopRequireDefault(_set);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _keys = __webpack_require__(110);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _class, _temp; /*eslint new-cap:0, max-statements:0*/
	/* eslint react/no-did-mount-set-state: 0 */
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _TransitionGroup = __webpack_require__(1025);
	
	var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);
	
	var _filter = __webpack_require__(784);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _size = __webpack_require__(792);
	
	var _size2 = _interopRequireDefault(_size);
	
	var _findIndex = __webpack_require__(208);
	
	var _findIndex2 = _interopRequireDefault(_findIndex);
	
	var _get = __webpack_require__(209);
	
	var _get2 = _interopRequireDefault(_get);
	
	var _reactRedux = __webpack_require__(236);
	
	var _actions = __webpack_require__(245);
	
	var _typeface = __webpack_require__(475);
	
	var _typeface2 = _interopRequireDefault(_typeface);
	
	var _slides = __webpack_require__(105);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	var _toStyle = __webpack_require__(1101);
	
	var _memoize = __webpack_require__(360);
	
	var _memoize2 = _interopRequireDefault(_memoize);
	
	var _presenter = __webpack_require__(1076);
	
	var _presenter2 = _interopRequireDefault(_presenter);
	
	var _export = __webpack_require__(1064);
	
	var _export2 = _interopRequireDefault(_export);
	
	var _overview = __webpack_require__(1074);
	
	var _overview2 = _interopRequireDefault(_overview);
	
	var _magic = __webpack_require__(463);
	
	var _magic2 = _interopRequireDefault(_magic);
	
	var _autoplayControls = __webpack_require__(1058);
	
	var _autoplayControls2 = _interopRequireDefault(_autoplayControls);
	
	var _fullscreen = __webpack_require__(1067);
	
	var _fullscreen2 = _interopRequireDefault(_fullscreen);
	
	var _progress = __webpack_require__(1077);
	
	var _progress2 = _interopRequireDefault(_progress);
	
	var _controls = __webpack_require__(1062);
	
	var _controls2 = _interopRequireDefault(_controls);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var convertStyle = function convertStyle(styles) {
	  return (0, _keys2.default)(styles).map(function (key) {
	    return key + ' { ' + (0, _toStyle.string)(styles[key]) + '} ';
	  }).join('');
	};
	
	convertStyle = (0, _memoize2.default)(convertStyle);
	
	var StyledDeck = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	  return {
	    backgroundColor: props.route.params.indexOf('presenter') !== -1 || props.route.params.indexOf('overview') !== -1 ? 'black' : '',
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    width: '100%',
	    height: '100%'
	  };
	});
	
	var StyledTransition = /*#__PURE__*/(0, _reactEmotion2.default)(_TransitionGroup2.default)({
	  height: '100%',
	  width: '100%',
	  perspective: 1000,
	  transformStyle: 'flat'
	});
	
	var _ref = (0, _jsx3.default)(_fullscreen2.default, {});
	
	var Manager = exports.Manager = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Manager, _Component);
	
	  function Manager(props) {
	    (0, _classCallCheck3.default)(this, Manager);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
	    _this.viewedIndexes = new _set2.default();
	
	    _this._getProgressStyles = function () {
	      var slideIndex = _this._getSlideIndex();
	      var slide = _this._getSlideByIndex(slideIndex);
	
	      if (slide.props.progressColor) {
	        return slide.props.progressColor;
	      }
	      return null;
	    };
	
	    _this._getControlStyles = function () {
	      var slideIndex = _this._getSlideIndex();
	      var slide = _this._getSlideByIndex(slideIndex);
	
	      if (slide.props.controlColor) {
	        return slide.props.controlColor;
	      }
	      return null;
	    };
	
	    _this._handleKeyPress = _this._handleKeyPress.bind(_this);
	    _this._handleScreenChange = _this._handleScreenChange.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this._goToSlide = _this._goToSlide.bind(_this);
	    _this._startAutoplay = _this._startAutoplay.bind(_this);
	    _this._stopAutoplay = _this._stopAutoplay.bind(_this);
	    _this.state = {
	      lastSlideIndex: null,
	      slideReference: [],
	      fullscreen: window.innerHeight === screen.height,
	      mobile: window.innerWidth < props.contentWidth,
	      autoplaying: props.autoplay
	    };
	    _this.slideCache = null;
	    return _this;
	  }
	
	  Manager.prototype.getChildContext = function getChildContext() {
	    var _this2 = this;
	
	    return {
	      contentWidth: this.props.contentWidth,
	      contentHeight: this.props.contentHeight,
	      goToSlide: function goToSlide(slide) {
	        return _this2._goToSlide({ slide: slide });
	      }
	    };
	  };
	
	  Manager.prototype.componentWillMount = function componentWillMount() {
	    this.setState({
	      slideReference: this._buildSlideReference(this.props)
	    });
	  };
	
	  Manager.prototype.componentDidMount = function componentDidMount() {
	    var slideIndex = this._getSlideIndex();
	    this.setState({
	      lastSlideIndex: slideIndex
	    });
	    this._attachEvents();
	    if (this.props.autoplay) {
	      this._startAutoplay();
	    }
	  };
	
	  Manager.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    this.setState({
	      slideReference: this._buildSlideReference(nextProps)
	    });
	  };
	
	  Manager.prototype.componentDidUpdate = function componentDidUpdate() {
	    if (this.props.globalStyles && !this.context.store.getState().style.globalStyleSet) {
	      this.props.dispatch((0, _actions.setGlobalStyle)());
	    }
	  };
	
	  Manager.prototype.componentWillUnmount = function componentWillUnmount() {
	    this._detachEvents();
	  };
	
	  Manager.prototype._attachEvents = function _attachEvents() {
	    window.addEventListener('storage', this._goToSlide);
	    window.addEventListener('keydown', this._handleKeyPress);
	    window.addEventListener('resize', this._handleScreenChange);
	  };
	
	  Manager.prototype._detachEvents = function _detachEvents() {
	    window.removeEventListener('storage', this._goToSlide);
	    window.removeEventListener('keydown', this._handleKeyPress);
	    window.removeEventListener('resize', this._handleScreenChange);
	  };
	
	  Manager.prototype._startAutoplay = function _startAutoplay() {
	    var _this3 = this;
	
	    clearInterval(this.autoplayInterval);
	    this.setState({ autoplaying: true });
	    this.autoplayInterval = setInterval(function () {
	      _this3._nextSlide();
	    }, this.props.autoplayDuration);
	  };
	
	  Manager.prototype._stopAutoplay = function _stopAutoplay() {
	    this.setState({ autoplaying: false });
	    clearInterval(this.autoplayInterval);
	  };
	
	  Manager.prototype._handleEvent = function _handleEvent(e) {
	    // eslint-disable-line complexity
	    var event = window.event ? window.event : e;
	
	    if (event.keyCode === 37 || event.keyCode === 33 || event.keyCode === 32 && event.shiftKey) {
	      this._prevSlide();
	      this._stopAutoplay();
	    } else if (event.keyCode === 39 || event.keyCode === 34 || event.keyCode === 32 && !event.shiftKey) {
	      this._nextSlide();
	      this._stopAutoplay();
	    } else if (event.altKey && event.keyCode === 79 && !event.ctrlKey && !event.metaKey) {
	      // o
	      this._toggleOverviewMode();
	    } else if (event.altKey && event.keyCode === 80 && !event.ctrlKey && !event.metaKey) {
	      // p
	      this._togglePresenterMode();
	    } else if (event.altKey && event.keyCode === 84 && !event.ctrlKey && !event.metaKey) {
	      // t
	      this._toggleTimerMode();
	    } else if (event.altKey && event.keyCode === 65 && !event.ctrlKey && !event.metaKey) {
	      // a
	      if (this.props.autoplay) {
	        this._startAutoplay();
	      }
	    }
	  };
	
	  Manager.prototype._handleKeyPress = function _handleKeyPress(e) {
	    var event = window.event ? window.event : e;
	
	    if (event.target instanceof HTMLInputElement || event.target.type === 'textarea') {
	      return;
	    }
	
	    this._handleEvent(e);
	  };
	
	  Manager.prototype._handleScreenChange = function _handleScreenChange() {
	    this.setState({
	      fullscreen: window.innerHeight === screen.height,
	      mobile: window.innerWidth < this.props.contentWidth
	    });
	  };
	
	  Manager.prototype._toggleOverviewMode = function _toggleOverviewMode() {
	    var suffix = this.props.route.params.indexOf('overview') !== -1 ? '' : '?overview';
	    this.context.history.replace('/' + this.props.route.slide + suffix);
	  };
	
	  Manager.prototype._togglePresenterMode = function _togglePresenterMode() {
	    var suffix = this.props.route.params.indexOf('presenter') !== -1 ? '' : '?presenter';
	    this.context.history.replace('/' + this.props.route.slide + suffix);
	  };
	
	  Manager.prototype._toggleTimerMode = function _toggleTimerMode() {
	    var isTimer = this.props.route.params.indexOf('presenter') !== -1 && this.props.route.params.indexOf('timer') !== -1;
	    var suffix = isTimer ? '?presenter' : '?presenter&timer';
	    this.context.history.replace('/' + this.props.route.slide + suffix);
	  };
	
	  Manager.prototype._getSuffix = function _getSuffix() {
	    if (this.props.route.params.indexOf('presenter') !== -1) {
	      var isTimerMode = this.props.route.params.indexOf('timer') !== -1;
	      return isTimerMode ? '?presenter&timer' : '?presenter';
	    } else if (this.props.route.params.indexOf('overview') !== -1) {
	      return '?overview';
	    } else {
	      return '';
	    }
	  };
	
	  Manager.prototype._goToSlide = function _goToSlide(e) {
	    var data = null;
	    var canNavigate = true;
	    var offset = 0;
	    if (e.key === 'spectacle-slide') {
	      data = JSON.parse(e.newValue);
	      canNavigate = this._checkFragments(this.props.route.slide, data.forward);
	    } else if (e.slide) {
	      data = e;
	      offset = 1;
	
	      var index = isNaN(parseInt(data.slide, 10)) ? (0, _get2.default)(this.state.slideReference.find(function (slide) {
	        return slide.id === data.slide;
	      }), 'rootIndex', 0) : data.slide - 1;
	
	      localStorage.setItem('spectacle-slide', (0, _stringify2.default)({
	        slide: this._getHash(index),
	        forward: false,
	        time: Date.now()
	      }));
	    } else {
	      return;
	    }
	    var slideIndex = this._getSlideIndex();
	    this.setState({
	      lastSlideIndex: slideIndex || 0
	    });
	    if (canNavigate) {
	      var slide = data.slide;
	      if (!isNaN(parseInt(slide, 10))) {
	        slide = parseInt(slide, 10) - offset;
	      }
	      this.context.history.replace('/' + slide + this._getSuffix());
	    }
	  };
	
	  Manager.prototype._prevSlide = function _prevSlide() {
	    var slideIndex = this._getSlideIndex();
	    this.setState({
	      lastSlideIndex: slideIndex
	    });
	    this.viewedIndexes.delete(slideIndex);
	    if (this._checkFragments(this.props.route.slide, false) || this.props.route.params.indexOf('overview') !== -1) {
	      if (slideIndex > 0) {
	        this.context.history.replace('/' + this._getHash(slideIndex - 1) + this._getSuffix());
	        localStorage.setItem('spectacle-slide', (0, _stringify2.default)({
	          slide: this._getHash(slideIndex - 1),
	          forward: false,
	          time: Date.now()
	        }));
	      }
	    } else if (slideIndex > 0) {
	      localStorage.setItem('spectacle-slide', (0, _stringify2.default)({
	        slide: this._getHash(slideIndex),
	        forward: false,
	        time: Date.now()
	      }));
	    }
	  };
	
	  Manager.prototype._nextUnviewedIndex = function _nextUnviewedIndex() {
	    var sortedIndexes = (0, _from2.default)(this.viewedIndexes).sort(function (a, b) {
	      return a - b;
	    });
	    return Math.min((sortedIndexes[sortedIndexes.length - 1] || 0) + 1, this.state.slideReference.length - 1);
	  };
	
	  Manager.prototype._getOffset = function _getOffset(slideIndex) {
	    var _this4 = this;
	
	    var goTo = this.state.slideReference[slideIndex].goTo;
	
	    var nextUnviewedIndex = this._nextUnviewedIndex();
	    if (goTo && !isNaN(parseInt(goTo))) {
	      var goToIndex = function goToIndex() {
	        if (_this4.viewedIndexes.has(goTo - 1)) {
	          return _this4._nextUnviewedIndex();
	        }
	        return goTo - 1;
	      };
	      return goToIndex() - slideIndex;
	    }
	    return nextUnviewedIndex - slideIndex;
	  };
	
	  Manager.prototype._nextSlide = function _nextSlide() {
	    var slideIndex = this._getSlideIndex();
	    this.setState({
	      lastSlideIndex: slideIndex
	    });
	    var slideReference = this.state.slideReference;
	    if (this._checkFragments(this.props.route.slide, true) || this.props.route.params.indexOf('overview') !== -1) {
	      if (slideIndex === slideReference.length - 1) {
	        // On last slide, loop to first slide
	        if (this.props.autoplay && this.state.autoplaying) {
	          var slideData = '{ "slide": "0", "forward": "false" }';
	          this._goToSlide({ key: 'spectacle-slide', newValue: slideData });
	        }
	      } else if (slideIndex < slideReference.length - 1) {
	        this.viewedIndexes.add(slideIndex);
	        var offset = this._getOffset(slideIndex);
	        this.context.history.replace('/' + (this._getHash(slideIndex + offset) + this._getSuffix()));
	        localStorage.setItem('spectacle-slide', (0, _stringify2.default)({
	          slide: this._getHash(slideIndex + offset),
	          forward: true,
	          time: Date.now()
	        }));
	      }
	    } else if (slideIndex < slideReference.length) {
	      localStorage.setItem('spectacle-slide', (0, _stringify2.default)({
	        slide: this._getHash(slideIndex),
	        forward: true,
	        time: Date.now()
	      }));
	    }
	  };
	
	  Manager.prototype._getHash = function _getHash(slideIndex) {
	    return this.state.slideReference[slideIndex].id;
	  };
	
	  Manager.prototype._checkFragments = function _checkFragments(slide, forward) {
	    var state = this.context.store.getState();
	    var fragments = state.fragment.fragments;
	    // Not proud of this at all. 0.14 Parent based contexts will fix this.
	    if (this.props.route.params.indexOf('presenter') !== -1) {
	      var main = document.querySelector('.spectacle-presenter-main');
	      if (main) {
	        var frags = main.querySelectorAll('.fragment');
	        if (!frags.length) {
	          return true;
	        }
	      } else {
	        return true;
	      }
	    }
	    if (slide in fragments) {
	      var count = (0, _size2.default)(fragments[slide]);
	      var visible = (0, _filter2.default)(fragments[slide], function (s) {
	        return s.visible === true;
	      });
	      var hidden = (0, _filter2.default)(fragments[slide], function (s) {
	        return s.visible !== true;
	      });
	      if (forward === true && visible.length !== count) {
	        this.props.dispatch((0, _actions.updateFragment)({
	          fragment: hidden[0],
	          visible: true
	        }));
	        return false;
	      }
	      if (forward === false && hidden.length !== count) {
	        this.props.dispatch((0, _actions.updateFragment)({
	          fragment: visible[(0, _size2.default)(visible) - 1],
	          visible: false
	        }));
	        return false;
	      }
	      return true;
	    } else {
	      return true;
	    }
	  };
	
	  Manager.prototype._getTouchEvents = function _getTouchEvents() {
	    var self = this;
	
	    return {
	      onTouchStart: function onTouchStart(e) {
	        self.touchObject = {
	          startX: e.touches[0].pageX,
	          startY: e.touches[0].pageY
	        };
	      },
	      onTouchMove: function onTouchMove(e) {
	        var direction = self._swipeDirection({
	          x1: self.touchObject.startX,
	          x2: e.touches[0].pageX,
	          y1: self.touchObject.startY,
	          y2: e.touches[0].pageY
	        });
	
	        self.touchObject = {
	          startX: self.touchObject.startX,
	          startY: self.touchObject.startY,
	          endX: e.clientX,
	          endY: e.clientY,
	          length: Math.round(Math.sqrt(Math.pow(e.touches[0].pageX - self.touchObject.startX, 2))),
	          direction: direction
	        };
	
	        if (direction !== 0) {
	          e.preventDefault();
	        }
	      },
	      onTouchEnd: function onTouchEnd(e) {
	        self._handleSwipe(e);
	      },
	      onTouchCancel: function onTouchCancel(e) {
	        self._handleSwipe(e);
	      }
	    };
	  };
	
	  Manager.prototype.handleClick = function handleClick(e) {
	    if (this.clickSafe === true) {
	      e.preventDefault();
	      e.stopPropagation();
	      e.nativeEvent.stopPropagation();
	    }
	  };
	
	  Manager.prototype._handleSwipe = function _handleSwipe() {
	    if (typeof this.touchObject.length !== 'undefined' && this.touchObject.length > 44) {
	      this.clickSafe = true;
	    } else {
	      this.clickSafe = false;
	    }
	
	    if (Math.abs(this.touchObject.length) > 20) {
	      if (this.touchObject.direction === 1) {
	        this._nextSlide();
	      } else if (this.touchObject.direction === -1) {
	        this._prevSlide();
	      }
	    }
	
	    this.touchObject = {};
	  };
	
	  Manager.prototype._swipeDirection = function _swipeDirection(touch) {
	    var xDist = touch.x1 - touch.x2;
	    var yDist = touch.y1 - touch.y2;
	    var r = Math.atan2(yDist, xDist);
	    var swipeAngle = Math.round(r * 180 / Math.PI);
	
	    if (swipeAngle < 0) {
	      swipeAngle = 360 - Math.abs(swipeAngle);
	    }
	    if (swipeAngle <= 45 && swipeAngle >= 0) {
	      return 1;
	    }
	    if (swipeAngle <= 360 && swipeAngle >= 315) {
	      return 1;
	    }
	    if (swipeAngle >= 135 && swipeAngle <= 225) {
	      return -1;
	    }
	
	    return 0;
	  };
	
	  Manager.prototype._buildSlideReference = function _buildSlideReference(props) {
	    var slideReference = [];
	    _react.Children.toArray(props.children).forEach(function (child, rootIndex) {
	      if (child.type === _magic2.default) {
	        _react.Children.toArray(child.props.children).forEach(function (setSlide, magicIndex) {
	          var reference = {
	            id: setSlide.props.id || slideReference.length,
	            magicIndex: magicIndex,
	            rootIndex: rootIndex
	          };
	          slideReference.push(reference);
	        });
	      } else if (!child.props.hasSlideChildren) {
	        var reference = {
	          id: child.props.id || slideReference.length,
	          rootIndex: rootIndex
	        };
	        if (child.props.goTo) {
	          reference.goTo = child.props.goTo;
	        }
	        slideReference.push(reference);
	      } else {
	        child.props.children.forEach(function (setSlide, setIndex) {
	          var reference = {
	            id: setSlide.props.id || slideReference.length,
	            setIndex: setIndex,
	            rootIndex: rootIndex
	          };
	          if (child.props.goTo) {
	            reference.goTo = child.props.goTo;
	          }
	          slideReference.push(reference);
	        });
	      }
	    });
	    return slideReference;
	  };
	
	  Manager.prototype._getSlideIndex = function _getSlideIndex() {
	    var _this5 = this;
	
	    var index = parseInt(this.props.route.slide);
	    if (!(0, _isFinite2.default)(index)) {
	      var foundIndex = (0, _findIndex2.default)(this.state.slideReference, function (reference) {
	        return _this5.props.route.slide === reference.id;
	      });
	      index = foundIndex >= 0 ? foundIndex : 0;
	    }
	    return index;
	  };
	
	  Manager.prototype._getSlideByIndex = function _getSlideByIndex(index) {
	    return (0, _slides.getSlideByIndex)(this.props.children, this.state.slideReference, index);
	  };
	
	  Manager.prototype._renderSlide = function _renderSlide() {
	    var slideIndex = this._getSlideIndex();
	    var slide = this._getSlideByIndex(slideIndex);
	
	    return (0, _react.cloneElement)(slide, {
	      dispatch: this.props.dispatch,
	      fragments: this.props.fragment,
	      export: this.props.route.params.indexOf('export') !== -1,
	      print: this.props.route.params.indexOf('print') !== -1,
	      hash: this.props.route.slide,
	      slideIndex: slideIndex,
	      lastSlideIndex: this.state.lastSlideIndex,
	      transition: (slide.props.transition || {}).length ? slide.props.transition : this.props.transition,
	      transitionDuration: (slide.props.transition || {}).transitionDuration ? slide.props.transitionDuration : this.props.transitionDuration,
	      slideReference: this.state.slideReference
	    });
	  };
	
	  Manager.prototype.render = function render() {
	    if (this.props.route.slide === null) {
	      return false;
	    }
	
	    var globals = this.props.route.params.indexOf('export') !== -1 ? {
	      body: (0, _assign2.default)(this.context.styles.global.body, {
	        minWidth: this.props.contentWidth + 150,
	        minHeight: this.props.contentHeight + 150,
	        overflow: 'auto'
	      }),
	      '.spectacle-presenter-next .fragment': {
	        display: 'none !important'
	      }
	    } : {
	      '.spectacle-presenter-next .fragment': {
	        display: 'none !important'
	      }
	    };
	
	    var componentToRender = void 0;
	    var children = _react.Children.toArray(this.props.children);
	    if (this.props.route.params.indexOf('presenter') !== -1) {
	      var isTimerMode = this.props.route.params.indexOf('timer') !== -1;
	      componentToRender = (0, _jsx3.default)(_presenter2.default, {
	        dispatch: this.props.dispatch,
	        slides: children,
	        slideReference: this.state.slideReference,
	        slideIndex: this._getSlideIndex(),
	        hash: this.props.route.slide,
	        route: this.props.route,
	        lastSlideIndex: this.state.lastSlideIndex,
	        timer: isTimerMode
	      });
	    } else if (this.props.route.params.indexOf('export') !== -1) {
	      componentToRender = (0, _jsx3.default)(_export2.default, {
	        slides: children,
	        slideReference: this.state.slideReference,
	        route: this.props.route
	      });
	    } else if (this.props.route.params.indexOf('overview') !== -1) {
	      componentToRender = (0, _jsx3.default)(_overview2.default, {
	        slides: children,
	        slideReference: this.state.slideReference,
	        slideIndex: this._getSlideIndex(),
	        route: this.props.route
	      });
	    } else {
	      componentToRender = (0, _jsx3.default)(StyledTransition, {
	        component: 'div'
	      }, void 0, this._renderSlide());
	    }
	
	    var showControls = !this.state.fullscreen && !this.state.mobile && this.props.route.params.indexOf('export') === -1 && this.props.route.params.indexOf('overview') === -1 && this.props.route.params.indexOf('presenter') === -1;
	
	    var _context$styles$googl = this.context.styles.googleFonts,
	        googleFonts = _context$styles$googl === undefined ? {} : _context$styles$googl;
	
	    var googleFontsElements = (0, _keys2.default)(googleFonts).map(function (key, index) {
	      return (0, _jsx3.default)(_typeface2.default, {
	        googleFont: googleFonts[key].name,
	        styles: googleFonts[key].styles
	      }, 'gFont-' + index);
	    });
	
	    return _react2.default.createElement(
	      StyledDeck,
	      (0, _extends3.default)({
	        className: 'spectacle-deck',
	        route: this.props.route,
	        onClick: this.handleClick
	      }, this._getTouchEvents()),
	      this.props.controls && showControls && (0, _jsx3.default)(_controls2.default, {
	        currentSlideIndex: this._getSlideIndex(),
	        totalSlides: this.state.slideReference.length,
	        onPrev: this._prevSlide.bind(this),
	        onNext: this._nextSlide.bind(this),
	        controlColor: this._getControlStyles()
	      }),
	      googleFontsElements,
	      componentToRender,
	      this.props.route.params.indexOf('export') === -1 && this.props.route.params.indexOf('overview') === -1 ? (0, _jsx3.default)(_progress2.default, {
	        items: this.state.slideReference,
	        currentSlideIndex: this._getSlideIndex(),
	        type: this.props.progress,
	        progressColor: this._getProgressStyles()
	      }) : '',
	      this.props.route.params.indexOf('export') === -1 ? _ref : '',
	      this.props.autoplay ? (0, _jsx3.default)(_autoplayControls2.default, {
	        autoplaying: this.state.autoplaying,
	        onPlay: this._startAutoplay,
	        onPause: this._stopAutoplay
	      }) : '',
	      this.props.globalStyles && (0, _jsx3.default)('style', {
	        dangerouslySetInnerHTML: {
	          __html: convertStyle((0, _assign2.default)({}, this.context.styles.global, globals))
	        }
	      })
	    );
	  };
	
	  return Manager;
	}(_react.Component), _class.displayName = 'Manager', _class.defaultProps = {
	  autoplay: false,
	  autoplayDuration: 7000,
	  contentWidth: 1000,
	  contentHeight: 700,
	  transition: [],
	  transitionDuration: 500,
	  progress: 'pacman',
	  controls: true,
	  globalStyles: true
	}, _class.contextTypes = {
	  styles: _propTypes2.default.object,
	  print: _propTypes2.default.object,
	  history: _propTypes2.default.object,
	  presenter: _propTypes2.default.bool,
	  export: _propTypes2.default.bool,
	  overview: _propTypes2.default.bool,
	  store: _propTypes2.default.object,
	  slide: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
	}, _class.childContextTypes = {
	  contentWidth: _propTypes2.default.number,
	  contentHeight: _propTypes2.default.number,
	  goToSlide: _propTypes2.default.func
	}, _temp);
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return state;
	}, null, null, { withRef: true })(Manager);

/***/ }),
/* 1072 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	exports.default = MarkdownSlides;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _slide = __webpack_require__(467);
	
	var _slide2 = _interopRequireDefault(_slide);
	
	var _markdown = __webpack_require__(464);
	
	var _markdown2 = _interopRequireDefault(_markdown);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var transformStringsIntoJSX = function transformStringsIntoJSX(strings) {
	  return strings.split(/\n---\n/).map(function (markdown, index) {
	    return (0, _jsx3.default)(_slide2.default, {}, 'md-slide-' + index, (0, _jsx3.default)(_markdown2.default, {}, void 0, markdown));
	  });
	};
	
	function MarkdownSlides(stringOrStrings) {
	  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    interpolations[_key - 1] = arguments[_key];
	  }
	
	  if (Array.isArray(stringOrStrings)) {
	    var strings = stringOrStrings.map(function (string, index) {
	      if (interpolations[index]) {
	        return (string + interpolations[index]).trim();
	      }
	      return string.trim();
	    }).join('');
	    return transformStringsIntoJSX(strings);
	  }
	  return transformStringsIntoJSX(stringOrStrings);
	}

/***/ }),
/* 1073 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Notes = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Notes, _Component);
	
	  function Notes() {
	    (0, _classCallCheck3.default)(this, Notes);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Notes.prototype.componentWillMount = function componentWillMount() {
	    var _context = this.context,
	        store = _context.store,
	        parentSlide = _context.slideHash,
	        updateNotes = _context.updateNotes;
	
	    var currentSlide = store.getState().route.slide;
	
	    // updateNotes is only defined when this component is wrapped in
	    // a Presenter.
	    // Also, the type of parentSlide is either string or number based
	    // on the parent slide having an id or not.
	    if (updateNotes && currentSlide === '' + parentSlide) {
	      updateNotes(this.props.children);
	    }
	  };
	
	  Notes.prototype.render = function render() {
	    return false;
	  };
	
	  return Notes;
	}(_react.Component), _class.contextTypes = {
	  store: _propTypes2.default.object,
	  slideHash: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
	  updateNotes: _propTypes2.default.func
	}, _temp);
	exports.default = Notes;

/***/ }),
/* 1074 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _slides = __webpack_require__(105);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var OverviewContainer = /*#__PURE__*/(0, _reactEmotion2.default)('div')('height:100%;overflow:scroll;width:100%;');
	
	var SlideThumbnail = /*#__PURE__*/(0, _reactEmotion2.default)('div')('cursor:pointer;position:relative;float:left;height:', function (_ref) {
	  var screen = _ref.screen;
	  return screen / 3 * 0.7;
	}, 'px;opacity:', function (_ref2) {
	  var index = _ref2.index,
	      slideIndex = _ref2.slideIndex;
	  return index === slideIndex ? 1 : 0.5;
	}, ';transition:opacity 333ms ease-in-out;width:', function (_ref3) {
	  var screen = _ref3.screen;
	  return screen / 3;
	}, 'px;&:hover{opacity:1;}');
	
	var Overview = function (_Component) {
	  (0, _inherits3.default)(Overview, _Component);
	
	  function Overview(props) {
	    (0, _classCallCheck3.default)(this, Overview);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
	    _this.state = {
	      overviewWidth: document.documentElement.clientWidth
	    };
	    _this.resizeHandler = _this.resizeHandler.bind(_this);
	    return _this;
	  }
	
	  Overview.prototype.componentDidMount = function componentDidMount() {
	    this.resizeHandler();
	    window.addEventListener('resize', this.resizeHandler);
	  };
	
	  Overview.prototype.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('resize', this.resizeHandler);
	  };
	
	  Overview.prototype._slideClicked = function _slideClicked(index) {
	    this.context.history.replace('/' + this._getHash(index));
	  };
	
	  Overview.prototype._getHash = function _getHash(slideIndex) {
	    return this.props.slideReference[slideIndex].id;
	  };
	
	  Overview.prototype._renderSlides = function _renderSlides() {
	    var _this2 = this;
	
	    var slideIndex = this.props.slideIndex;
	    var screen = this.state.overviewWidth;
	    return this.props.slideReference.map(function (reference, index) {
	      var slide = (0, _slides.getSlideByIndex)(_this2.props.slides, _this2.props.slideReference, index);
	      var el = (0, _react.cloneElement)(slide, {
	        key: index,
	        slideIndex: index,
	        export: _this2.props.route.params.indexOf('export') !== -1,
	        print: _this2.props.route.params.indexOf('print') !== -1,
	        transition: [],
	        transitionDuration: 0,
	        appearOff: true
	      });
	      return (0, _jsx3.default)(SlideThumbnail, {
	        index: index,
	        screen: screen,
	        slideIndex: slideIndex,
	        onClick: _this2._slideClicked.bind(_this2, index)
	      }, index, el);
	    });
	  };
	
	  Overview.prototype.resizeHandler = function resizeHandler() {
	    this.setState({
	      overviewWidth: document.documentElement.clientWidth
	    });
	  };
	
	  Overview.prototype.render = function render() {
	    return (0, _jsx3.default)(OverviewContainer, {}, void 0, this._renderSlides());
	  };
	
	  return Overview;
	}(_react.Component);
	
	exports.default = Overview;
	
	
	Overview.contextTypes = {
	  styles: _propTypes2.default.object,
	  history: _propTypes2.default.object
	};

/***/ }),
/* 1075 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SlideInfo = exports.Notes = exports.HeaderContainer = exports.PreviewNextSlide = exports.PreviewCurrentSlide = exports.PreviewPane = exports.PresenterContent = exports.EndHeader = exports.ContentContainer = undefined;
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ContentContainer = /*#__PURE__*/exports.ContentContainer = (0, _reactEmotion2.default)('div')('display:flex;flex:1;padding:10px 50px 0;');
	
	var EndHeader = /*#__PURE__*/exports.EndHeader = (0, _reactEmotion2.default)('h1')('color:#fff;display:flex;margin:0;');
	
	var PresenterContent = /*#__PURE__*/exports.PresenterContent = (0, _reactEmotion2.default)('div')('display:flex;flex:1;flex-direction:column;height:100%;width:100%;');
	
	var PreviewPane = /*#__PURE__*/exports.PreviewPane = (0, _reactEmotion2.default)('div')('display:flex;flex:1;flex-wrap:wrap;height:90%;justify-content:center;position:absolute;top:10%;width:60%;');
	
	var PreviewCurrentSlide = /*#__PURE__*/exports.PreviewCurrentSlide = (0, _reactEmotion2.default)('div')('border:2px #fff solid;display:flex;flex:0 0 100%;height:55%;width:55%;padding:20px;');
	
	var PreviewNextSlide = /*#__PURE__*/exports.PreviewNextSlide = (0, _reactEmotion2.default)('div')('align-items:center;display:flex;flex:0 0 68.75%;height:40%;justify-content:center;opacity:0.4;');
	
	var HeaderContainer = /*#__PURE__*/exports.HeaderContainer = (0, _reactEmotion2.default)('div')('position:absolute;display:block;color:#fff;width:100%;height:10%;text-align:center;padding:10px 50px;');
	
	var Notes = /*#__PURE__*/exports.Notes = (0, _reactEmotion2.default)('div')('color:#fff;display:block;height:90%;left:calc(60% + 50px);padding:10px 30px;position:absolute;top:10%;width:(40% - 100px);overflow:auto;');
	
	var SlideInfo = /*#__PURE__*/exports.SlideInfo = (0, _reactEmotion2.default)('h2')('position:relative;top:50%;transform:translateY(-50%);float:left;margin:0;line-height:1;display:inline-block;fontSize:28px;');

/***/ }),
/* 1076 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _extends2 = __webpack_require__(48);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _slides = __webpack_require__(105);
	
	var _presenterComponents = __webpack_require__(1075);
	
	var _time = __webpack_require__(1080);
	
	var _time2 = _interopRequireDefault(_time);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _ref = (0, _jsx3.default)(_presenterComponents.EndHeader, {}, void 0, 'END');
	
	var Presenter = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Presenter, _Component);
	
	  function Presenter() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Presenter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      notes: {}
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Presenter.prototype.getChildContext = function getChildContext() {
	    return {
	      updateNotes: this.updateNotes.bind(this)
	    };
	  };
	
	  Presenter.prototype.getCurrentSlide = function getCurrentSlide() {
	    return this.context.store.getState().route.slide;
	  };
	
	  Presenter.prototype.updateNotes = function updateNotes(newNotes) {
	    var slide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	    var notes = (0, _extends3.default)({}, this.state.notes);
	    notes[slide || this.getCurrentSlide()] = newNotes;
	
	    this.setState({ notes: notes });
	  };
	
	  Presenter.prototype._getSlideByIndex = function _getSlideByIndex(index) {
	    return (0, _slides.getSlideByIndex)(_react.Children.toArray(this.props.slides), this.props.slideReference, index);
	  };
	
	  Presenter.prototype._renderMainSlide = function _renderMainSlide() {
	    var _props = this.props,
	        slideIndex = _props.slideIndex,
	        hash = _props.hash,
	        lastSlideIndex = _props.lastSlideIndex;
	
	    var child = this._getSlideByIndex(slideIndex);
	    var presenterStyle = {
	      position: 'relative'
	    };
	    return (0, _react.cloneElement)(child, {
	      dispatch: this.props.dispatch,
	      key: slideIndex,
	      hash: hash,
	      export: this.props.route.params.indexOf('export') !== -1,
	      print: this.props.route.params.indexOf('print') !== -1,
	      slideIndex: slideIndex,
	      lastSlideIndex: lastSlideIndex,
	      transition: [],
	      transitionIn: [],
	      transitionOut: [],
	      transitionDuration: 0,
	      presenter: true,
	      presenterStyle: presenterStyle
	    });
	  };
	
	  Presenter.prototype._renderNextSlide = function _renderNextSlide() {
	    var _props2 = this.props,
	        slideIndex = _props2.slideIndex,
	        lastSlideIndex = _props2.lastSlideIndex;
	
	    var presenterStyle = {
	      position: 'relative'
	    };
	    var child = this._getSlideByIndex(slideIndex + 1);
	    return child ? (0, _react.cloneElement)(child, {
	      dispatch: this.props.dispatch,
	      export: this.props.route.params.indexOf('export') !== -1,
	      print: this.props.route.params.indexOf('print') !== -1,
	      key: slideIndex + 1,
	      hash: child.props.id || slideIndex + 1,
	      slideIndex: slideIndex + 1,
	      lastSlideIndex: lastSlideIndex,
	      transition: [],
	      transitionIn: [],
	      transitionOut: [],
	      transitionDuration: 0,
	      presenterStyle: presenterStyle,
	      presenter: true,
	      appearOff: true
	    }) : _ref;
	  };
	
	  Presenter.prototype._renderNotes = function _renderNotes() {
	    var notes = void 0;
	    var currentSlide = this.getCurrentSlide();
	
	    if (this.state.notes[currentSlide]) {
	      notes = this.state.notes[currentSlide];
	    } else {
	      var child = this._getSlideByIndex(this.props.slideIndex);
	      notes = child.props.notes;
	    }
	
	    if (!notes) {
	      return false;
	    }
	
	    if (typeof notes === 'string') {
	      return (0, _jsx3.default)('div', {
	        dangerouslySetInnerHTML: { __html: notes }
	      });
	    }
	    return (0, _jsx3.default)('div', {}, void 0, notes);
	  };
	
	  Presenter.prototype.render = function render() {
	    return (0, _jsx3.default)(_presenterComponents.PresenterContent, {}, void 0, (0, _jsx3.default)(_presenterComponents.HeaderContainer, {}, void 0, (0, _jsx3.default)(_presenterComponents.SlideInfo, {}, void 0, 'Slide ', this.props.slideIndex + 1, ' of', ' ', this.props.slideReference.length), (0, _jsx3.default)(_time2.default, {
	      timer: this.props.timer
	    })), (0, _jsx3.default)(_presenterComponents.ContentContainer, {}, void 0, (0, _jsx3.default)(_presenterComponents.PreviewPane, {}, void 0, (0, _jsx3.default)(_presenterComponents.PreviewCurrentSlide, {
	      className: 'spectacle-presenter-main'
	    }, void 0, this._renderMainSlide()), (0, _jsx3.default)(_presenterComponents.PreviewNextSlide, {}, void 0, this._renderNextSlide())), (0, _jsx3.default)(_presenterComponents.Notes, {}, void 0, this._renderNotes())));
	  };
	
	  return Presenter;
	}(_react.Component), _class.childContextTypes = {
	  updateNotes: _propTypes2.default.func
	}, _temp2);
	exports.default = Presenter;
	
	
	Presenter.contextTypes = {
	  styles: _propTypes2.default.object,
	  store: _propTypes2.default.object.isRequired
	};

/***/ }),
/* 1077 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Pacman = {
	  Base: /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (_ref) {
	    var styles = _ref.styles,
	        position = _ref.position;
	    return [styles, position];
	  }),
	  Body: /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	    return props.styles;
	  })
	};
	
	// NOTE: rotateZ is 0.1 to generate two different animation names (emotion deduplication)
	var pacmanTopFrames = /*#__PURE__*/(0, _reactEmotion.keyframes)('0%{transform:rotateZ(0.1deg)}100%{transform:rotateZ(-30deg)}');
	
	// NOTE: rotateZ is 0.1 to generate two different animation names (emotion deduplication)
	var pacmanBottomFrames = /*#__PURE__*/(0, _reactEmotion.keyframes)('0%{transform:rotateZ(0.1deg)}100%{transform:rotateZ(30deg)}');
	
	var pacmanTopFramesBis = /*#__PURE__*/(0, _reactEmotion.keyframes)('0%{transform:rotateZ(0deg)}100%{transform:rotateZ(-30deg)}');
	
	var pacmanBottomFramesBis = /*#__PURE__*/(0, _reactEmotion.keyframes)('0%{transform:rotateZ(0deg)}100%{transform:rotateZ(30deg)}');
	
	var Point = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (_ref2) {
	  var styles = _ref2.styles,
	      position = _ref2.position;
	  return [styles, position];
	});
	var Bar = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (_ref3) {
	  var styles = _ref3.styles,
	      width = _ref3.width;
	  return [styles, width];
	});
	var Container = /*#__PURE__*/(0, _reactEmotion2.default)('div')(function (props) {
	  return props.styles;
	});
	
	var Progress = function (_Component) {
	  (0, _inherits3.default)(Progress, _Component);
	
	  function Progress() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Progress);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.resolveProgressStyles = function (field) {
	      var progressColor = _this.props.progressColor;
	
	
	      if (!_this.props.progressColor) {
	        return null;
	      }
	
	      var style = {};
	      var color = void 0;
	
	      if (!_this.context.styles.colors.hasOwnProperty(progressColor)) {
	        color = progressColor;
	      } else {
	        color = _this.context.styles.colors[progressColor];
	      }
	
	      style[field] = color;
	
	      return style;
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Progress.prototype.getWidth = function getWidth() {
	    return {
	      width: 100 * this.props.currentSlideIndex / (this.props.items.length - 1) + '%'
	    };
	  };
	
	  Progress.prototype.getPacmanStyle = function getPacmanStyle(side) {
	    var isBis = this.props.currentSlideIndex % 2 !== 0;
	    var animationName = void 0;
	
	    if (side === 'top') {
	      animationName = isBis ? pacmanTopFramesBis : pacmanTopFrames;
	    } else {
	      animationName = isBis ? pacmanBottomFramesBis : pacmanBottomFrames;
	    }
	
	    return {
	      animation: animationName + ' 0.12s linear 10 alternate both'
	    };
	  };
	
	  Progress.prototype.getPointPosition = function getPointPosition(i) {
	    return {
	      top: '-20px',
	      left: 5 + 20 * (i - this.props.items.length / 2) + 'px'
	    };
	  };
	
	  Progress.prototype.getPointStyle = function getPointStyle(i) {
	    var style = this.getPointPosition(i);
	    if (this.props.currentSlideIndex >= i) {
	      style.opacity = 0;
	    }
	
	    return style;
	  };
	
	  Progress.prototype.render = function render() {
	    var _this2 = this;
	
	    var _props = this.props,
	        type = _props.type,
	        currentSlideIndex = _props.currentSlideIndex,
	        items = _props.items;
	
	    var style = this.context.styles.progress;
	    var markup = void 0;
	    switch (type) {
	      case 'none':
	        return false;
	      case 'pacman':
	        style = style.pacman;
	        markup = (0, _jsx3.default)('div', {}, void 0, (0, _jsx3.default)(Pacman.Base, {
	          styles: style.pacman,
	          position: this.getPointPosition(currentSlideIndex)
	        }, void 0, (0, _jsx3.default)(Pacman.Body, {
	          styles: [style.pacmanTop, this.getPacmanStyle('top'), this.resolveProgressStyles('background')]
	        }), (0, _jsx3.default)(Pacman.Body, {
	          styles: [style.pacmanBottom, this.getPacmanStyle('bottom'), this.resolveProgressStyles('background')]
	        })), items.map(function (item, i) {
	          return (0, _jsx3.default)(Point, {
	            styles: [style.point, _this2.resolveProgressStyles('borderColor')],
	            position: _this2.getPointStyle(i)
	          }, 'presentation-progress-' + i);
	        }));
	        break;
	      case 'number':
	        style = style.number;
	        markup = (0, _jsx3.default)('div', {}, void 0, currentSlideIndex + 1, ' / ', items.length);
	        break;
	      case 'bar':
	        style = style.bar;
	        markup = (0, _jsx3.default)(Bar, {
	          styles: [style.bar, this.resolveProgressStyles('background')],
	          width: this.getWidth()
	        });
	        break;
	      default:
	        return false;
	    }
	    return (0, _jsx3.default)(Container, {
	      styles: [style.container, this.resolveProgressStyles('color')]
	    }, void 0, markup);
	  };
	
	  return Progress;
	}(_react.Component);
	
	exports.default = Progress;
	
	
	Progress.contextTypes = {
	  styles: _propTypes2.default.object
	};

/***/ }),
/* 1078 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SlideContent = exports.SlideContentWrapper = exports.SlideContainer = undefined;
	
	var _reactEmotion = __webpack_require__(8);
	
	var _reactEmotion2 = _interopRequireDefault(_reactEmotion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SlideContainer = /*#__PURE__*/exports.SlideContainer = (0, _reactEmotion2.default)('div')(function (_ref) {
	  var printMode = _ref.printMode,
	      exportMode = _ref.exportMode,
	      styles = _ref.styles,
	      background = _ref.background;
	
	  var printStyles = printMode ? {
	    backgroundColor: 'white',
	    backgroundImage: 'none'
	  } : {};
	  var outerStyles = {
	    transformOrigin: 'center center',
	    position: exportMode ? 'relative' : 'absolute',
	    top: 0,
	    left: 0,
	    width: '100%',
	    height: '100%',
	    display: 'flex',
	    overflow: 'hidden',
	    backgroundColor: background ? background : ''
	  };
	  return [outerStyles, styles.base, printStyles, styles.presenter];
	});
	
	var SlideContentWrapper = /*#__PURE__*/exports.SlideContentWrapper = (0, _reactEmotion2.default)('div')(function (_ref2) {
	  var align = _ref2.align,
	      overviewMode = _ref2.overviewMode;
	
	  var innerStyles = {
	    display: 'flex',
	    position: 'relative',
	    flex: 1,
	    alignItems: align ? align.split(' ')[1] : 'center',
	    justifyContent: align ? align.split(' ')[0] : 'center'
	  };
	  var overviewStyles = {
	    flexDirection: 'column'
	  };
	  return [innerStyles, overviewMode && overviewStyles];
	});
	
	var SlideContent = /*#__PURE__*/exports.SlideContent = (0, _reactEmotion2.default)('div')(function (props) {
	  var overviewMode = props.overviewMode,
	      scale = props.scale,
	      zoom = props.zoom,
	      margin = props.margin,
	      width = props.width,
	      height = props.height,
	      styles = props.styles;
	
	  var contentStyles = {
	    flex: 1,
	    maxHeight: height || 700,
	    maxWidth: width || 1000,
	    transform: 'scale(' + scale + ')',
	    padding: zoom > 0.6 ? margin || 40 : 10
	  };
	  var overviewStyles = {
	    width: '100%'
	  };
	  return [styles.context, overviewMode && overviewStyles, contentStyles];
	});

/***/ }),
/* 1079 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SlideSet = function (_Component) {
	  (0, _inherits3.default)(SlideSet, _Component);
	
	  function SlideSet() {
	    (0, _classCallCheck3.default)(this, SlideSet);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  SlideSet.prototype.render = function render() {
	    return (0, _jsx3.default)('div', {}, void 0, this.props.children);
	  };
	
	  return SlideSet;
	}(_react.Component);
	
	SlideSet.defaultProps = {
	  hasSlideChildren: true
	};
	
	SlideSet.contextTypes = {
	  store: _propTypes2.default.object
	};
	
	exports.default = SlideSet;

/***/ }),
/* 1080 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _clock = __webpack_require__(1060);
	
	var _clock2 = _interopRequireDefault(_clock);
	
	var _timer = __webpack_require__(1081);
	
	var _timer2 = _interopRequireDefault(_timer);
	
	var _timeComponents = __webpack_require__(246);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _ref = (0, _jsx3.default)(_timer2.default, {});
	
	var _ref2 = (0, _jsx3.default)(_clock2.default, {});
	
	var _ref3 = (0, _jsx3.default)(_timer2.default, {});
	
	var _ref4 = (0, _jsx3.default)(_clock2.default, {});
	
	var Time = function (_Component) {
	  (0, _inherits3.default)(Time, _Component);
	
	  function Time() {
	    (0, _classCallCheck3.default)(this, Time);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this));
	
	    _this.state = { timer: false };
	    return _this;
	  }
	
	  Time.prototype._renderClock = function _renderClock() {
	    if (this.state.timer) {
	      return _ref;
	    } else {
	      return _ref2;
	    }
	  };
	
	  Time.prototype.render = function render() {
	    return (0, _jsx3.default)(_timeComponents.TimeContainer, {}, void 0, this.props.timer ? _ref3 : _ref4);
	  };
	
	  return Time;
	}(_react.Component);
	
	exports.default = Time;

/***/ }),
/* 1081 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _timeComponents = __webpack_require__(246);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var timeCounter = function timeCounter(time) {
	  var hours = Math.floor(time / 3600);
	  var minutes = Math.floor(time / 60);
	  var seconds = time % 60;
	
	  var areHours = hours > 0;
	
	  hours = hours < 10 ? '0' + hours : hours;
	  minutes = minutes < 10 ? '0' + minutes : minutes;
	  seconds = seconds < 10 ? '0' + seconds : seconds;
	
	  var noHrTime = minutes + ' : ' + seconds;
	  var hrTime = hours + ' : ' + noHrTime;
	
	  return areHours ? hrTime : noHrTime;
	};
	
	var Timer = function (_Component) {
	  (0, _inherits3.default)(Timer, _Component);
	
	  function Timer() {
	    (0, _classCallCheck3.default)(this, Timer);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this));
	
	    _this.state = {
	      elapsedTime: 0,
	      paused: true
	    };
	    _this.handleStartTimer = _this.handleStartTimer.bind(_this);
	    _this.handleStopTimer = _this.handleStopTimer.bind(_this);
	    _this.handleResetTimer = _this.handleResetTimer.bind(_this);
	    return _this;
	  }
	
	  Timer.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearInterval(this.interval);
	  };
	
	  Timer.prototype.handleStartTimer = function handleStartTimer() {
	    var _this2 = this;
	
	    this.setState({
	      paused: false
	    });
	    this.interval = setInterval(function () {
	      _this2.setState({
	        elapsedTime: _this2.state.elapsedTime + 1
	      });
	    }, 1000);
	  };
	
	  Timer.prototype.handleStopTimer = function handleStopTimer() {
	    this.setState({
	      paused: true
	    });
	    clearInterval(this.interval);
	  };
	
	  Timer.prototype.handleResetTimer = function handleResetTimer() {
	    this.handleStopTimer();
	    this.setState({
	      elapsedTime: 0
	    });
	  };
	
	  Timer.prototype._renderResetButton = function _renderResetButton() {
	    return (0, _jsx3.default)(_timeComponents.TSingleButton, {
	      onClick: this.handleResetTimer
	    }, void 0, 'Reset');
	  };
	
	  Timer.prototype._renderStartButton = function _renderStartButton() {
	    return (0, _jsx3.default)(_timeComponents.TSingleButton, {
	      onClick: this.handleStartTimer,
	      start: true
	    }, void 0, 'Start');
	  };
	
	  Timer.prototype._renderStopButton = function _renderStopButton() {
	    return (0, _jsx3.default)(_timeComponents.TSingleButton, {
	      onClick: this.handleStopTimer,
	      stop: true
	    }, void 0, 'Stop');
	  };
	
	  Timer.prototype.render = function render() {
	    return (0, _jsx3.default)('div', {}, void 0, (0, _jsx3.default)(_timeComponents.Clock, {}, void 0, timeCounter(this.state.elapsedTime)), (0, _jsx3.default)(_timeComponents.TButtonContainer, {}, void 0, this.state.elapsedTime !== 0 && this.state.paused ? this._renderResetButton() : null, this.state.paused ? this._renderStartButton() : this._renderStopButton()));
	  };
	
	  return Timer;
	}(_react.Component);
	
	exports.default = Timer;

/***/ }),
/* 1082 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.themes = exports.Typeface = exports.Text = exports.Table = exports.TableRow = exports.TableItem = exports.TableHeaderItem = exports.TableHeader = exports.TableBody = exports.SlideSet = exports.Slide = exports.S = exports.Quote = exports.Notes = exports.MarkdownSlides = exports.Markdown = exports.Magic = exports.List = exports.ListItem = exports.Link = exports.Layout = exports.GoToAction = exports.Image = exports.Heading = exports.Fit = exports.Fill = exports.Deck = exports.ComponentPlayground = exports.Code = exports.CodePane = exports.Cite = exports.BlockQuote = exports.Appear = undefined;
	
	var _appear = __webpack_require__(1057);
	
	var _appear2 = _interopRequireDefault(_appear);
	
	var _blockQuote = __webpack_require__(454);
	
	var _blockQuote2 = _interopRequireDefault(_blockQuote);
	
	var _cite = __webpack_require__(1059);
	
	var _cite2 = _interopRequireDefault(_cite);
	
	var _codePane = __webpack_require__(455);
	
	var _codePane2 = _interopRequireDefault(_codePane);
	
	var _code = __webpack_require__(456);
	
	var _code2 = _interopRequireDefault(_code);
	
	var _componentPlayground = __webpack_require__(1061);
	
	var _componentPlayground2 = _interopRequireDefault(_componentPlayground);
	
	var _deck = __webpack_require__(1063);
	
	var _deck2 = _interopRequireDefault(_deck);
	
	var _fill = __webpack_require__(1065);
	
	var _fit = __webpack_require__(1066);
	
	var _heading = __webpack_require__(458);
	
	var _heading2 = _interopRequireDefault(_heading);
	
	var _image = __webpack_require__(459);
	
	var _image2 = _interopRequireDefault(_image);
	
	var _goToAction = __webpack_require__(1068);
	
	var _goToAction2 = _interopRequireDefault(_goToAction);
	
	var _layout = __webpack_require__(1069);
	
	var _layout2 = _interopRequireDefault(_layout);
	
	var _link = __webpack_require__(460);
	
	var _link2 = _interopRequireDefault(_link);
	
	var _listItem = __webpack_require__(461);
	
	var _listItem2 = _interopRequireDefault(_listItem);
	
	var _list = __webpack_require__(462);
	
	var _list2 = _interopRequireDefault(_list);
	
	var _magic = __webpack_require__(463);
	
	var _magic2 = _interopRequireDefault(_magic);
	
	var _markdown = __webpack_require__(464);
	
	var _markdown2 = _interopRequireDefault(_markdown);
	
	var _markdownSlides = __webpack_require__(1072);
	
	var _markdownSlides2 = _interopRequireDefault(_markdownSlides);
	
	var _notes = __webpack_require__(1073);
	
	var _notes2 = _interopRequireDefault(_notes);
	
	var _quote = __webpack_require__(465);
	
	var _quote2 = _interopRequireDefault(_quote);
	
	var _s = __webpack_require__(466);
	
	var _s2 = _interopRequireDefault(_s);
	
	var _slide = __webpack_require__(467);
	
	var _slide2 = _interopRequireDefault(_slide);
	
	var _slideSet = __webpack_require__(1079);
	
	var _slideSet2 = _interopRequireDefault(_slideSet);
	
	var _tableBody = __webpack_require__(468);
	
	var _tableBody2 = _interopRequireDefault(_tableBody);
	
	var _tableHeader = __webpack_require__(470);
	
	var _tableHeader2 = _interopRequireDefault(_tableHeader);
	
	var _tableHeaderItem = __webpack_require__(469);
	
	var _tableHeaderItem2 = _interopRequireDefault(_tableHeaderItem);
	
	var _tableItem = __webpack_require__(471);
	
	var _tableItem2 = _interopRequireDefault(_tableItem);
	
	var _tableRow = __webpack_require__(472);
	
	var _tableRow2 = _interopRequireDefault(_tableRow);
	
	var _table = __webpack_require__(473);
	
	var _table2 = _interopRequireDefault(_table);
	
	var _text = __webpack_require__(474);
	
	var _text2 = _interopRequireDefault(_text);
	
	var _typeface = __webpack_require__(475);
	
	var _typeface2 = _interopRequireDefault(_typeface);
	
	var _default = __webpack_require__(247);
	
	var _default2 = _interopRequireDefault(_default);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var themes = {
	  // Rename from `default` to `defaultTheme` to avoid keyword issues.
	  defaultTheme: _default2.default
	};
	
	exports.Appear = _appear2.default;
	exports.BlockQuote = _blockQuote2.default;
	exports.Cite = _cite2.default;
	exports.CodePane = _codePane2.default;
	exports.Code = _code2.default;
	exports.ComponentPlayground = _componentPlayground2.default;
	exports.Deck = _deck2.default;
	exports.Fill = _fill.Fill;
	exports.Fit = _fit.Fit;
	exports.Heading = _heading2.default;
	exports.Image = _image2.default;
	exports.GoToAction = _goToAction2.default;
	exports.Layout = _layout2.default;
	exports.Link = _link2.default;
	exports.ListItem = _listItem2.default;
	exports.List = _list2.default;
	exports.Magic = _magic2.default;
	exports.Markdown = _markdown2.default;
	exports.MarkdownSlides = _markdownSlides2.default;
	exports.Notes = _notes2.default;
	exports.Quote = _quote2.default;
	exports.S = _s2.default;
	exports.Slide = _slide2.default;
	exports.SlideSet = _slideSet2.default;
	exports.TableBody = _tableBody2.default;
	exports.TableHeader = _tableHeader2.default;
	exports.TableHeaderItem = _tableHeaderItem2.default;
	exports.TableItem = _tableItem2.default;
	exports.TableRow = _tableRow2.default;
	exports.Table = _table2.default;
	exports.Text = _text2.default;
	exports.Typeface = _typeface2.default;
	exports.themes = themes;

/***/ }),
/* 1083 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _reduxActions = __webpack_require__(153);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reducer = (0, _reduxActions.handleActions)({
	  ADD_FRAGMENT: function ADD_FRAGMENT(state, action) {
	    var _action$payload = action.payload,
	        id = _action$payload.id,
	        slide = _action$payload.slide;
	
	    var s = (0, _assign2.default)({}, state);
	    s.fragments[slide] = s.fragments[slide] || {};
	    s.fragments[slide][id] = action.payload;
	    return s;
	  },
	  UPDATE_FRAGMENT: function UPDATE_FRAGMENT(state, action) {
	    var fragment = action.payload.fragment;
	
	    var s = (0, _assign2.default)({}, state);
	    s.fragments[fragment.slide][fragment.id].visible = action.payload.visible;
	    return s;
	  }
	}, { fragments: {} });
	
	exports.default = reducer;

/***/ }),
/* 1084 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(243);
	
	var _fragment = __webpack_require__(1083);
	
	var _fragment2 = _interopRequireDefault(_fragment);
	
	var _route = __webpack_require__(1085);
	
	var _route2 = _interopRequireDefault(_route);
	
	var _style = __webpack_require__(1086);
	
	var _style2 = _interopRequireDefault(_style);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var rootReducer = (0, _redux.combineReducers)({
	  fragment: _fragment2.default,
	  route: _route2.default,
	  style: _style2.default
	});
	
	exports.default = rootReducer;

/***/ }),
/* 1085 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _reduxActions = __webpack_require__(153);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reducer = (0, _reduxActions.handleActions)({
	  UPDATE_ROUTE: function UPDATE_ROUTE(state, action) {
	    var _action$payload = action.payload,
	        location = _action$payload.location,
	        slideCount = _action$payload.slideCount;
	
	    var slideHash = location.pathname.replace(/\//g, '');
	    var slide = void 0;
	
	    if (isNaN(parseInt(slide))) {
	      slide = slideHash;
	    } else {
	      var proposedSlideIndex = parseInt(location.pathname.replace(/\//g, ''));
	      var isWithinBounds = proposedSlideIndex < slideCount && proposedSlideIndex >= 0;
	      slide = isWithinBounds ? proposedSlideIndex : 0;
	    }
	
	    return (0, _assign2.default)({}, {
	      slide: slide,
	      params: location.search.replace('?', '').split('&')
	    });
	  }
	}, { slide: null, params: [] });
	
	exports.default = reducer;

/***/ }),
/* 1086 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _reduxActions = __webpack_require__(153);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reducer = (0, _reduxActions.handleActions)({
	  SET_GLOBAL_STYLE: function SET_GLOBAL_STYLE() {
	    return (0, _assign2.default)({}, { globalStyleSet: true });
	  }
	}, { globalStyleSet: false });
	
	exports.default = reducer;

/***/ }),
/* 1087 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(243);
	
	var _reducers = __webpack_require__(1084);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var configureStore = function configureStore() {
	  var createStoreWithMiddleware = (0, _redux.applyMiddleware)()(_redux.createStore);
	  var store = createStoreWithMiddleware(_reducers2.default);
	
	  if (false) {
	    // Enable Webpack hot module replacement for reducers
	    module.hot.accept('../reducers', function () {
	      var nextReducer = require('../reducers');
	      store.replaceReducer(nextReducer);
	    });
	  }
	
	  return store;
	};
	
	exports.default = configureStore;

/***/ }),
/* 1088 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _prism = __webpack_require__(477);
	
	var _prism2 = _interopRequireDefault(_prism);
	
	var _prism3 = __webpack_require__(476);
	
	var _prism4 = _interopRequireDefault(_prism3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*eslint-disable object-shorthand*/
	
	var defaultColors = {
	  primary: 'black',
	  secondary: 'black',
	  tertiary: 'black',
	  quarternary: 'black'
	};
	
	var defaultFonts = {
	  primary: 'Open Sans Condensed',
	  secondary: 'Lobster Two',
	  tertiary: 'monospace'
	};
	
	var print = function print() {
	  var colorArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultColors;
	  var fontArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFonts;
	
	  var colors = (0, _assign2.default)({}, defaultColors, colorArgs);
	  var fonts = (0, _assign2.default)({}, defaultFonts, fontArgs);
	  return {
	    colors: colors,
	    fonts: fonts,
	    global: {
	      body: {
	        background: 'white',
	        fontFamily: fonts.primary,
	        fontWeight: 'normal',
	        fontSize: '2em',
	        color: 'black',
	        overflow: 'hidden'
	      },
	      'html, body': {
	        width: '100%',
	        height: '100%',
	        margin: 0,
	        padding: 0
	      },
	      '.hljs': {
	        background: 'white',
	        color: 'black'
	      },
	      '.hljs span': {
	        color: 'black !important'
	      }
	    },
	    fullscreen: {
	      fill: colors.tertiary
	    },
	    controls: {
	      prev: {
	        position: 'absolute',
	        top: '50%',
	        left: 20,
	        transform: 'translateY(-50%)',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      prevIcon: {
	        fill: colors.quarternary
	      },
	      next: {
	        position: 'absolute',
	        top: '50%',
	        right: 20,
	        transform: 'translateY(-50%)',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      nextIcon: {
	        fill: colors.quarternary
	      }
	    },
	    prism: {
	      light: _prism2.default,
	      dark: _prism4.default
	    },
	    progress: {
	      pacman: {
	        container: {
	          position: 'absolute',
	          bottom: '5px',
	          left: '50%',
	          transition: 'all 1s ease-in-out 0.2s',
	          zIndex: 1000
	        },
	        pacman: {
	          position: 'absolute',
	          transition: 'left 0.3s ease-in-out 0.2s',
	          width: '20px',
	          height: '20px',
	          transform: 'translate(-5px, -5px)'
	        },
	        pacmanTop: {
	          position: 'absolute',
	          content: ' ',
	          width: '20px',
	          height: '10px',
	          borderTopLeftRadius: '10px',
	          borderTopRightRadius: '10px',
	          background: colors.tertiary
	        },
	        pacmanBottom: {
	          position: 'absolute',
	          content: ' ',
	          width: '20px',
	          height: '10px',
	          borderBottomLeftRadius: '10px',
	          borderBottomRightRadius: '10px',
	          background: colors.tertiary,
	          top: '10px'
	        },
	        point: {
	          position: 'absolute',
	          float: 'left',
	          background: 'transparent',
	          width: '10px',
	          height: '10px',
	          borderWidth: 2,
	          borderStyle: 'solid',
	          borderColor: colors.tertiary,
	          borderRadius: '50%',
	          transition: 'all 0.01s ease-out 0.4s'
	        }
	      },
	      bar: {
	        container: {
	          position: 'absolute',
	          height: '10px',
	          width: '100%',
	          bottom: 0,
	          left: 0,
	          transition: 'all 1s ease-in-out 0.2s',
	          zIndex: 1000
	        },
	        bar: {
	          height: '100%',
	          background: colors.tertiary,
	          transition: 'all 0.3s ease-out'
	        }
	      },
	      number: {
	        container: {
	          position: 'absolute',
	          bottom: 10,
	          right: 10,
	          zIndex: 1000,
	          color: colors.tertiary
	        }
	      }
	    },
	    components: {
	      blockquote: {
	        textAlign: 'left',
	        position: 'relative',
	        display: 'inline-block'
	      },
	      quote: {
	        borderLeft: '1px solid ' + colors.primary,
	        paddingLeft: 40,
	        display: 'block',
	        color: 'black',
	        fontSize: '4.9rem',
	        lineHeight: 1,
	        fontWeight: 'bold'
	      },
	      cite: {
	        color: 'black',
	        display: 'block',
	        clear: 'left',
	        fontSize: '2rem',
	        marginTop: '1rem'
	      },
	      content: {
	        margin: 'auto',
	        textAlign: 'center'
	      },
	      codePane: {
	        margin: 'auto',
	        fontSize: '0.8rem',
	        fontWeight: 'normal',
	        minWidth: '100%',
	        maxWidth: 800
	      },
	      syntax: {
	        fontFamily: fonts.tertiary,
	        fontSize: 'inherit',
	        lineHeight: 1.5,
	        direction: 'ltr',
	        textAlign: 'left',
	        wordSpacing: 'normal',
	        wordBreak: 'normal',
	        tabSize: 2,
	        hyphens: 'none',
	        whiteSpace: 'pre-wrap',
	        padding: '0.5rem',
	        margin: 0
	      },
	      code: {
	        color: 'black',
	        fontSize: '2.66rem',
	        fontFamily: fonts.tertiary,
	        margin: '0.25rem auto',
	        backgroundColor: 'rgba(0,0,0,0.15)',
	        padding: '0 10px',
	        borderRadius: 3
	      },
	      heading: {
	        h1: {
	          color: 'black',
	          fontSize: '7.05rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: 0
	        },
	        h2: {
	          color: 'black',
	          fontSize: '5.88rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: 0
	        },
	        h3: {
	          color: 'black',
	          fontSize: '4.9rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h4: {
	          color: 'black',
	          fontSize: '3.82rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h5: {
	          color: 'black',
	          fontSize: '3.19rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h6: {
	          color: 'black',
	          fontSize: '2.66rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        }
	      },
	      image: {
	        display: 'block',
	        margin: '0.5rem auto'
	      },
	      link: {
	        textDecoration: 'none'
	      },
	      listItem: {
	        fontSize: '2.66rem'
	      },
	      list: {
	        textAlign: 'left',
	        listStylePosition: 'inside',
	        padding: 0
	      },
	      s: {
	        strikethrough: {}
	      },
	      tableHeaderItem: {
	        fontSize: '2.66rem',
	        fontWeight: 'bold'
	      },
	      tableItem: {
	        fontSize: '2.66rem'
	      },
	      table: {
	        width: '100%'
	      },
	      text: {
	        color: 'black',
	        fontSize: '2.66rem',
	        fontFamily: fonts.primary,
	        margin: '0.25rem auto'
	      }
	    }
	  };
	};
	
	exports.default = print;

/***/ }),
/* 1089 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends4 = __webpack_require__(48);
	
	var _extends5 = _interopRequireDefault(_extends4);
	
	var _keys = __webpack_require__(110);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _assign = __webpack_require__(54);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _prism = __webpack_require__(477);
	
	var _prism2 = _interopRequireDefault(_prism);
	
	var _prism3 = __webpack_require__(476);
	
	var _prism4 = _interopRequireDefault(_prism3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*eslint-disable object-shorthand*/
	
	var defaultColors = {
	  primary: '#f9c300',
	  secondary: 'black',
	  tertiary: 'white',
	  quarternary: 'white'
	};
	
	var defaultFonts = {
	  primary: 'Open Sans Condensed',
	  secondary: 'Lobster Two',
	  tertiary: 'monospace'
	};
	
	var screen = function screen() {
	  var colorArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultColors;
	  var fontArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFonts;
	
	  var colors = (0, _assign2.default)({}, defaultColors, colorArgs);
	  var normalizedFontArgs = {};
	  var googleFonts = {};
	  (0, _keys2.default)(fontArgs).forEach(function (key) {
	    var _extends2;
	
	    var value = fontArgs[key];
	    var fontName = value.hasOwnProperty('name') ? value.name : value;
	    normalizedFontArgs = (0, _extends5.default)({}, normalizedFontArgs, (_extends2 = {}, _extends2[key] = fontName, _extends2));
	    if (value.hasOwnProperty('googleFont') && value.googleFont) {
	      var _extends3;
	
	      googleFonts = (0, _extends5.default)({}, googleFonts, (_extends3 = {}, _extends3[key] = value, _extends3));
	    }
	  });
	  var fonts = (0, _assign2.default)({}, defaultFonts, normalizedFontArgs);
	  return {
	    colors: colors,
	    fonts: fonts,
	    googleFonts: googleFonts,
	    global: {
	      body: {
	        background: colors.primary,
	        fontFamily: fonts.primary,
	        fontWeight: 'normal',
	        fontSize: '2em',
	        color: colors.secondary,
	        overflow: 'hidden'
	      },
	      '_:-moz-tree-row(hover), .spectacle-deck': {
	        perspective: '1000px'
	      },
	      '_:-moz-tree-row(hover), ul .appear': {
	        display: 'inline'
	      },
	      'html, body': {
	        width: '100%',
	        height: '100%',
	        margin: 0,
	        padding: 0
	      },
	      '*': {
	        boxSizing: 'border-box'
	      }
	    },
	    fullscreen: {
	      fill: colors.tertiary
	    },
	    autoplay: {
	      pause: {
	        position: 'absolute',
	        top: 20,
	        right: '50%',
	        left: '50%',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      pauseIcon: {
	        fill: colors.tertiary
	      },
	      play: {
	        position: 'absolute',
	        top: 20,
	        right: '50%',
	        left: '50%',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      playIcon: {
	        fill: colors.tertiary
	      }
	    },
	    controls: {
	      prev: {
	        position: 'absolute',
	        top: '50%',
	        left: 20,
	        transform: 'translateY(-50%)',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      prevIcon: {
	        fill: colors.quarternary,
	        transition: 'fill 1s ease-in-out 0.2s'
	      },
	      next: {
	        position: 'absolute',
	        top: '50%',
	        right: 20,
	        transform: 'translateY(-50%)',
	        zIndex: 9999,
	        background: 'none',
	        border: 'none',
	        outline: 0
	      },
	      nextIcon: {
	        fill: colors.quarternary,
	        transition: 'fill 1s ease-in-out 0.2s'
	      }
	    },
	    prism: {
	      light: _prism2.default,
	      dark: _prism4.default
	    },
	    progress: {
	      pacman: {
	        container: {
	          position: 'absolute',
	          bottom: '5px',
	          left: '50%',
	          transition: 'all 1s ease-in-out 0.2s',
	          zIndex: 1000
	        },
	        pacman: {
	          position: 'absolute',
	          transition: 'left 0.3s ease-in-out 0.2s',
	          width: '20px',
	          height: '20px',
	          transform: 'translate(-5px, -5px)'
	        },
	        pacmanTop: {
	          position: 'absolute',
	          content: '',
	          width: '20px',
	          height: '10px',
	          borderTopLeftRadius: '10px',
	          borderTopRightRadius: '10px',
	          transition: 'all 0.3s ease-out',
	          background: colors.quarternary
	        },
	        pacmanBottom: {
	          position: 'absolute',
	          content: '',
	          width: '20px',
	          height: '10px',
	          borderBottomLeftRadius: '10px',
	          borderBottomRightRadius: '10px',
	          background: colors.quarternary,
	          transition: 'all 0.3s ease-out',
	          top: '10px'
	        },
	        point: {
	          position: 'absolute',
	          float: 'left',
	          background: 'transparent',
	          width: '10px',
	          height: '10px',
	          borderWidth: 2,
	          borderStyle: 'solid',
	          borderColor: colors.quarternary,
	          borderRadius: '50%',
	          transition: 'all 0.3s ease-out'
	        }
	      },
	      bar: {
	        container: {
	          position: 'absolute',
	          height: '10px',
	          width: '100%',
	          bottom: 0,
	          left: 0,
	          transition: 'all 1s ease-in-out 0.2s',
	          zIndex: 1000
	        },
	        bar: {
	          height: '100%',
	          background: colors.quarternary,
	          transition: 'all 0.3s ease-out'
	        }
	      },
	      number: {
	        container: {
	          position: 'absolute',
	          bottom: 10,
	          right: 10,
	          zIndex: 1000,
	          color: colors.quarternary,
	          transition: 'all 0.3s ease-out'
	        }
	      }
	    },
	    components: {
	      blockquote: {
	        textAlign: 'left',
	        position: 'relative',
	        display: 'inline-block',
	        margin: 20
	      },
	      quote: {
	        borderLeft: '1px solid ' + colors.primary,
	        paddingLeft: 40,
	        display: 'block',
	        color: colors.primary,
	        fontSize: '4.9rem',
	        lineHeight: 1,
	        fontWeight: 'bold'
	      },
	      cite: {
	        color: colors.tertiary,
	        display: 'block',
	        clear: 'left',
	        fontSize: '2rem',
	        marginTop: '1rem'
	      },
	      content: {
	        margin: '0 auto',
	        textAlign: 'center'
	      },
	      codePane: {
	        margin: 'auto',
	        fontSize: '0.8rem',
	        fontWeight: 'normal',
	        minWidth: '100%',
	        maxWidth: 800
	      },
	      syntax: {
	        fontFamily: fonts.tertiary,
	        fontSize: 'inherit',
	        lineHeight: 1.5,
	        direction: 'ltr',
	        textAlign: 'left',
	        wordSpacing: 'normal',
	        wordBreak: 'normal',
	        tabSize: 2,
	        hyphens: 'none',
	        whiteSpace: 'pre-wrap',
	        padding: '0.5rem',
	        margin: 0
	      },
	      code: {
	        color: 'black',
	        fontSize: '2.66rem',
	        fontFamily: fonts.tertiary,
	        margin: '0.25rem auto',
	        backgroundColor: 'rgba(0,0,0,0.15)',
	        padding: '0 10px',
	        borderRadius: 3
	      },
	      goToAction: {
	        borderRadius: '6px',
	        fontFamily: fonts.primary,
	        padding: '0.25em 1em',
	        border: 'none',
	        background: '#000',
	        color: '#fff',
	        '&:hover': {
	          background: colors.tertiary,
	          color: '#000'
	        }
	      },
	      heading: {
	        h1: {
	          color: colors.tertiary,
	          fontSize: '7.05rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: 0,
	          zoom: 1
	        },
	        h2: {
	          color: colors.secondary,
	          fontSize: '5.88rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: 0
	        },
	        h3: {
	          color: 'black',
	          fontSize: '4.9rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h4: {
	          color: 'black',
	          fontSize: '3.82rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h5: {
	          color: 'black',
	          fontSize: '3.19rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        },
	        h6: {
	          color: 'black',
	          fontSize: '2.66rem',
	          fontFamily: fonts.primary,
	          lineHeight: 1,
	          fontWeight: 'bold',
	          margin: '0.5rem auto'
	        }
	      },
	      image: {
	        display: 'block',
	        margin: '0.5rem auto'
	      },
	      link: {
	        textDecoration: 'none'
	      },
	      listItem: {
	        fontSize: '2.66rem'
	      },
	      list: {
	        textAlign: 'left',
	        listStylePosition: 'inside',
	        padding: 0
	      },
	      s: {
	        strikethrough: {}
	      },
	      tableHeaderItem: {
	        fontSize: '2.66rem',
	        fontWeight: 'bold'
	      },
	      tableItem: {
	        fontSize: '2.66rem'
	      },
	      table: {
	        width: '100%'
	      },
	      text: {
	        color: 'black',
	        fontSize: '2.66rem',
	        fontFamily: fonts.primary,
	        margin: '0.25rem auto'
	      }
	    }
	  };
	};
	
	exports.default = screen;

/***/ }),
/* 1090 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Context = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Context, _Component);
	
	  function Context() {
	    (0, _classCallCheck3.default)(this, Context);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Context.prototype.getChildContext = function getChildContext() {
	    var _props = this.props,
	        history = _props.history,
	        styles = _props.styles,
	        store = _props.store;
	
	    return {
	      history: history,
	      styles: styles,
	      store: store
	    };
	  };
	
	  Context.prototype.render = function render() {
	    return this.props.children;
	  };
	
	  return Context;
	}(_react.Component), _class.displayName = 'Context', _class.childContextTypes = {
	  styles: _propTypes2.default.object,
	  history: _propTypes2.default.object,
	  store: _propTypes2.default.object
	}, _temp);
	exports.default = Context;

/***/ }),
/* 1091 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _jsx2 = __webpack_require__(5);
	
	var _jsx3 = _interopRequireDefault(_jsx2);
	
	var _classCallCheck2 = __webpack_require__(3);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(6);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(4);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createHashHistory = __webpack_require__(183);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _propTypes = __webpack_require__(2);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _actions = __webpack_require__(245);
	
	var _slides = __webpack_require__(105);
	
	var _default = __webpack_require__(247);
	
	var _default2 = _interopRequireDefault(_default);
	
	var _context = __webpack_require__(1090);
	
	var _context2 = _interopRequireDefault(_context);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var history = (0, _createHashHistory2.default)();
	
	var Controller = function (_Component) {
	  (0, _inherits3.default)(Controller, _Component);
	
	  function Controller(props) {
	    (0, _classCallCheck3.default)(this, Controller);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));
	
	    _this.state = {
	      print: false
	    };
	
	
	    _this.history = props.history || history;
	    return _this;
	  }
	
	  Controller.prototype.componentDidMount = function componentDidMount() {
	    this.unlisten = this.history.listen(this._updateRoute.bind(this));
	    var location = this.history.location;
	    var slideCount = (0, _slides.countSlides)(this.props.children.props.children);
	    this.props.store.dispatch((0, _actions.updateRoute)({
	      location: location,
	      slideCount: slideCount
	    }));
	  };
	
	  Controller.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	    return this.props !== nextProps || this.state !== nextState;
	  };
	
	  Controller.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };
	
	  Controller.prototype._updateRoute = function _updateRoute(location) {
	    var _this2 = this;
	
	    this.setState({
	      print: location.search.indexOf('print') !== -1
	    }, function () {
	      var slideCount = (0, _slides.countSlides)(_this2.props.children.props.children);
	      _this2.props.store.dispatch((0, _actions.updateRoute)({
	        location: location,
	        slideCount: slideCount
	      }));
	    });
	  };
	
	  Controller.prototype.render = function render() {
	    var styles = this.props.theme ? this.props.theme : (0, _default2.default)();
	
	    return (0, _jsx3.default)(_context2.default, {
	      store: this.props.store,
	      history: this.history,
	      styles: this.state.print ? styles.print : styles.screen
	    }, void 0, this.props.children);
	  };
	
	  return Controller;
	}(_react.Component);
	
	exports.default = Controller;

/***/ }),
/* 1092 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.updateChildren = updateChildren;
	exports.buildStyleMap = buildStyleMap;
	/* eslint-disable max-statements */
	function wrapTextChildren(child, valMap) {
	  var frag = document.createDocumentFragment();
	  child.textContent.split('').map(function (s) {
	    var char = s;
	    if (s.charCodeAt(0) === 10) {
	      char = 'CR';
	    }
	    if (s.charCodeAt(0) === 32) {
	      char = 'SP';
	    }
	    if (s.charCodeAt(0) === 39) {
	      char = 'QT';
	    }
	    if (s.charCodeAt(0) === 34) {
	      char = 'DQT';
	    }
	    updateMap(valMap, char);
	
	    var elKey = char + '-' + valMap[char];
	
	    if (char === 'CR') {
	      var el = document.createElement('span');
	      el.style.display = 'block';
	      el.setAttribute('data-key', elKey);
	      el.setAttribute('wrapped', true);
	      frag.appendChild(el);
	    } else if (s === ' ') {
	      var _el = document.createElement('span');
	      _el.style.display = 'inline-block';
	      _el.setAttribute('data-key', elKey);
	      _el.setAttribute('wrapped', true);
	      _el.innerHTML = '&nbsp;';
	      frag.appendChild(_el);
	    } else {
	      var _el2 = document.createElement('span');
	      _el2.style.display = 'inline-flex';
	      _el2.setAttribute('data-key', elKey);
	      _el2.setAttribute('wrapped', true);
	      _el2.innerText = s;
	      frag.appendChild(_el2);
	    }
	  });
	  return frag;
	}
	
	function updateMap(valMap, val) {
	  if (val in valMap) {
	    valMap[val] += 1;
	  } else {
	    valMap[val] = 0;
	  }
	}
	
	function updateChildren(root) {
	  var valMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  return Array.prototype.slice.call(root.childNodes, 0).map(function (child) {
	    if (child.nodeType !== 3 && child.getAttribute('wrapped')) {
	      return;
	    }
	
	    if (child.nodeType === 1) {
	      updateMap(valMap, child.nodeName);
	      child.setAttribute('data-key', child.nodeName + '-' + valMap[child.nodeName]);
	    }
	    if (child.nodeType === 3) {
	      var replaced = wrapTextChildren(child, valMap);
	      child.replaceWith(replaced);
	    }
	    if (child.childNodes) {
	      updateChildren(child, valMap);
	    }
	  });
	}
	
	function buildStyleMap(map, root) {
	  root.childNodes.forEach(function (child) {
	    if (child.nodeType !== 3) {
	      var rect = child.getBoundingClientRect();
	      map[child.dataset.key] = {
	        x: rect.x,
	        y: rect.y,
	        left: rect.top,
	        top: rect.top,
	        height: rect.height,
	        width: rect.width
	      };
	      if (child.childNodes) {
	        buildStyleMap(map, child);
	      }
	    }
	  });
	}

/***/ }),
/* 1093 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var defaultCode = exports.defaultCode = "\n/**\n * Sample React Component\n * Output domContainerNode is 'mountNode'\n */\n\nconst styles = {\n  heading: {\n    fontSize: \"2.25rem\",\n    fontWeight: \"bold\"\n  },\n  copy: {\n    fontSize: \"1.5rem\"\n  }\n}\n\nconst HelloWorld = ({ name }) => (\n  <div>\n    <h1 style={styles.heading}>\n      Create Live Code Examples in {name}!\n    </h1>\n    <p style={styles.copy}>\n      Supports Light and Dark Syntax Themes\n    </p>\n  </div>\n)\n\nrender(<HelloWorld name=\"Spectacle\" />)\n";

/***/ }),
/* 1094 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(396);
	
	__webpack_require__(399);
	
	__webpack_require__(395);
	
	__webpack_require__(874);
	
	__webpack_require__(876);
	
	__webpack_require__(878);
	
	__webpack_require__(397);
	
	__webpack_require__(398);
	
	__webpack_require__(875);
	
	__webpack_require__(873);
	
	__webpack_require__(877);
	
	__webpack_require__(879);
	
	__webpack_require__(880);
	
	__webpack_require__(881);
	
	__webpack_require__(882);
	
	__webpack_require__(883);
	
	__webpack_require__(884);
	
	__webpack_require__(885);
	
	__webpack_require__(886);
	
	__webpack_require__(887);
	
	__webpack_require__(888);
	
	__webpack_require__(889);
	
	__webpack_require__(890);
	
	__webpack_require__(891);
	
	__webpack_require__(892);
	
	__webpack_require__(893);
	
	__webpack_require__(894);
	
	__webpack_require__(895);
	
	__webpack_require__(897);
	
	__webpack_require__(896);
	
	__webpack_require__(898);
	
	__webpack_require__(899);
	
	__webpack_require__(900);
	
	__webpack_require__(901);
	
	__webpack_require__(902);
	
	__webpack_require__(903);
	
	__webpack_require__(904);
	
	__webpack_require__(905);
	
	__webpack_require__(906);
	
	__webpack_require__(907);
	
	__webpack_require__(908);
	
	__webpack_require__(909);

/***/ }),
/* 1095 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _keys = __webpack_require__(110);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var stepCounter = function stepCounter() {
	  var frags = {};
	  var slideIndex = 0;
	  var setFragments = function setFragments(fragments, index) {
	    frags = fragments;
	    slideIndex = Number(index);
	  };
	  var getSteps = function getSteps() {
	    var steps = (0, _keys2.default)(frags).reduce(function (previous, key) {
	      return previous + (frags[key].visible === true);
	    }, 0);
	    return { steps: steps, slideIndex: slideIndex };
	  };
	
	  return {
	    setFragments: setFragments,
	    getSteps: getSteps
	  };
	};
	
	exports.default = stepCounter;

/***/ }),
/* 1096 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {(function (factory) {
		 true ? (module['exports'] = factory()) :
			typeof define === 'function' && define['amd'] ? define(factory()) :
				(window['stylisRuleSheet'] = factory())
	}(function () {
	
		'use strict'
	
		return function (insertRule) {
			var delimiter = '/*|*/'
			var needle = delimiter+'}'
	
			function toSheet (block) {
				if (block)
					try {
						insertRule(block + '}')
					} catch (e) {}
			}
	
			return function ruleSheet (context, content, selectors, parents, line, column, length, at, depth) {
				switch (context) {
					// property
					case 1:
						// @import
						if (depth === 0 && content.charCodeAt(0) === 64)
							insertRule(content)
						break
					// selector
					case 2:
						if (at === 0)
							return content + delimiter
						break
					// at-rule
					case 3:
						switch (at) {
							// @font-face, @page
							case 102:
							case 112:
								return insertRule(selectors[0]+content), ''
							default:
								return content + delimiter
						}
					case -2:
						content.split(needle).forEach(toSheet)
				}
			}
		}
	}))
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module)))

/***/ }),
/* 1097 */
/***/ (function(module, exports, __webpack_require__) {

	// Copyright (c) 2011, Chris Umbel, James Coglan
	// Line.Segment class - depends on Line and its dependencies.
	
	var Line = __webpack_require__(248);
	var Vector = __webpack_require__(107);
	
	Line.Segment = function() {};
	Line.Segment.prototype = {
	
	  // Returns true iff the line segment is equal to the argument
	  eql: function(segment) {
	    return (this.start.eql(segment.start) && this.end.eql(segment.end)) ||
	        (this.start.eql(segment.end) && this.end.eql(segment.start));
	  },
	
	  // Returns a copy of the line segment
	  dup: function() {
	    return Line.Segment.create(this.start, this.end);
	  },
	
	  // Returns the length of the line segment
	  length: function() {
	    var A = this.start.elements, B = this.end.elements;
	    var C1 = B[0] - A[0], C2 = B[1] - A[1], C3 = B[2] - A[2];
	    return Math.sqrt(C1*C1 + C2*C2 + C3*C3);
	  },
	
	  // Returns the line segment as a vector equal to its
	  // end point relative to its endpoint
	  toVector: function() {
	    var A = this.start.elements, B = this.end.elements;
	    return Vector.create([B[0] - A[0], B[1] - A[1], B[2] - A[2]]);
	  },
	
	  // Returns the segment's midpoint as a vector
	  midpoint: function() {
	    var A = this.start.elements, B = this.end.elements;
	    return Vector.create([(B[0] + A[0])/2, (B[1] + A[1])/2, (B[2] + A[2])/2]);
	  },
	
	  // Returns the plane that bisects the segment
	  bisectingPlane: function() {
	    return Plane.create(this.midpoint(), this.toVector());
	  },
	
	  // Returns the result of translating the line by the given vector/array
	  translate: function(vector) {
	    var V = vector.elements || vector;
	    var S = this.start.elements, E = this.end.elements;
	    return Line.Segment.create(
	      [S[0] + V[0], S[1] + V[1], S[2] + (V[2] || 0)],
	      [E[0] + V[0], E[1] + V[1], E[2] + (V[2] || 0)]
	    );
	  },
	
	  // Returns true iff the line segment is parallel to the argument. It simply forwards
	  // the method call onto its line property.
	  isParallelTo: function(obj) {
	    return this.line.isParallelTo(obj);
	  },
	
	  // Returns the distance between the argument and the line segment's closest point to the argument
	  distanceFrom: function(obj) {
	    var P = this.pointClosestTo(obj);
	    return (P === null) ? null : P.distanceFrom(obj);
	  },
	
	  // Returns true iff the given point lies on the segment
	  contains: function(obj) {
	    if (obj.start && obj.end) { return this.contains(obj.start) && this.contains(obj.end); }
	    var P = (obj.elements || obj).slice();
	    if (P.length == 2) { P.push(0); }
	    if (this.start.eql(P)) { return true; }
	    var S = this.start.elements;
	    var V = Vector.create([S[0] - P[0], S[1] - P[1], S[2] - (P[2] || 0)]);
	    var vect = this.toVector();
	    return V.isAntiparallelTo(vect) && V.modulus() <= vect.modulus();
	  },
	
	  // Returns true iff the line segment intersects the argument
	  intersects: function(obj) {
	    return (this.intersectionWith(obj) !== null);
	  },
	
	  // Returns the unique point of intersection with the argument
	  intersectionWith: function(obj) {
	    if (!this.line.intersects(obj)) { return null; }
	    var P = this.line.intersectionWith(obj);
	    return (this.contains(P) ? P : null);
	  },
	
	  // Returns the point on the line segment closest to the given object
	  pointClosestTo: function(obj) {
	    if (obj.normal) {
	      // obj is a plane
	      var V = this.line.intersectionWith(obj);
	      if (V === null) { return null; }
	      return this.pointClosestTo(V);
	    } else {
	      // obj is a line (segment) or point
	      var P = this.line.pointClosestTo(obj);
	      if (P === null) { return null; }
	      if (this.contains(P)) { return P; }
	      return (this.line.positionOf(P) < 0 ? this.start : this.end).dup();
	    }
	  },
	
	  // Set the start and end-points of the segment
	  setPoints: function(startPoint, endPoint) {
	    startPoint = Vector.create(startPoint).to3D();
	    endPoint = Vector.create(endPoint).to3D();
	    if (startPoint === null || endPoint === null) { return null; }
	    this.line = Line.create(startPoint, endPoint.subtract(startPoint));
	    this.start = startPoint;
	    this.end = endPoint;
	    return this;
	  }
	};
	
	// Constructor function
	Line.Segment.create = function(v1, v2) {
	  var S = new Line.Segment();
	  return S.setPoints(v1, v2);
	};
	
	module.exports = Line.Segment;


/***/ }),
/* 1098 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1099);


/***/ }),
/* 1099 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(1100);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(81)(module)))

/***/ }),
/* 1100 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ }),
/* 1101 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	module.exports = {
	   prefixProperties: __webpack_require__(486) ,
	   cssUnitless: __webpack_require__(483) ,
	   object: __webpack_require__(490),
	   string: __webpack_require__(1109)
	}

/***/ }),
/* 1102 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1105)()

/***/ }),
/* 1103 */
/***/ (function(module, exports) {

	'use strict'
	
	var objectToString = Object.prototype.toString
	
	module.exports = function(v) {
	    return objectToString.apply(v) === '[object Function]'
	}


/***/ }),
/* 1104 */
/***/ (function(module, exports) {

	'use strict'
	
	var objectToString = Object.prototype.toString
	
	module.exports = function(v){
	    return !!v && objectToString.call(v) === '[object Object]'
	}
	


/***/ }),
/* 1105 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var camelize     = __webpack_require__(487)
	var hyphenate    = __webpack_require__(488)
	var toLowerFirst = __webpack_require__(1108)
	var toUpperFirst = __webpack_require__(489)
	
	var prefixInfo = __webpack_require__(485)
	var prefixProperties = __webpack_require__(486)
	
	var docStyle = typeof document == 'undefined'?
	                {}:
	                document.documentElement.style
	
	module.exports = function(asStylePrefix){
	
	    return function(name, config){
	        config = config || {}
	
	        var styleName = toLowerFirst(camelize(name)),
	            cssName   = hyphenate(name),
	
	            theName   = asStylePrefix?
	                            styleName:
	                            cssName,
	
	            thePrefix = prefixInfo.style?
	                            asStylePrefix?
	                                prefixInfo.style:
	                                prefixInfo.css
	                            :
	                            ''
	
	        if ( styleName in docStyle ) {
	            return config.asString?
	                              theName :
	                            [ theName ]
	        }
	
	        //not a valid style name, so we'll return the value with a prefix
	
	        var upperCased     = theName,
	            prefixProperty = prefixProperties[cssName],
	            result         = []
	
	        if (asStylePrefix){
	            upperCased = toUpperFirst(theName)
	        }
	
	        if (typeof prefixProperty == 'function'){
	            var prefixedCss = prefixProperty(theName, thePrefix) || []
	            if (prefixedCss && !Array.isArray(prefixedCss)){
	                prefixedCss = [prefixedCss]
	            }
	
	            if (prefixedCss.length){
	                prefixedCss = prefixedCss.map(function(property){
	                    return asStylePrefix?
	                                toLowerFirst(camelize(property)):
	                                hyphenate(property)
	
	                })
	            }
	
	            result = result.concat(prefixedCss)
	        }
	
	        if (thePrefix){
	            result.push(thePrefix + upperCased)
	        }
	
	        result.push(theName)
	
	        if (config.asString || result.length == 1){
	            return result[0]
	        }
	
	        return result
	    }
	}

/***/ }),
/* 1106 */
/***/ (function(module, exports) {

	module.exports = /[-\s]+(.)?/g

/***/ }),
/* 1107 */
/***/ (function(module, exports) {

	'use strict'
	
	var doubleColonRe      = /::/g
	var upperToLowerRe     = /([A-Z]+)([A-Z][a-z])/g
	var lowerToUpperRe     = /([a-z\d])([A-Z])/g
	var underscoreToDashRe = /_/g
	
	module.exports = function(name, separator){
	
	   return name?
	           name.replace(doubleColonRe, '/')
	                .replace(upperToLowerRe, '$1_$2')
	                .replace(lowerToUpperRe, '$1_$2')
	                .replace(underscoreToDashRe, separator || '-')
	            :
	            ''
	}

/***/ }),
/* 1108 */
/***/ (function(module, exports) {

	'use strict'
	
	module.exports = function(value){
	    return value.length?
	                value.charAt(0).toLowerCase() + value.substring(1):
	                value
	}

/***/ }),
/* 1109 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	
	var toStyleObject = __webpack_require__(490)
	var hasOwn        = __webpack_require__(484)
	
	/**
	 * @ignore
	 * @method toStyleString
	 *
	 * @param  {Object} styles The object to convert to a style string.
	 * @param  {Object} config
	 * @param  {Boolean} config.addUnits=true True if you want to add units when numerical values are encountered. Defaults to true
	 * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.
	 * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed
	 * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'
	 * @param  {String}  config.scope
	 *
	 * @return {Object} The object, normalized with css style names
	 */
	module.exports = function(styles, config){
	    styles = toStyleObject(styles, config)
	
	    var result = []
	    var prop
	
	    for(prop in styles) if (hasOwn(styles, prop)){
	        result.push(prop + ': ' + styles[prop])
	    }
	
	    return result.join('; ')
	}

/***/ }),
/* 1110 */
/***/ (function(module, exports) {

	'use strict';
	
	var cache;
	
	/**
	 * Convert HTML entities to HTML characters.
	 *
	 * @param  {String} `str` String with HTML entities to un-escape.
	 * @return {String}
	 */
	
	var unescape = module.exports = function(str) {
	  if (str == null) return '';
	
	  var re = cache || (cache = new RegExp('(' + Object.keys(chars).join('|') + ')', 'g'));
	  return String(str).replace(re, function(match) {
	    return chars[match];
	  });
	};
	
	var chars = unescape.chars = {
	  '&apos;': '\'',
	  '&#39;': '\'',
	  '&amp;': '&',
	  '&gt;': '>',
	  '&lt;': '<',
	  '&quot;': '"'
	};


/***/ }),
/* 1111 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/**
	 * Module exports.
	 */
	
	module.exports = deprecate;
	
	/**
	 * Mark that a method should not be used.
	 * Returns a modified function which warns once by default.
	 *
	 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
	 *
	 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
	 * will throw an Error when invoked.
	 *
	 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
	 * will invoke `console.trace()` instead of `console.error()`.
	 *
	 * @param {Function} fn - the function to deprecate
	 * @param {String} msg - the string to print to the console when `fn` is invoked
	 * @returns {Function} a new "deprecated" version of `fn`
	 * @api public
	 */
	
	function deprecate (fn, msg) {
	  if (config('noDeprecation')) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (config('throwDeprecation')) {
	        throw new Error(msg);
	      } else if (config('traceDeprecation')) {
	        console.trace(msg);
	      } else {
	        console.warn(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	}
	
	/**
	 * Checks `localStorage` for boolean values for the given `name`.
	 *
	 * @param {String} name
	 * @returns {Boolean}
	 * @api private
	 */
	
	function config (name) {
	  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
	  try {
	    if (!global.localStorage) return false;
	  } catch (_) {
	    return false;
	  }
	  var val = global.localStorage[name];
	  if (null == val) return false;
	  return String(val).toLowerCase() === 'true';
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 1112 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ }),
/* 1113 */
/***/ (function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ }),
/* 1114 */,
/* 1115 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});exports.victoryInterpolator=exports.interpolateObject=exports.interpolateFunction=exports.interpolateImmediate=exports.isInterpolatable=undefined;var _isPlainObject2=__webpack_require__(33);var _isPlainObject3=_interopRequireDefault(_isPlainObject2);var _d3Interpolate=__webpack_require__(299);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	
	
	var isInterpolatable=exports.isInterpolatable=function isInterpolatable(obj){
	
	if(obj!==null){
	switch(typeof obj){
	case"undefined":
	return false;
	case"number":
	
	
	return!isNaN(obj)&&obj!==Number.POSITIVE_INFINITY&&obj!==Number.NEGATIVE_INFINITY;
	case"string":
	
	
	return true;
	case"boolean":
	
	
	
	return false;
	case"object":
	
	return obj instanceof Date||Array.isArray(obj)||(0,_isPlainObject3.default)(obj);
	case"function":
	
	
	
	
	
	
	
	
	
	
	return true;}
	
	}
	return false;
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	var interpolateImmediate=exports.interpolateImmediate=function interpolateImmediate(a,b){var when=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;
	return function(t){
	return t<when?a:b;
	};
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	var interpolateFunction=exports.interpolateFunction=function interpolateFunction(a,b){
	return function(t){
	if(t>=1){
	return b;
	}
	return function(){
	
	var aval=typeof a==="function"?a.apply(this,arguments):a;
	var bval=typeof b==="function"?b.apply(this,arguments):b;
	return(0,_d3Interpolate.interpolate)(aval,bval)(t);
	};
	};
	};
	
	
	
	
	
	
	
	
	
	
	
	var interpolateObject=exports.interpolateObject=function interpolateObject(a,b){
	var interpolateTypes=function interpolateTypes(x,y){
	if(x===y||!isInterpolatable(x)||!isInterpolatable(y)){
	return interpolateImmediate(x,y);
	}
	if(typeof x==="function"||typeof y==="function"){
	return interpolateFunction(x,y);
	}
	if(typeof x==="object"&&(0,_isPlainObject3.default)(x)||typeof y==="object"&&(0,_isPlainObject3.default)(y)){
	return interpolateObject(x,y);
	}
	return(0,_d3Interpolate.interpolate)(x,y);
	};
	
	var i={};
	var c={};
	var k=void 0;
	
	if(a===null||typeof a!=="object"){
	a={};
	}
	if(b===null||typeof b!=="object"){
	b={};
	}
	
	for(k in b){
	if(k in a){
	i[k]=interpolateTypes(a[k],b[k]);
	}else{
	c[k]=b[k];
	}
	}
	
	return function(t){
	for(k in i){
	c[k]=i[k](t);
	}
	return c;
	};
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	var victoryInterpolator=exports.victoryInterpolator=function victoryInterpolator(a,b){
	
	
	
	if(a===b||!isInterpolatable(a)||!isInterpolatable(b)){
	return interpolateImmediate(a,b);
	}
	if(typeof a==="function"||typeof b==="function"){
	return interpolateFunction(a,b);
	}
	if((0,_isPlainObject3.default)(a)||(0,_isPlainObject3.default)(b)){
	return interpolateObject(a,b);
	}
	return(0,_d3Interpolate.interpolate)(a,b);
	};

/***/ }),
/* 1116 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-clip-container/victory-clip-container.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	
	var _clipPath=__webpack_require__(495);var _clipPath2=_interopRequireDefault(_clipPath);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	VictoryClipContainer=function(_React$Component){_inherits(VictoryClipContainer,_React$Component);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function VictoryClipContainer(props){_classCallCheck(this,VictoryClipContainer);var _this=_possibleConstructorReturn(this,(VictoryClipContainer.__proto__||Object.getPrototypeOf(VictoryClipContainer)).call(this,
	props));
	_this.clipId=Math.round(Math.random()*10000);return _this;
	}_createClass(VictoryClipContainer,[{key:"renderClippedGroup",value:function renderClippedGroup(
	
	
	props,clipId){var
	style=props.style,events=props.events,transform=props.transform,children=props.children,className=props.className;
	var clipComponent=this.renderClipComponent(props,clipId);
	return(
	_react2.default.createElement("g",_extends({
	className:className,
	style:style},
	events,{
	transform:transform,__source:{fileName:_jsxFileName,lineNumber:43}}),
	
	clipComponent,
	_react2.default.createElement("g",{clipPath:"url(#"+clipId+")",__source:{fileName:_jsxFileName,lineNumber:50}},
	children)));
	
	
	
	}},{key:"renderGroup",value:function renderGroup(
	
	
	props){var
	style=props.style,events=props.events,transform=props.transform,children=props.children,className=props.className;
	return(
	_react2.default.createElement("g",_extends({
	className:className,
	style:style},
	events,{
	transform:transform,__source:{fileName:_jsxFileName,lineNumber:61}}),
	
	children));
	
	
	}},{key:"renderClipComponent",value:function renderClipComponent(
	
	
	props,clipId){var
	
	clipPadding=
	props.clipPadding,translateX=props.translateX,translateY=props.translateY,clipHeight=props.clipHeight,clipWidth=props.clipWidth,clipPathComponent=props.clipPathComponent;
	return _react2.default.cloneElement(
	clipPathComponent,
	{clipPadding:clipPadding,clipId:clipId,translateX:translateX,translateY:translateY,clipWidth:clipWidth,clipHeight:clipHeight});
	
	}},{key:"getClipValue",value:function getClipValue(
	
	props,axis){
	var clipValues={x:props.clipWidth,y:props.clipHeight};
	if(clipValues[axis]!==undefined){
	return clipValues[axis];
	}
	var range=this.getRange(props,axis);
	return range?Math.abs(range[0]-range[1])||undefined:undefined;
	}},{key:"getTranslateValue",value:function getTranslateValue(
	
	props,axis){
	var translateValues={x:props.translateX,y:props.translateY};
	if(translateValues[axis]!==undefined){
	return translateValues[axis];
	}
	var range=this.getRange(props,axis);
	return range?Math.min.apply(Math,_toConsumableArray(range)):undefined;
	}},{key:"getRange",value:function getRange(
	
	props,axis){
	var scale=props.scale||{};
	if(!scale[axis]){
	return undefined;
	}
	return(0,_isFunction3.default)(scale[axis].range)?scale[axis].range():undefined;
	}},{key:"render",value:function render()
	
	{
	var clipHeight=this.getClipValue(this.props,"y");
	var clipWidth=this.getClipValue(this.props,"x");
	if(clipWidth===undefined||clipHeight===undefined){
	return this.renderGroup(this.props);
	}
	var translateX=this.getTranslateValue(this.props,"x");
	var translateY=this.getTranslateValue(this.props,"y");
	var clipProps=(0,_defaults3.default)({},this.props,{clipHeight:clipHeight,clipWidth:clipWidth,translateX:translateX,translateY:translateY});
	return this.renderClippedGroup(clipProps,this.clipId);
	}}]);return VictoryClipContainer;}(_react2.default.Component);VictoryClipContainer.displayName="VictoryClipContainer";VictoryClipContainer.role="container";VictoryClipContainer.propTypes={children:_propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node),_propTypes2.default.node]),className:_propTypes2.default.string,clipHeight:_propTypes2.default.number,clipPadding:_propTypes2.default.shape({top:_propTypes2.default.number,bottom:_propTypes2.default.number,left:_propTypes2.default.number,right:_propTypes2.default.number}),clipPathComponent:_propTypes2.default.element,clipWidth:_propTypes2.default.number,events:_propTypes2.default.object,style:_propTypes2.default.object,transform:_propTypes2.default.string,translateX:_propTypes2.default.number,translateY:_propTypes2.default.number};VictoryClipContainer.defaultProps={clipPathComponent:_react2.default.createElement(_clipPath2.default,{__source:{fileName:_jsxFileName,lineNumber:30}})};exports.default=VictoryClipContainer;

/***/ }),
/* 1117 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _maxBy2=__webpack_require__(790);var _maxBy3=_interopRequireDefault(_maxBy2);var _sumBy2=__webpack_require__(795);var _sumBy3=_interopRequireDefault(_sumBy2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _isEmpty2=__webpack_require__(211);var _isEmpty3=_interopRequireDefault(_isEmpty2);var _merge2=__webpack_require__(140);var _merge3=_interopRequireDefault(_merge2);var _jsxFileName="src/victory-legend/victory-legend.js";var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);
	var _style=__webpack_require__(255);var _style2=_interopRequireDefault(_style);
	var _textsize=__webpack_require__(256);var _textsize2=_interopRequireDefault(_textsize);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _victoryLabel=__webpack_require__(249);var _victoryLabel2=_interopRequireDefault(_victoryLabel);
	var _victoryContainer=__webpack_require__(493);var _victoryContainer2=_interopRequireDefault(_victoryContainer);
	var _victoryTheme=__webpack_require__(251);var _victoryTheme2=_interopRequireDefault(_victoryTheme);
	var _point=__webpack_require__(497);var _point2=_interopRequireDefault(_point);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
	
	var defaultLegendData=[
	{name:"Series 1"},
	{name:"Series 2"}];var
	
	
	VictoryLegend=function(_React$Component){_inherits(VictoryLegend,_React$Component);function VictoryLegend(){_classCallCheck(this,VictoryLegend);return _possibleConstructorReturn(this,(VictoryLegend.__proto__||Object.getPrototypeOf(VictoryLegend)).apply(this,arguments));}_createClass(VictoryLegend,[{key:"calculateLegendHeight",value:function calculateLegendHeight(
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	textSizes,padding,isHorizontal){var _props=
	this.props,gutter=_props.gutter,itemsPerRow=_props.itemsPerRow;
	var itemCount=textSizes.length;
	var rowCount=itemsPerRow?Math.ceil(itemCount/itemsPerRow):1;
	var contentHeight=isHorizontal?
	(0,_maxBy3.default)(textSizes,"height").height*rowCount+gutter*(rowCount-1):
	((0,_sumBy3.default)(textSizes,"height")+gutter*(itemCount-1))/rowCount;
	
	return padding.top+contentHeight+padding.bottom;
	}},{key:"calculateLegendWidth",value:function calculateLegendWidth(
	
	
	itemCount,padding,isHorizontal,maxTextWidth){var _props2=
	this.props,gutter=_props2.gutter,itemsPerRow=_props2.itemsPerRow,symbolSpacer=_props2.symbolSpacer;
	var rowCount=itemsPerRow?Math.ceil(itemCount/itemsPerRow):1;
	var rowItemCount=itemsPerRow||itemCount;
	var contentWidth=void 0;
	
	if(isHorizontal){
	var gutterWidth=gutter*rowItemCount;
	var symbolWidth=symbolSpacer*3*rowItemCount;
	var textWidth=maxTextWidth*rowItemCount;
	contentWidth=symbolWidth+textWidth+gutterWidth;
	}else{
	contentWidth=(maxTextWidth+symbolSpacer*2+gutter)*rowCount;
	}
	
	return padding.left+contentWidth+padding.right;
	}},{key:"getColorScale",value:function getColorScale(
	
	theme){
	var colorScaleOptions=this.props.colorScale||theme.colorScale;
	if(typeof colorScaleOptions==="string"){
	colorScaleOptions=_style2.default.getColorScale(colorScaleOptions);
	}
	return!(0,_isEmpty3.default)(theme)?colorScaleOptions||theme.colorScale:colorScaleOptions||[];
	}},{key:"getCalculatedProps",value:function getCalculatedProps()
	
	{var _this2=this;var
	role=this.constructor.role;var _props3=
	this.props,data=_props3.data,orientation=_props3.orientation,theme=_props3.theme;
	var legendTheme=theme&&theme[role]?theme[role]:{};
	var parentStyles=this.getStyles({},legendTheme,"parent");
	var colorScale=this.getColorScale(legendTheme);
	var isHorizontal=orientation==="horizontal";
	var symbolStyles=[];
	var labelStyles=[];var _props4=
	this.props,height=_props4.height,padding=_props4.padding,width=_props4.width;
	var maxTextWidth=0;
	
	padding=_helpers2.default.getPadding({padding:padding||theme.padding});
	height=_helpers2.default.evaluateProp(height||theme.height,data);
	width=_helpers2.default.evaluateProp(width||theme.width,data);
	
	var textSizes=data.map(function(datum,i){
	var labelStyle=_this2.getStyles(datum,legendTheme,"labels");
	var textSize=_textsize2.default.approximateTextSize(datum.name,labelStyle);
	maxTextWidth=textSize.width>maxTextWidth?textSize.width:maxTextWidth;
	symbolStyles[i]=_this2.getStyles(datum,legendTheme,"symbol",colorScale[i]);
	labelStyles[i]=labelStyle;
	return textSize;
	});
	
	if(!height){
	height=this.calculateLegendHeight(textSizes,padding,isHorizontal);
	}
	if(!width){
	width=this.calculateLegendWidth(textSizes.length,padding,isHorizontal,maxTextWidth);
	}
	
	return _extends({},this.props,{
	isHorizontal:isHorizontal,
	height:height,
	labelStyles:labelStyles,
	maxTextWidth:maxTextWidth,
	padding:padding,
	parentStyles:parentStyles,
	symbolStyles:symbolStyles,
	width:width});
	
	}},{key:"getStyles",value:function getStyles(
	
	datum,theme,key,color){var
	style=this.props.style;
	var styleKey=key==="symbol"?"data":key;
	var colorScaleStyle=color?{fill:color}:{};
	var styles=(0,_merge3.default)({},theme.style[styleKey],colorScaleStyle,style[styleKey],datum[key]);
	return _helpers2.default.evaluateStyle(styles,datum);
	}},{key:"getSymbolSize",value:function getSymbolSize(
	
	datum,fontSize){
	return datum.symbol&&datum.symbol.size?datum.symbol.size:fontSize/2.5;
	}},{key:"getSymbolProps",value:function getSymbolProps(
	
	datum,props,i){var
	
	dataComponent=
	
	
	
	
	
	
	
	
	props.dataComponent,gutter=props.gutter,isHorizontal=props.isHorizontal,itemsPerRow=props.itemsPerRow,labelStyles=props.labelStyles,maxTextWidth=props.maxTextWidth,padding=props.padding,symbolSpacer=props.symbolSpacer,symbolStyles=props.symbolStyles;var
	
	fontSize=labelStyles[i].fontSize;
	var symbolShift=fontSize/2;
	var style=symbolStyles[i];
	var rowHeight=fontSize+gutter;
	var itemIndex=i;
	var rowSpacer=0;
	var rowIndex=0;
	
	if(itemsPerRow){
	rowIndex=Math.floor(i/itemsPerRow);
	rowSpacer=rowHeight*rowIndex;
	itemIndex=i%itemsPerRow;
	}
	
	var symbolCoords=isHorizontal?{
	x:padding.left+symbolShift+(fontSize+symbolSpacer+maxTextWidth+gutter)*itemIndex,
	y:padding.top+symbolShift+rowSpacer}:
	{
	x:padding.left+symbolShift+(rowHeight+maxTextWidth)*rowIndex,
	y:padding.top+symbolShift+rowHeight*itemIndex};
	
	
	return(0,_defaults3.default)({},dataComponent.props,_extends({
	key:"symbol-"+i,
	style:style,
	size:this.getSymbolSize(datum,fontSize),
	symbol:style.type},
	symbolCoords));
	
	}},{key:"getLabelProps",value:function getLabelProps(
	
	datum,props,i){var
	
	gutter=
	
	
	
	
	
	
	
	props.gutter,isHorizontal=props.isHorizontal,itemsPerRow=props.itemsPerRow,labelComponent=props.labelComponent,labelStyles=props.labelStyles,maxTextWidth=props.maxTextWidth,padding=props.padding,symbolSpacer=props.symbolSpacer;
	
	var style=labelStyles[i];var
	fontSize=style.fontSize;
	var symbolShift=fontSize/2;
	var rowHeight=fontSize+gutter;
	var symbolWidth=fontSize+symbolSpacer;
	var itemIndex=i;
	var rowSpacer=0;
	var rowIndex=0;
	
	if(itemsPerRow){
	rowIndex=Math.floor(i/itemsPerRow);
	rowSpacer=rowHeight*rowIndex;
	itemIndex=i%itemsPerRow;
	}
	
	var labelCoords=isHorizontal?{
	x:padding.left+symbolWidth*(itemIndex+1)+(maxTextWidth+gutter)*itemIndex,
	y:padding.top+symbolShift+rowSpacer}:
	{
	x:padding.left+symbolWidth+(rowHeight+maxTextWidth)*rowIndex,
	y:padding.top+symbolShift+rowHeight*itemIndex};
	
	
	return(0,_defaults3.default)({},labelComponent.props,_extends({
	key:"label-"+i,
	style:style,
	text:datum.name},
	labelCoords));
	
	}},{key:"renderLegendItems",value:function renderLegendItems(
	
	props){var _this3=this;var
	data=props.data,dataComponent=props.dataComponent,labelComponent=props.labelComponent;
	var legendData=(0,_isEmpty3.default)(data)?defaultLegendData:data;
	
	var dataComponents=legendData.map(function(datum,i){
	return _react2.default.cloneElement(
	dataComponent,
	_this3.getSymbolProps(datum,props,i));
	
	});
	var labelComponents=legendData.map(function(datum,i){
	return _react2.default.cloneElement(
	labelComponent,
	_this3.getLabelProps(datum,props,i));
	
	});
	
	return[].concat(_toConsumableArray(dataComponents),_toConsumableArray(labelComponents));
	}},{key:"renderGroup",value:function renderGroup(
	
	props,children){var
	groupComponent=props.groupComponent,height=props.height,parentStyles=props.parentStyles,standalone=props.standalone,width=props.width,x=props.x,y=props.y;
	var groupProps={role:"presentation"};
	
	if(!standalone){
	groupProps=_extends({
	height:height,
	width:width,
	transform:"translate("+x+", "+y+")",
	style:parentStyles},
	groupProps);
	
	}
	
	return _react2.default.cloneElement(groupComponent,groupProps,children);
	}},{key:"renderContainer",value:function renderContainer(
	
	props,children){var
	containerComponent=props.containerComponent,height=props.height,parentStyles=props.parentStyles,width=props.width;
	return _react2.default.cloneElement(
	containerComponent,
	{height:height,width:width,style:parentStyles},
	children);
	
	}},{key:"render",value:function render()
	
	{
	var props=this.getCalculatedProps();
	var group=this.renderGroup(props,this.renderLegendItems(props));
	return props.standalone?this.renderContainer(props,group):group;
	}}]);return VictoryLegend;}(_react2.default.Component);VictoryLegend.displayName="VictoryLegend";VictoryLegend.role="legend";VictoryLegend.propTypes={colorScale:_propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string),_propTypes2.default.oneOf(["grayscale","qualitative","heatmap","warm","cool","red","green","blue"])]),containerComponent:_propTypes2.default.element,data:_propTypes2.default.arrayOf(_propTypes2.default.shape({name:_propTypes2.default.string.isRequired,label:_propTypes2.default.object,symbol:_propTypes2.default.object})),dataComponent:_propTypes2.default.element,groupComponent:_propTypes2.default.element,gutter:_propTypes2.default.number,height:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),itemsPerRow:_propTypes2.default.number,labelComponent:_propTypes2.default.element,orientation:_propTypes2.default.oneOf(["horizontal","vertical"]),padding:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.shape({top:_propTypes2.default.number,bottom:_propTypes2.default.number,left:_propTypes2.default.number,right:_propTypes2.default.number})]),standalone:_propTypes2.default.bool,style:_propTypes2.default.shape({data:_propTypes2.default.object,labels:_propTypes2.default.object,parent:_propTypes2.default.object}),symbolSpacer:_propTypes2.default.number,theme:_propTypes2.default.object,width:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),x:_propTypes2.default.number,y:_propTypes2.default.number};VictoryLegend.defaultProps={data:defaultLegendData,containerComponent:_react2.default.createElement(_victoryContainer2.default,{__source:{fileName:_jsxFileName,lineNumber:76}}),dataComponent:_react2.default.createElement(_point2.default,{__source:{fileName:_jsxFileName,lineNumber:77}}),groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:78}}),gutter:10,labelComponent:_react2.default.createElement(_victoryLabel2.default,{__source:{fileName:_jsxFileName,lineNumber:80}}),orientation:"vertical",standalone:true,style:{},symbolSpacer:8,theme:_victoryTheme2.default.grayscale,x:0,y:0};exports.default=VictoryLegend;

/***/ }),
/* 1118 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/area.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	
	var _d3Shape=__webpack_require__(300);var d3Shape=_interopRequireWildcard(_d3Shape);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Area=function(_React$Component){_inherits(Area,_React$Component);function Area(){_classCallCheck(this,Area);return _possibleConstructorReturn(this,(Area.__proto__||Object.getPrototypeOf(Area)).apply(this,arguments));}_createClass(Area,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,areaPaths=_calculateAttributes.areaPaths,linePaths=_calculateAttributes.linePaths;
	this.style=style;
	this.areaPaths=areaPaths;
	this.linePaths=linePaths;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,areaPaths=_calculateAttributes2.areaPaths,linePaths=_calculateAttributes2.linePaths;var _props=
	this.props,className=_props.className,interpolation=_props.interpolation;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[interpolation,nextProps.interpolation],
	[linePaths,this.linePaths],
	[areaPaths,this.areaPaths],
	[style,this.style]]))
	{
	this.style=style;
	this.areaPaths=areaPaths;
	this.linePaths=linePaths;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	style=props.style,data=props.data,active=props.active,scale=props.scale;
	var dataSegments=this.getDataSegments(data);
	var xScale=scale.x;
	var yScale=scale.y;
	var interpolation=this.toNewName(props.interpolation);
	var areaFunction=d3Shape.area().
	curve(d3Shape[interpolation]).
	x(function(d){return xScale(d._x1!==undefined?d._x1:d._x);}).
	y1(function(d){return yScale(d._y1!==undefined?d._y1:d._y);}).
	y0(function(d){return yScale(d._y0);});
	var lineFunction=d3Shape.line().
	curve(d3Shape[interpolation]).
	x(function(d){return xScale(d._x1!==undefined?d._x1:d._x);}).
	y(function(d){return yScale(d._y1);});
	return{
	style:_helpers2.default.evaluateStyle((0,_assign3.default)({fill:"black"},style),data,active),
	areaPaths:dataSegments.map(function(segment){return areaFunction(segment);}),
	linePaths:dataSegments.map(function(segment){return lineFunction(segment);})};
	
	}},{key:"getDataSegments",value:function getDataSegments(
	
	data){
	return _collection2.default.splitArray(data,function(datum){
	var yDatum=datum.y1!==undefined?datum._y1:datum._y;
	
	return yDatum===null||typeof yDatum==="undefined";
	}).filter(function(segment){return segment.length>1;});
	}},{key:"toNewName",value:function toNewName(
	
	interpolation){
	
	var capitalize=function capitalize(s){return s&&s[0].toUpperCase()+s.slice(1);};
	return"curve"+capitalize(interpolation);
	}},{key:"renderArea",value:function renderArea(
	
	
	paths,style,events){
	var areaStroke=style.stroke?"none":style.fill;
	var areaStyle=(0,_assign3.default)({},style,{stroke:areaStroke});var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return paths.map(function(path,index){
	return(
	_react2.default.createElement("path",_extends({
	key:"area-"+index,
	style:areaStyle,
	shapeRendering:shapeRendering||"auto",
	role:role||"presentation",
	d:path,
	className:className},
	events,{__source:{fileName:_jsxFileName,lineNumber:88}})));
	
	
	});
	}},{key:"renderLine",value:function renderLine(
	
	
	paths,style,events){
	if(!style.stroke||style.stroke==="none"||style.stroke==="transparent"){
	return[];
	}var _props3=
	this.props,role=_props3.role,shapeRendering=_props3.shapeRendering,className=_props3.className;
	var lineStyle=(0,_assign3.default)({},style,{fill:"none"});
	return paths.map(function(path,index){
	return(
	_react2.default.createElement("path",_extends({
	key:"area-stroke-"+index,
	style:lineStyle,
	shapeRendering:shapeRendering||"auto",
	role:role||"presentation",
	d:path,
	className:className},
	events,{__source:{fileName:_jsxFileName,lineNumber:110}})));
	
	
	});
	}},{key:"render",value:function render()
	
	{var _props4=
	this.props,events=_props4.events,groupComponent=_props4.groupComponent;
	var areas=this.renderArea(this.areaPaths,this.style,events);
	var lines=this.renderLine(this.linePaths,this.style,events);
	var children=[].concat(_toConsumableArray(lines),_toConsumableArray(areas));
	return children.length===1?children[0]:_react2.default.cloneElement(groupComponent,{},children);
	}}]);return Area;}(_react2.default.Component);Area.propTypes=_extends({},_commonProps2.default,{groupComponent:_propTypes2.default.element,interpolation:_propTypes2.default.string});Area.defaultProps={groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:17}})};exports.default=Area;

/***/ }),
/* 1119 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/bar.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Bar=function(_React$Component){_inherits(Bar,_React$Component);function Bar(){_classCallCheck(this,Bar);return _possibleConstructorReturn(this,(Bar.__proto__||Object.getPrototypeOf(Bar)).apply(this,arguments));}_createClass(Bar,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,path=_calculateAttributes.path;
	this.style=style;
	this.path=path;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,path=_calculateAttributes2.path;var _props=
	this.props,className=_props.className,datum=_props.datum,horizontal=_props.horizontal,x=_props.x,y=_props.y,y0=_props.y0;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[x,nextProps.x],
	[y,nextProps.y],
	[y0,nextProps.y0],
	[horizontal,nextProps.horizontal],
	[path,this.path],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	this.path=path;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	datum=props.datum,active=props.active,x=props.x,y=props.y;
	var stroke=props.style&&props.style.fill||"black";
	var baseStyle={fill:"black",stroke:stroke};
	var style=_helpers2.default.evaluateStyle((0,_assign3.default)(baseStyle,props.style),datum,active);
	var width=this.getBarWidth(props,style);
	var path=typeof x==="number"&&typeof y==="number"?
	this.getBarPath(props,width):undefined;
	return{style:style,path:path};
	}},{key:"getVerticalBarPath",value:function getVerticalBarPath(
	
	props,width){
	var size=width/2;
	var y0=Math.round(props.y0);
	var y1=Math.round(props.y);
	var x0=Math.round(props.x-size);
	var x1=Math.round(props.x+size);
	return"M "+x0+", "+y0+"\n      L "+
	x0+", "+y1+"\n      L "+
	x1+", "+y1+"\n      L "+
	x1+", "+y0+"\n      L "+
	x0+", "+y0+"\n      z";
	
	}},{key:"getHorizontalBarPath",value:function getHorizontalBarPath(
	
	props,width){
	var size=width/2;
	var y0=Math.round(props.y0);
	var y1=Math.round(props.y);
	var x0=Math.round(props.x-size);
	var x1=Math.round(props.x+size);
	return"M "+y0+", "+x0+"\n      L "+
	y0+", "+x1+"\n      L "+
	y1+", "+x1+"\n      L "+
	y1+", "+x0+"\n      L "+
	y0+", "+x0+"\n      z";
	
	}},{key:"getBarPath",value:function getBarPath(
	
	props,width){
	return this.props.horizontal?
	this.getHorizontalBarPath(props,width):this.getVerticalBarPath(props,width);
	}},{key:"getBarWidth",value:function getBarWidth(
	
	props,style){
	if(style.width){
	return style.width;
	}var
	
	width=props.width,data=props.data;
	var padding=props.padding.left||props.padding;
	
	var defaultWidth=data.length===0?8:(width-2*padding)/data.length;
	return defaultWidth;
	}},{key:"renderBar",value:function renderBar(
	
	
	path,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return(
	_react2.default.createElement("path",_extends({
	d:path,
	className:className,
	style:style,
	role:role||"presentation",
	shapeRendering:shapeRendering||"auto"},
	events,{__source:{fileName:_jsxFileName,lineNumber:111}})));
	
	
	}},{key:"render",value:function render()
	
	{
	return this.renderBar(this.path,this.style,this.props.events);
	}}]);return Bar;}(_react2.default.Component);Bar.propTypes=_extends({},_commonProps2.default,{datum:_propTypes2.default.object,horizontal:_propTypes2.default.bool,padding:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.object]),width:_propTypes2.default.number,x:_propTypes2.default.number,y:_propTypes2.default.number,y0:_propTypes2.default.number});exports.default=Bar;

/***/ }),
/* 1120 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/candle.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Candle=function(_React$Component){_inherits(Candle,_React$Component);function Candle(){_classCallCheck(this,Candle);return _possibleConstructorReturn(this,(Candle.__proto__||Object.getPrototypeOf(Candle)).apply(this,arguments));}_createClass(Candle,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,candleWidth=_calculateAttributes.candleWidth;
	this.style=style;
	this.candleWidth=candleWidth;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _props=
	this.props,className=_props.className,candleHeight=_props.candleHeight,datum=_props.datum,x=_props.x,y=_props.y,y1=_props.y1,y2=_props.y2;var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,candleWidth=_calculateAttributes2.candleWidth;
	
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[candleHeight,nextProps.candleHeight],
	[x,nextProps.x],
	[y,nextProps.y],
	[y1,nextProps.y1],
	[y2,nextProps.y2],
	[candleWidth,this.candleWidth],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	this.candleWidth=candleWidth;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	data=props.data,datum=props.datum,active=props.active,width=props.width;
	var style=_helpers2.default.evaluateStyle((0,_assign3.default)({stroke:"black"},props.style),datum,active);
	var padding=props.padding.left||props.padding;
	var candleWidth=style.width||0.5*(width-2*padding)/data.length;
	return{style:style,candleWidth:candleWidth};
	}},{key:"renderWick",value:function renderWick(
	
	
	wickProps){
	return _react2.default.createElement("line",_extends({},wickProps,{__source:{fileName:_jsxFileName,lineNumber:68}}));
	}},{key:"renderCandle",value:function renderCandle(
	
	
	candleProps){
	return _react2.default.createElement("rect",_extends({},candleProps,{__source:{fileName:_jsxFileName,lineNumber:73}}));
	}},{key:"getCandleProps",value:function getCandleProps(
	
	props){var
	candleHeight=props.candleHeight,x=props.x,y=props.y,events=props.events,role=props.role,className=props.className;
	var shapeRendering=props.shapeRendering||"auto";
	var candleX=x-this.candleWidth/2;
	return(0,_assign3.default)({
	x:candleX,y:y,style:this.style,role:role,width:this.candleWidth,height:candleHeight,
	shapeRendering:shapeRendering,className:className},
	events);
	}},{key:"getWickProps",value:function getWickProps(
	
	props){var
	x=props.x,y1=props.y1,y2=props.y2,events=props.events,className=props.className;
	var shapeRendering=props.shapeRendering||"auto";
	var role=props.role||"presentation";
	return(0,_assign3.default)(
	{x1:x,x2:x,y1:y1,y2:y2,style:this.style,role:role,shapeRendering:shapeRendering,className:className},
	events);
	
	}},{key:"render",value:function render()
	
	{
	var candleProps=this.getCandleProps(this.props);
	var wickProps=this.getWickProps(this.props);
	return _react2.default.cloneElement(
	this.props.groupComponent,{},this.renderWick(wickProps),this.renderCandle(candleProps));
	
	}}]);return Candle;}(_react2.default.Component);Candle.propTypes=_extends({},_commonProps2.default,{candleHeight:_propTypes2.default.number,datum:_propTypes2.default.object,groupComponent:_propTypes2.default.element,padding:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.object]),width:_propTypes2.default.number,x:_propTypes2.default.number,y:_propTypes2.default.number,y1:_propTypes2.default.number,y2:_propTypes2.default.number});Candle.defaultProps={groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:27}})};exports.default=Candle;

/***/ }),
/* 1121 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/curve.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	
	var _d3Shape=__webpack_require__(300);var d3Shape=_interopRequireWildcard(_d3Shape);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Curve=function(_React$Component){_inherits(Curve,_React$Component);function Curve(){_classCallCheck(this,Curve);return _possibleConstructorReturn(this,(Curve.__proto__||Object.getPrototypeOf(Curve)).apply(this,arguments));}_createClass(Curve,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,paths=_calculateAttributes.paths;
	this.style=style;
	this.paths=paths;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,paths=_calculateAttributes2.paths;var _props=
	this.props,className=_props.className,interpolation=_props.interpolation;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[interpolation,nextProps.interpolation],
	[paths,this.paths],
	[style,this.style]]))
	{
	this.style=style;
	this.paths=paths;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	style=props.style,data=props.data,active=props.active,scale=props.scale,interpolation=props.interpolation;
	var dataSegments=this.getDataSegments(data);
	var xScale=scale.x;
	var yScale=scale.y;
	var lineFunction=d3Shape.line().
	curve(d3Shape[this.toNewName(interpolation)]).
	x(function(d){return xScale(d._x1!==undefined?d._x1:d._x);}).
	y(function(d){return yScale(d._y1!==undefined?d._y1:d._y);});
	return{
	style:_helpers2.default.evaluateStyle(
	(0,_assign3.default)({fill:"none",stroke:"black"},style),data,active),
	
	paths:dataSegments.map(function(d){return lineFunction(d);})};
	
	}},{key:"getDataSegments",value:function getDataSegments(
	
	data){
	return _collection2.default.splitArray(data,function(datum){
	var yDatum=datum.y1!==undefined?datum._y1:datum._y;
	
	return yDatum===null||typeof yDatum==="undefined";
	}).filter(function(segment){return segment.length>1;});
	}},{key:"toNewName",value:function toNewName(
	
	interpolation){
	
	var capitalize=function capitalize(s){return s&&s[0].toUpperCase()+s.slice(1);};
	return"curve"+capitalize(interpolation);
	}},{key:"renderLine",value:function renderLine(
	
	
	paths,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return paths.map(function(path,index){
	return(
	_react2.default.createElement("path",_extends({
	key:"area-stroke-"+index,
	style:style,
	shapeRendering:shapeRendering||"auto",
	role:role||"presentation",
	d:path,
	className:className},
	events,{__source:{fileName:_jsxFileName,lineNumber:78}})));
	
	
	});
	}},{key:"render",value:function render()
	
	{var _props3=
	this.props,events=_props3.events,groupComponent=_props3.groupComponent;
	var children=this.renderLine(this.paths,this.style,events);
	return children.length===1?children[0]:_react2.default.cloneElement(groupComponent,{},children);
	}}]);return Curve;}(_react2.default.Component);Curve.propTypes=_extends({},_commonProps2.default,{groupComponent:_propTypes2.default.element,interpolation:_propTypes2.default.string});Curve.defaultProps={groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:17}})};exports.default=Curve;

/***/ }),
/* 1122 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/error-bar.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	ErrorBar=function(_React$Component){_inherits(ErrorBar,_React$Component);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function ErrorBar(props){_classCallCheck(this,ErrorBar);return _possibleConstructorReturn(this,(ErrorBar.__proto__||Object.getPrototypeOf(ErrorBar)).call(this,
	props));
	}_createClass(ErrorBar,[{key:"componentWillMount",value:function componentWillMount()
	
	{
	this.style=this.getStyle(this.props);
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _props=
	this.props,borderWidth=_props.borderWidth,className=_props.className,datum=_props.datum,x=_props.x,y=_props.y,errorX=_props.errorX,errorY=_props.errorY;
	var nextStyle=this.getStyle(nextProps);
	
	if(!_collection2.default.allSetsEqual([
	[borderWidth,nextProps.borderWidth],
	[className,nextProps.className],
	[x,nextProps.x],
	[y,nextProps.y],
	[errorX,nextProps.errorX],
	[errorY,nextProps.errorY],
	[this.style,nextStyle],
	[datum,nextProps.datum]]))
	{
	this.style=nextStyle;
	return true;
	}
	
	return false;
	}},{key:"getStyle",value:function getStyle(
	
	props){var
	style=props.style,datum=props.datum,active=props.active;
	return _helpers2.default.evaluateStyle((0,_assign3.default)({stroke:"black"},style),datum,active);
	}},{key:"renderLine",value:function renderLine(
	
	
	props,style,events){
	return _react2.default.createElement("line",_extends({},props,{style:style},events,{__source:{fileName:_jsxFileName,lineNumber:70}}));
	}},{key:"renderBorder",value:function renderBorder(
	
	props,error,type){var
	x=props.x,y=props.y,borderWidth=props.borderWidth,events=props.events,style=props.style,role=props.role,shapeRendering=props.shapeRendering,className=props.className;
	var vertical=type==="Right"||type==="Left";
	var errorPortion=error["error"+type];
	var borderProps={
	role:role,shapeRendering:shapeRendering,className:className,
	key:"border"+type,
	x1:vertical?errorPortion:x-borderWidth,
	x2:vertical?errorPortion:x+borderWidth,
	y1:vertical?y-borderWidth:errorPortion,
	y2:vertical?y+borderWidth:errorPortion};
	
	return this.renderLine(borderProps,style,events);
	}},{key:"renderCross",value:function renderCross(
	
	props,error,type){var
	x=props.x,y=props.y,events=props.events,style=props.style,role=props.role,shapeRendering=props.shapeRendering,className=props.className;
	var vertical=type==="Top"||type==="Bottom";
	var errorPortion=error["error"+type];
	var borderProps={
	role:role,shapeRendering:shapeRendering,className:className,
	key:"cross"+type,
	x1:x,
	x2:vertical?x:errorPortion,
	y1:y,
	y2:vertical?errorPortion:y};
	
	return this.renderLine(borderProps,style,events);
	}},{key:"renderErrorBar",value:function renderErrorBar(
	
	error,props){var
	groupComponent=props.groupComponent;
	return _react2.default.cloneElement(groupComponent,{},
	error.errorRight?this.renderBorder(props,error,"Right"):null,
	error.errorLeft?this.renderBorder(props,error,"Left"):null,
	error.errorBottom?this.renderBorder(props,error,"Bottom"):null,
	error.errorTop?this.renderBorder(props,error,"Top"):null,
	error.errorRight?this.renderCross(props,error,"Right"):null,
	error.errorLeft?this.renderCross(props,error,"Left"):null,
	error.errorBottom?this.renderCross(props,error,"Bottom"):null,
	error.errorTop?this.renderCross(props,error,"Top"):null);
	
	}},{key:"render",value:function render()
	
	{var _props2=
	
	
	
	this.props,x=_props2.x,y=_props2.y,borderWidth=_props2.borderWidth,groupComponent=_props2.groupComponent,events=_props2.events,errorX=_props2.errorX,errorY=_props2.errorY,scale=_props2.scale,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	var rangeX=void 0;
	var rangeY=void 0;
	var positiveErrorX=void 0;
	var negativeErrorX=void 0;
	var positiveErrorY=void 0;
	var negativeErrorY=void 0;
	var errorTop=void 0;
	var errorBottom=void 0;
	var errorRight=void 0;
	var errorLeft=void 0;
	
	if(errorX){
	rangeX=scale.x.range();
	positiveErrorX=errorX[0];
	negativeErrorX=errorX[1];
	errorRight=positiveErrorX>=rangeX[1]?rangeX[1]:positiveErrorX;
	errorLeft=negativeErrorX<=rangeX[0]?rangeX[0]:negativeErrorX;
	}
	
	if(errorY){
	rangeY=scale.y.range();
	positiveErrorY=errorY[1];
	negativeErrorY=errorY[0];
	errorTop=positiveErrorY>=rangeY[0]?rangeY[0]:positiveErrorY;
	errorBottom=negativeErrorY<=rangeY[1]?rangeY[1]:negativeErrorY;
	}
	var props={
	x:x,y:y,borderWidth:borderWidth,groupComponent:groupComponent,events:events,className:className,
	role:role||"presentation",
	shapeRendering:shapeRendering||"auto",
	style:this.style};
	
	return _react2.default.cloneElement(
	this.props.groupComponent,
	{},
	this.renderErrorBar({errorTop:errorTop,errorBottom:errorBottom,errorRight:errorRight,errorLeft:errorLeft},props));
	
	}}]);return ErrorBar;}(_react2.default.Component);ErrorBar.propTypes=_extends({},_commonProps2.default,{borderWidth:_propTypes2.default.number,datum:_propTypes2.default.object,errorX:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.array,_propTypes2.default.bool]),errorY:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.array,_propTypes2.default.bool]),groupComponent:_propTypes2.default.element,x:_propTypes2.default.number,y:_propTypes2.default.number});ErrorBar.defaultProps={borderWidth:10,groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:31}})};exports.default=ErrorBar;

/***/ }),
/* 1123 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/line.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Line=function(_React$Component){_inherits(Line,_React$Component);function Line(){_classCallCheck(this,Line);return _possibleConstructorReturn(this,(Line.__proto__||Object.getPrototypeOf(Line)).apply(this,arguments));}_createClass(Line,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	{
	this.style=this.getStyle(this.props);
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _props=
	this.props,className=_props.className,datum=_props.datum,x1=_props.x1,x2=_props.x2,y1=_props.y1,y2=_props.y2;
	var style=this.getStyle(nextProps);
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[x1,nextProps.x1],
	[x2,nextProps.x2],
	[y1,nextProps.y1],
	[y2,nextProps.y2],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	return true;
	}
	return false;
	}},{key:"getStyle",value:function getStyle(
	
	props){var
	style=props.style,datum=props.datum,active=props.active;
	return _helpers2.default.evaluateStyle((0,_assign3.default)({stroke:"black"},style),datum,active);
	}},{key:"renderAxisLine",value:function renderAxisLine(
	
	
	props,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return(
	_react2.default.createElement("line",_extends({},
	props,{
	className:className,
	style:style,
	role:role||"presentation",
	shapeRendering:shapeRendering||"auto",
	vectorEffect:"non-scaling-stroke"},
	events,{__source:{fileName:_jsxFileName,lineNumber:49}})));
	
	
	}},{key:"render",value:function render()
	
	{var _props3=
	this.props,x1=_props3.x1,x2=_props3.x2,y1=_props3.y1,y2=_props3.y2,events=_props3.events;
	return this.renderAxisLine({x1:x1,x2:x2,y1:y1,y2:y2},this.style,events);
	}}]);return Line;}(_react2.default.Component);Line.propTypes=_extends({},_commonProps2.default,{datum:_propTypes2.default.any,x1:_propTypes2.default.number,x2:_propTypes2.default.number,y1:_propTypes2.default.number,y2:_propTypes2.default.number});exports.default=Line;

/***/ }),
/* 1124 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _range2=__webpack_require__(364);var _range3=_interopRequireDefault(_range2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=
	
	
	{
	circle:function circle(x,y,size){
	var s=Math.round(size);
	return"M "+Math.round(x)+", "+Math.round(y)+" m "+-s+", 0\n      a "+
	s+", "+s+" 0 1,0 "+s*2+",0\n      a "+
	s+", "+s+" 0 1,0 "+-s*2+",0";
	},
	
	square:function square(x,y,size){
	var baseSize=0.87*size;
	var x0=Math.round(x-baseSize);
	var x1=Math.round(x+baseSize);
	var y0=Math.round(y-baseSize);
	var y1=Math.round(y+baseSize);
	return"M "+x0+", "+y1+"\n      L "+
	x1+", "+y1+"\n      L "+
	x1+", "+y0+"\n      L "+
	x0+", "+y0+"\n      z";
	
	},
	
	diamond:function diamond(x,y,size){
	var baseSize=0.87*size;
	var length=Math.sqrt(2*(baseSize*baseSize));
	return"M "+Math.round(x)+", "+Math.round(y+length)+"\n      L "+
	Math.round(x+length)+", "+Math.round(y)+"\n      L "+
	Math.round(x)+", "+Math.round(y-length)+"\n      L "+
	Math.round(x-length)+", "+Math.round(y)+"\n      z";
	
	},
	
	triangleDown:function triangleDown(x,y,size){
	var height=size/2*Math.sqrt(3);
	var x0=Math.round(x-size);
	var x1=Math.round(x+size);
	var y0=Math.round(y-size);
	var y1=Math.round(y+height);
	return"M "+x0+", "+y0+"\n      L "+
	x1+", "+y0+"\n      L "+
	Math.round(x)+", "+y1+"\n      z";
	
	},
	
	triangleUp:function triangleUp(x,y,size){
	var height=size/2*Math.sqrt(3);
	var x0=Math.round(x-size);
	var x1=Math.round(x+size);
	var y0=Math.round(y-height);
	var y1=Math.round(y+size);
	return"M "+x0+", "+y1+"\n      L "+
	x1+", "+y1+"\n      L "+
	Math.round(x)+", "+y0+"\n      z";
	
	},
	
	plus:function plus(x,y,size){
	var baseSize=1.1*size;
	return"M "+Math.round(x-baseSize/2.5)+", "+Math.round(y+baseSize)+"\n      L "+
	Math.round(x+baseSize/2.5)+", "+Math.round(y+baseSize)+"\n      L "+
	Math.round(x+baseSize/2.5)+", "+Math.round(y+baseSize/2.5)+"\n      L "+
	Math.round(x+baseSize)+", "+Math.round(y+baseSize/2.5)+"\n      L "+
	Math.round(x+baseSize)+", "+Math.round(y-baseSize/2.5)+"\n      L "+
	Math.round(x+baseSize/2.5)+", "+Math.round(y-baseSize/2.5)+"\n      L "+
	Math.round(x+baseSize/2.5)+", "+Math.round(y-baseSize)+"\n      L "+
	Math.round(x-baseSize/2.5)+", "+Math.round(y-baseSize)+"\n      L "+
	Math.round(x-baseSize/2.5)+", "+Math.round(y-baseSize/2.5)+"\n      L "+
	Math.round(x-baseSize)+", "+Math.round(y-baseSize/2.5)+"\n      L "+
	Math.round(x-baseSize)+", "+Math.round(y+baseSize/2.5)+"\n      L "+
	Math.round(x-baseSize/2.5)+", "+Math.round(y+baseSize/2.5)+"\n      z";
	
	},
	
	star:function star(x,y,size){
	var baseSize=1.35*size;
	var angle=Math.PI/5;
	var starCoords=(0,_range3.default)(10).map(function(index){
	var length=index%2===0?baseSize:baseSize/2;
	return length*Math.sin(angle*(index+1))+x+",\n        "+(
	length*Math.cos(angle*(index+1))+y);
	});
	return"M "+starCoords.join("L")+" z";
	}};

/***/ }),
/* 1125 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/slice.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Slice=function(_React$Component){_inherits(Slice,_React$Component);function Slice(){_classCallCheck(this,Slice);return _possibleConstructorReturn(this,(Slice.__proto__||Object.getPrototypeOf(Slice)).apply(this,arguments));}_createClass(Slice,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,path=_calculateAttributes.path;
	this.style=style;
	this.path=path;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,path=_calculateAttributes2.path;var _props=
	this.props,className=_props.className,datum=_props.datum,slice=_props.slice;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[path,this.path],
	[style,this.style],
	[datum,nextProps.datum],
	[slice,nextProps.slice]]))
	{
	this.style=style;
	this.path=path;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	style=props.style,datum=props.datum,active=props.active,pathFunction=props.pathFunction,slice=props.slice;
	return{
	style:_helpers2.default.evaluateStyle(style,datum,active),
	path:pathFunction(slice)};
	
	}},{key:"renderSlice",value:function renderSlice(
	
	
	path,style,events){var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	return(
	_react2.default.createElement("path",_extends({
	d:path,
	className:className,
	role:role||"presentation",
	style:style,
	shapeRendering:shapeRendering||"auto"},
	events,{__source:{fileName:_jsxFileName,lineNumber:50}})));
	
	
	}},{key:"render",value:function render()
	
	{
	return this.renderSlice(this.path,this.style,this.props.events);
	}}]);return Slice;}(_react2.default.Component);Slice.propTypes=_extends({},_commonProps2.default,{datum:_propTypes2.default.object,pathFunction:_propTypes2.default.func,slice:_propTypes2.default.object});exports.default=Slice;

/***/ }),
/* 1126 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName="src/victory-primitives/voronoi.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);
	var _commonProps=__webpack_require__(40);var _commonProps2=_interopRequireDefault(_commonProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	Voronoi=function(_React$Component){_inherits(Voronoi,_React$Component);function Voronoi(){_classCallCheck(this,Voronoi);return _possibleConstructorReturn(this,(Voronoi.__proto__||Object.getPrototypeOf(Voronoi)).apply(this,arguments));}_createClass(Voronoi,[{key:"componentWillMount",value:function componentWillMount()
	
	
	
	
	
	
	
	
	
	{var _calculateAttributes=
	this.calculateAttributes(this.props),style=_calculateAttributes.style,circle=_calculateAttributes.circle,voronoi=_calculateAttributes.voronoi;
	this.style=style;
	this.circle=circle;
	this.voronoi=voronoi;
	}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(
	
	nextProps){var _calculateAttributes2=
	this.calculateAttributes(nextProps),style=_calculateAttributes2.style,circle=_calculateAttributes2.circle,voronoi=_calculateAttributes2.voronoi;var _props=
	this.props,className=_props.className,x=_props.x,y=_props.y,datum=_props.datum;
	if(!_collection2.default.allSetsEqual([
	[className,nextProps.className],
	[x,nextProps.x],
	[y,nextProps.y],
	[circle,this.circle],
	[voronoi,this.voronoi],
	[style,this.style],
	[datum,nextProps.datum]]))
	{
	this.style=style;
	this.circle=circle;
	this.voronoi=voronoi;
	return true;
	}
	return false;
	}},{key:"calculateAttributes",value:function calculateAttributes(
	
	props){var
	style=props.style,datum=props.datum,active=props.active;
	return{
	style:_helpers2.default.evaluateStyle(style,datum,active),
	circle:this.getCirclePath(props),
	voronoi:this.getVoronoiPath(props)};
	
	}},{key:"getVoronoiPath",value:function getVoronoiPath(
	
	props){var
	polygon=props.polygon;
	return Array.isArray(polygon)&&polygon.length?"M "+
	props.polygon.join("L")+" Z":"";
	}},{key:"getCirclePath",value:function getCirclePath(
	
	props){
	if(!props.size){
	return null;
	}var
	x=props.x,y=props.y,datum=props.datum,active=props.active;
	var size=_helpers2.default.evaluateProp(props.size,datum,active);
	return"M "+x+", "+y+" m "+-size+", 0\n      a "+
	size+", "+size+" 0 1,0 "+size*2+",0\n      a "+
	size+", "+size+" 0 1,0 "+-size*2+",0";
	}},{key:"renderPoint",value:function renderPoint(
	
	
	paths,style,events){
	var clipId=paths.circle&&"clipPath-"+Math.random();
	var clipPath=paths.circle?"url(#"+clipId+")":undefined;var _props2=
	this.props,role=_props2.role,shapeRendering=_props2.shapeRendering,className=_props2.className;
	var voronoiPath=
	_react2.default.createElement("path",_extends({
	d:paths.circle||paths.voronoi,
	className:className,
	clipPath:clipPath,
	style:style,
	role:role||"presentation",
	shapeRendering:shapeRendering||"auto"},
	events,{__source:{fileName:_jsxFileName,lineNumber:77}}));
	
	
	return paths.circle?
	
	_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:89}},
	_react2.default.createElement("defs",{__source:{fileName:_jsxFileName,lineNumber:90}},
	_react2.default.createElement("clipPath",{id:clipId,__source:{fileName:_jsxFileName,lineNumber:91}},
	_react2.default.createElement("path",{d:paths.voronoi,className:className,__source:{fileName:_jsxFileName,lineNumber:92}}))),
	
	
	voronoiPath):
	
	
	voronoiPath;
	}},{key:"render",value:function render()
	
	{
	var paths={
	circle:this.circle,
	voronoi:this.voronoi};
	
	return this.renderPoint(paths,this.style,this.props.events);
	}}]);return Voronoi;}(_react2.default.Component);Voronoi.propTypes=_extends({},_commonProps2.default,{datum:_propTypes2.default.object,polygon:_propTypes2.default.array,size:_propTypes2.default.number,x:_propTypes2.default.number,y:_propTypes2.default.number});exports.default=Voronoi;

/***/ }),
/* 1127 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _fromPairs2=__webpack_require__(787);var _fromPairs3=_interopRequireDefault(_fromPairs2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _partialRight2=__webpack_require__(362);var _partialRight3=_interopRequireDefault(_partialRight2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _jsxFileName="src/victory-shared-events/victory-shared-events.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);
	var _events=__webpack_require__(253);var _events2=_interopRequireDefault(_events);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _timer=__webpack_require__(108);var _timer2=_interopRequireDefault(_timer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var
	
	VictorySharedEvents=function(_React$Component){_inherits(VictorySharedEvents,_React$Component);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	function VictorySharedEvents(){_classCallCheck(this,VictorySharedEvents);var _this=_possibleConstructorReturn(this,(VictorySharedEvents.__proto__||Object.getPrototypeOf(VictorySharedEvents)).call(this));
	
	_this.state=_this.state||{};
	_this.getScopedEvents=_events2.default.getScopedEvents.bind(_this);
	_this.getEventState=_events2.default.getEventState.bind(_this);
	_this.getTimer=_this.getTimer.bind(_this);return _this;
	}_createClass(VictorySharedEvents,[{key:"getChildContext",value:function getChildContext()
	
	{
	return{
	getTimer:this.getTimer};
	
	}},{key:"componentWillMount",value:function componentWillMount()
	
	{
	this.setUpChildren(this.props);
	}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(
	
	newProps){
	this.setUpChildren(newProps);
	}},{key:"getTimer",value:function getTimer()
	
	{
	if(this.context.getTimer){
	return this.context.getTimer();
	}
	if(!this.timer){
	this.timer=new _timer2.default();
	}
	return this.timer;
	}},{key:"getAllEvents",value:function getAllEvents(
	
	props){
	var components=["container","groupComponent"];
	this.componentEvents=_events2.default.getComponentEvents(props,components);
	if(Array.isArray(this.componentEvents)){var _componentEvents;
	return Array.isArray(props.events)?
	(_componentEvents=this.componentEvents).concat.apply(_componentEvents,_toConsumableArray(props.events)):this.componentEvents;
	}
	return props.events;
	}},{key:"setUpChildren",value:function setUpChildren(
	
	props){
	this.events=this.getAllEvents(props);
	if(this.events){
	this.childComponents=_react2.default.Children.toArray(props.children);
	var childBaseProps=this.getBasePropsFromChildren(this.childComponents);
	var parentBaseProps=props.container?props.container.props:{};
	this.baseProps=(0,_assign3.default)({},childBaseProps,{parent:parentBaseProps});
	}
	}},{key:"getBasePropsFromChildren",value:function getBasePropsFromChildren(
	
	childComponents){
	var iteratee=function iteratee(child,childName,parent){
	if(child.type&&(0,_isFunction3.default)(child.type.getBaseProps)){
	child=parent?_react2.default.cloneElement(child,parent.props):child;
	var _baseProps=child.props&&child.type.getBaseProps(child.props);
	return _baseProps?[[childName,_baseProps]]:null;
	}else{
	return null;
	}
	};
	
	var baseProps=_helpers2.default.reduceChildren(childComponents,iteratee);
	return(0,_fromPairs3.default)(baseProps);
	}},{key:"getNewChildren",value:function getNewChildren(
	
	props){var _this2=this;var
	events=props.events,eventKey=props.eventKey;
	var childNames=Object.keys(this.baseProps);
	var alterChildren=function alterChildren(children){
	return children.reduce(function(memo,child,index){
	if(child.props.children){
	return memo.concat(_react2.default.cloneElement(
	child,
	child.props,
	alterChildren(_react2.default.Children.toArray(child.props.children))));
	
	}else if(child.type&&(0,_isFunction3.default)(child.type.getBaseProps)){
	var name=child.props.name||childNames.shift()||index;
	var childEvents=Array.isArray(events)&&
	events.filter(function(event){
	if(event.target==="parent"){
	return false;
	}
	return Array.isArray(event.childName)?
	event.childName.indexOf(name)>-1:
	event.childName===name||event.childName==="all";
	});
	var sharedEvents={
	events:childEvents,
	getEvents:(0,_partialRight3.default)(_this2.getScopedEvents,name,_this2.baseProps),
	getEventState:(0,_partialRight3.default)(_this2.getEventState,name)};
	
	return memo.concat(_react2.default.cloneElement(child,(0,_assign3.default)(
	{key:"events-"+name,sharedEvents:sharedEvents,eventKey:eventKey},
	child.props)));
	
	}else{
	return memo.concat(child);
	}
	},[]);
	};
	
	return alterChildren(this.childComponents);
	}},{key:"getContainer",value:function getContainer(
	
	props,children){
	var parents=Array.isArray(this.events)&&
	this.events.filter(function(event){return event.target==="parent";});
	var sharedEvents=parents.length>0?
	{
	events:parents,
	getEvents:(0,_partialRight3.default)(this.getScopedEvents,null,this.baseProps),
	getEventState:(0,_partialRight3.default)(this.getEventState,null)}:
	null;
	var container=this.props.container||this.props.groupComponent;
	var containerProps=container.props||{};
	var boundGetEvents=_events2.default.getEvents.bind(this);
	var parentEvents=sharedEvents&&boundGetEvents({sharedEvents:sharedEvents},"parent");
	var parentProps=(0,_defaults3.default)(
	{},
	this.getEventState("parent","parent"),
	containerProps,
	this.baseProps.parent,
	{children:children});
	
	var events=(0,_defaults3.default)(
	{},_events2.default.getPartialEvents(parentEvents,"parent",parentProps),containerProps.events);
	
	return _react2.default.cloneElement(container,(0,_assign3.default)({},parentProps,{events:events}));
	}},{key:"render",value:function render()
	
	{
	if(this.events){
	var children=this.getNewChildren(this.props);
	return this.getContainer(this.props,children);
	}
	return _react2.default.cloneElement(this.props.container,{children:this.props.children});
	}}]);return VictorySharedEvents;}(_react2.default.Component);VictorySharedEvents.displayName="VictorySharedEvents";VictorySharedEvents.role="shared-event-wrapper";VictorySharedEvents.propTypes={children:_propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node),_propTypes2.default.node]),container:_propTypes2.default.node,eventKey:_propTypes2.default.oneOfType([_propTypes2.default.array,_propTypes2.default.func,_propTypes4.default.allOfType([_propTypes4.default.integer,_propTypes4.default.nonNegative]),_propTypes2.default.string]),events:_propTypes2.default.arrayOf(_propTypes2.default.shape({childName:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.array]),eventHandlers:_propTypes2.default.object,eventKey:_propTypes2.default.oneOfType([_propTypes2.default.array,_propTypes2.default.func,_propTypes4.default.allOfType([_propTypes4.default.integer,_propTypes4.default.nonNegative]),_propTypes2.default.string]),target:_propTypes2.default.string})),groupComponent:_propTypes2.default.node};VictorySharedEvents.defaultProps={groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:44}})};VictorySharedEvents.contextTypes={getTimer:_propTypes2.default.func};VictorySharedEvents.childContextTypes={getTimer:_propTypes2.default.func};exports.default=VictorySharedEvents;

/***/ }),
/* 1128 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	
	
	
	
	var colors=[
	"#252525",
	"#525252",
	"#737373",
	"#969696",
	"#bdbdbd",
	"#d9d9d9",
	"#f0f0f0"];
	
	
	var charcoal="#252525";
	
	
	
	var sansSerif="'Gill Sans', 'Gill Sans MT', 'Ser­avek', 'Trebuchet MS', sans-serif";
	var letterSpacing="normal";
	var fontSize=14;
	
	
	
	var baseProps={
	width:450,
	height:300,
	padding:50,
	colorScale:colors};
	
	
	
	
	var baseLabelStyles={
	fontFamily:sansSerif,
	fontSize:fontSize,
	letterSpacing:letterSpacing,
	padding:10,
	fill:charcoal,
	stroke:"transparent"};
	
	
	var centeredLabelStyles=(0,_assign3.default)({textAnchor:"middle"},baseLabelStyles);
	
	
	
	var strokeLinecap="round";
	var strokeLinejoin="round";exports.default=
	
	{
	area:(0,_assign3.default)({
	style:{
	data:{
	fill:charcoal},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	axis:(0,_assign3.default)({
	style:{
	axis:{
	fill:"transparent",
	stroke:charcoal,
	strokeWidth:1,
	strokeLinecap:strokeLinecap,
	strokeLinejoin:strokeLinejoin},
	
	axisLabel:(0,_assign3.default)({},centeredLabelStyles,{
	padding:25}),
	
	grid:{
	fill:"transparent",
	stroke:"transparent",
	pointerEvents:"none"},
	
	ticks:{
	fill:"transparent",
	size:1,
	stroke:"transparent"},
	
	tickLabels:baseLabelStyles}},
	
	baseProps),
	bar:(0,_assign3.default)({
	style:{
	data:{
	fill:charcoal,
	padding:10,
	strokeWidth:0,
	width:8},
	
	labels:baseLabelStyles}},
	
	baseProps),
	candlestick:(0,_assign3.default)({
	style:{
	data:{
	stroke:charcoal,
	strokeWidth:1},
	
	labels:centeredLabelStyles},
	
	candleColors:{
	positive:"#ffffff",
	negative:charcoal}},
	
	baseProps),
	chart:baseProps,
	errorbar:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	stroke:charcoal,
	strokeWidth:2},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	group:(0,_assign3.default)({
	colorScale:colors},
	baseProps),
	line:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	stroke:charcoal,
	strokeWidth:2},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	pie:{
	style:{
	data:{
	padding:10,
	stroke:"transparent",
	strokeWidth:1},
	
	labels:(0,_assign3.default)({},baseLabelStyles,{padding:20})},
	
	colorScale:colors,
	width:400,
	height:400,
	padding:50},
	
	scatter:(0,_assign3.default)({
	style:{
	data:{
	fill:charcoal,
	stroke:"transparent",
	strokeWidth:0},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	stack:(0,_assign3.default)({
	colorScale:colors},
	baseProps),
	tooltip:{
	style:(0,_assign3.default)({},centeredLabelStyles,{padding:5,pointerEvents:"none"}),
	flyoutStyle:{
	stroke:charcoal,
	strokeWidth:1,
	fill:"#f0f0f0",
	pointerEvents:"none"},
	
	cornerRadius:5,
	pointerLength:10},
	
	voronoi:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	stroke:"transparent",
	strokeWidth:0},
	
	labels:(0,_assign3.default)({},centeredLabelStyles,{padding:5,pointerEvents:"none"}),
	flyout:{
	stroke:charcoal,
	strokeWidth:1,
	fill:"#f0f0f0",
	pointerEvents:"none"}}},
	
	
	baseProps),
	legend:{
	colorScale:colors,
	style:{
	data:{
	type:"circle"},
	
	labels:baseLabelStyles}}};

/***/ }),
/* 1129 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	
	
	
	
	var yellow200="#FFF59D";
	var deepOrange600="#F4511E";
	var lime300="#DCE775";
	var lightGreen500="#8BC34A";
	var teal700="#00796B";
	var cyan900="#006064";
	var colors=[
	deepOrange600,
	yellow200,
	lime300,
	lightGreen500,
	teal700,
	cyan900];
	
	var blueGrey50="#ECEFF1";
	var blueGrey300="#90A4AE";
	var blueGrey700="#455A64";
	var grey900="#212121";
	
	
	
	var sansSerif="'Roboto', 'Helvetica Neue', Helvetica, sans-serif";
	var letterSpacing="normal";
	var fontSize=12;
	
	
	
	var padding=8;
	var baseProps={
	width:350,
	height:350,
	padding:50};
	
	
	
	
	var baseLabelStyles={
	fontFamily:sansSerif,
	fontSize:fontSize,
	letterSpacing:letterSpacing,
	padding:padding,
	fill:blueGrey700,
	stroke:"transparent",
	strokeWidth:0};
	
	
	var centeredLabelStyles=(0,_assign3.default)({textAnchor:"middle"},baseLabelStyles);
	
	
	
	var strokeDasharray="10, 5";
	var strokeLinecap="round";
	var strokeLinejoin="round";exports.default=
	
	{
	area:(0,_assign3.default)({
	style:{
	data:{
	fill:grey900},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	axis:(0,_assign3.default)({
	style:{
	axis:{
	fill:"transparent",
	stroke:blueGrey300,
	strokeWidth:2,
	strokeLinecap:strokeLinecap,
	strokeLinejoin:strokeLinejoin},
	
	axisLabel:(0,_assign3.default)({},centeredLabelStyles,{
	padding:padding,
	stroke:"transparent"}),
	
	grid:{
	fill:"transparent",
	stroke:blueGrey50,
	strokeDasharray:strokeDasharray,
	strokeLinecap:strokeLinecap,
	strokeLinejoin:strokeLinejoin,
	pointerEvents:"none"},
	
	ticks:{
	fill:"transparent",
	size:5,
	stroke:blueGrey300,
	strokeWidth:1,
	strokeLinecap:strokeLinecap,
	strokeLinejoin:strokeLinejoin},
	
	tickLabels:(0,_assign3.default)({},baseLabelStyles,{
	fill:blueGrey700})}},
	
	
	baseProps),
	bar:(0,_assign3.default)({
	style:{
	data:{
	fill:blueGrey700,
	padding:padding,
	strokeWidth:0,
	width:5},
	
	labels:baseLabelStyles}},
	
	baseProps),
	candlestick:(0,_assign3.default)({
	style:{
	data:{
	stroke:blueGrey700},
	
	labels:centeredLabelStyles},
	
	candleColors:{
	positive:"#ffffff",
	negative:blueGrey700}},
	
	baseProps),
	chart:baseProps,
	errorbar:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	opacity:1,
	stroke:blueGrey700,
	strokeWidth:2},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	group:(0,_assign3.default)({
	colorScale:colors},
	baseProps),
	line:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	opacity:1,
	stroke:blueGrey700,
	strokeWidth:2},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	pie:(0,_assign3.default)({
	colorScale:colors,
	style:{
	data:{
	padding:padding,
	stroke:blueGrey50,
	strokeWidth:1},
	
	labels:(0,_assign3.default)({},baseLabelStyles,{padding:20})}},
	
	baseProps),
	scatter:(0,_assign3.default)({
	style:{
	data:{
	fill:blueGrey700,
	opacity:1,
	stroke:"transparent",
	strokeWidth:0},
	
	labels:centeredLabelStyles}},
	
	baseProps),
	stack:(0,_assign3.default)({
	colorScale:colors},
	baseProps),
	tooltip:{
	style:(0,_assign3.default)({},centeredLabelStyles,{padding:5,pointerEvents:"none"}),
	flyoutStyle:{
	stroke:grey900,
	strokeWidth:1,
	fill:"#f0f0f0",
	pointerEvents:"none"},
	
	cornerRadius:5,
	pointerLength:10},
	
	voronoi:(0,_assign3.default)({
	style:{
	data:{
	fill:"transparent",
	stroke:"transparent",
	strokeWidth:0},
	
	labels:(0,_assign3.default)({},centeredLabelStyles,{padding:5,pointerEvents:"none"}),
	flyout:{
	stroke:grey900,
	strokeWidth:1,
	fill:"#f0f0f0",
	pointerEvents:"none"}}},
	
	
	baseProps),
	legend:{
	colorScale:colors,
	style:{
	data:{
	type:"circle"},
	
	labels:baseLabelStyles}}};

/***/ }),
/* 1130 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _jsxFileName="src/victory-tooltip/victory-tooltip.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _propTypes=__webpack_require__(2);var _propTypes2=_interopRequireDefault(_propTypes);
	var _propTypes3=__webpack_require__(64);var _propTypes4=_interopRequireDefault(_propTypes3);
	var _textsize=__webpack_require__(256);var _textsize2=_interopRequireDefault(_textsize);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _victoryLabel=__webpack_require__(249);var _victoryLabel2=_interopRequireDefault(_victoryLabel);
	var _victoryTheme=__webpack_require__(251);var _victoryTheme2=_interopRequireDefault(_victoryTheme);
	var _flyout=__webpack_require__(496);var _flyout2=_interopRequireDefault(_flyout);
	var _victoryPortal=__webpack_require__(250);var _victoryPortal2=_interopRequireDefault(_victoryPortal);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
	
	
	var fallbackProps={
	cornerRadius:5,
	pointerLength:10,
	pointerWidth:10};var
	
	
	VictoryTooltip=function(_React$Component){_inherits(VictoryTooltip,_React$Component);function VictoryTooltip(){_classCallCheck(this,VictoryTooltip);return _possibleConstructorReturn(this,(VictoryTooltip.__proto__||Object.getPrototypeOf(VictoryTooltip)).apply(this,arguments));}_createClass(VictoryTooltip,[{key:"getEvaluatedProps",value:function getEvaluatedProps(
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	props){var
	
	horizontal=
	
	props.horizontal,datum=props.datum,pointerLength=props.pointerLength,pointerWidth=props.pointerWidth,cornerRadius=props.cornerRadius,width=props.width,height=props.height,orientation=props.orientation,dx=props.dx,dy=props.dy,text=props.text,active=props.active;
	
	var style=Array.isArray(props.style)?
	props.style.map(function(s){return _helpers2.default.evaluateStyle(s,datum,active);}):
	_helpers2.default.evaluateStyle(props.style,datum,active);
	var flyoutStyle=_helpers2.default.evaluateStyle(props.flyoutStyle,datum,active);
	var padding=flyoutStyle&&flyoutStyle.padding||0;
	var defaultDx=horizontal?padding:0;
	var defaultDy=horizontal?0:padding;
	var getDefaultOrientation=function getDefaultOrientation(){
	var positive=horizontal?"right":"top";
	var negative=horizontal?"left":"bottom";
	return datum&&datum.y<0?negative:positive;
	};
	return(0,_assign3.default)(
	{},
	props,
	{
	style:style,
	flyoutStyle:flyoutStyle,
	dx:dx!==undefined?_helpers2.default.evaluateProp(dx,datum,active):defaultDx,
	dy:dy!==undefined?_helpers2.default.evaluateProp(dy,datum,active):defaultDy,
	cornerRadius:_helpers2.default.evaluateProp(cornerRadius,datum,active),
	pointerLength:_helpers2.default.evaluateProp(pointerLength,datum,active),
	pointerWidth:_helpers2.default.evaluateProp(pointerWidth,datum,active),
	orientation:_helpers2.default.evaluateProp(orientation,datum,active)||getDefaultOrientation(),
	width:_helpers2.default.evaluateProp(width,datum,active),
	height:_helpers2.default.evaluateProp(height,datum,active),
	active:_helpers2.default.evaluateProp(active,datum,active),
	text:_helpers2.default.evaluateProp(text,datum,active)});
	
	
	}},{key:"getCalculatedValues",value:function getCalculatedValues(
	
	props){var
	style=props.style,text=props.text,datum=props.datum,theme=props.theme,active=props.active;
	var defaultLabelStyles=theme&&theme.tooltip&&theme.tooltip.style?
	theme.tooltip.style:{};
	var baseLabelStyle=Array.isArray(style)?
	style.map(function(s){return(0,_defaults3.default)({},s,defaultLabelStyles);}):
	(0,_defaults3.default)({},style,defaultLabelStyles);
	var defaultFlyoutStyles=theme&&theme.tooltip&&theme.tooltip.flyoutStyle?
	theme.tooltip.flyoutStyle:{};
	var flyoutStyle=props.flyoutStyle?
	(0,_defaults3.default)({},props.flyoutStyle,defaultFlyoutStyles):defaultFlyoutStyles;
	var labelStyle=Array.isArray(baseLabelStyle)?
	baseLabelStyle.map(function(s){return _helpers2.default.evaluateStyle(s,datum,active);}):
	_helpers2.default.evaluateStyle(baseLabelStyle,datum,active);
	var labelSize=_textsize2.default.approximateTextSize(text,labelStyle);
	var flyoutDimensions=this.getDimensions(props,labelSize,labelStyle);
	var flyoutCenter=this.getFlyoutCenter(props,flyoutDimensions);
	return{labelStyle:labelStyle,flyoutStyle:flyoutStyle,labelSize:labelSize,flyoutDimensions:flyoutDimensions,flyoutCenter:flyoutCenter};
	}},{key:"getFlyoutCenter",value:function getFlyoutCenter(
	
	props,dimensions){var
	x=props.x,y=props.y,dx=props.dx,dy=props.dy,pointerLength=props.pointerLength,orientation=props.orientation;var
	height=dimensions.height,width=dimensions.width;
	var sign=orientation==="right"||orientation==="top"?1:-1;
	return{
	x:orientation==="left"||orientation==="right"?
	x+sign*(pointerLength+width/2+dx):x+sign*dx,
	y:orientation==="top"||orientation==="bottom"?
	y-sign*(pointerLength+height/2+dy):y-sign*dy};
	
	}},{key:"getLabelPadding",value:function getLabelPadding(
	
	style){
	if(!style){
	return 0;
	}
	var paddings=Array.isArray(style)?style.map(function(s){return s.padding;}):[style.padding];
	return Math.max.apply(Math,_toConsumableArray(paddings).concat([0]));
	}},{key:"getDimensions",value:function getDimensions(
	
	props,labelSize,labelStyle){var
	orientation=props.orientation,cornerRadius=props.cornerRadius,pointerLength=props.pointerLength,pointerWidth=props.pointerWidth;
	var padding=this.getLabelPadding(labelStyle);
	var getHeight=function getHeight(){
	var calculatedHeight=labelSize.height+padding;
	var minHeight=orientation==="top"||orientation==="bottom"?
	2*cornerRadius:2*cornerRadius+pointerWidth;
	return Math.max(minHeight,calculatedHeight);
	};
	var getWidth=function getWidth(){
	var calculatedWidth=labelSize.width+padding;
	var minWidth=orientation==="left"||orientation==="right"?
	2*cornerRadius+pointerLength:2*cornerRadius;
	return Math.max(minWidth,calculatedWidth);
	};
	return{
	height:props.height||getHeight(props,labelSize,orientation)+padding/2,
	width:props.width||getWidth(props,labelSize,orientation)+padding};
	
	}},{key:"getLabelProps",value:function getLabelProps(
	
	props,calculatedValues){var
	flyoutCenter=calculatedValues.flyoutCenter,labelStyle=calculatedValues.labelStyle,labelSize=calculatedValues.labelSize,dy=calculatedValues.dy,dx=calculatedValues.dx;var
	text=props.text,datum=props.datum,labelComponent=props.labelComponent,index=props.index;
	var textAnchor=(Array.isArray(labelStyle)&&labelStyle.length?
	labelStyle[0].textAnchor:
	labelStyle.textAnchor)||"middle";
	var getLabelX=function getLabelX(){
	var sign=textAnchor==="end"?-1:1;
	return flyoutCenter.x-sign*(labelSize.width/2);
	};
	return(0,_defaults3.default)(
	{},
	labelComponent.props,
	{
	key:"label-"+index,
	text:text,datum:datum,textAnchor:textAnchor,dy:dy,dx:dx,
	style:labelStyle,
	x:!textAnchor||textAnchor==="middle"?
	flyoutCenter.x:getLabelX(),
	y:flyoutCenter.y,
	verticalAnchor:"middle",
	angle:labelStyle.angle});
	
	
	}},{key:"getFlyoutProps",value:function getFlyoutProps(
	
	props,calculatedValues){var
	flyoutDimensions=calculatedValues.flyoutDimensions,flyoutStyle=calculatedValues.flyoutStyle;var
	
	x=
	
	props.x,y=props.y,dx=props.dx,dy=props.dy,datum=props.datum,index=props.index,orientation=props.orientation,pointerLength=props.pointerLength,pointerWidth=props.pointerWidth,cornerRadius=props.cornerRadius,events=props.events,flyoutComponent=props.flyoutComponent;
	return(0,_defaults3.default)(
	{},
	flyoutComponent.props,
	{
	x:x,y:y,dx:dx,dy:dy,datum:datum,index:index,orientation:orientation,pointerLength:pointerLength,pointerWidth:pointerWidth,cornerRadius:cornerRadius,events:events,
	key:"flyout-"+index,
	width:flyoutDimensions.width,
	height:flyoutDimensions.height,
	style:flyoutStyle});
	
	
	}},{key:"renderTooltip",value:function renderTooltip(
	
	
	props){
	var evaluatedProps=this.getEvaluatedProps(props);var
	
	flyoutComponent=
	evaluatedProps.flyoutComponent,labelComponent=evaluatedProps.labelComponent,groupComponent=evaluatedProps.groupComponent,active=evaluatedProps.active,renderInPortal=evaluatedProps.renderInPortal;
	if(!active){
	return null;
	}
	var calculatedValues=this.getCalculatedValues(evaluatedProps);
	var children=[
	_react2.default.cloneElement(flyoutComponent,this.getFlyoutProps(evaluatedProps,calculatedValues)),
	_react2.default.cloneElement(labelComponent,this.getLabelProps(evaluatedProps,calculatedValues))];
	
	var tooltip=_react2.default.cloneElement(groupComponent,{role:"presentation"},children);
	return renderInPortal?_react2.default.createElement(_victoryPortal2.default,{__source:{fileName:_jsxFileName,lineNumber:281}},tooltip):tooltip;
	}},{key:"render",value:function render()
	
	{
	var props=_helpers2.default.modifyProps(this.props,fallbackProps,"tooltip");
	return this.renderTooltip(props);
	}}]);return VictoryTooltip;}(_react2.default.Component);VictoryTooltip.displayName="VictoryTooltip";VictoryTooltip.propTypes={activateData:_propTypes2.default.bool,active:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.func]),cornerRadius:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),data:_propTypes2.default.array,datum:_propTypes2.default.object,dx:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.func]),dy:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.func]),events:_propTypes2.default.object,flyoutComponent:_propTypes2.default.element,flyoutStyle:_propTypes2.default.object,groupComponent:_propTypes2.default.element,height:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),horizontal:_propTypes2.default.bool,index:_propTypes2.default.oneOfType([_propTypes2.default.number,_propTypes2.default.string]),labelComponent:_propTypes2.default.element,orientation:_propTypes2.default.oneOfType([_propTypes2.default.oneOf(["top","bottom","left","right"]),_propTypes2.default.func]),pointerLength:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),pointerWidth:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),renderInPortal:_propTypes2.default.bool,style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.array]),text:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number,_propTypes2.default.func,_propTypes2.default.array]),theme:_propTypes2.default.object,width:_propTypes2.default.oneOfType([_propTypes4.default.nonNegative,_propTypes2.default.func]),x:_propTypes2.default.number,y:_propTypes2.default.number};VictoryTooltip.defaultProps={theme:_victoryTheme2.default.grayscale,active:false,renderInPortal:true,labelComponent:_react2.default.createElement(_victoryLabel2.default,{__source:{fileName:_jsxFileName,lineNumber:89}}),flyoutComponent:_react2.default.createElement(_flyout2.default,{__source:{fileName:_jsxFileName,lineNumber:90}}),groupComponent:_react2.default.createElement("g",{__source:{fileName:_jsxFileName,lineNumber:91}})};VictoryTooltip.defaultEvents=[{target:"data",eventHandlers:{onMouseOver:function onMouseOver(targetProps){return[{target:"labels",mutation:function mutation(){return{active:true};}},{target:"data",mutation:function mutation(){return targetProps.activateData?{active:true}:{active:undefined};}}];},onMouseOut:function onMouseOut(){return[{target:"labels",mutation:function mutation(){return{active:undefined};}},{target:"data",mutation:function mutation(){return{active:undefined};}}];}}}];exports.default=VictoryTooltip;

/***/ }),
/* 1131 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _without2=__webpack_require__(369);var _without3=_interopRequireDefault(_without2);var _pick2=__webpack_require__(363);var _pick3=_interopRequireDefault(_pick2);var _partialRight2=__webpack_require__(362);var _partialRight3=_interopRequireDefault(_partialRight2);var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _assign2=__webpack_require__(20);var _assign3=_interopRequireDefault(_assign2);var _defaults2=__webpack_require__(31);var _defaults3=_interopRequireDefault(_defaults2);var _jsxFileName="src/victory-util/add-events.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	
	var _events=__webpack_require__(253);var _events2=_interopRequireDefault(_events);
	var _victoryTransition=__webpack_require__(498);var _victoryTransition2=_interopRequireDefault(_victoryTransition);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}exports.default=
	
	function(WrappedComponent){
	return function(_WrappedComponent){_inherits(addEvents,_WrappedComponent);function addEvents(){_classCallCheck(this,addEvents);return _possibleConstructorReturn(this,(addEvents.__proto__||Object.getPrototypeOf(addEvents)).apply(this,arguments));}_createClass(addEvents,[{key:"componentWillMount",value:function componentWillMount()
	
	{
	if((0,_isFunction3.default)(_get(addEvents.prototype.__proto__||Object.getPrototypeOf(addEvents.prototype),"componentWillMount",this))){
	_get(addEvents.prototype.__proto__||Object.getPrototypeOf(addEvents.prototype),"componentWillMount",this).call(this);
	}
	this.state=this.state||{};
	var getScopedEvents=_events2.default.getScopedEvents.bind(this);
	this.getEvents=(0,_partialRight3.default)(_events2.default.getEvents.bind(this),getScopedEvents);
	this.getEventState=_events2.default.getEventState.bind(this);
	this.setupEvents(this.props);
	}},{key:"componentWillUpdate",value:function componentWillUpdate(
	
	newProps){
	if((0,_isFunction3.default)(_get(addEvents.prototype.__proto__||Object.getPrototypeOf(addEvents.prototype),"componentWillReceiveProps",this))){
	_get(addEvents.prototype.__proto__||Object.getPrototypeOf(addEvents.prototype),"componentWillReceiveProps",this).call(this);
	}
	this.setupEvents(newProps);
	}},{key:"setupEvents",value:function setupEvents(
	
	props){var
	sharedEvents=props.sharedEvents;
	var components=WrappedComponent.expectedComponents;
	this.componentEvents=_events2.default.getComponentEvents(props,components);
	this.getSharedEventState=sharedEvents&&(0,_isFunction3.default)(sharedEvents.getEventState)?
	sharedEvents.getEventState:function(){return undefined;};
	this.baseProps=this.getBaseProps(props);
	this.dataKeys=Object.keys(this.baseProps).filter(function(key){return key!=="parent";});
	this.hasEvents=props.events||props.sharedEvents||this.componentEvents;
	this.events=this.getAllEvents(props);
	}},{key:"getBaseProps",value:function getBaseProps(
	
	props){
	var sharedParentState=this.getSharedEventState("parent","parent");
	var parentState=this.getEventState("parent","parent");
	var baseParentProps=(0,_defaults3.default)({},parentState,sharedParentState);
	var parentPropsList=baseParentProps.parentControlledProps;
	var parentProps=parentPropsList?(0,_pick3.default)(baseParentProps,parentPropsList):{};
	var modifiedProps=(0,_defaults3.default)({},parentProps,props);
	return(0,_isFunction3.default)(WrappedComponent.getBaseProps)?
	WrappedComponent.getBaseProps(modifiedProps):{};
	}},{key:"getAllEvents",value:function getAllEvents(
	
	props){
	if(Array.isArray(this.componentEvents)){var _componentEvents;
	return Array.isArray(props.events)?
	(_componentEvents=this.componentEvents).concat.apply(_componentEvents,_toConsumableArray(props.events)):this.componentEvents;
	}
	return props.events;
	}},{key:"getComponentProps",value:function getComponentProps(
	
	component,type,index){var
	role=WrappedComponent.role;
	var key=this.dataKeys&&this.dataKeys[index]||index;
	var baseProps=this.baseProps[key][type]||this.baseProps[key];
	if(!baseProps&&!this.hasEvents){
	return undefined;
	}
	if(this.hasEvents){
	var baseEvents=this.getEvents(this.props,type,key);
	var componentProps=(0,_defaults3.default)(
	{index:index,key:role+"-"+type+"-"+key},
	this.getEventState(key,type),
	this.getSharedEventState(key,type),
	component.props,
	baseProps);
	
	var events=(0,_defaults3.default)(
	{},_events2.default.getPartialEvents(baseEvents,key,componentProps),componentProps.events);
	
	return(0,_assign3.default)(
	{},componentProps,{events:events});
	
	}
	return(0,_defaults3.default)(
	{index:index,key:role+"-"+type+"-"+key},
	component.props,
	baseProps);
	
	}},{key:"renderContainer",value:function renderContainer(
	
	component,children){
	var isContainer=component.type&&component.type.role==="container";
	var parentProps=isContainer?this.getComponentProps(component,"parent","parent"):{};
	return _react2.default.cloneElement(component,parentProps,children);
	}},{key:"animateComponent",value:function animateComponent(
	
	props,animationWhitelist){
	return(
	_react2.default.createElement(_victoryTransition2.default,{animate:props.animate,animationWhitelist:animationWhitelist,__source:{fileName:_jsxFileName,lineNumber:96}},
	_react2.default.createElement(this.constructor,props)));
	
	
	}},{key:"renderContinuousData",value:function renderContinuousData(
	
	
	props){var _this2=this;var
	dataComponent=props.dataComponent,labelComponent=props.labelComponent,groupComponent=props.groupComponent;
	var dataKeys=(0,_without3.default)(this.dataKeys,"all");
	var labelComponents=dataKeys.reduce(function(memo,key){
	var labelProps=_this2.getComponentProps(labelComponent,"labels",key);
	if(labelProps&&labelProps.text!==undefined&&labelProps.text!==null){
	memo=memo.concat(_react2.default.cloneElement(labelComponent,labelProps));
	}
	return memo;
	},[]);
	var dataProps=this.getComponentProps(dataComponent,"data","all");
	var children=[_react2.default.cloneElement(dataComponent,dataProps)].concat(_toConsumableArray(labelComponents));
	return this.renderContainer(groupComponent,children);
	}},{key:"renderData",value:function renderData(
	
	props){var _this3=this;var
	dataComponent=props.dataComponent,labelComponent=props.labelComponent,groupComponent=props.groupComponent;
	var dataComponents=this.dataKeys.map(function(_dataKey,index){
	var dataProps=_this3.getComponentProps(dataComponent,"data",index);
	return _react2.default.cloneElement(dataComponent,dataProps);
	});
	
	var labelComponents=this.dataKeys.map(function(_dataKey,index){
	var labelProps=_this3.getComponentProps(labelComponent,"labels",index);
	if(labelProps.text!==undefined&&labelProps.text!==null){
	return _react2.default.cloneElement(labelComponent,labelProps);
	}
	return undefined;
	}).filter(Boolean);
	
	var children=[].concat(_toConsumableArray(dataComponents),_toConsumableArray(labelComponents));
	return this.renderContainer(groupComponent,children);
	}}]);return addEvents;}(WrappedComponent);
	
	
	};

/***/ }),
/* 1132 */
/***/ (function(module, exports) {

	Object.defineProperty(exports,"__esModule",{value:true});exports.default=
	{
	continuousTransitions:function continuousTransitions(){
	return{
	onLoad:{
	duration:2000},
	
	onExit:{
	duration:500},
	
	onEnter:{
	duration:500}};
	
	
	},
	
	discreteTransitions:function discreteTransitions(){
	return{
	onLoad:{
	duration:2000,
	before:function before(){return{opacity:0};},
	after:function after(datum){return datum;}},
	
	onExit:{
	duration:600,
	before:function before(){return{opacity:0};}},
	
	onEnter:{
	duration:600,
	before:function before(){return{opacity:0};},
	after:function after(datum){return datum;}}};
	
	
	}};

/***/ }),
/* 1133 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _isPlainObject2=__webpack_require__(33);var _isPlainObject3=_interopRequireDefault(_isPlainObject2);var _includes2=__webpack_require__(210);var _includes3=_interopRequireDefault(_includes2);var _flatten2=__webpack_require__(356);var _flatten3=_interopRequireDefault(_flatten2);
	var _data=__webpack_require__(252);var _data2=_interopRequireDefault(_data);
	var _scale=__webpack_require__(254);var _scale2=_interopRequireDefault(_scale);
	var _helpers=__webpack_require__(14);var _helpers2=_interopRequireDefault(_helpers);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=
	
	{
	
	
	
	
	
	
	
	getDomain:function getDomain(props,axis){
	var propsDomain=this.getDomainFromProps(props,axis);
	if(propsDomain){
	return this.padDomain(propsDomain,props,axis);
	}
	var categoryDomain=this.getDomainFromCategories(props,axis);
	if(categoryDomain){
	return this.padDomain(categoryDomain,props,axis);
	}
	var dataset=_data2.default.getData(props);
	var domain=this.getDomainFromData(props,axis,dataset);
	return this.cleanDomain(this.padDomain(domain,props,axis),props,axis);
	},
	
	
	
	
	
	
	
	
	
	
	cleanDomain:function cleanDomain(domain,props,axis){
	var scaleType=_scale2.default.getScaleType(props,axis);
	
	if(scaleType!=="log"){
	return domain;
	}
	
	var rules=function rules(dom){
	var almostZero=dom[0]<0||dom[1]<0?-1/Number.MAX_SAFE_INTEGER:
	1/Number.MAX_SAFE_INTEGER;
	var domainOne=dom[0]===0?almostZero:dom[0];
	var domainTwo=dom[1]===0?almostZero:dom[1];
	return[domainOne,domainTwo];
	};
	
	return rules(domain);
	},
	
	
	
	
	
	
	
	
	getDomainWithZero:function getDomainWithZero(props,axis){var _this=this;
	var propsDomain=this.getDomainFromProps(props,axis);
	if(propsDomain){
	return this.cleanDomain(this.padDomain(propsDomain,props,axis),props,axis);
	}var
	horizontal=props.horizontal;
	var ensureZero=function ensureZero(domain){
	var isDependent=axis==="y"&&!horizontal||axis==="x"&&horizontal;
	var min=_collection2.default.getMinValue(domain,0);
	var max=_collection2.default.getMaxValue(domain,0);
	var zeroDomain=isDependent?[min,max]:domain;
	return _this.padDomain(zeroDomain,props,axis);
	};
	var categoryDomain=this.getDomainFromCategories(props,axis);
	if(categoryDomain){
	return this.cleanDomain(this.padDomain(ensureZero(categoryDomain),props,axis),props,axis);
	}
	var dataset=_data2.default.getData(props);
	var domain=ensureZero(this.getDomainFromData(props,axis,dataset));
	return this.cleanDomain(this.padDomain(domain,props,axis),props,axis);
	},
	
	
	
	
	
	
	
	getDomainFromProps:function getDomainFromProps(props,axis){
	if(props.domain&&props.domain[axis]){
	return props.domain[axis];
	}else if(props.domain&&Array.isArray(props.domain)){
	return props.domain;
	}
	return undefined;
	},
	
	
	
	
	
	
	
	
	getDomainFromData:function getDomainFromData(props,axis,dataset){
	var currentAxis=_helpers2.default.getCurrentAxis(axis,props.horizontal);
	var allData=(0,_flatten3.default)(dataset).map(function(datum){return datum["_"+currentAxis];});
	
	if(allData.length<1){
	return _scale2.default.getBaseScale(props,axis).domain();
	}
	
	var min=_collection2.default.getMinValue(allData);
	var max=_collection2.default.getMaxValue(allData);
	
	
	if(min===max){
	var adjustedMax=max===0?1:max;
	return[0,adjustedMax];
	}
	return[min,max];
	},
	
	
	
	
	
	
	getDomainFromTickValues:function getDomainFromTickValues(props){
	var domain=void 0;
	if(_helpers2.default.stringTicks(props)){
	domain=[1,props.tickValues.length];
	}else{
	
	var ticks=props.tickValues.map(function(value){return+value;});
	domain=[_collection2.default.getMinValue(ticks),_collection2.default.getMaxValue(ticks)];
	}
	if(_helpers2.default.isVertical(props)){
	domain.reverse();
	}
	return domain;
	},
	
	
	
	
	
	
	
	getDomainFromCategories:function getDomainFromCategories(props,axis){
	var categories=_data2.default.getCategories(props,axis);
	if(!categories){
	return undefined;
	}
	var stringArray=_collection2.default.containsStrings(categories)?
	_data2.default.getStringsFromCategories(props,axis):[];
	var stringMap=stringArray.length===0?null:
	stringArray.reduce(function(memo,string,index){
	memo[string]=index+1;
	return memo;
	},{});
	var categoryValues=stringMap?
	categories.map(function(value){return stringMap[value];}):categories;
	return[
	_collection2.default.getMinValue(categoryValues),_collection2.default.getMaxValue(categoryValues)];
	
	},
	
	
	
	
	
	
	
	
	getDomainFromGroupedData:function getDomainFromGroupedData(props,axis,datasets){var
	horizontal=props.horizontal;
	var dependent=axis==="x"&&!horizontal||axis==="y"&&horizontal;
	if(dependent&&props.categories){
	return this.getDomainFromCategories(props,axis);
	}
	var globalDomain=this.getDomainFromData(props,axis,datasets);
	
	
	var cumulativeData=!dependent?
	this.getCumulativeData(props,axis,datasets):[];
	
	var cumulativeMaxArray=cumulativeData.map(function(dataset){
	return dataset.reduce(function(memo,val){
	return val>0?+val+ +memo:memo;
	},0);
	});
	var cumulativeMinArray=cumulativeData.map(function(dataset){
	return dataset.reduce(function(memo,val){
	return val<0?+val+ +memo:memo;
	},0);
	});
	
	var cumulativeMin=Math.min.apply(Math,_toConsumableArray(cumulativeMinArray));
	
	var domainMin=cumulativeMin<0?cumulativeMin:_collection2.default.getMinValue(globalDomain);
	var domainMax=_collection2.default.getMaxValue.apply(_collection2.default,[globalDomain].concat(_toConsumableArray(cumulativeMaxArray)));
	
	
	if(domainMin===domainMax){
	var adjustedMax=domainMax===0?1:domainMax;
	return[0,adjustedMax];
	}
	return[domainMin,domainMax];
	},
	
	
	
	
	
	
	
	
	getCumulativeData:function getCumulativeData(props,axis,datasets){
	var currentAxis=_helpers2.default.getCurrentAxis(axis,props.horizontal);
	var categories=[];
	var axisValues=[];
	datasets.forEach(function(dataset){
	dataset.forEach(function(data){
	if(data.category!==undefined&&!(0,_includes3.default)(categories,data.category)){
	categories.push(data.category);
	}else if(!(0,_includes3.default)(axisValues,data[currentAxis])){
	axisValues.push(data[currentAxis]);
	}
	});
	});
	
	var _dataByCategory=function _dataByCategory(){
	return categories.map(function(value){
	return datasets.reduce(function(prev,data){
	return data.category===value?prev.concat(data[axis]):prev;
	},[]);
	});
	};
	
	var _dataByIndex=function _dataByIndex(){
	return axisValues.map(function(value,index){
	return datasets.map(function(data){return data[index]&&data[index]["_"+currentAxis];});
	});
	};
	
	return categories.length===0?_dataByIndex():_dataByCategory();
	},
	
	
	
	
	
	
	
	getDomainPadding:function getDomainPadding(props,axis){
	var formatPadding=function formatPadding(padding){
	return Array.isArray(padding)?
	{left:padding[0],right:padding[1]}:{left:padding,right:padding};
	};
	
	return(0,_isPlainObject3.default)(props.domainPadding)?
	formatPadding(props.domainPadding[axis]):formatPadding(props.domainPadding);
	},
	
	
	
	
	
	
	
	
	padDomain:function padDomain(domain,props,axis){
	if(!props.domainPadding){
	return domain;
	}
	
	var padding=this.getDomainPadding(props,axis);
	if(!padding.left&&!padding.right){
	return domain;
	}
	
	var domainMin=_collection2.default.getMinValue(domain);
	var domainMax=_collection2.default.getMaxValue(domain);
	var range=_helpers2.default.getRange(props,axis);
	var rangeExtent=Math.abs(Math.max.apply(Math,_toConsumableArray(range))-Math.min.apply(Math,_toConsumableArray(range)));
	
	
	var initialPadding={
	left:Math.abs(domainMax-domainMin)*padding.left/rangeExtent,
	right:Math.abs(domainMax-domainMin)*padding.right/rangeExtent};
	
	
	
	var adjustedDomain={
	min:domainMin>=0&&domainMin-initialPadding.left<=0?
	0:domainMin.valueOf()-initialPadding.left,
	max:domainMax<=0&&domainMax+initialPadding.right>=0?
	0:domainMax.valueOf()+initialPadding.right};
	
	
	
	var finalPadding={
	left:Math.abs(adjustedDomain.max-adjustedDomain.min)*padding.left/rangeExtent,
	right:Math.abs(adjustedDomain.max-adjustedDomain.min)*padding.right/rangeExtent};
	
	
	
	var finalDomain={
	min:domainMin>=0&&domainMin-finalPadding.left<=0?
	0:domainMin.valueOf()-finalPadding.left,
	max:domainMax>=0&&domainMax+finalPadding.right<=0?
	0:domainMax.valueOf()+finalPadding.right};
	
	
	return domainMin instanceof Date||domainMax instanceof Date?
	[new Date(finalDomain.min),new Date(finalDomain.max)]:[finalDomain.min,finalDomain.max];
	},
	
	
	
	
	
	
	
	
	orientDomain:function orientDomain(domain,orientations,axis){
	
	
	var otherAxis=axis==="x"?"y":"x";
	var defaultOrientation=function defaultOrientation(ax){return ax==="x"?"bottom":"left";};
	var flippedAxis=orientations.x==="left"||orientations.x==="right";
	var standardOrientation=flippedAxis?
	orientations[otherAxis]===defaultOrientation(axis):
	orientations[otherAxis]===defaultOrientation(otherAxis);
	if(flippedAxis){
	return standardOrientation?domain.concat().reverse():domain;
	}else{
	return standardOrientation?domain:domain.concat().reverse();
	}
	}};

/***/ }),
/* 1134 */
/***/ (function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _isFunction2=__webpack_require__(15);var _isFunction3=_interopRequireDefault(_isFunction2);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	
	var _data=__webpack_require__(252);var _data2=_interopRequireDefault(_data);
	var _collection=__webpack_require__(17);var _collection2=_interopRequireDefault(_collection);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=
	
	{
	getParentSVG:function getParentSVG(target){
	if(target.nodeName==="svg"){
	return target;
	}else{
	return this.getParentSVG(target.parentNode);
	}
	},
	
	getTransformationMatrix:function getTransformationMatrix(svg){
	return svg.getScreenCTM().inverse();
	},
	
	getSVGEventCoordinates:function getSVGEventCoordinates(evt){
	if(typeof document==="undefined"){
	
	
	return{
	x:evt.nativeEvent.locationX,
	y:evt.nativeEvent.locationY};
	
	}
	var svg=this.getParentSVG(evt.target);
	var matrix=this.getTransformationMatrix(svg);
	return{
	x:this.transformTarget(evt.clientX,matrix,"x"),
	y:this.transformTarget(evt.clientY,matrix,"y")};
	
	},
	
	transformTarget:function transformTarget(target,matrix,dimension){var
	a=matrix.a,d=matrix.d,e=matrix.e,f=matrix.f;
	return dimension==="y"?
	d*target+f:a*target+e;
	},
	
	getDomainCoordinates:function getDomainCoordinates(scale,domain){
	domain=domain||{x:scale.x.domain(),y:scale.y.domain()};
	return{
	x:[scale.x(domain.x[0]),scale.x(domain.x[1])],
	y:[scale.y(domain.y[0]),scale.y(domain.y[1])]};
	
	},
	
	getDataCoordinates:function getDataCoordinates(scale,x,y){
	return{
	x:scale.x.invert(x),
	y:scale.y.invert(y)};
	
	},
	
	getBounds:function getBounds(props){var
	x1=props.x1,x2=props.x2,y1=props.y1,y2=props.y2,scale=props.scale;
	var point1=this.getDataCoordinates(scale,x1,y1);
	var point2=this.getDataCoordinates(scale,x2,y2);
	var makeBound=function makeBound(a,b){
	return[_collection2.default.getMinValue([a,b]),_collection2.default.getMaxValue([a,b])];
	};
	
	return{
	x:makeBound(point1.x,point2.x),
	y:makeBound(point1.y,point2.y)};
	
	},
	
	getDatasets:function getDatasets(props){
	if(props.data){
	return[{data:props.data}];
	}
	var getData=function getData(childProps){
	var data=_data2.default.getData(childProps);
	return Array.isArray(data)&&data.length>0?data:undefined;
	};
	
	
	
	var children=_react2.default.Children.toArray(props.children).reverse();
	var childrenLength=children.length;
	var dataArr=[];
	var dataArrLength=0;
	var childIndex=0;
	while(childrenLength>0){
	var child=children[--childrenLength];
	var childName=child.props.name||childIndex;
	childIndex++;
	if(child.type&&child.type.role==="axis"){
	childIndex++;
	}else if(child.type&&(0,_isFunction3.default)(child.type.getData)){
	dataArr[dataArrLength++]={childName:childName,data:child.type.getData(child.props)};
	}else if(child.props&&child.props.children){
	var newChildren=_react2.default.Children.toArray(child.props.children);
	var newChildrenLength=newChildren.length;
	for(var index=0;index<newChildrenLength;index++){
	children[childrenLength++]=newChildren[index];
	}
	}else{
	dataArr[dataArrLength++]={childName:childName,data:getData(child.props)};
	}
	}
	return dataArr;
	},
	
	filterDatasets:function filterDatasets(datasets,bounds){var _this=this;
	var filtered=datasets.reduce(function(memo,dataset){
	var selectedData=_this.getSelectedData(dataset.data,bounds);
	memo=selectedData?
	memo.concat({
	childName:dataset.childName,eventKey:selectedData.eventKey,data:selectedData.data}):
	
	memo;
	return memo;
	},[]);
	return filtered.length?filtered:null;
	},
	
	getSelectedData:function getSelectedData(dataset,bounds){var
	x=bounds.x,y=bounds.y;
	var withinBounds=function withinBounds(d){
	return d._x>=x[0]&&d._x<=x[1]&&d._y>=y[0]&&d._y<=y[1];
	};
	
	var selectedData=dataset.reduce(function(accum,datum,index){
	if(withinBounds(datum)){
	accum.data.push(datum);
	accum.eventKey.push(datum.eventKey===undefined?index:datum.eventKey);
	}
	
	return accum;
	},{
	data:[],
	eventKey:[]});
	
	
	return selectedData.data.length>0?selectedData:null;
	}};

/***/ }),
/* 1135 */
/***/ (function(module, exports) {

	exports.endianness = function () { return 'LE' };
	
	exports.hostname = function () {
	    if (typeof location !== 'undefined') {
	        return location.hostname
	    }
	    else return '';
	};
	
	exports.loadavg = function () { return [] };
	
	exports.uptime = function () { return 0 };
	
	exports.freemem = function () {
	    return Number.MAX_VALUE;
	};
	
	exports.totalmem = function () {
	    return Number.MAX_VALUE;
	};
	
	exports.cpus = function () { return [] };
	
	exports.type = function () { return 'Browser' };
	
	exports.release = function () {
	    if (typeof navigator !== 'undefined') {
	        return navigator.appVersion;
	    }
	    return '';
	};
	
	exports.networkInterfaces
	= exports.getNetworkInterfaces
	= function () { return {} };
	
	exports.arch = function () { return 'javascript' };
	
	exports.platform = function () { return 'browser' };
	
	exports.tmpdir = exports.tmpDir = function () {
	    return '/tmp';
	};
	
	exports.EOL = '\n';


/***/ }),
/* 1136 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ })
]);
//# sourceMappingURL=component---src-pages-index-tsx-5b27bdac65a94986f792.js.map